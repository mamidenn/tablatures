{"version":3,"sources":["webpack:///./node_modules/core-js/internals/to-string-tag-support.js","webpack:///./node_modules/core-js/internals/function-bind-context.js","webpack:///./node_modules/core-js/modules/es.array.flat.js","webpack:///./node_modules/core-js/internals/engine-ff-version.js","webpack:///./node_modules/core-js/internals/function-bind.js","webpack:///./node_modules/core-js/internals/object-get-own-property-names-external.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack:///../../../src/components/transitions/createTransition.ts","webpack:///../../../src/components/transitions/expand-transition.ts","webpack:///../../../src/components/transitions/index.ts","webpack:///./node_modules/core-js/modules/es.object.values.js","webpack:///./node_modules/core-js/internals/to-index.js","webpack:///./node_modules/core-js/internals/array-species-constructor.js","webpack:///./node_modules/core-js/internals/get-substitution.js","webpack:///./node_modules/core-js/internals/ie8-dom-define.js","webpack:///../../../src/components/VGrid/VRow.ts","webpack:///./node_modules/core-js/internals/regexp-unsupported-ncg.js","webpack:///../../../src/components/VSheet/index.ts","webpack:///./node_modules/core-js/internals/string-repeat.js","webpack:///./node_modules/core-js/modules/es.string.split.js","webpack:///./node_modules/core-js/internals/same-value.js","webpack:///../../../src/components/VIcon/VIcon.ts","webpack:///./node_modules/core-js/internals/typed-array-from-species-and-list.js","webpack:///./node_modules/core-js/internals/array-copy-within.js","webpack:///./node_modules/core-js/internals/regexp-exec-abstract.js","webpack:///./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///./node_modules/core-js/modules/es.typed-array.subarray.js","webpack:///./node_modules/core-js/internals/array-for-each.js","webpack:///./node_modules/core-js/internals/to-offset.js","webpack:///./node_modules/core-js/modules/es.string.anchor.js","webpack:///./node_modules/core-js/internals/an-instance.js","webpack:///./node_modules/core-js/internals/html.js","webpack:///./node_modules/core-js/internals/a-function.js","webpack:///./node_modules/core-js/internals/check-correctness-of-iteration.js","webpack:///../../../src/mixins/routable/index.ts","webpack:///./node_modules/core-js/internals/engine-is-ios.js","webpack:///./node_modules/core-js/internals/require-object-coercible.js","webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/core-js/internals/array-method-has-species-support.js","webpack:///./node_modules/@coderline/alphatab/dist/alphaTab.js","webpack:///./node_modules/core-js/modules/es.typed-array.sort.js","webpack:///./node_modules/core-js/internals/iterate.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///../../../src/components/VLabel/VLabel.ts","webpack:///../../../src/components/VLabel/index.ts","webpack:///../../../src/components/VMessages/VMessages.ts","webpack:///../../../src/components/VMessages/index.ts","webpack:///../../../src/mixins/validatable/index.ts","webpack:///../../../src/components/VInput/VInput.ts","webpack:///../../../src/components/VInput/index.ts","webpack:///../../../src/components/VCounter/VCounter.ts","webpack:///../../../src/components/VCounter/index.ts","webpack:///../../../src/mixins/intersectable/index.ts","webpack:///../../../src/mixins/loadable/index.ts","webpack:///../../../src/directives/resize/index.ts","webpack:///../../src/util/dom.ts","webpack:///../../../src/components/VTextField/VTextField.ts","webpack:///../../../src/components/VTextField/index.ts","webpack:///../../../src/components/VChip/VChip.ts","webpack:///../../../src/components/VFileInput/VFileInput.ts","webpack:///./node_modules/core-js/internals/to-absolute-index.js","webpack:///./node_modules/core-js/internals/export.js","webpack:///./node_modules/core-js/internals/object-get-own-property-names.js","webpack:///../../../src/mixins/measurable/index.ts","webpack:///./node_modules/core-js/modules/es.string.includes.js","webpack:///./node_modules/core-js/modules/es.typed-array.reduce-right.js","webpack:///./node_modules/core-js/modules/es.regexp.to-string.js","webpack:///./node_modules/core-js/internals/set-species.js","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./node_modules/core-js/modules/es.typed-array.slice.js","webpack:///./node_modules/core-js/internals/iterator-close.js","webpack:///./node_modules/vue/dist/vue.runtime.esm.js","webpack:///./node_modules/core-js/modules/es.object.is.js","webpack:///./node_modules/core-js/modules/es.string.starts-with.js","webpack:///./node_modules/core-js/internals/task.js","webpack:///./node_modules/core-js/internals/engine-v8-version.js","webpack:///./node_modules/vuex/dist/vuex.esm.js","webpack:///../../../src/components/VGrid/VSpacer.ts","webpack:///../../../src/mixins/registrable/index.ts","webpack:///./node_modules/core-js/modules/es.typed-array.last-index-of.js","webpack:///./node_modules/core-js/modules/es.object.get-prototype-of.js","webpack:///./node_modules/core-js/internals/engine-user-agent.js","webpack:///./node_modules/core-js/internals/get-iterator-method.js","webpack:///../../../src/components/VProgressLinear/index.ts","webpack:///./node_modules/core-js/internals/object-define-properties.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./node_modules/core-js/modules/es.string.repeat.js","webpack:///./node_modules/core-js/modules/es.typed-array.find-index.js","webpack:///./node_modules/core-js/internals/a-possible-prototype.js","webpack:///./node_modules/core-js/modules/es.typed-array.set.js","webpack:///./node_modules/core-js/modules/es.string.iterator.js","webpack:///./node_modules/core-js/modules/es.math.cbrt.js","webpack:///./node_modules/core-js/internals/iterators.js","webpack:///./node_modules/core-js/modules/es.typed-array.map.js","webpack:///./node_modules/core-js/internals/this-number-value.js","webpack:///../../../src/components/VToolbar/VToolbar.ts","webpack:///../../../src/directives/scroll/index.ts","webpack:///../../../src/mixins/applicationable/index.ts","webpack:///../../../src/mixins/scrollable/index.ts","webpack:///../../../src/components/VAppBar/VAppBar.ts","webpack:///./node_modules/core-js/internals/path.js","webpack:///./node_modules/core-js/internals/indexed-object.js","webpack:///./node_modules/core-js/internals/add-to-unscopables.js","webpack:///./node_modules/core-js/internals/host-report-errors.js","webpack:///./node_modules/core-js/internals/is-regexp.js","webpack:///./node_modules/core-js/modules/es.string.match.js","webpack:///./node_modules/core-js/internals/species-constructor.js","webpack:///./node_modules/core-js/internals/ordinary-to-primitive.js","webpack:///./node_modules/core-js/internals/native-symbol.js","webpack:///./node_modules/core-js/modules/es.string.trim.js","webpack:///./node_modules/core-js/modules/es.reflect.construct.js","webpack:///./node_modules/core-js/internals/array-includes.js","webpack:///./node_modules/core-js/modules/es.array.filter.js","webpack:///./node_modules/core-js/internals/array-from.js","webpack:///../../../src/mixins/groupable/index.ts","webpack:///./node_modules/core-js/modules/es.array.sort.js","webpack:///./node_modules/core-js/modules/es.map.js","webpack:///./node_modules/core-js/internals/to-length.js","webpack:///./node_modules/core-js/internals/engine-webkit-version.js","webpack:///./node_modules/core-js/internals/has.js","webpack:///./node_modules/core-js/modules/es.string.replace.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../../../src/directives/ripple/index.ts","webpack:///./node_modules/core-js/internals/shared.js","webpack:///./node_modules/core-js/internals/own-keys.js","webpack:///./node_modules/core-js/internals/to-string.js","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///../../src/util/mixins.ts","webpack:///./node_modules/core-js/internals/not-a-regexp.js","webpack:///./node_modules/core-js/internals/create-property-descriptor.js","webpack:///./node_modules/core-js/modules/es.typed-array.uint8-array.js","webpack:///./node_modules/core-js/internals/is-integer.js","webpack:///./node_modules/core-js/modules/es.typed-array.join.js","webpack:///./node_modules/core-js/internals/engine-is-node.js","webpack:///./node_modules/core-js/internals/engine-is-browser.js","webpack:///./node_modules/core-js/modules/es.typed-array.iterator.js","webpack:///./node_modules/core-js/internals/object-assign.js","webpack:///./node_modules/core-js/internals/array-buffer.js","webpack:///../../../src/components/VGrid/VCol.ts","webpack:///./node_modules/core-js/modules/es.typed-array.some.js","webpack:///./node_modules/vuetify-loader/lib/runtime/installComponents.js","webpack:///./node_modules/core-js/internals/string-multibyte.js","webpack:///./node_modules/core-js/internals/collection-strong.js","webpack:///./node_modules/core-js/internals/array-species-create.js","webpack:///./node_modules/core-js/internals/internal-state.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/core-js/internals/collection.js","webpack:///./node_modules/core-js/internals/redefine.js","webpack:///./node_modules/core-js/internals/object-to-array.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///./node_modules/core-js/internals/inherit-if-required.js","webpack:///./node_modules/core-js/modules/es.typed-array.to-string.js","webpack:///./node_modules/core-js/modules/es.typed-array.fill.js","webpack:///./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack:///./node_modules/core-js/internals/define-well-known-symbol.js","webpack:///../../../src/components/VApp/VApp.ts","webpack:///./node_modules/core-js/internals/typed-array-constructor.js","webpack:///../../../src/mixins/themeable/index.ts","webpack:///./node_modules/core-js/internals/ieee754.js","webpack:///./node_modules/core-js/internals/enum-bug-keys.js","webpack:///./node_modules/core-js/internals/to-object.js","webpack:///../../src/util/colorUtils.ts","webpack:///./node_modules/core-js/internals/object-create.js","webpack:///./node_modules/core-js/modules/es.array.find.js","webpack:///./node_modules/core-js/internals/define-iterator.js","webpack:///../../../src/mixins/binds-attrs/index.ts","webpack:///./node_modules/core-js/internals/native-weak-map.js","webpack:///../../src/util/helpers.ts","webpack:///./node_modules/core-js/internals/array-fill.js","webpack:///./node_modules/core-js/internals/an-object.js","webpack:///./node_modules/core-js/modules/es.typed-array.includes.js","webpack:///../../../src/components/VProgressCircular/VProgressCircular.ts","webpack:///../../../src/components/VProgressCircular/index.ts","webpack:///../../../src/components/VBtn/VBtn.ts","webpack:///./node_modules/core-js/internals/descriptors.js","webpack:///./node_modules/core-js/internals/create-property.js","webpack:///./node_modules/core-js/internals/create-html.js","webpack:///./node_modules/core-js/internals/is-object.js","webpack:///./node_modules/core-js/internals/inspect-source.js","webpack:///./node_modules/core-js/modules/es.string.ends-with.js","webpack:///./node_modules/core-js/internals/advance-string-index.js","webpack:///./node_modules/core-js/internals/typed-array-constructors-require-wrappers.js","webpack:///./node_modules/vue-router/dist/vue-router.esm.js","webpack:///../../../src/util/color/transformSRGB.ts","webpack:///../../../src/mixins/roundable/index.ts","webpack:///../../../src/components/VSheet/VSheet.ts","webpack:///../../../src/mixins/proxyable/index.ts","webpack:///../../../src/components/VProgressLinear/VProgressLinear.ts","webpack:///../../../src/directives/intersect/index.ts","webpack:///./node_modules/core-js/internals/uid.js","webpack:///./node_modules/core-js/internals/create-non-enumerable-property.js","webpack:///./node_modules/core-js/internals/regexp-exec.js","webpack:///./node_modules/core-js/internals/is-forced.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/core-js/modules/es.string.link.js","webpack:///./node_modules/core-js/modules/es.array.concat.js","webpack:///./node_modules/core-js/internals/get-iterator.js","webpack:///./node_modules/core-js/modules/es.typed-array.copy-within.js","webpack:///./node_modules/core-js/internals/call-with-safe-iteration-closing.js","webpack:///./node_modules/core-js/internals/object-define-property.js","webpack:///../../../src/components/VIcon/index.ts","webpack:///./node_modules/core-js/internals/create-iterator-constructor.js","webpack:///./node_modules/core-js/internals/regexp-sticky-helpers.js","webpack:///./node_modules/core-js/internals/to-property-key.js","webpack:///./node_modules/core-js/internals/typed-array-from.js","webpack:///./node_modules/core-js/modules/es.array.join.js","webpack:///./node_modules/core-js/internals/flatten-into-array.js","webpack:///./node_modules/core-js/modules/es.array.splice.js","webpack:///./node_modules/core-js/internals/engine-is-webos-webkit.js","webpack:///./node_modules/core-js/modules/es.symbol.js","webpack:///../../../src/components/VGrid/grid.ts","webpack:///../../../src/components/VGrid/VContainer.ts","webpack:///./node_modules/core-js/modules/es.array.from.js","webpack:///./node_modules/core-js/internals/array-method-is-strict.js","webpack:///./node_modules/core-js/internals/to-integer.js","webpack:///./node_modules/core-js/modules/es.promise.finally.js","webpack:///./node_modules/core-js/modules/es.typed-array.every.js","webpack:///./node_modules/core-js/internals/array-buffer-native.js","webpack:///../../../src/mixins/colorable/index.ts","webpack:///./node_modules/core-js/modules/es.number.constructor.js","webpack:///./node_modules/core-js/internals/correct-is-regexp-logic.js","webpack:///./node_modules/core-js/modules/es.regexp.exec.js","webpack:///./node_modules/core-js/internals/regexp-flags.js","webpack:///../../../src/components/VResponsive/VResponsive.ts","webpack:///../../../src/components/VResponsive/index.ts","webpack:///../../../src/components/VImg/VImg.ts","webpack:///./node_modules/core-js/internals/array-sort.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/core-js/internals/iterators-core.js","webpack:///./node_modules/core-js/internals/string-html-forced.js","webpack:///../../../src/mixins/sizeable/index.ts","webpack:///./node_modules/core-js/internals/object-to-string.js","webpack:///./node_modules/core-js/modules/es.function.name.js","webpack:///./node_modules/core-js/modules/es.typed-array.to-locale-string.js","webpack:///./node_modules/core-js/internals/microtask.js","webpack:///./node_modules/core-js/internals/well-known-symbol.js","webpack:///./node_modules/core-js/modules/es.object.keys.js","webpack:///./node_modules/core-js/modules/es.number.to-fixed.js","webpack:///./node_modules/core-js/internals/typed-array-species-constructor.js","webpack:///./node_modules/core-js/internals/array-iteration.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","webpack:///./node_modules/core-js/internals/freezing.js","webpack:///./node_modules/core-js/internals/to-primitive.js","webpack:///./node_modules/core-js/modules/es.typed-array.filter.js","webpack:///./node_modules/core-js/internals/is-pure.js","webpack:///./node_modules/core-js/internals/classof-raw.js","webpack:///./node_modules/core-js/internals/shared-store.js","webpack:///./node_modules/core-js/modules/es.string.fixed.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/core-js/internals/string-trim-forced.js","webpack:///./node_modules/core-js/modules/es.string.small.js","webpack:///../../../src/mixins/elevatable/index.ts","webpack:///./node_modules/core-js/internals/object-keys-internal.js","webpack:///./node_modules/core-js/modules/es.typed-array.reduce.js","webpack:///./node_modules/core-js/modules/es.array.includes.js","webpack:///./node_modules/core-js/modules/es.array.fill.js","webpack:///./node_modules/core-js/internals/document-create-element.js","webpack:///./node_modules/core-js/modules/es.object.assign.js","webpack:///./node_modules/core-js/modules/es.typed-array.reverse.js","webpack:///./node_modules/core-js/internals/promise-resolve.js","webpack:///./node_modules/core-js/internals/set-global.js","webpack:///./node_modules/core-js/internals/hidden-keys.js","webpack:///./node_modules/core-js/internals/fails.js","webpack:///./node_modules/core-js/internals/get-built-in.js","webpack:///../../../src/mixins/ssr-bootable/index.ts","webpack:///./node_modules/core-js/modules/es.typed-array.find.js","webpack:///./node_modules/core-js/internals/object-property-is-enumerable.js","webpack:///./node_modules/core-js/modules/es.symbol.iterator.js","webpack:///./node_modules/core-js/internals/object-set-prototype-of.js","webpack:///./node_modules/core-js/modules/es.object.to-string.js","webpack:///./node_modules/core-js/internals/set-to-string-tag.js","webpack:///./node_modules/core-js/internals/engine-is-ios-pebble.js","webpack:///./node_modules/core-js/internals/array-reduce.js","webpack:///./node_modules/core-js/modules/es.typed-array.for-each.js","webpack:///./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./node_modules/core-js/internals/engine-is-ie-or-edge.js","webpack:///./node_modules/core-js/internals/is-symbol.js","webpack:///../../src/util/console.ts","webpack:///../../src/util/mergeData.ts","webpack:///./node_modules/core-js/internals/global.js","webpack:///./node_modules/core-js/modules/es.object.get-own-property-descriptors.js","webpack:///./node_modules/core-js/modules/es.object.freeze.js","webpack:///./node_modules/core-js/modules/web.dom-collections.iterator.js","webpack:///./node_modules/core-js/internals/object-keys.js","webpack:///./node_modules/core-js/internals/array-from-constructor-and-list.js","webpack:///./node_modules/core-js/modules/es.symbol.description.js","webpack:///./node_modules/core-js/internals/object-get-prototype-of.js","webpack:///./node_modules/core-js/internals/correct-prototype-getter.js","webpack:///./node_modules/core-js/modules/es.array.iterator.js","webpack:///./node_modules/core-js/internals/redefine-all.js","webpack:///./node_modules/core-js/modules/es.object.get-own-property-descriptor.js","webpack:///./node_modules/core-js/internals/well-known-symbol-wrapped.js","webpack:///./node_modules/core-js/internals/array-last-index-of.js","webpack:///./node_modules/core-js/internals/perform.js","webpack:///./node_modules/core-js/modules/es.promise.js","webpack:///./node_modules/core-js/internals/copy-constructor-properties.js","webpack:///./node_modules/core-js/internals/is-array.js","webpack:///./node_modules/core-js/modules/es.typed-array.index-of.js","webpack:///./node_modules/core-js/internals/is-array-iterator-method.js","webpack:///./node_modules/core-js/internals/array-buffer-view-core.js","webpack:///./node_modules/core-js/internals/new-promise-capability.js","webpack:///./node_modules/core-js/internals/internal-metadata.js","webpack:///../../../src/mixins/toggleable/index.ts","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///../src/install.ts","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createSuper.js","webpack:///../../src/locale/en.ts","webpack:///../../../src/presets/default/index.ts","webpack:///../../../src/services/service/index.ts","webpack:///../../../src/services/presets/index.ts","webpack:///../../../src/services/application/index.ts","webpack:///../../../src/services/breakpoint/index.ts","webpack:///../../../src/services/goto/easing-patterns.ts","webpack:///../../../src/services/goto/util.ts","webpack:///../../../src/services/goto/index.ts","webpack:///../../../../src/services/icons/presets/mdi-svg.ts","webpack:///../../../../src/services/icons/presets/md.ts","webpack:///../../../../src/services/icons/presets/mdi.ts","webpack:///../../../../src/services/icons/presets/fa.ts","webpack:///../../../../src/services/icons/presets/fa4.ts","webpack:///../../../../src/services/icons/presets/fa-svg.ts","webpack:///../../../../src/services/icons/presets/index.ts","webpack:///../../../src/services/icons/index.ts","webpack:///../../../src/services/lang/index.ts","webpack:///../../../src/util/color/transformCIELAB.ts","webpack:///../../../src/services/theme/utils.ts","webpack:///../../../src/services/theme/index.ts","webpack:///../src/framework.ts","webpack:///./node_modules/core-js/internals/classof.js","webpack:///../../../src/components/VMain/VMain.ts","webpack:///./node_modules/core-js/internals/math-sign.js","webpack:///./node_modules/core-js/internals/shared-key.js","webpack:///./node_modules/core-js/internals/to-positive-integer.js","webpack:///./node_modules/core-js/modules/es.array.slice.js","webpack:///./node_modules/core-js/internals/to-indexed-object.js","webpack:///./node_modules/core-js/internals/regexp-unsupported-dot-all.js","webpack:///./node_modules/core-js/internals/dom-iterables.js","webpack:///./node_modules/core-js/internals/use-symbol-as-uid.js","webpack:///../../../src/mixins/positionable/index.ts","webpack:///./node_modules/core-js/internals/native-promise-constructor.js"],"names":["wellKnownSymbol","TO_STRING_TAG","test","module","exports","String","aFunction","fn","that","length","undefined","call","a","b","c","apply","arguments","$","flattenIntoArray","toObject","toLength","toInteger","arraySpeciesCreate","target","proto","flat","depthArg","O","this","sourceLen","A","userAgent","firefox","match","isObject","slice","factories","construct","C","argsLength","args","list","i","Function","join","bind","partArgs","boundFunction","concat","prototype","toIndexedObject","$getOwnPropertyNames","f","toString","windowNames","window","Object","getOwnPropertyNames","getWindowNames","it","error","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","constructor","name","Array","from","DESCRIPTORS","propertyIsEnumerableModule","createPropertyDescriptor","toPropertyKey","has","IE8_DOM_DEFINE","$getOwnPropertyDescriptor","getOwnPropertyDescriptor","P","mergeTransitions","dest","origin","functional","props","group","type","default","hideOnLeave","leaveAbsolute","mode","render","tag","context","data","on","beforeEnter","el","offsetHeight","position","top","left","width","height","offsetTop","offsetLeft","offsetWidth","h","mergeData","functions","expandedParentClass","x","sizeProperty","offsetProperty","transition","overflow","enter","initialStyle","offset","requestAnimationFrame","afterEnter","enterCancelled","leave","afterLeave","leaveCancelled","resetStyles","size","VFadeTransition","createSimpleTransition","VSlideXTransition","VExpandXTransition","createJavascriptTransition","$values","values","stat","number","RangeError","isArray","SPECIES","originalArray","floor","Math","replace","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","matched","str","captures","namedCaptures","replacement","tailPos","m","symbols","ch","capture","charAt","fails","createElement","defineProperty","get","breakpoints","ALIGNMENT","makeProps","prefix","def","alignValidator","alignProps","validator","justifyValidator","justifyProps","alignContentValidator","alignContentProps","propMap","align","justify","alignContent","classMap","breakpointClass","className","val","breakpoint","prop","cache","dense","noGutters","children","cacheKey","classList","value","staticClass","class","global","$RegExp","RegExp","re","exec","groups","requireObjectCoercible","count","result","Infinity","fixRegExpWellKnownSymbolLogic","isRegExp","anObject","speciesConstructor","advanceStringIndex","callRegExpExec","regexpExec","stickyHelpers","UNSUPPORTED_Y","arrayPush","push","min","MAX_UINT32","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","split","SPLIT","nativeSplit","maybeCallNative","internalSplit","separator","limit","string","lim","lastIndex","lastLength","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","separatorCopy","source","index","splitter","rx","S","res","done","unicodeMatching","p","q","e","z","is","y","isFontAwesome5","some","iconType","isSvgPath","icon","SIZE_MAP","VIcon","disabled","right","Number","required","computed","medium","hasClickListener","Boolean","listeners$","click","methods","getIcon","iconName","$slots","text","getSize","sizes","xSmall","small","large","xLarge","explicitSize","key","getDefaultData","attrs","attrs$","getSvgWrapperData","fontSize","wrapperData","style","applyColors","themeClasses","renderFontIcon","newChildren","delimiterIndex","isMaterialIcon","renderSvgIcon","svgData","xmlns","viewBox","role","d","renderSvgIconComponent","component","$_wrapperFor","arrayFromConstructorAndList","typedArraySpeciesConstructor","instance","toAbsoluteIndex","copyWithin","start","len","to","end","inc","classof","R","TypeError","DOMIterables","forEach","createNonEnumerableProperty","COLLECTION_NAME","Collection","CollectionPrototype","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_objectWithoutProperties","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ArrayBufferViewCore","aTypedArray","exportTypedArrayMethod","begin","beginIndex","buffer","byteOffset","BYTES_PER_ELEMENT","$forEach","arrayMethodIsStrict","STRICT_METHOD","callbackfn","toPositiveInteger","BYTES","createHTML","forcedStringHTMLMethod","forced","anchor","Constructor","getBuiltIn","ITERATOR","SAFE_CLOSING","called","iteratorWithReturn","next","SKIP_CLOSING","ITERATION_SUPPORT","object","directives","Ripple","activeClass","append","exact","exactPath","exactActiveClass","link","href","nuxt","ripple","isActive","proxyClass","classes","computedRipple","isClickable","isLink","$listeners","$attrs","styles","watch","$route","generateRouteLink","tabindex","path","onRouteChange","$refs","toggle","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","Promise","then","_asyncToGenerator","self","err","V8_VERSION","METHOD_NAME","array","foo","factory","AlphaTabErrorType","AlphaTabError","Error","message","inner","super","setPrototypeOf","FormatError","Format","GeneralMidi","_values","Map","toLowerCase","program","Fingers","NotationElement","FontStyle","AccentuationType","AutomationType","Clef","Ottavia","SimileMark","BendStyle","BendType","BrushType","CrescendoType","Duration","DynamicValue","GraceType","HarmonicType","NoteAccidentalMode","SlideInType","SlideOutType","VibratoType","PickStroke","MusicFontSymbol","TextAlign","TextBaseline","WhammyType","BeatBeamingMode","LyricsState","KeySignature","KeySignatureType","TripletFeel","AlphaTexSymbols","DataType","FermataType","XmlNodeType","XmlState","BeamDirection","InflateState","MidiEventType","MetaEventType","SystemCommonType","AlphaTabSystemExclusiveEvents","PlayerState","LoopMode","OutputMode","GenOperators","VoiceEnvelopeSegment","ControllerType","BeatXPosition","AccidentalType","NoteYPosition","NoteXPosition","EffectBarGlyphSizing","TripletFeelGlyphBarType","FrameType","GpifIconIds","TabRhythmMode","FingeringMode","NotationMode","NotationSettings","notationMode","GuitarPro","fingeringMode","ScoreDefault","elements","rhythmMode","Hidden","rhythmHeight","transpositionPitches","displayTranspositionPitches","smallGraceTabNotes","extendBendArrowsOnTiedNotes","extendLineEffectsToBeatEnd","slurHeight","element","defaultElements","ZerosOnDiveWhammys","TuningParseResult","note","noteValue","octave","ModelUtils","duration","log2","ks","settings","score","tracks","notation","staff","staves","displayTranspositionPitch","transpositionPitch","beat","finger","leftHand","ScoreForcePiano","SingleNoteEffectBandForcePiano","isPiano","voice","bar","track","playbackInfo","Unknown","NoOrDead","Thumb","IndexFinger","MiddleFinger","AnnularFinger","LittleFinger","parseTuning","charCodeAt","fromCharCode","parseInt","getToneForText","realValue","random","substring","abs","digits","s","hexChars","Color","r","g","raw","updateRgba","rgba","toHexString","opacity","v","json","startsWith","lastIndexOf","numbers","parseFloat","obj","BlackRgb","JsonHelper","enumType","num","isNaN","find","k","func","FontParserToken","startPos","endPos","FontParser","input","variant","weight","stretch","lineHeight","families","_currentTokenIndex","_input","_currentToken","_tokens","splitToTokens","tokens","_a","reset","fontStyleVariantWeight","fontSizeLineHeight","fontFamily","familyListInput","substr","trim","pos","endOfString","findEndOfQuote","quoteChar","escaped","parts","nextToken","_b","_c","_d","_e","hasStyle","hasVariant","hasWeight","valuesNeeded","ambiguous","pop","Font","family","Plain","_cssScale","_css","toCssString","Bold","Italic","scale","buf","isBold","isItalic","parseEnum","parser","parse","endsWith","fontSizeString","fontStyle","fontWeightString","font","set","RenderingResources","copyrightFont","sansFont","titleFont","serifFont","subTitleFont","wordsFont","effectFont","fretboardNumberFont","tablatureFont","graceFont","staffLineColor","barSeparatorColor","barNumberFont","barNumberColor","fingeringFont","markerFont","mainGlyphColor","secondaryGlyphColor","scoreInfoColor","StaveProfile","LayoutMode","DisplaySettings","stretchForce","layoutMode","Page","staveProfile","Default","barsPerRow","startBar","barCount","barCountPerPartial","resources","padding","ScoreImporter","UnsupportedFormatError","Automation","isLinear","Tempo","ratioPosition","reference","references","Float32Array","automation","Instrument","Bar","id","_globalBarId","nextBar","previousBar","clef","G2","clefOttava","Regular","voices","simileMark","None","isMultiVoice","masterBars","j","isEmpty","finish","voiceDuration","calculateDuration","MidiUtils","ticks","tempo","QuarterTime","millis","valueToTicks","denomninator","doubleDotted","numerator","denominator","dyn","MinVelocity","VelocityIncrement","BendPoint","MaxPosition","MaxValue","Lazy","_value","_factory","LogLevel","ConsoleLogger","category","msg","details","console","debug","format","warn","logLevel","Info","Logger","level","shouldLog","Debug","log","Warning","warning","InstrumentArticulation","elementType","staffLine","outputMidiNumber","noteHeadDefault","noteHeadHalf","noteHeadWhole","techniqueSymbol","techniqueSymbolPlacement","Middle","Whole","Half","PercussionMapper","variation","gp6ElementAndVariationToArticulation","articulationIndex","percussionArticulation","trackArticulations","percussionArticulations","getArticulationByValue","articulation","getArticulation","variations","gp6Articulation","midiNumber","instrumentArticulations","NoteheadBlack","NoteheadHalf","NoteheadWhole","NoteheadXBlack","NoteheadDiamondWhite","NoteheadCircleSlash","NoteheadCircleX","PictEdgeOfCymbal","Bottom","ArticStaccatoAbove","Top","NoteheadHeavyXHat","NoteheadHeavyX","NoteheadTriangleUpBlack","NoteheadTriangleUpHalf","NoteheadTriangleUpWhole","NoteheadXHalf","NoteheadXWhole","NoteheadParenthesis","StringsUpBow","StringsDownBow","NoteheadNull","GuitarGolpe","NoteheadSlashedBlack2","Note","GlobalNoteId","accentuated","bendType","bendStyle","bendOrigin","isContinuedBend","bendPoints","maxBendPoint","fret","tone","isVisible","isLeftHandTapped","isHammerPullOrigin","hammerPullOriginNoteId","hammerPullDestinationNoteId","isSlurDestination","slurOriginNoteId","slurDestinationNoteId","harmonicType","harmonicValue","isGhost","isLetRing","letRingDestination","isPalmMute","palmMuteDestination","isDead","isStaccato","slideInType","slideOutType","slideTarget","slideOrigin","vibrato","tieOriginNoteId","tieDestinationNoteId","isTieDestination","leftHandFinger","rightHandFinger","isFingering","trillValue","trillSpeed","ThirtySecond","durationPercent","accidentalMode","dynamics","F","isEffectSlurOrigin","hasEffectSlur","effectSlurOrigin","effectSlurDestination","isStringed","isPercussion","getElementAndVariation","hammerPullOrigin","getNoteById","slurDestination","stringTuning","capo","getStringTuning","noteString","tuning","realValueWithoutHarmonic","Natural","harmonicPitch","isAlmostEqualTo","hasBend","tieOrigin","hasWhammyBar","whammyBarPoints","isContinuedWhammy","previousBeat","displayValueWithoutBend","initialBendValue","ottava","_15ma","_8va","_8vb","_15mb","point","Custom","nextNoteOnLine","nextNoteOnSameLine","isSongBook","SongBook","chain","hammerPullDestination","findHammerPullDestination","Shift","Legato","pickStroke","middle1","middle2","destination","BendRelease","PrebendBend","splice","Bend","Release","PrebendRelease","Prebend","Hold","nextBeat","MaxOffsetForSameLineSearch","noteOnString","getNoteOnString","notes","noteWithValue","getNoteWithRealValue","registerNote","findTieOrigin","TupletGroup","_isEqualLengthTuplet","totalDuration","beats","isFull","playbackDuration","graceType","tupletNumerator","tupletDenominator","factor","potentialMatch","AllTicks","HalfTicks","QuarterTicks","EighthTicks","SixteenthTicks","ThirtySecondTicks","SixtyFourthTicks","OneHundredTwentyEighthTicks","TwoHundredFiftySixthTicks","BendPointCloner","original","clone","NoteCloner","addBendPoint","AutomationCloner","BeatCloner","Beat","addNote","whammyStyle","isLegatoOrigin","automations","dots","fadeIn","lyrics","hasRasgueado","slap","tap","brushType","brushDuration","whammyBarType","addWhammyBarPoint","chordId","tremoloSpeed","crescendo","displayStart","playbackStart","displayDuration","invertBeamDirection","preferredBeamDirection","beamingMode","GraceGroup","isComplete","absoluteDisplayStart","graceIndex","graceGroup","_globalBeatId","noteStringLookup","noteValueLookup","fermata","minNote","maxNote","maxStringNote","minStringNote","Quarter","tupletGroup","maxWhammyPoint","minWhammyPoint","Auto","isRest","chords","masterBar","currentPoint","isFullBarRest","toTicks","applyDot","applyTuplet","BeforeBeat","OnBeat","Sixteenth","SixtyFourth","OneHundredTwentyEighth","BendGrace","previous","currentTupletGroup","hasTuplet","check","getAutomation","buildInstrumentAutomation","numberOfGraceBeats","Eighth","displayMode","isGradual","needCopyBeatForBend","visibleNotes","isEffectSlurBeat","isTieOrigin","Gradual","Fast","currentBeat","Dive","PrediveDive","Dip","Predive","updateDurations","cloneBeat","cloneNote","tieDestination","lastPoint","addBeat","insertBeat","noteRealValue","Chord","firstFret","strings","barreFrets","showName","showDiagram","showFingering","Lyrics","skipEmptyEntries","chunks","state","Begin","skipSpace","IgnoreSpaces","CharCodeLF","CharCodeCR","CharCodeTab","CharCodeSpace","CharCodeBrackedOpen","Comment","Text","CharCodeBrackedClose","CharCodeDash","Dash","txt","addChunk","prepareChunk","chunk","endLength","MasterBar","alternateEndings","nextMasterBar","previousMasterBar","keySignature","keySignatureType","Major","isDoubleBar","isRepeatStart","repeatCount","timeSignatureNumerator","timeSignatureDenominator","timeSignatureCommon","tripletFeel","NoTripletFeel","section","tempoAutomation","isAnacrusis","respectAnacrusis","barDuration","bars","MaxAlternateEndings","RenderStylesheet","hideDynamics","RepeatGroup","openings","closings","isOpened","isClosed","repeatGroup","isRepeatEnd","Score","_noteByIdLookup","_currentRepeatGroup","album","artist","copyright","instructions","music","notices","subTitle","title","words","tab","tempoLabel","stylesheet","currentGroup","addMasterBar","clear","noteId","Section","marker","PlaybackInformation","volume","balance","port","primaryChannel","secondaryChannel","isMute","isSolo","Tuning","isStandard","tunings","includeOctave","getTextPartsForTuning","octaveShift","stringCount","_defaultTunings","_sevenStrings","_sixStrings","_fiveStrings","_fourStrings","getPresetsFor","t","tc","equals","knownTuning","findTuning","defaultAccidentals","defaultSteps","initialize","Staff","showTablature","showStandardNotation","standardNotationLineCount","chord","Track","color","shortName","staveCount","addStaff","ShortNameMaxLength","lyric","li","ci","Voice","after","newBeat","isLastOfVoice","nextVoice","lastBeat","_beatLookup","currentGraceGroup","currentDisplayTick","currentPlaybackTick","firstGraceBeat","lastGraceBeat","stolenDuration","graceBeat","delete","addFermata","getFermata","finishTuplet","firstBeat","AlphaTexError","AlphaTex","nonTerm","expected","No","symbol","symbolData","exception","AlphaTexImporter","_trackChannel","_ch","_curChPos","_sy","_allowNegatives","_allowTuning","_currentDuration","QuadrupleWhole","_currentDynamics","PPP","_currentTuplet","_staffHasExplicitTuning","_staffTuningApplied","_lyrics","createDefaultScore","nextChar","newSy","LowerThan","consolidate","_score","rebuildRepeatGroups","applyLyrics","newBar","emptyBeat","nonterm","symbolError","_syData","errorMessage","newTrack","_currentTrack","ensureStaveCount","_currentStaff","getDefaultTuningFor","addTrack","F4","C3","C4","Neutral","Triplet16th","Triplet8th","Dotted16th","Dotted8th","Scottish16th","Scottish8th","readByte","Eof","startChar","isDigit","readNumber","readName","Dot","DoubleDot","LParensis","MetaCommand","RParensis","LBrace","RBrace","Pipe","Multiply","isLetter","code","isTerminal","anyMetaRead","metaData","anyBarsRead","anyMeta","continueReading","syData","handleStaffMeta","instrument","instrumentName","getValue","chordProperties","addChord","getChordId","anyData","staffProperties","showTabs","anyStaffMeta","trackStaffMeta","master","anyBarMeta","barMeta","anyBeatData","addBar","addVoice","beatDuration","parseDuration","beatRepeat","beatEffects","effect","applyBeatEffect","Slight","Up","Down","removeWhammyBarPoint","sort","step","chordName","PP","MP","MF","FF","FFF","Crescendo","Decrescendo","currentStaff","tuplet","isTie","isFretted","noteEffects","Artificial","Tap","Pinch","Semi","IntoFromBelow","IntoFromAbove","OutUp","OutDown","PickSlideDown","PickSlideUp","Normal","Heavy","toFinger","DoubleWhole","parseKeySignature","parseClefFromString","parseClefFromInt","parseResult","parseTripletFeelFromString","parseTripletFeelFromInt","TypeConversions","_dataView","setUint16","getInt16","setInt16","getUint32","setInt32","getUint16","setUint8","getInt8","_conversionBuffer","ArrayBuffer","DataView","IOHelper","ch1","ch2","ch3","ch4","int32ToUint16","int32ToInt16","int32ToUint32","Uint8Array","read","encoding","detectedEncoding","detectEncoding","decoder","TextDecoder","decode","TextEncoder","encode","writeByte","Gp3To5Importer","_versionNumber","_globalTripletFeel","_lyricsTrack","_barCount","_trackCount","_playbackInfos","_beatTextChunksByTrack","readVersion","readScoreInformation","GpBinaryHelpers","gpReadBool","readLyrics","skip","readPageSetup","gpReadStringIntByte","importer","readInt32LE","readPlaybackInfos","readMasterBars","readTracks","readBars","buildTempoAutomation","version","gpReadStringByteLength","VersionString","dot","gpReadStringIntUnused","noticeLines","notice","gpReadStringInt","readMasterBar","newMasterBar","currentMasterBar","existentAlternatives","repeatAlternative","repeatMask","repeating","gpReadColor","readSInt8","readTrack","mainStaff","effectChannel","isGuitar","readBar","voiceCount","readVoice","beatCount","newVoice","readBeat","readChord","beatTextAsLyrics","beatLyrics","allNoteHarmonicType","readBeatEffects","readMixTableChange","stringFlags","readNote","deltaFretToHarmonicValue","flag","newGuid","numberOfBarres","flags2","slapPop","readTremoloBarEffect","strokeUp","strokeDown","BrushUp","toStrokeValue","BrushDown","pointCount","BendStep","tableChange","MixTableChange","chorus","reverb","phaser","tremolo","tempoName","volumeAutomation","Volume","balanceAutomation","Balance","instrumentAutomation","stringIndex","newNote","noteType","dynamicNumber","toDynamicValue","swapAccidentals","gpReadDouble","readNoteEffects","accidental","ForceFlat","ForceSharp","readBend","readGrace","readTremoloPicking","readSlide","readArtificialHarmonic","readTrill","graceNote","addGraceBeat","speed","deltaFret","bytes","Float64Array","readAlpha","gpReadString","encoded","stringToBytes","write","stringLength","ByteBuffer","_capacity","_buffer","withCapacity","capacity","contents","byteArray","fromBuffer","newBuffer","subarray","byteCount","ensureCapacity","count1","newCapacity","setCapacity","toArray","copy","Bounds","w","BinaryStylesheet","readable","entryCount","readInt32BE","addValue","Integer","ivalue","Float","fvalue","gpReadFloat","readInt16BE","Point","Size","Rectangle","rect","writer","writeInt32BE","writeBooleanEntry","gpWriteString","Fermata","Short","XmlNode","nodeType","localName","childNodes","attributes","firstChild","firstElement","node","Element","CDATA","recursive","tags","searchElementsByTagName","all","newNode","addChild","Document","innerText","textNode","XmlError","xml","XmlParser","parent","escapeNext","aname","nbrackets","attrValQuote","CharCodeLowerThan","BeginNode","Pcdata","child","CharCodeAmp","Escape","Cdata","CharCodeGreaterThan","CharCodeExclamation","toUpperCase","CharCodeUpperD","CharCodeLowerD","Doctype","CharCodeMinus","CharCodeQuestion","Header","CharCodeSlash","Close","TagName","isValidChar","Body","WaitEnd","Childs","AttribName","tmp","Equals","CharCodeEquals","AttvalBegin","CharCodeDoubleQuote","CharCodeSingleQuote","AttribVal","WaitEndRet","DocumentType","CharCodeSemi","CharCodeSharp","CharCodeLowerX","Escapes","CharCodeLowerA","CharCodeLowerZ","CharCodeUpperA","CharCodeUpperZ","CharCode0","CharCode9","CharCodeColon","CharCodeDot","CharCodeUnderscore","XmlWriter","indention","xmlHeader","_result","_indention","_xmlHeader","_currentIndention","_isStartOfLine","writeNode","writeLine","writeAttributeValue","indent","unindend","trimRight","XmlDocument","GpifRhythm","GpifSound","GpifParser","_hasAnacrusis","_skipApplyLyrics","_masterTrackAutomations","_automationsPerTrackIdAndBarIndex","_tracksMapping","_tracksById","_masterBars","_barsOfMasterBar","_voicesOfBar","_barsById","_voiceById","_beatsOfVoice","_beatById","_rhythmOfBeat","_rhythmById","_notesOfBeat","_noteById","_tappedNotes","_lyricsByTrack","_soundsByTrack","dom","parseDom","buildModel","root","parseScoreNode","parseMasterTrackNode","parseTracksNode","parseMasterBarsNode","parseBars","parseVoices","parseBeats","parseNotes","parseRhythms","wordsAndMusic","parseAutomations","sounds","parseAutomation","barIndex","numberValue","textValue","parseTrack","_articulationByName","trackId","getAttribute","parseInstrumentSet","parseNotationPatch","parseLyrics","parseTrackProperties","parseGeneralMidi","parseSounds","parsePartSounding","parseStaves","parseTranspose","parseRSE","parseTrackAutomations","trackAutomations","lineCount","parseElements","parseElement","typeElement","findChildElement","parseArticulations","parseArticulation","parseTechniqueSymbol","noteHeadsTxt","parseNoteHead","NoteheadDoubleWholeSquare","NoteheadDoubleWhole","NoteheadXOrnate","NoteheadDiamondBlackWide","NoteheadDiamondWhiteWide","staffIndex","parseStaff","parseStaffProperties","parseStaffProperty","propertyName","tuningParts","parseDiagramCollectionForStaff","parseLyricsLine","items","parseDiagramItemForTrack","parseDiagramItemForStaff","parseDiagramItemForChord","diagram","baseFret","guitarString","existingFingers","parseTrackProperty","parseDiagramCollectionForTrack","parseSound","sound","parseSoundMidi","uniqueId","chromatic","parseChannelStrip","parseChannelStripParameters","parameters","parseMasterBar","timeParts","Minor","parseFermatas","parseFermata","Medium","Long","parseBar","barId","Simple","FirstOfDouble","SecondOfDouble","parseVoice","voiceId","parseBeat","beatId","ArpeggioUp","ArpeggioDown","parseBeatProperties","parseBeatXProperties","whammyOrigin","toBendValue","toBendOffset","whammyMiddle1","whammyMiddle2","whammyDestination","parseBeatLyrics","lines","isWhammy","whammyMiddleValue","whammyMiddleOffset1","whammyMiddleOffset2","Wide","parseNote","parseNoteProperties","accentFlags","isBended","bendMiddleValue","bendMiddleOffset1","bendMiddleOffset2","bendDestination","htype","Feedback","hfret","parseConcertPitch","slideFlags","articulationFromElementVariation","pitch","ForceDoubleSharp","ForceDoubleFlat","gpxValue","BendPointValueFactor","gpxOffset","BendPointPositionFactor","parseRhythm","rhythm","rhythmId","TwoHundredFiftySixth","barIds","trackIndex","InvalidId","hasPercussion","barNumber","TrackConfiguration","showSlash","Part","isMultiRest","PartConfiguration","partConfigurationData","zoomLevel","layout","part","groupCount","trackConfiguration","trackConfig","Huffman","Found","NeedBit","NeedBits","table","HuffTools","lengths","nlengths","maxbits","counts","bits","l","treeCompress","treeMake","idx","treeDepth","treeWalk","cd","da","db","InflateWindow","BufferSize","slide","Inflate","_nbits","_bits","_state","Block","_isFinal","_huffman","_fixedHuffman","_huffdist","_len","_dist","_needed","_output","_outpos","_lengths","_window","make","inflateLoop","Head","cmf","cm","flg","fdict","Crc","Done","getBit","getBits","readUInt16LE","nlen","Flat","resetBits","CData","hlit","hdist","hclen","CodeLengthsPos","xlengths","inflateLengths","rlen","readByteArray","addBytes","DistOne","addDistOne","Dist","rdist","addDist","applyHuffman","addByte","extraBits","LenExtraBitsTbl","LenBaseValTbl","huffdist","distCode","getRevBits","DistExtraBitsTbl","DistBaseValTbl","available","getLastChar","max","prev","buildFixedHuffman","ZipEntry","fullName","fileName","OptionalDataDescriptorSignature","CompressionMethodDeflate","LocalFileHeaderSignature","CentralFileHeaderSignature","EndOfCentralDirSignature","ZipReader","_readable","entries","readEntry","compressionMethod","compressed","readInt16LE","uncompressedSize","fileNameLength","extraFieldLength","fname","empty","readBytes","crc32","Gp7Importer","fileSystem","binaryStylesheetData","entry","gpifParser","parseXml","partConfigurationParser","EndOfReaderError","BitReader","_currentByte","_position","ByteSize","_source","readBits","readBit","GpxFile","fileSize","GpxFileSystem","files","fileFilter","src","readBlock","getString","skipHeader","uncompressed","expectedLength","getInteger","wordSize","readBitsReversed","sourcePosition","toRead","getBuffer","resultOffset","resultSize","header","readHeader","readUncompressedBlock","decompress","readAll","sectorSize","entryType","file","storeFile","dataPointerOffset","sector","sectorCount","fileData","HeaderBcFs","HeaderBcFz","ScoreGpif","GpxImporter","load","binaryStylesheet","partConfiguration","MusicXmlImporter","_currentPartGroup","_trackFirstMeasureNumber","_maxVoices","_currentDirection","_currentChord","_divisionsPerQuarterNote","_voiceOfStaff","_isBeamContinue","_previousBeatWasPulled","_previousBeat","_trackById","_partGroups","_tieStarts","_tieStartIds","_slurStarts","mergePartGroupsInMusicXml","mergePartGroups","anyMerged","mergeGroup","partGroup","primaryTrack","secondaryTrack","parsePartwise","parseWork","parseIdentification","parsePartList","parsePart","isFirstMeasure","parseMeasure","ensureVoices","getElementsByTagName","stavesElements","getOrCreateMasterBar","attributesParsed","parseNoteBeat","parseForward","parseDirection","parseAttributes","parseHarmony","parseBarline","emptyVoice","voiceIndex","voiceNodes","previousBeatWasPulled","staffElement","staffId","getOrCreateVoice","getOrCreateBeat","durationInDivisions","durations","fill","parseStaffTuning","isEmptyTuning","line","tuningStep","tuningOctave","tuningAlter","getTuningForText","rootStep","rootAlter","rootChild","parseRepeat","parseEnding","direction","times","parseTied","getDuration","parseAccidental","parseTimeModification","beamMode","parseNotations","parseLyric","parsePitch","parseUnpitched","removeNote","ForceNatural","parseDynamics","parseTechnical","parseOrnaments","slurNumber","slurStart","semitones","directionType","parseMetronome","unit","perMinute","hasTime","parseKey","parseTime","parseClef","parseStaffDetails","sign","beatsParsed","beatTypeParsed","fifths","mb","parsePartGroup","parseScorePart","parseMidiInstrument","MidiEvent","tick","status","data1","data2","MetaEvent","delta","SystemCommonEvent","SystemExclusiveEvent","manufacturerId","AlphaTabManufacturerId","MetronomeTick","isMetronome","decodeUInt32LE","Rest","counter","durationInTicks","durationInMillis","writeInt32LE","SynthEvent","eventIndex","time","event","evt","SystemExclusive2","encodeMetronome","SynthConstants","DefaultChannelCount","MetronomeChannel","AudioChannels","MinVolume","MinProgram","MaxProgram","MinPlaybackSpeed","MaxPlaybackSpeed","MaxPitchWheel","MaxPitchWheel20","DefaultPitchWheel","MicroBufferCount","MicroBufferSize","MidiFileSequencerTempoChange","bpm","MidiSequencerState","tempoChanges","firstProgramEventPerChannel","firstTimeSignatureNumerator","firstTimeSignatureDenominator","synthData","division","currentTime","playbackRange","playbackRangeStartTime","playbackRangeEndTime","endTick","endTime","MidiFileSequencer","synthesizer","_oneTimeState","_countInState","isLooping","playbackSpeed","_synthesizer","_mainState","_currentState","tickPositionToTimePositionWithSpeed","startTick","timePosition","silentProcess","metronomeVolume","noteOffAll","resetSoft","setupMetronomeChannel","milliseconds","Date","now","finalTime","fillMidiEventQueueLimited","synthesizeSilent","midiFile","createStateFromFile","absTick","absTime","metronomeCount","metronomeLengthInTicks","metronomeLengthInMillis","metronomeTick","metronomeTime","previousTick","mEvent","events","deltaTick","metronome","newMetronomeEvent","command","Meta","meta","TimeSignature","pow","ProgramChange","channel","maxMilliseconds","millisecondsPerBuffer","outSampleRate","internalEndTime","anyEventsDispatched","dispatchEvent","tickPosition","timePositionToTickPositionWithSpeed","lastChange","generateCountInMidi","stop","currentTempo","PlayerStateChangedEventArgs","stopped","PositionChangedEventArgs","currentTick","isSeek","RiffChunk","stream","HeaderSize","read8BitStringLength","readUInt32LE","isRiff","isList","Hydra","phdrs","pbags","pmods","pgens","insts","ibags","imods","igens","sHdrs","fontSamples","chunkHead","chunkFastList","HydraPhdr","SizeInFile","HydraPbag","HydraPmod","HydraPgen","HydraInst","HydraIbag","HydraImod","HydraIgen","HydraShdr","loadSamples","reader","samplesLeft","samples","samplesPos","sampleBuffer","testBuffer","Int16Array","samplesToRead","instGenNdx","instModNdx","modSrcOper","modDestOper","modAmount","modAmtSrcOper","modTransOper","genOper","genAmount","HydraGenAmount","instName","instBagNdx","genNdx","modNdx","GenInstrument","GenKeyRange","GenVelRange","GenSampleId","presetName","preset","bank","presetBagNdx","library","genre","morphology","sampleName","startLoop","endLoop","sampleRate","originalPitch","pitchCorrection","sampleLink","sampleType","wordAmount","uint16ToInt16","Channel","presetIndex","pitchWheel","perNotePitchWheel","midiPan","midiVolume","midiExpression","midiRpn","midiData","panOffset","gainDb","pitchRange","mixVolume","mute","solo","Channels","activeChannel","channelList","tinySoundFont","newpan","region","pan","playingChannel","noteGainDb","updatePitchRatio","panFactorLeft","panFactorRight","sqrt","Preset","presetNumber","regions","SynthHelper","timecents","gain","log10","cents","Envelope","other","delay","attack","hold","decay","sustain","release","keynumToHold","keynumToDecay","sustainIsGain","timecents2Secs","decibelsToGain","Region","loopMode","loKey","hiKey","loVel","hiVel","loopStart","loopEnd","transpose","tune","pitchKeyCenter","pitchKeyTrack","attenuation","ampEnv","modEnv","initialFilterQ","initialFilterFc","modEnvToPitch","modEnvToFilterFc","modLfoToFilterFc","modLfoToVolume","delayModLFO","freqModLFO","modLfoToPitch","delayVibLFO","freqVibLFO","vibLfoToPitch","forRelative","amount","StartAddrsOffset","int16ToUint32","shortAmount","EndAddrsOffset","StartloopAddrsOffset","EndloopAddrsOffset","StartAddrsCoarseOffset","ModLfoToPitch","VibLfoToPitch","ModEnvToPitch","InitialFilterFc","InitialFilterQ","ModLfoToFilterFc","ModEnvToFilterFc","EndAddrsCoarseOffset","ModLfoToVolume","Pan","DelayModLFO","FreqModLFO","DelayVibLFO","FreqVibLFO","DelayModEnv","AttackModEnv","HoldModEnv","DecayModEnv","SustainModEnv","ReleaseModEnv","KeynumToModEnvHold","KeynumToModEnvDecay","DelayVolEnv","AttackVolEnv","HoldVolEnv","DecayVolEnv","SustainVolEnv","ReleaseVolEnv","KeynumToVolEnvHold","KeynumToVolEnvDecay","KeyRange","lowByteAmount","highByteAmount","VelRange","StartloopAddrsCoarseOffset","InitialAttenuation","EndloopAddrsCoarseOffset","CoarseTune","FineTune","SampleModes","Sustain","Continuous","ScaleTuning","ExclusiveClass","OverridingRootKey","VoiceEnvelope","slope","samplesUntilNextSegment","segment","midiVelocity","segmentIsExponential","isAmpEnv","activeSegment","Delay","Attack","Decay","mysterySlope","exp","FastReleaseTime","newParameters","midiNoteNumber","nextSegment","numSamples","VoiceLfo","samplesUntil","freqCents","cents2Hertz","blockSamples","VoiceLowPass","qInv","a0","a1","b1","b2","z1","z2","active","fc","tan","PI","KK","norm","Voice$1","playingPreset","playingKey","pitchInputTimecents","pitchOutputFactor","sourceSamplePosition","playIndex","lowPass","modLfo","vibLfo","pitchShift","calcPitchRatio","adjustedPitch","outputBuffer","isMuted","presets","outL","outR","outputMode","StereoUnweaved","updateModEnv","updateModLFO","updateVibLFO","tmpLoopStart","tmpLoopEnd","tmpSampleEndDbl","tmpLoopEndDbl","tmpSourceSamplePosition","tmpLowpass","dynamicLowpass","tmpSampleRate","tmpInitialFilterFc","tmpModLfoToFilterFc","tmpModEnvToFilterFc","dynamicPitchRatio","pitchRatio","tmpModLfoToPitch","tmpVibLfoToPitch","tmpModEnvToPitch","dynamicGain","noteGain","tmpModLfoToVolume","gainMono","gainLeft","gainRight","RenderEffectSampleBlock","fres","setup","process","StereoInterleaved","nextPos","alpha","Mono","kill","Queue","_items","item","reverse","TinySoundFont","_midiEventQueue","_mutedChannels","_soloChannels","_isAnySolo","_voices","_channels","_voicePlayIndex","globalGainDb","bufferPos","sampleCount","fillWorkingBuffer","channelInit","synthEvent","enqueue","anySolo","processedEvents","dequeue","channelNoteOff","channelNoteOn","processMidiMessage","isChannelMuted","NoteOff","NoteOn","NoteAftertouch","Controller","channelMidiControl","channelSetPresetNumber","ChannelAftertouch","PitchBend","channelSetPitchWheel","PerNotePitchBend","midi20","channelSetPerNotePitchWheel","noteKey","channelGetMixVolume","channelSetMixVolume","channelSetVolume","gainToDecibels","gainDBChange","endQuick","vel","noteOff","voicePlayIndex","setupVoice","doLoop","filterQDB","getPresetIndex","noteOn","matchFirst","matchLast","matches","immediate","getPresetName","midiDrums","newPan","channelApplyPitch","controller","controlValue","channelSetPitchRange","channelSetTuning","channelSetPan","channelSoundsOffAll","channelNoteOffAll","hydra","newPresets","phdrIndex","phdr","regionIndex","regionNum","pbagIndex","pbag","plokey","phikey","plovel","phivel","pgenIndex","pgen","pinst","ibagIndex","ibag","ilokey","ihikey","ilovel","ihivel","igenIndex","igen","globalRegion","presetRegion","hadGenInstrument","whichInst","instRegion","inst","zoneRegion","hadSampleId","envToSecs","shdr","operator","EventEmitter","_listeners","filter","EventEmitterOfT","MidiEventsPlayedEventArgs","AlphaSynth","_isSoundFontLoaded","_isMidiLoaded","_tickPosition","_timePosition","_metronomeVolume","_countInVolume","_playedEventsQueue","_midiEventsPlayedFilter","Set","isReady","Paused","ready","readyForPlayback","finished","soundFontLoaded","soundFontLoadFailed","midiLoaded","midiLoadFailed","stateChanged","positionChanged","midiEventsPlayed","trigger","checkReadyForPlayback","sampleRequest","_sequencer","fillMidiEventQueue","synthesizedEvents","synthesize","isFinished","addSamples","samplesPlayed","onSamplesPlayed","open","masterVolume","clamp","oldSpeed","updateTimePosition","tickPositionToTimePosition","seek","resetSamples","activate","playInternal","startCountIn","play","Playing","pause","midi","loadOneTimeMidi","resetPresets","soundFont","loadPresets","isReadyForPlayback","loadMidi","channelSetMute","resetChannelStates","channelSetSolo","playedMillis","checkForFinish","isPlayingCountIn","resetCountIn","isPlayingOneTimeMidi","resetOneTimeMidi","timePositionToTickPosition","activeVoiceCount","playedEvents","peek","MidiFile","insertPos","prevItem","writeTo","trackData","midiEvent","writeVariableInt","MetaDataEvent","metaId","metaStatus","MetaNumberEvent","ImporterSettings","ScrollMode","VibratoPlaybackSettings","noteWideLength","noteWideAmplitude","noteSlightLength","noteSlightAmplitude","beatWideLength","beatWideAmplitude","beatSlightLength","beatSlightAmplitude","SlidePlaybackSettings","simpleSlidePitchOffset","simpleSlideDurationRatio","shiftSlideDurationRatio","PlayerSettings","scrollElement","enablePlayer","enableCursor","enableUserInteraction","scrollOffsetX","scrollOffsetY","scrollMode","scrollSpeed","songBookBendDuration","songBookDipDuration","playTripletFeel","Settings","core","CoreSettings","display","player","SingleNoteEffectBand","ParenthesisOnTiedBends","TabNotesOnTiedBends","setSongBookModeSettings","Midi20PerNotePitchBendEvent","SectionSerializer","setProperty","property","AutomationSerializer","FermataSerializer","MasterBarSerializer","toJson","fromJson","BendPointSerializer","NoteSerializer","map","BeatSerializer","VoiceSerializer","BarSerializer","ChordSerializer","TuningSerializer","StaffSerializer","PlaybackInformationSerializer","InstrumentArticulationSerializer","TrackSerializer","RenderStylesheetSerializer","ScoreSerializer","CoreSettingsSerializer","scriptFile","fontDirectory","tex","enableLazyLoading","engine","useWorkers","includeNoteBounds","RenderingResourcesSerializer","DisplaySettingsSerializer","NotationSettingsSerializer","ImporterSettingsSerializer","VibratoPlaybackSettingsSerializer","SlidePlaybackSettingsSerializer","PlayerSettingsSerializer","SettingsSerializer","JsonConverter","_","fromEntries","mv","isView","scoreToJsObject","JSON","stringify","jsonReplacer","jsObjectToScore","jsObject","settingsToJsObject","jsObjectToSettings","midi2","midiEvents","midiEvent2","jsObjectToMidiEvent","midiEventToJsObject","AlphaSynthWorkerSynthOutput","preferredSampleRate","_worker","Environment","globalThis","addEventListener","handleMessage","cmd","CmdOutputSampleRequest","CmdOutputSamplesPlayed","postMessage","CmdOutputPrefix","CmdOutputAddSamples","CmdOutputPlay","CmdOutputPause","CmdOutputResetSamples","AlphaSynthWebWorker","main","_main","_player","onPositionChanged","onPlayerStateChanged","onFinished","onSoundFontLoaded","onSoundFontLoadFailed","onMidiLoaded","onMidiLoadFailed","onReadyForPlayback","onMidiEventsPlayed","alphaSynthWebWorker","countInVolume","midiEventsPlayedFilter","playPause","playOneTimeMidiFile","jsObjectToMidiFile","loadSoundFont","resetSoundFonts","loadMidiFile","setChannelMute","setChannelSolo","setChannelVolume","serializeException","stack","FontSizes","FontSizeLookupTables","isRunningInWorker","canvas","document","measureContext","getContext","measureText","dataSize","generateFontLookup","stringSize","Georgia","Arial","ControlChars","RenderFinishedEventArgs","totalWidth","totalHeight","firstMasterBarIndex","lastMasterBarIndex","renderResult","BarBounds","bounds","barBounds","masterBarBounds","realBounds","BeatBounds","beatBounds","bottom","noteHeadBounds","MasterBarBounds","isFirstOfLine","findBeatAtPos","staveGroupBounds","boundsLookup","NoteBounds","StaveGroupBounds","BoundsLookup","_masterBarLookup","_currentStaveGroup","staveGroups","visualBounds","boundsToJson","lineAlignedBounds","bb","bbd","beatIndex","nd","lookup","staveGroup","sg","addStaveGroup","bd","findBeat","staveGroupIndex","middle","findBarAtPos","findNoteAtPos","ScoreRenderer","_currentLayoutMode","_currentRenderEngine","_renderedTracks","preRender","renderFinished","partialRenderFinished","postRenderFinished","recreateCanvas","recreateLayout","getRenderEngineFactory","createCanvas","getLayoutEngineFactory","createLayout","trackIndexes","lineWidth","layoutAndRender","supportsResize","resize","renderAnnotation","onRenderFinished","AlphaTabWebWorker","alphaTabWebWorker","_renderer","resizeRender","updateFontSizes","fontSizes","renderMultiple","updateSettings","renderScore","Html5Canvas","_canvas","_color","_font","_lineWidth","fontElement","add","body","appendChild","getComputedStyle","_musicFont","_measureCanvas","_measureContext","textBaseline","HighDpiFactor","_context","strokeStyle","fillStyle","fillRect","strokeRect","beginPath","closePath","moveTo","lineTo","cpx","cpy","quadraticCurveTo","cp1x","cp1y","cp2x","cp2y","bezierCurveTo","radius","arc","stroke","textAlign","Left","Center","Right","fillText","centerAtPosition","fillMusicFontSymbolText","baseLine","centerX","centerY","angle","save","translate","rotate","restore","AlphaSynthMidiFileHandler","_midiFile","denominatorIndex","addEvent","SystemExclusive","dynamicValue","velocity","dynamicToVelocity","makeCommand","fixValue","tempoInUsq","EndOfTrack","BeatTickLookup","_highlightedBeats","isEmptyBar","beatsToHighlight","MidiPlaybackController","_repeatStartIndex","_repeatNumber","_repeatOpen","shouldPlay","masterBarAlternateEndings","masterBarRepeatCount","MasterBarTickLookup","MidiTickLookupFindBeatResult","MidiTickLookup","_currentMasterBar","masterBarLookup","activeBeats","newActiveBeats","activeBeat","highlightBeat","findMasterBar","trackLookup","ticksToMillis","fallback","MidiNoteDuration","noteOnly","untilTieOrSlideEnd","letRingEnd","TripletFeelDurations","firstBeatDuration","secondBeatStartOffset","secondBeatDuration","MidiFileGenerator","handler","_currentTempo","_currentBarRepeatLookup","_programsPerChannel","tickLookup","_currentTripletFeel","_settings","_handler","generateTrack","processCurrent","generateMasterBar","generateBar","moveNext","finishTrack","generateChannel","addProgramChange","toChannelShort","addControlChange","VolumeCoarse","PanCoarse","ExpressionControllerCoarse","RegisteredParameterFine","RegisteredParameterCourse","DataEntryFine","DataEntryCoarse","PitchBendRangeInSemitones","addTimeSignature","addTempo","barStartTick","playbackBar","getPlaybackBar","generateVoice","realBar","generateBeat","beatStart","audioDuration","calculateTripletFeelInfo","beatLookup","realTickOffset","absolutePlaybackStart","generateAutomation","addRest","brushInfo","getBrushInfo","generateNote","phaseLength","bendAmplitude","generateVibratorWithParams","addBend","initialDuration","interval","brushOffset","noteStart","noteDuration","getNoteDuration","getDynamicValue","initialBend","getPitchWheel","addNoteBend","generateFadeIn","isTrill","isTremolo","generateTremoloPicking","generateBend","generateWhammy","generateSlide","generateVibrato","noteSoundDuration","generateTrill","durationWithEffects","applyStaticDuration","DefaultDurationDead","DefaultDurationPalmMute","endNote","tieDestinationDuration","slideTargetDuration","lastLetRingBeat","maxDuration","hasNoteOnString","maximum","endVolume","volumeFactor","tickStep","steps","resolution","phaseHalf","noteEnd","phase","phaseDuration","bend","sin","bendValue","PitchValuePerSemitone","playedBendPoints","simpleSlideDurationOffset","shiftSlideDurationOffset","dy","generateWhammyOrBend","finalBendValue","millisToTicks","bendDuration","generateSongBookWhammyOrBend","preBendValue","bendAtBeginning","bendValues","ticksBetweenPoints","currentBendValue","nextBendValue","generateBendValues","whammyDuration","preDiveValue","ticksPerPosition","nextPoint","millisBetweenPoints","numberOfSemitones","numberOfSteps","MinBreakpointsPerSemitone","MillisecondsPerBreakpoint","ticksPerBreakpoint","pitchPerBreakpoint","round","trillKey","trillFret","trillLength","realKey","tpLength","Int32Array","stringUsed","brushMove","brushIncrement","startMove","volumeCoarse","prepareSingleBeat","PlaybackRange","Glyph","renderer","cx","cy","EffectGlyph","nextGlyph","previousGlyph","MusicFontGlyph","glyphScale","fillMusicFontSymbol","NoteHeadGlyph","isGrace","GraceScale","getSymbol","_isGrace","_duration","QuarterNoteHeadWidth","NoteHeadHeight","FlagGlyph","FlagEighthUp","FlagSixteenthUp","FlagThirtySecondUp","FlagSixtyFourthUp","FlagOneHundredTwentyEighthUp","FlagTwoHundredFiftySixthUp","FlagEighthDown","FlagSixteenthDown","FlagThirtySecondDown","FlagSixtyFourthDown","FlagOneHundredTwentyEighthDown","FlagWidth","BeatContainerGlyph","voiceContainer","ties","minWidth","onNotes","layoutings","preBeatStretch","onTimeX","GraceBeatPadding","postBeatStretch","helper","helpers","getBeamingHelperForBeat","hasFlag","tie","addBeatSpring","setPreBeatSize","preNotes","setOnBeatSize","setBeatCenterX","getBeatCenterX","getPreBeatSize","getOnBeatSize","updateBeamingHelper","updateWidth","container","doLayout","createTies","beamingHelper","tieWidth","beatWidth","isEmptyGlyph","beginGroup","getGroupId","paint","staffX","staffY","endGroup","beatBoundings","buildBoundingsLookup","ResizeEventArgs","oldWidth","newWidth","causeIssue","SelectionInfo","AlphaTabApiBase","uiFacade","_startTime","_trackIndexes","_tickCache","_cursorWrapper","_barCursor","_beatCursor","_selectionWrapper","_previousTick","_playerState","_currentBeat","_previousStateForCursor","_previousCursorCache","_lastScroll","playedBeatChanged","_beatMouseDown","_selectionStart","_selectionEnd","beatMouseDown","beatMouseMove","beatMouseUp","scoreLoaded","renderStarted","playerReady","playerFinished","midiLoad","playerStateChanged","playerPositionChanged","rootContainer","canvasElement","createCanvasElement","throttle","triggerResize","resizeThrottle","areWorkersSupported","supportsWorkers","createWorkerRenderer","initialResizeEventInfo","onResize","onRenderStarted","renderingResult","onPostRenderFinished","appendRenderResult","onError","setupPlayer","setupClickHandling","beginInvoke","initialRender","destroy","destroyPlayer","scoreData","internalRenderTracks","General","applyPitchOffsets","onScoreLoaded","loadMidiForScore","resizeEventInfo","rootContainerBecameVisible","beginAppendRenderResults","fromString","init","readScore","canRender","canRenderChanged","updateSelectionCursor","destroyCursors","createWorkerPlayer","onPlayerReady","onPlayerPositionChanged","onPlayerFinished","setupCursors","generator","generate","onMidiLoad","generateSingleBeat","generateSingleNote","cursors","createCursors","cursorWrapper","barCursor","beatCursor","selectionWrapper","cursorUpdateTick","tickCache","getMasterBarStart","cursorUpdateBeat","previousCache","previousState","barBoundings","stopAnimation","removeHighlights","highlight","highlightElements","nextBeatX","nextBeatBoundings","transitionToX","Off","getScrollContainer","isVertical","vertical","elementOffset","getOffset","scrollToY","OffScreen","elementBottom","scrollTop","scrollLeft","scrollToX","elementRight","onPlayedBeatChanged","triggerEvent","originalEvent","cursorSelectRange","realMasterBarStart","realMasterBarEnd","range","startBeat","endBeat","selectionStart","selectionEnd","mouseDown","isLeftMouseButton","preventDefault","relX","getX","relY","getY","getBeatAtPos","onBeatMouseDown","mouseMove","onBeatMouseMove","mouseUp","onBeatMouseUp","startX","endX","staffStartX","staffEndX","startSelection","createSelectionElement","staffStartIndex","staffEndIndex","staffBounds","middleSelection","endSelection","selection","FileLoadError","xhr","ScoreLoader","success","XMLHttpRequest","responseType","onreadystatechange","readyState","DONE","response","loadScoreFromBytes","statusText","responseText","send","importers","buildImporters","BrowserMouseEventArgs","mouseEvent","button","relativeTo","relativeToElement","getBoundingClientRect","ownerDocument","defaultView","pageXOffset","pageX","pageYOffset","pageY","HtmlElementContainer","_resizeListeners","off","resizeObserver","observe","removeEventListener","unobserve","getClientRects","transitionDuration","innerHTML","ResizeObserver","CustomEvent","detail","FontLoadingChecker","_isStarted","isFontLoaded","fontLoaded","_family","failCounter","failCounterId","setInterval","checkFont","fonts","clearInterval","setTimeout","CircularSampleBuffer","_writePosition","_readPosition","samplesWritten","writeToEnd","samplesRead","readToEnd","AlphaSynthWebAudioOutput","_audioNode","_outputBuffer","PreferredSampleRate","patchIosSampleRate","_circularBuffer","BufferCount","createAudioContext","ctx","resume","ua","navigator","createBuffer","dummy","createBufferSource","connect","disconnect","close","AudioContext","webkitAudioContext","createScriptProcessor","onaudioprocess","generateSound","requestBuffers","loop","getChannelData","AlphaSynthWebWorkerApi","alphaSynthScriptFile","_workerIsReadyForPlayback","_workerIsReady","_outputIsReady","_masterVolume","_playbackSpeed","_isLooping","_playbackRange","onOutputReady","onOutputSamplesPlayed","onOutputSampleRequest","script","blob","Blob","_synth","Worker","URL","createObjectURL","e2","handleWorkerMessage","terminate","midiFileToJsObject","url","progress","request","onload","onerror","onprogress","loaded","total","ProgressEventArgs","checkReady","AlphaTabWorkerScoreRenderer","api","_width","_api","serializeSettingsForWorker","Cursors","BrowserUiFacade","rootElement","_fontCheckers","_contents","_file","_totalResultCount","_initialTrackIndexes","bravuraFontChecker","onFontLoaded","_intersectionObserver","IntersectionObserver","onElementVisibilityChanged","threshold","areAllFontsLoaded","checkForFontAvailability","isAnyNotLoaded","checker","isIntersecting","htmlElement","dataset","replacePlaceholder","dataAttributes","getDataAttributes","setupFontCheckers","parseTracks","createStyleElement","registerFontChecker","createEvent","originalMouseEvent","initCustomEvent","jquery","loadScoreAsync","loadSoundFontFromUrl","elementDocument","tracksData","stringValue","attr","nodeName","keyParts","nodeValue","placeholder","childElementCount","replaceChild","removeChild","lastChild","outerHTML","parentNode","supportsWebAudio","action","groupId","elementsToHighlight","getElementsByClassName","remove","querySelector","zIndex","pointerEvents","insertBefore","scrollContainer","scrollElementOffset","scrollingElement","documentElement","scrollTargetY","internalScrollToY","internalScrollToX","startY","diff","percent","scrollTargetX","AlphaTabApi","options","soundFontLoad","browser","additionalSettings","preview","a4","Horizontal","dualScreenLeft","dualScreenTop","screenWidth","innerWidth","clientWidth","screen","screenHeight","innerHeight","clientHeight","resizeTo","focus","alphaTab","print","renderTracks","binary","toBinary","dlLink","download","trackList","trackIndexesToTracks","changeTrackMute","changeTrackSolo","changeTrackVolume","JQueryAlphaTab","_initListeners","method","jElement","jQuery","apiMethod","realArgs","listener","removeData","playerState","selector","SvgCanvas","_currentPath","_currentPathIsEmpty","identifier","cp1X","cp1Y","cp2X","cp2Y","getSvgBaseLine","getSvgTextAlignment","escapeText","measureString","CssFontSvgCanvas","BarRendererFactory","isInAccolade","isRelevantForBoundsLookup","hideOnMultiTrack","hideOnPercussionTrack","GlyphGroup","glyphs","LeftToRightLayoutingGlyphGroup","addGlyph","VoiceContainerGlyph","beatGlyphs","tupletGroups","force","layoutingInfo","spaceToForce","scaleToForce","calculateVoiceWidth","positions","buildOnTimePositions","currentBeatGlyph","graceDisplayStart","graceGroupId","graceSprings","allGraceRods","graceTargetPreBeat","springs","preBeatWidth","postSpringWidth","graceBeatWidth","lastGraceSpring","graceSpring","incompleteGraceRods","relativeOffset","preSpringWidth","scaleToWidth","updateVoiceSize","registerLayoutingInfo","applyLayoutingInfo","minStretchForce","bg","KeySizeBeat","BeatLines","maxLine","minLine","AccidentalHelper","barRenderer","_registeredAccidentals","_appliedScoreLines","_appliedScoreLinesByValue","_notesByValue","_beatLines","maxLineBeat","minLineBeat","_barRenderer","_bar","displayValue","getNoteValue","quarterBend","hasQuarterToneOffset","getAccidental","relatedBeat","isHelperNote","getPercussionLine","calculateNoteLine","accidentalToSet","ksi","accidentalForKeySignature","Sharp","hasKeySignatureAccidentalSetForNote","KeySignatureLookup","hasNoteAccidentalWithinOctave","AccidentalNotes","NaturalQuarterNoteUp","SharpQuarterNoteUp","FlatQuarterNoteUp","DoubleSharp","DoubleFlat","skipAccidental","previousRenderer","tieOriginLine","accidentalHelper","getNoteLine","registerLine","OctaveSteps","StepsPerOctave","stepList","keySignatureIsSharp","keySignatureIsNatural","SharpNoteSteps","FlatNoteSteps","rawValue","searchForNote","BeatLinePositions","up","down","BeamingHelperDrawInfo","endY","BeamingHelper","_beatLineXPositions","_firstNonRestBeat","_lastNonRestBeat","shortestDuration","fingeringCount","_firstBeatLowestNoteCompareValue","_firstBeatHighestNoteCompareValue","_lastBeatLowestNoteCompareValue","_lastBeatHighestNoteCompareValue","lowestNoteInHelper","_lowestNoteCompareValueInHelper","highestNoteInHelper","_highestNoteCompareValueInHelper","minRestLine","beatOfMinRestLine","maxRestLine","beatOfMaxRestLine","drawingInfos","_staff","hasBeatLineX","getOrCreateBeatPositions","getBeatLineX","calculateDirection","invert","highestNotePosition","getNoteY","lowestNotePosition","avg","middleYPosition","completeBeamingHelper","aboveRest","belowRest","offsets","computeLineHeightsForRest","canJoin","ForceSplitToNext","ForceMergeWithNext","isRestBeamHelper","checkNote","lowestValueForNote","highestValueForNote","m1","m2","start1","start2","canJoinDuration","divisionLength","division1","division2","getIndex","ReservedLayoutAreaSlot","topY","bottomY","ReservedLayoutArea","slots","BarCollisionHelper","reservedLayoutAreasByDisplayTime","restDurationsByDisplayTime","minY","maxY","addSlot","registerRest","currentY","linesToPixel","restSizes","oldRestTopY","oldRestBottomY","newRestTopY","reservedSlots","hasCollision","slot","newRestBottomY","staveSpace","distanceInLines","ceil","BarHelpers","beamHelpers","beamHelperLookup","collisionHelper","currentBeamHelper","currentGraceBeamHelper","helperForBeat","checkBeat","BarRendererBase","_preBeatGlyphs","_voiceContainers","_postBeatGlyphs","topOverflow","bottomOverflow","isLinkedToPrevious","canWrap","_wasFirstOfLine","_appliedLayoutingInfo","isFinalized","topPadding","bottomPadding","scoreRenderer","getRendererForBar","staveId","containerWidth","lastBarIndex","preSize","preBeatSize","postSize","postBeatSize","voiceEnd","newEnd","hasVoiceContainer","createPreBeatGlyphs","createBeatGlyphs","createPostBeatGlyphs","updateSizes","registerStaffTop","registerStaffBottom","voiceContainers","beatGlyphsStart","postBeatStart","getVoiceContainer","getBeatContainer","paintBackground","bc","createVoiceGlyphs","requestedPosition","PreNotes","OnNotes","MiddleNotes","Stem","PostNotes","EndBeat","getNoteX","getOnNotesGlyphForBeat","NaN","Repeat1Bar","Repeat2Bars","LineSpacing","StemWidth","StaffLineThickness","BeamThickness","BeamSpacing","EffectBand","_uniqueEffectGlyphs","_effectGlyphs","previousBand","shouldCreateGlyph","isBefore","isAfter","sizingMode","SingleOnBeatToEnd","GroupedOnBeatToEnd","glyph","createOrResizeGlyph","sizing","FullBar","createNewGlyph","SinglePreBeat","SingleOnBeat","GroupedOnBeat","singleSizing","prevBeat","prevEffect","getBand","effectId","voiceGlyphs","newGlyph","canExpand","alignGlyph","EffectBandSlotShared","uniqueEffectId","EffectBandSlot","bands","shared","effectBand","canShareBand","band","EffectBandSizingInfo","_effectSlot","canBeUsed","newSlot","freeSlot","getOrCreateSlot","update","BeatGlyphBase","BeatOnNoteGlyphBase","EffectBarRenderer","infos","_bands","_bandLookup","sizingInfo","_infos","updateHeight","finalizeRenderer","alignGlyphs","register","addBeatGlyph","createGlyph","EffectBarRendererFactory","_staffId","isNotationElementVisible","notationElement","AlternateEndingsGlyph","_endingsString","_endings","Padding","endingsStrings","baseline","EffectBarRendererInfo","AlternateEndingsEffectInfo","EffectAlternateEndings","TextGlyph","_lines","old","CapoEffectInfo","EffectCapo","ChordsEffectInfo","EffectChordNames","hasChord","GroupedEffectGlyph","endPosition","forceGroupedRendering","endOnBarLine","isLinkedWithPrevious","isLinkedWithNext","paintNonGrouped","lastLinkedGlyph","endBeatRenderer","cxRenderer","calculateEndX","paintGrouped","getBeatX","CrescendoGlyph","_crescendo","CrescendoEffectInfo","EffectCrescendo","DynamicsGlyph","DynamicPPP","DynamicPP","DynamicPiano","DynamicMP","DynamicMF","DynamicForte","DynamicFF","DynamicFFF","DynamicsEffectInfo","EffectDynamics","internalShouldCreateGlyph","getPreviousDynamicsBeat","show","beatAtSamePos","getBeatAtPlaybackStart","FadeInGlyph","FadeInEffectInfo","EffectFadeIn","FermataGlyph","accentuation","FermataShortAbove","FermataAbove","FermataLongAbove","FermataEffectInfo","EffectFermata","FingeringEffectInfo","EffectFingering","isLeft","fingerToString","NoteEffectInfoBase","lastCreateInfo","shouldCreateGlyphForNote","LineRangedGlyph","label","_label","lineSpacing","textWidth","lineY","lineSize","lineX","LineTopPadding","LineTopOffset","LineSize","HarmonicsEffectInfo","_beat","_harmonicType","_effectId","EffectHarmonics","isHarmonic","harmonicToString","LetRingEffectInfo","EffectLetRing","LyricsGlyph","LyricsEffectInfo","EffectLyrics","MarkerEffectInfo","EffectMarker","isSectionStart","OttavaGlyph","aboveStaff","_ottava","_aboveStaff","paintOttava","QuindicesimaAlta","OttavaAlta","OttavaBassaVb","fillMusicFontSymbols","Quindicesima","OctaveBaselineM","OctaveBaselineB","OttaviaEffectInfo","EffectOttavia","PalmMuteEffectInfo","EffectPalmMute","PickSlideEffectInfo","EffectPickSlide","PickStrokeGlyph","PickStrokeEffectInfo","EffectPickStroke","BeatVibratoGlyph","_stepSize","_type","loops","SlightBeatVibratoEffectInfo","EffectSlightBeatVibrato","NoteVibratoGlyph","partialWaves","_scale","_symbol","_symbolSize","_partialWaves","symbolHeight","WiggleTrill","WiggleVibratoMediumFast","loopX","SlightNoteVibratoEffectInfo","EffectSlightNoteVibrato","TapEffectInfo","EffectTap","TempoGlyph","_tempo","NoteQuarterUp","TempoEffectInfo","EffectTempo","TextEffectInfo","EffectText","TrillGlyph","textw","waveScale","loopY","TrillEffectInfo","EffectTrill","TripletFeelGlyph","_tripletFeel","noteY","leftNoteX","rightNoteX","renderBarNote","NoteScale","Full","NoteSeparation","NoteEighthUp","renderTriplet","PartialRight","fillCircle","PartialLeft","noteScale","partialBarWidth","NoteHeight","BarSeparation","BarHeight","rightX","TripletFeelEffectInfo","EffectTripletFeel","WhammyBarEffectInfo","EffectWhammyBar","WideBeatVibratoEffectInfo","EffectWideBeatVibrato","WideNoteVibratoEffectInfo","EffectWideNoteVibrato","ChordDiagramGlyph","_textRow","_fretRow","_firstFretSpacing","_chord","FretSpacing","Frets","StringSpacing","stringSpacing","fretSpacing","circleRadius","CircleRadius","FretboardX","FretboardO","barreLookup","barreFret","xLeft","xRight","RowGlyphContainer","_glyphWidth","_align","RowContainerGlyph","_rows","row","addGlyphToRow","ChordDiagramContainerGlyph","chordDiagram","RenderStaff","_sharedLayoutData","barRenderers","staveTop","topSpacing","bottomSpacing","staveBottom","isFirstInAccolade","isLastInAccolade","modelStaff","reLayout","registerBarRenderer","create","lastBar","unregisterBarRenderer","difference","spacePerBar","startIndex","Spring","longestDuration","smallestDuration","springConstant","allDurations","BarLayoutingInfo","_timeSortedSprings","_xMin","_minTime","_onTimePositionsForce","_onTimePositions","_incompleteGraceRodsWidth","preBeatSizes","onBeatSizes","onBeatCenterX","voiceSize","totalSpringConstant","postSpringSize","spring","previousSpring","prevDuration","timeSorted","existingSpring","graceBeatSize","springWidth","addSpring","sp","calculateSpringConstants","sortedSprings","currentSpring","nextSpring","calculateSpringConstant","requiredSpace","requiredSpaceForce","updateMinStretchForce","_cx","_cy","minDuration","phi","MinDuration","MinDurationWidth","space","calculateWidth","springX","MasterBarsRenderers","renderers","StaveTrackGroup","stavesRelevantForBoundsLookup","firstStaffInAccolade","lastStaffInAccolade","StaveGroup","_allStaves","_firstStaffInAccolade","_lastStaffInAccolade","_accoladeSpacingCalculated","accoladeSpacing","isLast","masterBarsRenderers","calculateAccoladeSpacing","addBarRenderer","barLayoutingInfo","toRemove","revertLastBar","realWidth","TrackNames","AccoladeLabelSpacing","getStaveTrackGroup","staveTrackGroup","paintPartial","firstStart","lastEnd","acooladeX","barSize","barOffset","accoladeStart","accoladeEnd","spikeStartX","spikeEndX","finalizeStaff","lastStaff","visualTop","visualBottom","realTop","realBottom","lineTop","lineBottom","visualHeight","realHeight","masterBarBoundsLookup","TuningGlyph","trackLabel","_tuning","_trackLabel","createGlyphs","rowHeight","stringColumnWidth","circleScale","circleHeight","CircleNumberHeight","stringsPerColumn","currentX","GuitarString0","getTextForTuning","TuningContainerGlyph","tuningGlyph","ScoreLayout","_barRendererLookup","scoreInfoGlyphs","chordDiagrams","firstBarIndex","endBarIndex","createScoreInfoGlyphs","doLayoutAndRender","ScoreTitle","ScoreSubTitle","ScoreArtist","ScoreAlbum","ScoreWordsAndMusic","ScoreMusic","ScoreWords","fakeBarRenderer","GuitarTuning","addTuning","ChordDiagrams","hasScore","ScoreTab","TabMixed","Tab","profile","staveProfiles","canCreate","barRendererId","beginRender","endRender","HorizontalScreenLayoutPartialInfo","HorizontalScreenLayout","_group","_pagePadding","PagePadding","currentBarIndex","createEmptyStaveGroup","countPerPartial","partials","currentPartial","addBars","previousPartial","finalizeGroup","partial","renderX","getBarX","GroupSpacing","PageViewLayout","_groups","_allMasterBarRenderers","_barsFromPreviousGroup","layoutAndRenderScoreInfo","layoutAndRenderTunings","layoutAndRenderChordDiagrams","layoutAndRenderScore","oldHeight","resizeAndRenderScore","tuningHeight","centeredGlyphs","musicOrWords","musicOrWordsHeight","fitGroup","paintGroup","currentIndex","maxWidth","addMasterBarRenderers","createStaveGroup","endIndex","groupIsFull","reverted","AccidentalGlyph","accidentalType","getMusicSymbol","_accidentalType","AccidentalNatural","AccidentalSharp","AccidentalFlat","AccidentalQuarterToneNaturalArrowUp","AccidentalQuarterToneSharpArrowUp","AccidentalQuarterToneFlatArrowUp","AccidentalDoubleSharp","AccidentalDoubleFlat","BarNumberGlyph","_number","BarSeperatorGlyph","nextRenderer","blockWidth","ClefGlyph","_clef","_clefOttava","UnpitchedPercussionClef1","CClef","FClef","GClef","numberGlyph","Ottava","offsetY","offsetX","RepeatCloseGlyph","circleSize","dotOffset","RepeatCountGlyph","_count","oldAlign","RepeatOpenGlyph","_dotOffset","_circleSize","AccentuationGlyph","ArticAccentAbove","ArticMarcatoAbove","CircleGlyph","_size","DeadNoteHeadGlyph","DiamondNoteHeadGlyph","TieGlyph","forEnd","yOffset","startNoteRenderer","endNoteRenderer","tieDirection","shouldDraw","getBeamDirection","getStartX","getStartY","getEndX","getEndY","shouldDrawBendSlur","drawBendSlur","paintTie","getTieHeight","noteRenderer","x1","y1","x2","y2","normalVectorX","normalVectorY","slurText","BendSlurHeight","textOffset","GhostParenthesisGlyph","isOpen","_isOpen","GhostNoteInfo","GhostNoteContainerGlyph","_glyphs","sr","hasParenthesis","isTiedBend","addParenthesisOnLine","sizePerLine","getScoreHeight","getScoreY","ScoreNoteGlyphInfo","ScoreNoteChordGlyphBase","_noteHeadPadding","spacingChanged","upLineX","downLineX","displacedX","noteStartX","noteGlyph","noteLine","lastDisplaced","lastLine","anyDisplaced","displace","linePadding","hasTopOverflow","lY","hasBottomOverflow","TremoloPickingGlyph","Tremolo3","Tremolo2","Tremolo1","ScoreNoteChordGlyph","_noteGlyphLookup","_notes","_tremoloPicking","aboveBeatEffects","belowBeatEffects","TopWithStem","getStemSize","BottomWithStem","registerBeatLineX","baseNote","tremoloX","noteBounds","aboveBeatEffectsY","belowBeatEffectsY","belowEffectSpacing","aboveEffectSpacing","ScoreRestGlyph","RestLonga","RestDoubleWhole","RestWhole","RestHalf","RestQuarter","RestEighth","RestSixteenth","RestThirtySecond","RestSixtyFourth","RestOneHundredTwentyEighth","RestTwoHundredFiftySixth","AccidentalColumnInfo","AccidentalGroupGlyph","columns","accidentalHeight","gColumn","column","BendNoteHeadGroupGlyph","showParenthesis","_showParenthesis","_noteValueLookup","_accidentals","_preNoteParenthesis","_postNoteParenthesis","noteHeadOffset","noteHeadGlyph","applyAccidentalForValue","getNoteLineForValue","ElementPadding","ScoreHelperNotesBaseGlyph","BendNoteHeads","noteHeads","getBeatDirection","EndPadding","TabBendRenderPoint","lineValue","TabBendGlyph","_renderPoints","_preBendMinValue","_bendMiddleMinValue","_bendEndMinValue","_bendEndContinuedMinValue","_releaseMinValue","_releaseContinuedMinValue","_maxBendValue","renderPoints","createRenderingPoints","bendHeight","BendValueHeight","registerOverflowTop","renderingPoints","bendPoint","isMultiBeatBend","endNoteHasBend","nextNote","postBeatGlyphsStart","ArrowSize","dX","firstPt","secondPt","paintBend","overflowOffset","lineOffset","bendValueHeight","arrowOffset","arrowSize","dashX","dashSize","DashSize","dashes","dV","getFractionSign","TabWhammyBarGlyph","_isSimpleDip","minValue","maxValue","topOffset","bottomOffset","currentOffset","getSharedLayoutData","TopOffsetSharedDataKey","setSharedLayoutData","PerHalfSize","endXPositionType","dx","zeroY","nextPt","isFirst","paintWhammy","dashEndY","dashStartY","dashEndX","dashStartX","ScoreWhammyBarGlyph","whammyMode","endGlyphs","lastWhammyPoint","getBendNoteValue","simpleWhammyOverflow","SimpleDipHeight","SimpleDipPadding","middleGlyphs","middleBendPoint","lastBendPoint","beatDirection","getTieDirection","textalign","heightOffset","endValue","bendTie","containsNoteValue","getNoteValueY","simpleStartX","simpleEndX","middleX","simpleStartY","simpleEndY","middleValue","middleY","preX","getPreNotesGlyphForBeat","prebendNoteHeadOffset","preY","SpacingGlyph","PercussionNoteHeadGlyph","_articulation","ArticStaccatoAboveGlyph","PictEdgeOfCymbalGlyph","GuitarGolpeGlyph","ScoreBeatGlyph","_collisionOffset","_skipPaint","restGlyph","applyRestCollisionOffset","existingRests","restTop","restBottom","reserveBeatSlot","applyRest","createBeatDot","ghost","createNoteGlyph","addParenthesis","whammy","createNoteHeadGlyph","addNoteGlyph","harmonicFret","effectContainer","ScoreBrushGlyph","scoreBarRenderer","arrowX","waveOffset","lineStartY","lineEndY","beginRotate","endRotate","ScoreBeatPreNotesGlyph","_prebends","accidentals","createAccidentalGlyph","applyAccidental","DigitGlyph","digit","_digit","getDigitWidth","TimeSig0","TimeSig1","TimeSig2","TimeSig3","TimeSig4","TimeSig5","TimeSig6","TimeSig7","TimeSig8","TimeSig9","NumberGlyph","gl","numberHeight","TimeSignatureGlyph","isCommon","_numerator","_denominator","_isCommon","common","commonScale","TimeSigCutCommon","TimeSigCommon","numberScale","ScoreTimeSignatureGlyph","ScoreBendGlyph","_endNoteGlyph","_middleNoteGlyph","endBeatX","directionBeat","noteValueToDraw","ScoreLegatoGlyph","endNoteScoreRenderer","startBeamDirection","endBeamDirection","ScoreSlideLineGlyph","inType","outType","startNote","_outType","_inType","_startNote","_parent","paintSlideIn","drawSlideOut","sizeX","accidentalsWidth","getAccidentalsWidth","paintSlideLine","startOffsetX","endOffsetX","waves","asin","ScoreSlurGlyph","_endNote","isStartCentered","isEndCentered","isEndOnStem","ScoreTieGlyph","ScoreBeatContainerGlyph","_bend","_effectSlur","_effectEndSlur","isLegatoDestination","isSlurOrigin","slurOrigin","isEffectSlurDestination","addBends","ScoreBarRenderer","_firstLineY","_startSpacing","glyphOverflow","updateFirstLineY","fullLineHeight","actualLineHeight","whammyOffset","maxNoteY","maxNoteHelper","minNoteY","minNoteHelper","registerOverflowBottom","paintBeams","paintTuplets","paintTupletHelper","paintBeamHelper","paintFlag","paintBar","oldBaseLine","den","firstNonRestBeat","lastNonRestBeat","isRestOnly","firstBeamingHelper","lastBeamingHelper","firstNonRestBeamingHelper","lastNonRestBeamingHelper","calculateBeamYWithDirection","sw","offset1X","offset2X","offset1Y","offset2Y","tupletX","tupletY","getFlagStemSize","getBarStemSize","computeLineWithoutAccidentals","minMax","getBeatMinMaxY","stemSize","drawingInfo","getMinLine","getMaxLine","maxDistance","yNeededForHighestNote","beatOfHighestNote","yGivenByCurrentValues","calcY","yNeededForLowestNote","beatOfLowestNote","scaleMod","barSpacing","yNeededForRest","beatLineX","calculateBeamY","fingeringY","paintFingering","brokenBarOffset","barStart","barStartX","barEndX","barStartY","barEndY","barY","isFullBarJoin","paintSingleBar","beamY","hasLine","graceSizeY","graceSizeX","noteList","addPreBeatGlyph","createStartSpacing","createKeySignatureGlyphs","createTimeSignatureGlyphs","addPostBeatGlyph","offsetClef","currentKey","previousKey","newLines","newGlyphs","SharpKsSteps","FlatKsSteps","naturalizeSymbols","previousKeyPositions","paintSimileMark","StaffId","ScoreBarRendererFactory","TabSlideLineGlyph","paintSlideOut","sizeY","endXOffset","TabTieGlyph","getBeamDirectionForNote","TabSlurGlyph","forSlide","_direction","_forSlide","slurId","isSlurRendered","TabBeatContainerGlyph","_effectSlurs","showTiedNotes","isHammerPullDestination","tapSlur","expanded","slur","tryExpand","effectSlur","NoteNumberGlyph","_noteString","_trillNoteString","_trillNoteStringWidth","noteStringWidth","_note","hasTrill","prevFont","TabNoteChordGlyph","notesPerString","tabHeight","effectY","effectSpacing","isPositionFrom","TabRestGlyph","isVisibleRest","_isVisibleRest","TabBeatGlyph","noteNumbers","tabRenderer","getTabY","showRests","tr","noteNumberGlyph","TabBrushGlyph","tabBarRenderer","TabBeatPreNotesGlyph","TabClefGlyph","FourStringTabClef","SixStringTabClef","TabTimeSignatureGlyph","TabBarRenderer","_tupletSize","showTimeSignature","TabLineSpacing","numberOverflow","hasTuplets","center","getTabHeight","tabNotes","vc","noteNumber","ShowWithBeams","paintFooter","startGlyph","paintBeamingStem","holes","bottomHole","TabBarRendererFactory","_showTimeSignature","_showRests","_showTiedNotes","LeftHandTapGlyph","strokeCircle","LeftHandTapEffectInfo","DrawObject","noteRange","TextDrawObject","frame","fontFace","GuitarDrawObject","SlurDrawObject","WavyLineDrawObject","TupletBracketDrawObject","WedgeDrawObject","decrescendo","VoltaDrawObject","allNumbers","firstNumber","lastNumber","OctaveClefDrawObject","TrillDrawObject","StaffLayout","defaultClef","description","percussion","Bracket","curly","CapellaVoiceState","currentBarComplete","currentBarDuration","currentPosition","voiceStemDir","repeatEnd","CapellaParser","_beamingMode","_isFirstSystem","_staffLookup","_brackets","_staffLayoutLookup","_staffLayouts","_timeSignature","_voiceStates","_galleryObjects","_voiceCounts","_slurs","trackVoiceCount","addNewBar","applyEffectRange","cre","effects","applyEffect","parseInfo","parseLayout","parseGallery","parsePageObjects","parseSystems","parseLayoutStaves","parseBrackets","curlyBrackets","currentBracketIndex","currentTrack","staffLayout","parseBracket","bracket","parseStaffLayout","parseSystem","systemElement","_currentStaffLayout","currentBar","_currentVoiceState","_currentBar","getOrCreateBar","ensureVoice","voiceStateKey","noteObjects","parseClefOttava","parseBarDrawObject","chordBeat","initFromPreviousBeat","_currentVoice","parseChord","restBeat","parseRestDurations","currentVoice","getLastBeat","previousVoice","parseBeatDrawObject","parseHeads","parseHead","parseDrawObj","applyVolta","durationBase","fullBars","parseDurationValue","tripartiteMultiplicator","prolongDiff","power","parseText","parseGuitar","parseSlur","parseWavyLine","parseTupletBracket","parseWedge","parseVolta","parseOctaveClef","parseTrill","Ellipse","Circle","CapellaImporter","capellaParser","ResizeObserverPolyfill","callback","_targets","_callback","onWindowResize","contentRect","borderBoxSize","contentBoxSize","IntersectionObserverPolyfill","_elements","timer","oldCheck","_check","LayoutEngineFactory","RenderEngineFactory","styleElement","getElementById","css","MusicFontSize","_globalThis","timeoutId","clearTimeout","currentScript","each","_i","renderEngines","layoutEngines","createPlatformSpecificRenderEngines","tabEffectInfos","engines","registerJQueryPlugin","devicePixelRatio","detectScriptFile","createDefaultRenderEngines","createDefaultLayoutEngines","createDefaultStaveProfiles","platformInit","ALPHATAB_ROOT","ensureFullUrl","appendScriptName","ALPHATAB_FONT","lastSlash","relativeUrl","location","protocol","hostname","directory","pathname","VersionInfo","date","ScoreExporter","writable","writeScore","GpifMidiProgramInfo","instrumentSetName","instrumentSetType","Piano","GpifWriter","_rhythmIdLookup","xmlDocument","writeDom","gpif","addElement","gpRevision","writeScoreNode","writeMasterTrackNode","writeAudioTracksNode","writeTracksNode","writeMasterBarsNode","rhythms","writeBarNode","writeVoiceNode","writeBeatNode","writeNoteNode","noteNode","writeNoteProperties","properties","writeConcertPitch","writeTransposedPitch","writeSimplePropertyNode","writeBend","writePitch","writePitchForValue","updateParts","ForceNone","writeStandardBend","bendMiddle1","bendMiddle2","beatNode","setCData","writeWhammyNode","legato","writeRhythm","writeBeatProperties","writeBeatXProperties","writeBeatLyrics","lyricsNode","beatProperties","writeSimpleXPropertyNode","rhythmNode","tupletNode","writeStandardWhammy","whammyNode","scoreNode","masterTrackNode","initialTempoAutomation","tracksNode","writeTrackNode","trackNode","getIconId","writeInstrumentSetNode","writeTransposeNode","writeRseNode","writeMidiConnectionNode","writeLyricsNode","writeStavesNode","writeSoundsAndAutomations","DrumKitProgramInfo","MidiProgramInfoLookup","SteelGuitar","soundsNode","automationsNode","soundNode","automationNode","trackSoundName","trackSoundPath","trackSoundRole","trackSoundWritten","soundAutomation","isTrackSound","writeSoundAndAutomation","midiConnection","rse","channelStrip","channelStripParameters","writeStaffNode","staffNode","tuningProperty","tuningName","writeDiagramCollection","diagramCollectionProperty","diagramCollectionItems","diagramCollectionItem","frets","fretToStrings","chordFret","fretNode","chordString","fingering","fingers","fretStrings","fretString","chordNode","keyNoteNode","bassNoteNode","degree1Node","degree2Node","propertyValueTagName","propertyValue","propertyValueTag","propertyId","newLyrics","octaveTranspose","chromaticTranspose","instrumentSet","firstStaff","articulations","currentElementName","currentArticulations","counterPerType","currentElement","articulationNode","mapMusicSymbol","programInfo","writeMasterBarNode","masterBarNode","repeat","remainingBits","bit","writeFermatas","fermatas","writeFermata","fermataNode","barNode","voiceNode","PitchedIdiophone","Banjo","Woodwind","ClassicalGuitar","ElectricGuitar","Bass","Synth","Strings","Membraphone","Vocal","Brass","Reed","Fx","Ukulele","Idiophone","PercussionKit","Crc32","_checkValue","CrcInit","poly","Uint32Array","crc","Crc32Lookup","buildCrc32Lookup","DeflaterConstants","MAX_WBITS","WSIZE","WMASK","MIN_MATCH","MAX_MATCH","DEFAULT_MEM_LEVEL","PENDING_BUF_SIZE","HASH_BITS","HASH_SIZE","HASH_SHIFT","HASH_MASK","MIN_LOOKAHEAD","MAX_DIST","Tree","dh","elems","minCodes","maxLength","numCodes","codes","huffman","minNumCodes","freqs","bitLengthCounts","numSymbols","heap","heapLen","maxCode","freq","ppos","numLeafs","childs","numNodes","first","last","lastVal","second","mindepth","buildLength","bitLength","incrBitLen","nodePtr","childPtr","blTree","max_count","min_count","curlen","nextlen","Repeat3To6","Repeat3To10","Repeat11To138","staticCodes","staticLengths","nextCode","DeflaterHuffman","bitReverse","maxCount","minCount","writeSymbol","pending","writeBits","last_lit","extra_bits","literalTree","LITERAL_NUM","distTree","DIST_NUM","BITLEN_NUM","d_buf","BUFSIZE","l_buf","staticLCodes","staticLLength","staticDCodes","staticDLength","toReverse","bit4Reverse","stored","storedOffset","storedLength","lastBlock","STORED_BLOCK","alignToByte","writeShort","writeBlock","EOF_SYMBOL","buildTree","calcBLFreq","blTreeCodes","BL_ORDER","opt_len","getEncodedLength","static_len","flushStoredBlock","STATIC_TREES","setStaticCodes","compressBlock","DYN_TREES","sendAllTrees","buildCodes","rank","writeTree","litlen","dist","lc","Lcode","dc","Dcode","distance","literal","staticInit","DeflaterEngine","maxChain","niceLength","goodLength","insertHashIndex","lookahead","inputBuf","inputOff","inputEnd","prevAvailable","matchStart","matchLen","inputCrc","head","blockStart","strstart","flush","fillWindow","canFlush","deflateSlow","isFlushed","tallyLit","flushBlock","slideWindow","prevMatch","prevLen","hashHead","insertString","findLongestMatch","TooFar","tallyDist","curMatch","scan","scanMax","chainLength","scan_end1","scan_end","hash","more","updateHash","PendingBuffer","bufferSize","_start","_end","bitCount","block","Deflater","_pending","_engine","needsInput","FinishedState","BusyState","setInput","origLength","deflate","IsFlushing","IsFinishing","FlushingState","neededbits","FinishingState","ZipCentralDirectoryHeader","localHeaderOffset","compressionMode","compressedSize","ZipWriter","_centralDirectoryHeaders","_deflater","_data","compressedData","compress","compressedDataArray","directoryHeader","bytesWritten","writeUInt16LE","writeInt16LE","fileNameBuffer","isNeedingInput","startOfCentralDirectory","writeCentralDirectoryHeader","endOfCentralDirectory","writeEndOfCentralDirectoryRecord","Gp7Exporter","gpifWriter","gpifXml","writeXml","writeForScore","writeEntry","exporter","model","rendering","synth","internalSort","IE_OR_EDGE","V8","WEBKIT","Uint16Array","nativeSort","ACCEPT_INCORRECT_ARGUMENTS","STABLE_SORT","mod","getSortCompare","comparefn","arrayLength","isArrayIteratorMethod","getIterator","getIteratorMethod","iteratorClose","Result","iterable","unboundFunction","iterator","iterFn","AS_ENTRIES","IS_ITERATOR","INTERRUPTED","condition","callFn","_arrayWithoutHoles","arr","_iterableToArray","iter","Symbol","_nonIterableSpread","_toConsumableArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","mixins","absolute","focused","for","ref","genChildren","$createElement","genMessage","setTextColor","baseMixins","errorCount","errorMessages","messages","readonly","rules","successMessages","validateOnBlur","errorBucket","hasColor","hasFocused","hasInput","isFocused","isResetting","lazyValue","valid","computedColor","isDark","hasError","internalErrorMessages","hasSuccess","internalSuccessMessages","externalError","hasMessages","validationTarget","hasState","shouldValidate","genInternalMessages","internalMessages","internalValue","isDisabled","form","isInteractive","isReadonly","validations","validationState","newVal","deep","$nextTick","beforeMount","created","beforeDestroy","unregister","resetValidation","validate","rule","inheritAttrs","appendIcon","backgroundColor","hideDetails","hint","loading","persistentHint","prependIcon","hasMouseDown","computedId","hasDetails","messagesToDisplay","hasHint","hasLabel","isDirty","isLabelActive","validation","validationResult","showDetails","beforeCreate","$options","genContent","genControl","genDefaultSlot","genIcon","extraData","eventName","hasListener","dark","light","cb","mouseup","genInputSlot","setBackgroundColor","mousedown","onMouseUp","genLabel","genMessages","scopedSlots","genSlot","genPrependSlot","genAppendSlot","onClick","onMouseDown","content","isGreater","mounted","onObserve","destroyed","loaderHeight","genProgress","VProgressLinear","indeterminate","inserted","binding","passive","unbind","Resize","composed","onVisible","dirtyTypes","appendOuterIcon","autofocus","clearable","clearIcon","counterValue","filled","fullWidth","outlined","prependInnerIcon","persistentPlaceholder","rounded","shaped","singleLine","soloInverted","suffix","badInput","labelWidth","prefixWidth","prependWidth","initialValue","isBooted","isClearing","computedCounterValue","hasCounter","isEnclosed","isSingle","labelPosition","labelValue","$vuetify","rtl","showLabel","hasOwnProperty","blur","clearableCallback","genPrependInnerSlot","genIconSlot","prepend","genClearIcon","genCounter","genFieldset","genLegend","span","domProps","genInput","listeners","inputAttrs","keydown","onKeyDown","modifiers","quiet","messagesNode","counterNode","genTextFieldSlot","genAffix","onBlur","onFocus","attachedRoot","$emit","onInput","setLabelWidth","scrollWidth","$el","setPrefixWidth","setPrependWidth","tryAutofocus","updateValue","chipGroup","closeIcon","closeLabel","draggable","filterIcon","pill","textColor","groupClasses","hasClose","breakingProps","genFilter","genClose","lang","chips","counterSizeString","counterString","hideInput","multiple","showSize","includes","smallChips","truncateLength","fileCount","internalArrayValue","reduce","base","truncatedText","hasChips","genChips","genSelectionText","genSelections","$scopedSlots","truncateText","charsKeepOneSide","integer","redefine","setGlobal","copyConstructorProperties","isForced","FORCED","targetProperty","sourceProperty","descriptor","TARGET","GLOBAL","STATIC","noTargetGet","sham","internalObjectKeys","enumBugKeys","hiddenKeys","maxHeight","minHeight","measurableStyles","notARegExp","correctIsRegExpLogic","searchString","$reduceRight","$toString","TO_STRING","RegExpPrototype","nativeToString","NOT_GENERIC","INCORRECT_NAME","rf","unsafe","definePropertyModule","CONSTRUCTOR_NAME","configurable","normalizeComponent","scriptExports","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","_scopeId","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","shadowRoot","_injectStyles","originalRender","existing","$slice","Int8Array","kind","innerResult","innerError","emptyObject","freeze","isUndef","isDef","isTrue","isFalse","isPrimitive","_toString","isPlainObject","isValidArrayIndex","isFinite","isPromise","catch","toNumber","makeMap","expectsLowerCase","isReservedAttribute","hasOwn","cached","hit","camelizeRE","camelize","capitalize","hyphenateRE","hyphenate","polyfillBind","boundFn","_length","nativeBind","ret","extend","_from","noop","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","every","getTime","keysA","keysB","looseIndexOf","once","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","config","optionMergeStrategies","silent","productionTip","devtools","performance","errorHandler","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","async","_lifecycleHooks","unicodeRegExp","isReserved","enumerable","bailRE","parsePath","segments","_isServer","hasProto","inBrowser","inWeex","WXEnvironment","platform","weexPlatform","UA","isIE","isIE9","isEdge","isIOS","isFF","nativeWatch","supportsPassive","opts","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","hasSymbol","Reflect","ownKeys","uid","Dep","subs","addSub","sub","removeSub","depend","addDep","notify","targetStack","pushTarget","popTarget","VNode","elm","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","componentInstance","isStatic","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","prototypeAccessors","defineProperties","createEmptyVNode","createTextVNode","cloneVNode","vnode","cloned","arrayProto","arrayMethods","methodsToPatch","ob","__ob__","observeArray","dep","arrayKeys","shouldObserve","toggleObserving","Observer","vmCount","protoAugment","copyAugment","walk","__proto__","asRootData","isExtensible","_isVue","defineReactive$$1","customSetter","shallow","getter","setter","childOb","dependArray","del","strats","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","dedupeHooks","hooks","mergeAssets","key$1","inject","provide","defaultStrat","normalizeProps","normalizeInject","normalized","normalizeDirectives","dirs","def$$1","mergeOptions","_base","extends","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","absent","booleanIndex","getTypeIndex","getPropDefaultValue","prevShouldObserve","_props","getType","functionTypeCheckRE","isSameType","expectedTypes","handleError","cur","$parent","errorCaptured","globalHandleError","invokeWithErrorHandling","_handled","logError","timerFunc","isUsingMicroTask","callbacks","flushCallbacks","copies","MutationObserver","setImmediate","observer","createTextNode","characterData","nextTick","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","once$$1","createFnInvoker","fns","invoker","arguments$1","updateListeners","oldOn","remove$$1","createOnceHandler","params","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","extractPropsFromVNodeData","altKey","checkProp","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","shift","_isVList","initProvide","_provided","initInjections","resolveInject","provideKey","provideDefault","resolveSlots","name$1","isWhitespace","normalizeScopedSlots","normalSlots","prevSlots","hasNormalSlots","isStable","$stable","$key","_normalized","$hasNormal","normalizeScopedSlot","key$2","proxyNormalSlot","proxy","renderList","renderSlot","fallbackRender","bindObject","nodes","scopedSlotFn","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","camelizedKey","hyphenatedKey","$event","renderStatic","isInFor","_staticTrees","tree","_renderProxy","markStatic","markOnce","markStaticNode","bindObjectListeners","ours","resolveScopedSlots","hasDynamicKeys","contentHashKey","bindDynamicKeys","baseObj","prependModifier","installRenderHelpers","_o","_n","_s","_l","_t","_q","_m","_f","_k","_v","_u","_g","_p","FunctionalRenderContext","contextVm","this$1","_original","isCompiled","needNormalization","injections","createFunctionalComponent","mergeProps","renderContext","cloneAndMarkFunctionalResult","vnodes","componentVNodeHooks","hydrating","_isDestroyed","keepAlive","mountedNode","prepatch","createComponentInstanceForVnode","activeInstance","$mount","oldVnode","updateChildComponent","insert","_isMounted","callHook","queueActivatedComponent","activateChildComponent","deactivateChildComponent","$destroy","hooksToMerge","createComponent","baseCtor","cid","resolveAsyncComponent","createAsyncPlaceholder","resolveConstructorOptions","transformModel","nativeOn","abstract","installComponentHooks","_isComponent","_parentVnode","inlineTemplate","toMerge","_merged","mergeHook$1","f1","f2","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","_createElement","pre","applyNS","registerDeepBindings","initRender","_vnode","parentVnode","_renderChildren","parentData","_parentListeners","currentRenderingInstance","renderMixin","Vue","_render","ensureCtor","comp","__esModule","toStringTag","errorComp","resolved","owner","owners","loadingComp","sync","timerLoading","timerTimeout","$on","forceRender","renderCompleted","$forceUpdate","reason","timeout","getFirstComponentChild","initEvents","_events","_hasHookEvent","updateComponentListeners","remove$1","$off","_target","onceHandler","oldListeners","eventsMixin","hookRE","$once","i$1","cbs","setActiveInstance","prevActiveInstance","initLifecycle","$children","_watcher","_inactive","_directInactive","_isBeingDestroyed","lifecycleMixin","_update","prevEl","prevVnode","restoreActiveInstance","__patch__","__vue__","teardown","_watchers","mountComponent","updateComponent","Watcher","before","renderChildren","newScopedSlots","oldScopedSlots","hasDynamicScopedSlot","needsForceUpdate","propKeys","_propKeys","isInInactiveTree","direct","handlers","queue","activatedChildren","waiting","flushing","resetSchedulerState","currentFlushTimestamp","getNow","timeStamp","flushSchedulerQueue","watcher","run","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","emit","queueWatcher","uid$2","expOrFn","isRenderWatcher","user","lazy","dirty","deps","newDeps","depIds","newDepIds","expression","cleanupDeps","oldValue","evaluate","sharedPropertyDefinition","sourceKey","initState","initProps","initMethods","initData","initComputed","initWatch","propsOptions","isRoot","getData","computedWatcherOptions","watchers","_computedWatchers","isSSR","userDef","defineComputed","shouldCache","createComputedGetter","createGetterInvoker","createWatcher","$watch","stateMixin","dataDef","propsDef","$set","$delete","uid$3","initMixin","_init","_uid","initInternalComponent","_self","vnodeComponentOptions","_componentTag","superOptions","cachedSuperOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","sealed","sealedOptions","initUse","use","plugin","installedPlugins","_installedPlugins","unshift","install","initMixin$1","mixin","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","Comp","initAssetRegisters","definition","getComponentName","pattern","pruneCache","keepAliveInstance","pruneCacheEntry","current","patternTypes","KeepAlive","include","exclude","cacheVNode","vnodeToCache","keyToCache","updated","ref$1","builtInComponents","initGlobalAPI","configDef","util","defineReactive","observable","acceptValue","isEnumeratedAttr","isValidContentEditableValue","convertEnumeratedValue","isFalsyAttrValue","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","genClassForVnode","childNode","mergeClassData","renderClass","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","namespaceMap","svg","math","isHTMLTag","isSVG","unknownElementCache","HTMLUnknownElement","HTMLElement","isTextInputType","query","selected","createElement$1","tagName","setAttribute","createElementNS","namespace","createComment","referenceNode","nextSibling","setTextContent","textContent","setStyleScope","nodeOps","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","sameInputType","typeA","typeB","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","backend","modules","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","parentElm","refElm","nested","ownerArray","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","removeAndInvokeRemoveHook","rm","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","findIdxInOld","hydrate","postpatch","invokeInsertHook","initial","isRenderedModule","inVPre","hasChildNodes","childrenMatch","fullInvoke","isInitialPatch","isRealElement","hasAttribute","removeAttribute","oldElm","_leaveCb","patchable","i$2","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldArg","callHook$1","componentUpdated","callInsert","emptyModifiers","getRawDirName","rawName","baseModules","updateAttrs","oldAttrs","setAttr","removeAttributeNS","isInPre","baseSetAttr","setAttributeNS","__ieph","blocker","stopImmediatePropagation","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","target$1","klass","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","normalizeEvents","change","createOnceHandler$1","remove$2","useMicrotaskFix","add$1","attachedTimestamp","_wrapper","currentTarget","updateDOMListeners","svgContainer","updateDOMProps","oldProps","strCur","shouldUpdateValue","checkVal","composing","isNotInFocusAndDirty","isDirtyWithModifiers","notInFocus","activeElement","_vModifiers","parseStyleText","cssText","listDelimiter","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","getStyle","checkChild","styleData","emptyStyle","cssVarRE","importantRE","setProp","normalizedName","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","whitespaceRE","addClass","removeClass","tar","resolveTransition","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","ended","onEnd","transformRE","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","toMs","toggleDisplay","cancelled","_enterCb","appearClass","appearToClass","appearActiveClass","beforeAppear","appear","afterAppear","appearCancelled","transitionNode","isAppear","startClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","pendingNode","isValidDuration","beforeLeave","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","platformModules","patch","vmodel","directive","_vOptions","setSelected","onCompositionStart","onCompositionEnd","prevOptions","curOptions","needReset","hasNoMatchingOption","actuallySetSelected","isMultiple","option","selectedIndex","initEvent","locateNode","transition$$1","originalDisplay","__vOriginalDisplay","platformDirectives","transitionProps","getRealChild","compOptions","extractTransitionData","rawChild","hasParentTransition","isSameChild","oldChild","isNotTextNode","isVShowDirective","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","kept","prevChildren","rawChildren","transitionData","removed","c$1","hasMove","callPendingCbs","recordPosition","applyTranslation","_reflow","moved","transform","WebkitTransform","_moveCb","_hasMove","cloneNode","newPos","oldPos","platformComponents","IS_PURE","$startsWith","CORRECT_IS_REGEXP_LOGIC","MDN_POLYFILL_BUG","search","defer","html","IS_IOS","IS_NODE","clearImmediate","MessageChannel","Dispatch","ONREADYSTATECHANGE","runner","post","host","argumentsLength","port2","port1","onmessage","importScripts","Deno","versions","v8","applyMixin","vuexInit","store","$store","devtoolHook","devtoolPlugin","_devtoolHook","targetState","replaceState","subscribe","mutation","subscribeAction","deepCopy","forEachValue","Module","rawModule","runtime","_children","_rawModule","rawState","namespaced","getChild","hasChild","actions","mutations","getters","forEachChild","forEachGetter","forEachAction","forEachMutation","ModuleCollection","rawRootModule","targetModule","newModule","getNamespace","rawChildModule","isRegistered","Store","plugins","strict","_committing","_actions","_actionSubscribers","_mutations","_wrappedGetters","_modules","_modulesNamespaceMap","_subscribers","_watcherVM","_makeLocalGettersCache","dispatch","commit","payload","installModule","resetStoreVM","useDevtools","prototypeAccessors$1","genericSubscribe","resetStore","hot","oldVm","_vm","wrappedGetters","$$state","enableStrictMode","_withCommit","rootState","parentState","getNestedState","moduleName","local","makeLocalContext","namespacedType","registerMutation","registerAction","registerGetter","noNamespace","_payload","_options","unifyObjectStyle","makeLocalGetters","gettersProxy","splitPos","localType","rootGetters","rawGetter","_Vue","registerModule","preserveState","unregisterModule","hasModule","hotUpdate","newOptions","committing","mapState","normalizeNamespace","states","normalizeMap","getModuleByNamespace","vuex","mapMutations","mapGetters","mapActions","createNamespacedHelpers","isValidMap","createLogger","collapsed","stateBefore","stateAfter","transformer","mutationTransformer","mut","actionFilter","actionTransformer","act","logMutations","logActions","logger","prevState","nextState","formattedTime","getFormattedTime","formattedMutation","startMessage","endMessage","formattedAction","groupCollapsed","groupEnd","pad","getHours","getMinutes","getSeconds","getMilliseconds","generateWarning","defaultImpl","$lastIndexOf","searchElement","nativeGetPrototypeOf","CORRECT_PROTOTYPE_GETTER","FAILS_ON_PRIMITIVES","getPrototypeOf","Iterators","objectKeys","Properties","_arrayWithHoles","_iterableToArrayLimit","_arr","_nonIterableRest","_slicedToArray","arrayWithHoles","iterableToArrayLimit","nonIterableRest","$findIndex","findIndex","predicate","toOffset","arrayLike","InternalStateModule","defineIterator","STRING_ITERATOR","setInternalState","getInternalState","getterFor","iterated","cbrt","$map","mapfn","valueOf","VSheet","collapse","extended","extensionHeight","floating","prominent","short","isExtended","computedHeight","isCollapsed","computedContentHeight","isProminent","genBackground","image","img","VImg","genExtension","Scroll","app","applicationProperty","removeApplication","activated","deactivated","callUpdate","updateApplication","scrollTarget","scrollThreshold","currentScroll","currentThreshold","isScrollingUp","previousScroll","savedScroll","canScroll","computedScrollThreshold","onScroll","thresholdMet","VAppBar","clippedLeft","clippedRight","collapseOnScroll","elevateOnScroll","fadeImgOnScroll","hideOnScroll","invertedScroll","scrollOffScreen","shrinkOnScroll","scrollRatio","computedFontSize","computedLeft","application","computedMarginTop","computedOpacity","computedOriginalHeight","computedRight","computedTransform","hideShadow","marginTop","UNSCOPABLES","ArrayPrototype","MATCH","regExpExec","nativeMatch","regexp","matcher","fullUnicode","matchStr","defaultConstructor","pref","$trim","forcedStringTrimMethod","nativeConstruct","NEW_TARGET_BUG","ARGS_BUG","Target","newTarget","$args","createMethod","IS_INCLUDES","$this","fromIndex","$filter","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","callWithSafeIterationClosing","createProperty","mapping","iteratorMethod","FAILS_ON_UNDEFINED","FAILS_ON_NULL","chr","itemsLength","collection","collectionStrong","argument","webkit","getSubstitution","REPLACE","maybeToString","REPLACE_KEEPS_$0","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","REPLACE_SUPPORTS_NAMED_GROUPS","nativeReplace","UNSAFE_SUBSTITUTE","searchValue","replaceValue","replacer","functionalReplace","results","accumulatedResult","nextSourcePosition","replacerArgs","_typeof","enumerableOnly","sym","_objectSpread2","getOwnPropertyDescriptors","rippleStop","DELAY_RIPPLE","isTouchEvent","isKeyboardEvent","calculate","localX","localY","ripples","animation","hide","isRippleEnabled","rippleShow","rippleHide","rippleCancelShow","keyboardRipple","keyboardRippleShow","keyboardRippleHide","focusRippleHide","updateRipple","enabled","removeListeners","wasEnabled","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","isSymbol","whitespaces","whitespace","ltrim","rtrim","TYPE","bitmap","createTypedArrayConstructor","$join","ArrayIterators","arrayValues","arrayEntries","nativeTypedArrayIterator","CORRECT_ITER_NAME","typedArrayValues","IndexedObject","$assign","assign","B","alphabet","T","NATIVE_ARRAY_BUFFER","redefineAll","anInstance","toIndex","IEEE754","arrayFill","setToStringTag","ARRAY_BUFFER","DATA_VIEW","PROTOTYPE","WRONG_LENGTH","WRONG_INDEX","NativeArrayBuffer","$ArrayBuffer","$DataView","$DataViewPrototype","ObjectPrototype","packIEEE754","pack","unpackIEEE754","unpack","packInt8","packInt16","packInt32","unpackInt32","packFloat32","packFloat64","addGetter","view","isLittleEndian","intIndex","byteLength","conversion","ArrayBufferPrototype","testView","$setInt8","setInt8","bufferLength","getUint8","getInt32","getFloat32","getFloat64","setUint32","setFloat32","setFloat64","breakpointProps","offsetProps","orderProps","col","order","cols","alignSelf","hasColClasses","$some","CONVERT_TO_STRING","codeAt","iterate","setSpecies","fastKey","internalStateGetterFor","getConstructor","wrapper","IS_MAP","ADDER","define","getEntry","setStrong","ITERATOR_NAME","getInternalCollectionState","getInternalIteratorState","arraySpeciesConstructor","NATIVE_WEAK_MAP","objectHas","sharedKey","OBJECT_ALREADY_INITIALIZED","WeakMap","enforce","wmget","wmhas","wmset","metadata","facade","STATE","_arrayLikeToArray","arr2","InternalMetadataModule","checkCorrectnessOfIteration","inheritIfRequired","IS_WEAK","NativeConstructor","NativePrototype","exported","fixMethod","KEY","nativeMethod","enable","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","inspectSource","enforceInternalState","TEMPLATE","simple","TO_ENTRIES","Wrapper","NewTarget","NewTargetPrototype","Uint8ArrayPrototype","arrayToString","arrayJoin","IS_NOT_ARRAY_METHOD","$fill","wrappedWellKnownSymbolModule","NAME","theme","TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS","ArrayBufferModule","isInteger","typedArrayFrom","getOwnPropertyDescriptorModule","nativeDefineProperty","nativeGetOwnPropertyDescriptor","NATIVE_ARRAY_BUFFER_VIEWS","TYPED_ARRAY_CONSTRUCTOR","TYPED_ARRAY_TAG","TypedArray","TypedArrayPrototype","aTypedArrayConstructor","isTypedArray","fromList","isArrayBuffer","isTypedArrayIndex","wrappedGetOwnPropertyDescriptor","wrappedDefineProperty","CLAMPED","GETTER","SETTER","NativeTypedArrayConstructor","TypedArrayConstructor","TypedArrayConstructorPrototype","typedArrayOffset","$length","$len","Themeable","themeableProvide","appIsDark","rootIsDark","rootThemeClasses","LN2","mantissaLength","exponent","mantissa","exponentLength","eMax","eBias","rt","nBits","rgb","char","hexColor","intToHex","colorToInt","activeXDocument","documentCreateElement","GT","LT","SCRIPT","IE_PROTO","EmptyConstructor","scriptTag","NullProtoObjectViaActiveX","temp","parentWindow","NullProtoObjectViaIFrame","iframeDocument","iframe","JS","contentWindow","NullProtoObject","ActiveXObject","domain","$find","addToUnscopables","FIND","SKIPS_HOLES","createIteratorConstructor","IteratorsCore","IteratorPrototype","BUGGY_SAFARI_ITERATORS","KEYS","VALUES","ENTRIES","returnThis","Iterable","IteratorConstructor","DEFAULT","IS_SET","CurrentIteratorPrototype","getIterationMethod","KIND","defaultIterator","IterablePrototype","INCORRECT_VALUES_NAME","nativeIterator","anyNativeIterator","makeWatcher","$data","testListenerOpts","deepEqual","getNestedValue","filtered","esc","home","backspace","pageup","pagedown","iconPath","override","getObjectValueByPath","optional","chunked","mergeDeep","$includes","intersect","calculatedSize","circumference","normalizedValue","strokeDashArray","strokeDashOffset","strokeWidth","svgStyles","viewBoxSize","genCircle","genSvg","genInfo","btnToggle","depressed","fab","plain","retainFocusOnClick","tile","sizeableClasses","computedElevation","defaultRipple","circle","hasBg","isElevated","elevation","isRound","genLoader","loader","setColor","propertyKey","quot","attribute","p1","functionToString","$endsWith","encodeReserveRE","encodeReserveReplacer","commaRE","encodeURIComponent","decodeURIComponent","resolveQuery","extraQuery","_parseQuery","parsedQuery","parseQuery","castQueryParamValue","param","stringifyQuery","val2","trailingSlashRE","createRoute","record","redirectedFrom","router","route","fullPath","getFullPath","formatMatch","START","_stringifyQuery","isSameRoute","onlyPath","isObjectEqual","aKeys","bKeys","aVal","bKey","bVal","isIncludedRoute","queryIncludes","handleRouteEntered","instances","enteredCbs","View","routerView","_routerViewCache","depth","inactive","_routerRoot","vnodeData","routerViewDepth","cachedData","cachedComponent","configProps","fillPropsinData","registerRouteInstance","propsToPass","resolveProps","resolvePath","relative","firstChar","hashIndex","queryIndex","cleanPath","isarray","pathToRegexp_1","pathToRegexp","parse_1","compile_1","compile","tokensToFunction_1","tokensToFunction","tokensToRegExp_1","tokensToRegExp","PATH_REGEXP","defaultDelimiter","delimiter","modifier","asterisk","escapeGroup","escapeString","encodeURIComponentPretty","encodeURI","encodeAsterisk","pretty","token","attachKeys","sensitive","regexpToRegexp","arrayToRegexp","stringToRegexp","endsWithDelimiter","regexpCompileCache","fillParams","routeMsg","filler","pathMatch","normalizeLocation","params$1","rawPath","parsedPath","basePath","toTypes","eventTypes","Link","custom","ariaCurrentValue","$router","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","guardEvent","scopedSlot","navigate","isExactActive","findAnchor","aData","handler$1","event$1","aAttrs","metaKey","ctrlKey","shiftKey","defaultPrevented","installed","registerInstance","callVal","_router","history","_route","beforeRouteEnter","beforeRouteLeave","beforeRouteUpdate","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","parentRoute","pathList","pathMap","nameMap","addRouteRecord","matchAs","pathToRegexpOptions","normalizedPath","normalizePath","caseSensitive","regex","compileRouteRegex","alias","redirect","childMatchAs","aliases","aliasRoute","createMatcher","addRoutes","addRoute","parentOrRoute","getRoutes","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","resolveRecordPath","resolvedPath","aliasedPath","aliasedMatch","aliasedRecord","Time","genStateKey","toFixed","_key","getStateKey","setStateKey","positionStore","setupScroll","scrollRestoration","protocolAndPath","absolutePath","stateCopy","handlePopState","handleScroll","isPop","behavior","scrollBehavior","getScrollPosition","shouldScroll","scrollToPosition","saveScrollPosition","getElementPosition","docEl","docRect","elRect","isValidPosition","isNumber","normalizePosition","normalizeOffset","hashStartsWithNumberRE","scrollTo","supportsPushState","pushState","runQueue","NavigationFailureType","redirected","aborted","duplicated","createNavigationRedirectedError","createRouterError","stringifyRoute","createNavigationDuplicatedError","createNavigationCancelledError","createNavigationAbortedError","_isRouter","propertiesToLog","isError","isNavigationFailure","errorType","resolveAsyncComponents","hasAsync","flatMapComponents","resolvedDef","isESModule","flatten","History","normalizeBase","readyCbs","readyErrorCbs","errorCbs","baseEl","resolveQueue","extractGuards","records","guards","guard","extractGuard","extractLeaveGuards","bindGuard","extractUpdateHooks","extractEnterGuards","bindEnterGuard","listen","onReady","errorCb","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","afterHooks","abort","lastRouteIndex","lastCurrentIndex","beforeHooks","enterGuards","resolveHooks","setupListeners","cleanupListener","HTML5History","_startLocation","getLocation","expectScroll","supportsScroll","handleRoutingEvent","go","fromRoute","getCurrentLocation","pathLowerCase","baseLowerCase","HashHistory","checkFallback","ensureSlash","getHash","replaceHash","eventType","pushHash","getUrl","AbstractHistory","targetIndex","VueRouter","apps","registerHook","createHref","handleInitialScroll","routeOrError","beforeEach","beforeResolve","afterEach","back","forward","getMatchedComponents","normalizedTo","START_LOCATION","srgbForwardMatrix","srgbForwardTransform","srgbReverseMatrix","srgbReverseTransform","matrix","xyz","roundedClasses","composite","internalLazyValue","Proxyable","backgroundOpacity","bufferValue","striped","__cachedBackground","backgroundStyle","__cachedBar","__cachedBarType","__cachedBuffer","__cachedDeterminate","__cachedIndeterminate","genProgressBar","__cachedStream","isReversed","normalizedBuffer","computedTransition","reactive","genListeners","Intersect","postfix","regexpFlags","UNSUPPORTED_DOT_ALL","UNSUPPORTED_NCG","nativeExec","patchedExec","UPDATES_LAST_INDEX_WRONG","re1","re2","BROKEN_CARET","NPCG_INCLUDED","PATCH","reCopy","charsAdded","strCopy","feature","detection","POLYFILL","NATIVE","Op","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","Context","_invoke","makeInvokeMethod","tryCatch","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","skipTempReset","rootEntry","rootRecord","rval","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","SPECIES_SUPPORT","isConcatSpreadable","spreadable","E","usingIterator","$copyWithin","$defineProperty","Attributes","toPrimitive","nativeJoin","ES3_STRINGS","mapper","thisArg","sourceIndex","mapFn","MAXIMUM_ALLOWED_LENGTH_EXCEEDED","deleteCount","insertCount","actualDeleteCount","actualStart","NATIVE_SYMBOL","nativeObjectCreate","getOwnPropertyNamesExternal","defineWellKnownSymbol","HIDDEN","SYMBOL","TO_PRIMITIVE","$stringify","nativeGetOwnPropertyNames","nativePropertyIsEnumerable","AllSymbols","ObjectPrototypeSymbols","StringToSymbolRegistry","SymbolToStringRegistry","WellKnownSymbolsStore","QObject","USE_SETTER","findChild","setSymbolDescriptor","ObjectPrototypeDescriptor","$defineProperties","$getOwnPropertySymbols","$propertyIsEnumerable","$create","V","names","IS_OBJECT_PROTOTYPE","keyFor","useSetter","useSimple","FORCED_JSON_STRINGIFY","$replacer","fluid","INCORRECT_ITERATION","NativePromise","promiseResolve","NON_GENERIC","real","onFinally","isFunction","$every","colorName","NUMBER","NativeNumber","NumberPrototype","BROKEN_CLASSOF","third","radix","NumberWrapper","error1","error2","dotAll","aspectRatio","contentClass","computedAspectRatio","aspectStyle","paddingBottom","__cachedSizer","hasIntersect","alt","contain","eager","gradient","lazySrc","rootMargin","srcset","currentSrc","isLoading","calculatedAspectRatio","naturalWidth","normalisedSrc","aspect","__cachedImage","backgroundImage","backgroundPosition","loadImage","lazyImg","onLoad","naturalHeight","getSrc","pollForSize","poll","__genPlaceholder","mergeSort","insertionSort","merge","llength","rlength","lindex","rindex","_defineProperty","PrototypeOfArrayIteratorPrototype","arrayIterator","NEW_ITERATOR_PROTOTYPE","TO_STRING_TAG_SUPPORT","FunctionPrototype","FunctionPrototypeToString","nameRE","$toLocaleString","toLocaleString","TO_LOCALE_STRING_BUG","promise","macrotask","IS_IOS_PEBBLE","IS_WEBOS_WEBKIT","WebKitMutationObserver","queueMicrotaskDescriptor","queueMicrotask","exit","task","USE_SYMBOL_AS_UID","createWellKnownSymbol","withoutSetter","nativeKeys","thisNumberValue","nativeToFixed","acc","multiply","c2","divide","dataToString","fractionDigits","fractDigits","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","IS_FILTER_REJECT","NO_HOLES","specificCreate","filterReject","_createForOfIteratorHelper","allowArrayLike","normalCompletion","didErr","_e2","preventExtensions","ordinaryToPrimitive","exoticToPrim","fromSpeciesAndList","SHARED","fixed","non","elevationClasses","$reduce","EXISTS","newPromiseCapability","promiseCapability","variable","NASHORN_BUG","1","aPossiblePrototype","CORRECT_SETTER","TAG","Pebble","IS_RIGHT","memo","SHAM","DELEGATES_TO_SYMBOL","DELEGATES_TO_EXEC","execCalled","nativeRegExpMethod","arg2","forceStringMethod","$exec","createMessage","generateComponentTrace","newMessage","consoleError","classifyRE","classify","formatComponentName","includeFile","currentRecursiveSequence","styleList","styleProp","parseStyle","styleMap","mergeTarget","mergeClasses","mergeStyles","mergeListeners","FREEZING","onFreeze","$freeze","ArrayIteratorMethods","ArrayValues","NativeSymbol","EmptyStringDescriptionStore","SymbolWrapper","symbolPrototype","symbolToString","nativeSymbol","desc","ARRAY_ITERATOR","Arguments","NEGATIVE_ZERO","Internal","OwnPromiseCapability","PromiseWrapper","nativeThen","microtask","hostReportErrors","newPromiseCapabilityModule","perform","IS_BROWSER","PROMISE","getInternalPromiseState","NativePromisePrototype","PromiseConstructor","PromiseConstructorPrototype","newGenericPromiseCapability","DISPATCH_EVENT","NATIVE_REJECTION_EVENT","PromiseRejectionEvent","UNHANDLED_REJECTION","REJECTION_HANDLED","PENDING","FULFILLED","REJECTED","HANDLED","UNHANDLED","SUBCLASSING","PROMISE_CONSTRUCTOR_SOURCE","GLOBAL_CORE_JS_PROMISE","FakePromise","isThenable","isReject","notified","reactions","ok","exited","reaction","fail","rejection","onHandleUnhandled","onUnhandled","IS_UNHANDLED","isUnhandled","unwrap","internalReject","internalResolve","executor","onFulfilled","onRejected","capability","$promiseResolve","remaining","alreadyCalled","race","$indexOf","Prototype","Int8ArrayPrototype","Uint8ClampedArray","Uint8ClampedArrayPrototype","isPrototypeOf","opera","TYPED_ARRAY_TAG_REQIRED","TypedArrayConstructorsList","BigIntArrayConstructorsList","BigInt64Array","BigUint64Array","ARRAY","exportTypedArrayStaticMethod","PromiseCapability","$$resolve","$$reject","getOwnPropertyNamesExternalModule","REQUIRED","METADATA","setMetadata","objectID","weakData","getWeakData","Toggleable","_classCallCheck","_defineProperties","_createClass","protoProps","staticProps","registerComponents","vuetify","_setPrototypeOf","_inherits","subClass","superClass","_getPrototypeOf","_isNativeReflectConstruct","Proxy","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","possibleConstructorReturn","badge","dataIterator","noResultsText","loadingText","dataTable","itemsPerPageText","ariaLabel","sortDescending","sortAscending","sortNone","activateNone","activateDescending","activateAscending","sortBy","dataFooter","itemsPerPageAll","nextPage","prevPage","firstPage","lastPage","pageText","datePicker","itemsSelected","nextMonthAriaLabel","nextYearAriaLabel","prevMonthAriaLabel","prevYearAriaLabel","noDataText","carousel","calendar","moreEvents","fileInput","counterSize","timePicker","am","pm","pagination","page","currentPage","rating","mobileBreakpoint","scrollBarWidth","thresholds","xs","sm","md","lg","icons","iconfont","locales","en","disable","cspNonce","customProperties","minifyTheme","themeCache","themes","primary","secondary","accent","framework","defaultPreset","userPreset","globalPreset","insetFooter","footer","xl","xsOnly","smOnly","smAndDown","smAndUp","mdOnly","mdAndDown","mdAndUp","lgOnly","lgAndDown","lgAndUp","xlOnly","mobile","resizeTimeout","Breakpoint","ssr","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","totalOffset","easing","appOffset","getContainer","goTo","isDrawer","isClipped","startTime","targetLocation","startLocation","ease","timeElapsed","cancel","checkboxOn","checkboxOff","checkboxIndeterminate","expand","menu","subgroup","dropdown","radioOn","radioOff","edit","ratingEmpty","ratingFull","ratingHalf","unfold","plus","minus","iconSet","convertToComponentDeclarations","mdiSvg","mdi","fa","fa4","faSvg","Icons","LANG_PREFIX","getTranslation","usingDefault","shortKey","translation","locale","defaultLocale","Lang","translator","currentLocale","cielabForwardTransform","cielabReverseTransform","transformedY","Ln","lab","isItem","colors","parsedTheme","genVariations","genBaseColor","genColorVariableName","genColorVariable","cssVar","variablesCss","aColor","variants","variantValue","lighten","darken","unwatch","vueMeta","Theme","styleEl","oldDark","defaults","defaultTheme","metaKeyName","getOptions","metaInfo","vuetifyStylesheet","nonce","addApp","obs","currentTheme","isHydrating","service","Service","classofRaw","CORRECT_ARGUMENTS","tryGet","callee","paddingTop","paddingRight","paddingLeft","nativeSlice","fin","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","availableProps"],"mappings":"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W,IAAI51G,GAAS,WAAY,IAAI/f,WAAW,KAC9DshB,EAAWq0G,WAAW,IAAI51G,GAAS,2BAA4B0E,IAC/DnD,EAAWq0G,WAAW,IAAI51G,GAAS,4BAA6B2E,IAChEpD,EAAWq0G,WAAW,IAAI51G,GAAS,qBAAsBvgB,GAASiI,cAAc+tH,KAChFl0G,EAAWt/C,OAInB,MAAM8uD,GAAOsuF,GACPz9G,GAAW,CACb9pB,iBACA2iF,eACA1iF,2BAEE89I,GAAW,CACbtW,iBACAgW,gBAEEjnF,GAAO,CACT4T,kBACAW,uBACAE,kBACAD,gCACApT,YACA9jE,iBACAqkE,iBACA5kB,aACAjgD,gBACAglE,mBACAplB,aACA7/C,gBACAsnE,+BACAlnB,qBACAlgD,mBACAmgD,wBACA04B,qBACA5C,8BAEEw0E,GAAQ,CACV7sJ,mBACA6C,iBACA5C,iBACA8O,cACAS,OACAmP,QACAnN,aACAnR,YACAC,WACAC,YACAyjB,SACA9jB,OACAoH,SACA9G,gBACAC,WACAC,eACAmB,cACAq/B,WACArhC,UACAE,YACAuL,QACA3K,YACAC,eACAoS,0BACA+4D,iBACAvqE,eACAC,mBACA8iB,UACAsB,aACA3kB,kBACAgV,QACArV,qBACAV,UACAc,aACAgoB,uBACA9B,oBACAE,eACAO,SACAmB,WACA3oB,aACAU,cACAC,eACA+pB,SACAK,SACAzpB,cACA+nB,UACAzM,eACAhc,cACA4qB,SACAvqB,cAEEyrJ,GAAY,CACdz5E,iBACA3C,2BACAM,aACAK,cACAxxC,UACAmyC,gBACAP,mBACAK,cACAC,qBAEEg7E,GAAQ,CACVzqF,cACAihB,iBACAjhF,cACAymD,+BACAE,4BACA2tC,2BAGJ5wG,EAAQu3G,YAAcA,GACtBv3G,EAAQgZ,cAAgBA,EACxBhZ,EAAQijF,aAAeA,GACvBjjF,EAAQioB,gBAAkBA,GAC1BjoB,EAAQsrG,cAAgBA,GACxBtrG,EAAQsZ,YAAcA,EACtBtZ,EAAQohF,iBAAmBA,GAC3BphF,EAAQysB,OAASA,GACjBzsB,EAAQud,iBAAmBA,GAC3Bvd,EAAQmiF,eAAiBA,GAC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","file":"js/chunk-vendors.15e06843.js","sourcesContent":["var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flat` method\n// https://tc39.es/ecma262/#sec-array.prototype.flat\n$({ target: 'Array', proto: true }, {\n  flat: function flat(/* depthArg = 1 */) {\n    var depthArg = arguments.length ? arguments[0] : undefined;\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));\n    return A;\n  }\n});\n","var userAgent = require('../internals/engine-user-agent');\n\nvar firefox = userAgent.match(/firefox\\/(\\d+)/i);\n\nmodule.exports = !!firefox && +firefox[1];\n","'use strict';\nvar aFunction = require('../internals/a-function');\nvar isObject = require('../internals/is-object');\n\nvar slice = [].slice;\nvar factories = {};\n\nvar construct = function (C, argsLength, args) {\n  if (!(argsLength in factories)) {\n    for (var list = [], i = 0; i < argsLength; i++) list[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func -- we have no proper alternatives, IE8- only\n    factories[argsLength] = Function('C,a', 'return new C(' + list.join(',') + ')');\n  } return factories[argsLength](C, args);\n};\n\n// `Function.prototype.bind` method implementation\n// https://tc39.es/ecma262/#sec-function.prototype.bind\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = slice.call(arguments, 1);\n  var boundFunction = function bound(/* args... */) {\n    var args = partArgs.concat(slice.call(arguments));\n    return this instanceof boundFunction ? construct(fn, args.length, args) : fn.apply(that, args);\n  };\n  if (isObject(fn.prototype)) boundFunction.prototype = fn.prototype;\n  return boundFunction;\n};\n","/* eslint-disable es/no-object-getownpropertynames -- safe */\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar $getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\n\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return $getOwnPropertyNames(it);\n  } catch (error) {\n    return windowNames.slice();\n  }\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]'\n    ? getWindowNames(it)\n    : $getOwnPropertyNames(toIndexedObject(it));\n};\n","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","import { FunctionalComponentOptions, VNode, VNodeData } from 'vue'\nimport mergeData from '../../util/mergeData'\n\nfunction mergeTransitions (\n  dest: Function | Function[] = [],\n  ...transitions: (Function | Function[])[]\n) {\n  /* eslint-disable-next-line no-array-constructor */\n  return Array<Function>().concat(dest, ...transitions)\n}\n\nexport function createSimpleTransition (\n  name: string,\n  origin = 'top center 0',\n  mode?: string\n): FunctionalComponentOptions {\n  return {\n    name,\n\n    functional: true,\n\n    props: {\n      group: {\n        type: Boolean,\n        default: false,\n      },\n      hideOnLeave: {\n        type: Boolean,\n        default: false,\n      },\n      leaveAbsolute: {\n        type: Boolean,\n        default: false,\n      },\n      mode: {\n        type: String,\n        default: mode,\n      },\n      origin: {\n        type: String,\n        default: origin,\n      },\n    },\n\n    render (h, context): VNode {\n      const tag = `transition${context.props.group ? '-group' : ''}`\n      const data: VNodeData = {\n        props: {\n          name,\n          mode: context.props.mode,\n        },\n        on: {\n          beforeEnter (el: HTMLElement) {\n            el.style.transformOrigin = context.props.origin\n            el.style.webkitTransformOrigin = context.props.origin\n          },\n        },\n      }\n\n      if (context.props.leaveAbsolute) {\n        data.on!.leave = mergeTransitions(data.on!.leave, (el: HTMLElement) => {\n          const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = el\n          el._transitionInitialStyles = {\n            position: el.style.position,\n            top: el.style.top,\n            left: el.style.left,\n            width: el.style.width,\n            height: el.style.height,\n          }\n          el.style.position = 'absolute'\n          el.style.top = offsetTop + 'px'\n          el.style.left = offsetLeft + 'px'\n          el.style.width = offsetWidth + 'px'\n          el.style.height = offsetHeight + 'px'\n        })\n        data.on!.afterLeave = mergeTransitions(data.on!.afterLeave, (el?: HTMLElement) => {\n          if (el && el._transitionInitialStyles) {\n            const { position, top, left, width, height } = el._transitionInitialStyles\n            delete el._transitionInitialStyles\n            el.style.position = position || ''\n            el.style.top = top || ''\n            el.style.left = left || ''\n            el.style.width = width || ''\n            el.style.height = height || ''\n          }\n        })\n      }\n      if (context.props.hideOnLeave) {\n        data.on!.leave = mergeTransitions(data.on!.leave, (el: HTMLElement) => {\n          (el as any)._initialDisplay = el.style.display\n          el.style.display = 'none'\n        })\n        data.on!.afterLeave = mergeTransitions(data.on!.afterLeave, (el?: HTMLElement) => {\n          if (el) el.style.display = (el as any)._initialDisplay || ''\n        })\n      }\n\n      return h(tag, mergeData(context.data, data), context.children)\n    },\n  }\n}\n\nexport function createJavascriptTransition (\n  name: string,\n  functions: Record<string, any>,\n  mode = 'in-out'\n): FunctionalComponentOptions {\n  return {\n    name,\n\n    functional: true,\n\n    props: {\n      mode: {\n        type: String,\n        default: mode,\n      },\n    },\n\n    render (h, context): VNode {\n      return h(\n        'transition',\n        mergeData(context.data, {\n          props: { name },\n          on: functions,\n        }),\n        context.children\n      )\n    },\n  }\n}\n","import { upperFirst } from '../../util/helpers'\n\ninterface HTMLExpandElement extends HTMLElement {\n  _parent?: (Node & ParentNode & HTMLElement) | null\n  _initialStyle?: {\n    transition: string\n    overflow: string\n    height?: string | null\n    width?: string | null\n  }\n}\n\nexport default function (expandedParentClass = '', x = false) {\n  const sizeProperty = x ? 'width' : 'height' as 'width' | 'height'\n  const offsetProperty = `offset${upperFirst(sizeProperty)}` as 'offsetHeight' | 'offsetWidth'\n\n  return {\n    beforeEnter (el: HTMLExpandElement) {\n      el._parent = el.parentNode as (Node & ParentNode & HTMLElement) | null\n      el._initialStyle = {\n        transition: el.style.transition,\n        overflow: el.style.overflow,\n        [sizeProperty]: el.style[sizeProperty],\n      }\n    },\n\n    enter (el: HTMLExpandElement) {\n      const initialStyle = el._initialStyle!\n\n      el.style.setProperty('transition', 'none', 'important')\n      // Hide overflow to account for collapsed margins in the calculated height\n      el.style.overflow = 'hidden'\n      const offset = `${el[offsetProperty]}px`\n\n      el.style[sizeProperty] = '0'\n\n      void el.offsetHeight // force reflow\n\n      el.style.transition = initialStyle.transition\n\n      if (expandedParentClass && el._parent) {\n        el._parent.classList.add(expandedParentClass)\n      }\n\n      requestAnimationFrame(() => {\n        el.style[sizeProperty] = offset\n      })\n    },\n\n    afterEnter: resetStyles,\n    enterCancelled: resetStyles,\n\n    leave (el: HTMLExpandElement) {\n      el._initialStyle = {\n        transition: '',\n        overflow: el.style.overflow,\n        [sizeProperty]: el.style[sizeProperty],\n      }\n\n      el.style.overflow = 'hidden'\n      el.style[sizeProperty] = `${el[offsetProperty]}px`\n      void el.offsetHeight // force reflow\n\n      requestAnimationFrame(() => (el.style[sizeProperty] = '0'))\n    },\n\n    afterLeave,\n    leaveCancelled: afterLeave,\n  }\n\n  function afterLeave (el: HTMLExpandElement) {\n    if (expandedParentClass && el._parent) {\n      el._parent.classList.remove(expandedParentClass)\n    }\n    resetStyles(el)\n  }\n\n  function resetStyles (el: HTMLExpandElement) {\n    const size = el._initialStyle![sizeProperty]\n    el.style.overflow = el._initialStyle!.overflow\n    if (size != null) el.style[sizeProperty] = size\n    delete el._initialStyle\n  }\n}\n","import {\n  createSimpleTransition,\n  createJavascriptTransition,\n} from './createTransition'\n\nimport ExpandTransitionGenerator from './expand-transition'\n\n// Component specific transitions\nexport const VCarouselTransition = createSimpleTransition('carousel-transition')\nexport const VCarouselReverseTransition = createSimpleTransition('carousel-reverse-transition')\nexport const VTabTransition = createSimpleTransition('tab-transition')\nexport const VTabReverseTransition = createSimpleTransition('tab-reverse-transition')\nexport const VMenuTransition = createSimpleTransition('menu-transition')\nexport const VFabTransition = createSimpleTransition('fab-transition', 'center center', 'out-in')\n\n// Generic transitions\nexport const VDialogTransition = createSimpleTransition('dialog-transition')\nexport const VDialogBottomTransition = createSimpleTransition('dialog-bottom-transition')\nexport const VDialogTopTransition = createSimpleTransition('dialog-top-transition')\nexport const VFadeTransition = createSimpleTransition('fade-transition')\nexport const VScaleTransition = createSimpleTransition('scale-transition')\nexport const VScrollXTransition = createSimpleTransition('scroll-x-transition')\nexport const VScrollXReverseTransition = createSimpleTransition('scroll-x-reverse-transition')\nexport const VScrollYTransition = createSimpleTransition('scroll-y-transition')\nexport const VScrollYReverseTransition = createSimpleTransition('scroll-y-reverse-transition')\nexport const VSlideXTransition = createSimpleTransition('slide-x-transition')\nexport const VSlideXReverseTransition = createSimpleTransition('slide-x-reverse-transition')\nexport const VSlideYTransition = createSimpleTransition('slide-y-transition')\nexport const VSlideYReverseTransition = createSimpleTransition('slide-y-reverse-transition')\n\n// Javascript transitions\nexport const VExpandTransition = createJavascriptTransition('expand-transition', ExpandTransitionGenerator())\nexport const VExpandXTransition = createJavascriptTransition('expand-x-transition', ExpandTransitionGenerator('', true))\n\nexport default {\n  $_vuetify_subcomponents: {\n    VCarouselTransition,\n    VCarouselReverseTransition,\n    VDialogTransition,\n    VDialogBottomTransition,\n    VDialogTopTransition,\n    VFabTransition,\n    VFadeTransition,\n    VMenuTransition,\n    VScaleTransition,\n    VScrollXTransition,\n    VScrollXReverseTransition,\n    VScrollYTransition,\n    VScrollYReverseTransition,\n    VSlideXTransition,\n    VSlideXReverseTransition,\n    VSlideYTransition,\n    VSlideYReverseTransition,\n    VTabReverseTransition,\n    VTabTransition,\n    VExpandTransition,\n    VExpandXTransition,\n  },\n}\n","var $ = require('../internals/export');\nvar $values = require('../internals/object-to-array').values;\n\n// `Object.values` method\n// https://tc39.es/ecma262/#sec-object.values\n$({ target: 'Object', stat: true }, {\n  values: function values(O) {\n    return $values(O);\n  }\n});\n","var toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\n\n// `ToIndex` abstract operation\n// https://tc39.es/ecma262/#sec-toindex\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toInteger(it);\n  var length = toLength(number);\n  if (number !== length) throw RangeError('Wrong length or index');\n  return length;\n};\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// a part of `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","var toObject = require('../internals/to-object');\n\nvar floor = Math.floor;\nvar replace = ''.replace;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d{1,2}|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d{1,2})/g;\n\n// `GetSubstitution` abstract operation\n// https://tc39.es/ecma262/#sec-getsubstitution\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\n  var tailPos = position + matched.length;\n  var m = captures.length;\n  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n  if (namedCaptures !== undefined) {\n    namedCaptures = toObject(namedCaptures);\n    symbols = SUBSTITUTION_SYMBOLS;\n  }\n  return replace.call(replacement, symbols, function (match, ch) {\n    var capture;\n    switch (ch.charAt(0)) {\n      case '$': return '$';\n      case '&': return matched;\n      case '`': return str.slice(0, position);\n      case \"'\": return str.slice(tailPos);\n      case '<':\n        capture = namedCaptures[ch.slice(1, -1)];\n        break;\n      default: // \\d\\d?\n        var n = +ch;\n        if (n === 0) return match;\n        if (n > m) {\n          var f = floor(n / 10);\n          if (f === 0) return match;\n          if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n          return match;\n        }\n        capture = captures[n - 1];\n    }\n    return capture === undefined ? '' : capture;\n  });\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- requied for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","import './VGrid.sass'\n\nimport Vue, { PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst ALIGNMENT = ['start', 'end', 'center']\n\nfunction makeProps (prefix: string, def: () => PropOptions) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + upperFirst(val)] = def()\n    return props\n  }, {} as Dictionary<PropOptions>)\n}\n\nconst alignValidator = (str: any) => [...ALIGNMENT, 'baseline', 'stretch'].includes(str)\nconst alignProps = makeProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst justifyValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around'].includes(str)\nconst justifyProps = makeProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst alignContentValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around', 'stretch'].includes(str)\nconst alignContentProps = makeProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-row',\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      default: null,\n      validator: alignValidator,\n    },\n    ...alignProps,\n    justify: {\n      type: String,\n      default: null,\n      validator: justifyValidator,\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String,\n      default: null,\n      validator: alignContentValidator,\n    },\n    ...alignContentProps,\n  },\n  render (h, { props, data, children }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'no-gutters': props.noGutters,\n        'row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'row',\n        class: classList,\n      }),\n      children\n    )\n  },\n})\n","var fails = require('./fails');\nvar global = require('../internals/global');\n\n// babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError\nvar $RegExp = global.RegExp;\n\nmodule.exports = fails(function () {\n  var re = $RegExp('(?<a>b)', 'g');\n  return re.exec('b').groups.a !== 'b' ||\n    'b'.replace(re, '$<a>c') !== 'bc';\n});\n","import VSheet from './VSheet'\n\nexport { VSheet }\nexport default VSheet\n","'use strict';\nvar toInteger = require('../internals/to-integer');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.repeat` method implementation\n// https://tc39.es/ecma262/#sec-string.prototype.repeat\nmodule.exports = function repeat(count) {\n  var str = toString(requireObjectCoercible(this));\n  var result = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar isRegExp = require('../internals/is-regexp');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar callRegExpExec = require('../internals/regexp-exec-abstract');\nvar regexpExec = require('../internals/regexp-exec');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar fails = require('../internals/fails');\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\nvar arrayPush = [].push;\nvar min = Math.min;\nvar MAX_UINT32 = 0xFFFFFFFF;\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  // eslint-disable-next-line regexp/no-empty-group -- required for testing\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'.split(/(b)*/)[1] == 'c' ||\n    // eslint-disable-next-line regexp/no-empty-group -- required for testing\n    'test'.split(/(?:)/, -1).length != 4 ||\n    'ab'.split(/(?:ab)*/).length != 2 ||\n    '.'.split(/(.?)(.?)/).length != 4 ||\n    // eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing\n    '.'.split(/()()/).length > 1 ||\n    ''.split(/.?/).length\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = toString(requireObjectCoercible(this));\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (separator === undefined) return [string];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) {\n        return nativeSplit.call(string, separator, lim);\n      }\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy.lastIndex;\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n          if (output.length >= lim) break;\n        }\n        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string.length) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output.length > lim ? output.slice(0, lim) : output;\n    };\n  // Chakra, V8\n  } else if ('0'.split(undefined, 0).length) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\n    };\n  } else internalSplit = nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.es/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(toString(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (string, limit) {\n      var rx = anObject(this);\n      var S = toString(string);\n      var res = maybeCallNative(internalSplit, rx, S, limit, internalSplit !== nativeSplit);\n\n      if (res.done) return res.value;\n\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (UNSUPPORTED_Y ? 'g' : 'y');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(UNSUPPORTED_Y ? '^(?:' + rx.source + ')' : rx, flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;\n        var z = callRegExpExec(splitter, UNSUPPORTED_Y ? S.slice(q) : S);\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n}, !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC, UNSUPPORTED_Y);\n","// `SameValue` abstract operation\n// https://tc39.es/ecma262/#sec-samevalue\n// eslint-disable-next-line es/no-object-is -- safe\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n","import './VIcon.sass'\n\n// Mixins\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport Colorable from '../../mixins/colorable'\nimport Sizeable from '../../mixins/sizeable'\nimport Themeable from '../../mixins/themeable'\n\n// Util\nimport { convertToUnit, keys, remapInternalIcon } from '../../util/helpers'\n\n// Types\nimport Vue, { CreateElement, VNode, VNodeChildren, VNodeData } from 'vue'\nimport mixins from '../../util/mixins'\nimport { VuetifyIcon, VuetifyIconComponent } from 'vuetify/types/services/icons'\n\nenum SIZE_MAP {\n  xSmall = '12px',\n  small = '16px',\n  default = '24px',\n  medium = '28px',\n  large = '36px',\n  xLarge = '40px'\n}\n\nfunction isFontAwesome5 (iconType: string): boolean {\n  return ['fas', 'far', 'fal', 'fab', 'fad', 'fak'].some(val => iconType.includes(val))\n}\n\nfunction isSvgPath (icon: string): boolean {\n  return (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(icon) && /[\\dz]$/i.test(icon) && icon.length > 4)\n}\n\nconst VIcon = mixins(\n  BindsAttrs,\n  Colorable,\n  Sizeable,\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-icon',\n\n  props: {\n    dense: Boolean,\n    disabled: Boolean,\n    left: Boolean,\n    right: Boolean,\n    size: [Number, String],\n    tag: {\n      type: String,\n      required: false,\n      default: 'i',\n    },\n  },\n\n  computed: {\n    medium () {\n      return false\n    },\n    hasClickListener (): boolean {\n      return Boolean(\n        this.listeners$.click || this.listeners$['!click']\n      )\n    },\n  },\n\n  methods: {\n    getIcon (): VuetifyIcon {\n      let iconName = ''\n      if (this.$slots.default) iconName = this.$slots.default[0].text!.trim()\n\n      return remapInternalIcon(this, iconName)\n    },\n    getSize (): string | undefined {\n      const sizes = {\n        xSmall: this.xSmall,\n        small: this.small,\n        medium: this.medium,\n        large: this.large,\n        xLarge: this.xLarge,\n      }\n\n      const explicitSize = keys(sizes).find(key => sizes[key])\n\n      return (\n        (explicitSize && SIZE_MAP[explicitSize]) || convertToUnit(this.size)\n      )\n    },\n    // Component data for both font icon and SVG wrapper span\n    getDefaultData (): VNodeData {\n      return {\n        staticClass: 'v-icon notranslate',\n        class: {\n          'v-icon--disabled': this.disabled,\n          'v-icon--left': this.left,\n          'v-icon--link': this.hasClickListener,\n          'v-icon--right': this.right,\n          'v-icon--dense': this.dense,\n        },\n        attrs: {\n          'aria-hidden': !this.hasClickListener,\n          disabled: this.hasClickListener && this.disabled,\n          type: this.hasClickListener ? 'button' : undefined,\n          ...this.attrs$,\n        },\n        on: this.listeners$,\n      }\n    },\n    getSvgWrapperData () {\n      const fontSize = this.getSize()\n      const wrapperData = {\n        ...this.getDefaultData(),\n        style: fontSize ? {\n          fontSize,\n          height: fontSize,\n          width: fontSize,\n        } : undefined,\n      }\n      this.applyColors(wrapperData)\n\n      return wrapperData\n    },\n    applyColors (data: VNodeData): void {\n      data.class = { ...data.class, ...this.themeClasses }\n      this.setTextColor(this.color, data)\n    },\n    renderFontIcon (icon: string, h: CreateElement): VNode {\n      const newChildren: VNodeChildren = []\n      const data = this.getDefaultData()\n\n      let iconType = 'material-icons'\n      // Material Icon delimiter is _\n      // https://material.io/icons/\n      const delimiterIndex = icon.indexOf('-')\n      const isMaterialIcon = delimiterIndex <= -1\n\n      if (isMaterialIcon) {\n        // Material icon uses ligatures.\n        newChildren.push(icon)\n      } else {\n        iconType = icon.slice(0, delimiterIndex)\n        if (isFontAwesome5(iconType)) iconType = ''\n      }\n\n      data.class[iconType] = true\n      data.class[icon] = !isMaterialIcon\n\n      const fontSize = this.getSize()\n      if (fontSize) data.style = { fontSize }\n\n      this.applyColors(data)\n\n      return h(this.hasClickListener ? 'button' : this.tag, data, newChildren)\n    },\n    renderSvgIcon (icon: string, h: CreateElement): VNode {\n      const svgData: VNodeData = {\n        class: 'v-icon__svg',\n        attrs: {\n          xmlns: 'http://www.w3.org/2000/svg',\n          viewBox: '0 0 24 24',\n          role: 'img',\n          'aria-hidden': true,\n        },\n      }\n\n      const size = this.getSize()\n      if (size) {\n        svgData.style = {\n          fontSize: size,\n          height: size,\n          width: size,\n        }\n      }\n\n      return h(this.hasClickListener ? 'button' : 'span', this.getSvgWrapperData(), [\n        h('svg', svgData, [\n          h('path', {\n            attrs: {\n              d: icon,\n            },\n          }),\n        ]),\n      ])\n    },\n    renderSvgIconComponent (\n      icon: VuetifyIconComponent,\n      h: CreateElement\n    ): VNode {\n      const data: VNodeData = {\n        class: {\n          'v-icon__component': true,\n        },\n      }\n\n      const size = this.getSize()\n      if (size) {\n        data.style = {\n          fontSize: size,\n          height: size,\n          width: size,\n        }\n      }\n\n      this.applyColors(data)\n\n      const component = icon.component\n      data.props = icon.props\n      data.nativeOn = data.on\n\n      return h(this.hasClickListener ? 'button' : 'span', this.getSvgWrapperData(), [\n        h(component, data),\n      ])\n    },\n  },\n\n  render (h: CreateElement): VNode {\n    const icon = this.getIcon()\n\n    if (typeof icon === 'string') {\n      if (isSvgPath(icon)) {\n        return this.renderSvgIcon(icon, h)\n      }\n      return this.renderFontIcon(icon, h)\n    }\n\n    return this.renderSvgIconComponent(icon, h)\n  },\n})\n\nexport default Vue.extend({\n  name: 'v-icon',\n\n  $_wrapperFor: VIcon,\n\n  functional: true,\n\n  render (h, { data, children }): VNode {\n    let iconName = ''\n\n    // Support usage of v-text and v-html\n    if (data.domProps) {\n      iconName = data.domProps.textContent ||\n        data.domProps.innerHTML ||\n        iconName\n\n      // Remove nodes so it doesn't\n      // overwrite our changes\n      delete data.domProps.textContent\n      delete data.domProps.innerHTML\n    }\n\n    return h(VIcon, data, iconName ? [iconName] : children)\n  },\n})\n","var arrayFromConstructorAndList = require('../internals/array-from-constructor-and-list');\nvar typedArraySpeciesConstructor = require('../internals/typed-array-species-constructor');\n\nmodule.exports = function (instance, list) {\n  return arrayFromConstructorAndList(typedArraySpeciesConstructor(instance), list);\n};\n","'use strict';\nvar toObject = require('../internals/to-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\n\nvar min = Math.min;\n\n// `Array.prototype.copyWithin` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.copywithin\n// eslint-disable-next-line es/no-array-prototype-copywithin -- safe\nmodule.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {\n  var O = toObject(this);\n  var len = toLength(O.length);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];\n    else delete O[to];\n    to += inc;\n    from += inc;\n  } return O;\n};\n","var classof = require('./classof-raw');\nvar regexpExec = require('./regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.es/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return regexpExec.call(R, S);\n};\n\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar typedArraySpeciesConstructor = require('../internals/typed-array-species-constructor');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.subarray` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.subarray\nexportTypedArrayMethod('subarray', function subarray(begin, end) {\n  var O = aTypedArray(this);\n  var length = O.length;\n  var beginIndex = toAbsoluteIndex(begin, length);\n  var C = typedArraySpeciesConstructor(O);\n  return new C(\n    O.buffer,\n    O.byteOffset + beginIndex * O.BYTES_PER_ELEMENT,\n    toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - beginIndex)\n  );\n});\n","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.foreach\nmodule.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n// eslint-disable-next-line es/no-array-prototype-foreach -- safe\n} : [].forEach;\n","var toPositiveInteger = require('../internals/to-positive-integer');\n\nmodule.exports = function (it, BYTES) {\n  var offset = toPositiveInteger(it);\n  if (offset % BYTES) throw RangeError('Wrong offset');\n  return offset;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/string-html-forced');\n\n// `String.prototype.anchor` method\n// https://tc39.es/ecma262/#sec-string.prototype.anchor\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('anchor') }, {\n  anchor: function anchor(name) {\n    return createHTML(this, 'a', 'name', name);\n  }\n});\n","module.exports = function (it, Constructor, name) {\n  if (!(it instanceof Constructor)) {\n    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');\n  } return it;\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","module.exports = function (it) {\n  if (typeof it != 'function') {\n    throw TypeError(String(it) + ' is not a function');\n  } return it;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var called = 0;\n  var iteratorWithReturn = {\n    next: function () {\n      return { done: !!called++ };\n    },\n    'return': function () {\n      SAFE_CLOSING = true;\n    }\n  };\n  iteratorWithReturn[ITERATOR] = function () {\n    return this;\n  };\n  // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing\n  Array.from(iteratorWithReturn, function () { throw 2; });\n} catch (error) { /* empty */ }\n\nmodule.exports = function (exec, SKIP_CLOSING) {\n  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n  var ITERATION_SUPPORT = false;\n  try {\n    var object = {};\n    object[ITERATOR] = function () {\n      return {\n        next: function () {\n          return { done: ITERATION_SUPPORT = true };\n        }\n      };\n    };\n    exec(object);\n  } catch (error) { /* empty */ }\n  return ITERATION_SUPPORT;\n};\n","import Vue, { VNodeData, PropType } from 'vue'\n\n// Directives\nimport Ripple, { RippleOptions } from '../../directives/ripple'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'routable',\n\n  directives: {\n    Ripple,\n  },\n\n  props: {\n    activeClass: String,\n    append: Boolean,\n    disabled: Boolean,\n    exact: {\n      type: Boolean as PropType<boolean | undefined>,\n      default: undefined,\n    },\n    exactPath: Boolean,\n    exactActiveClass: String,\n    link: Boolean,\n    href: [String, Object],\n    to: [String, Object],\n    nuxt: Boolean,\n    replace: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: null,\n    },\n    tag: String,\n    target: String,\n  },\n\n  data: () => ({\n    isActive: false,\n    proxyClass: '',\n  }),\n\n  computed: {\n    classes (): object {\n      const classes: Record<string, boolean> = {}\n\n      if (this.to) return classes\n\n      if (this.activeClass) classes[this.activeClass] = this.isActive\n      if (this.proxyClass) classes[this.proxyClass] = this.isActive\n\n      return classes\n    },\n    computedRipple (): RippleOptions | boolean {\n      return this.ripple ?? (!this.disabled && this.isClickable)\n    },\n    isClickable (): boolean {\n      if (this.disabled) return false\n\n      return Boolean(\n        this.isLink ||\n        this.$listeners.click ||\n        this.$listeners['!click'] ||\n        this.$attrs.tabindex\n      )\n    },\n    isLink (): boolean {\n      return this.to || this.href || this.link\n    },\n    styles: () => ({}),\n  },\n\n  watch: {\n    $route: 'onRouteChange',\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n    },\n    generateRouteLink () {\n      let exact = this.exact\n      let tag\n\n      const data: VNodeData = {\n        attrs: {\n          tabindex: 'tabindex' in this.$attrs ? this.$attrs.tabindex : undefined,\n        },\n        class: this.classes,\n        style: this.styles,\n        props: {},\n        directives: [{\n          name: 'ripple',\n          value: this.computedRipple,\n        }],\n        [this.to ? 'nativeOn' : 'on']: {\n          ...this.$listeners,\n          click: this.click,\n        },\n        ref: 'link',\n      }\n\n      if (typeof this.exact === 'undefined') {\n        exact = this.to === '/' ||\n          (this.to === Object(this.to) && this.to.path === '/')\n      }\n\n      if (this.to) {\n        // Add a special activeClass hook\n        // for component level styles\n        let activeClass = this.activeClass\n        let exactActiveClass = this.exactActiveClass || activeClass\n\n        if (this.proxyClass) {\n          activeClass = `${activeClass} ${this.proxyClass}`.trim()\n          exactActiveClass = `${exactActiveClass} ${this.proxyClass}`.trim()\n        }\n\n        tag = this.nuxt ? 'nuxt-link' : 'router-link'\n        Object.assign(data.props, {\n          to: this.to,\n          exact,\n          exactPath: this.exactPath,\n          activeClass,\n          exactActiveClass,\n          append: this.append,\n          replace: this.replace,\n        })\n      } else {\n        tag = (this.href && 'a') || this.tag || 'div'\n\n        if (tag === 'a' && this.href) data.attrs!.href = this.href\n      }\n\n      if (this.target) data.attrs!.target = this.target\n\n      return { tag, data }\n    },\n    onRouteChange () {\n      if (!this.to || !this.$refs.link || !this.$route) return\n      const activeClass = `${this.activeClass} ${this.proxyClass || ''}`.trim()\n\n      const path = `_vnode.data.class.${activeClass}`\n\n      this.$nextTick(() => {\n        /* istanbul ignore else */\n        if (getObjectValueByPath(this.$refs.link, path)) {\n          this.toggle()\n        }\n      })\n    },\n    toggle: () => { /* noop */ },\n  },\n})\n","var userAgent = require('../internals/engine-user-agent');\n\nmodule.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent);\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","/**\n * alphaTab v1.2.1 (, build 5)\n * \n * Copyright © 2021, Daniel Kuschny and Contributors, All rights reserved.\n * \n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * \n * SoundFont loading and Audio Synthesis based on TinySoundFont (licensed under MIT)\n * Copyright (C) 2017, 2018 Bernhard Schelling (https://github.com/schellingb/TinySoundFont)\n * \n * TinySoundFont is based on SFZero (licensed under MIT)\n * Copyright (C) 2012 Steve Folta (https://github.com/stevefolta/SFZero)\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.alphaTab = {}));\n}(this, (function (exports) { 'use strict';\n\n    (function (AlphaTabErrorType) {\r\n        AlphaTabErrorType[AlphaTabErrorType[\"General\"] = 0] = \"General\";\r\n        AlphaTabErrorType[AlphaTabErrorType[\"Format\"] = 1] = \"Format\";\r\n        AlphaTabErrorType[AlphaTabErrorType[\"AlphaTex\"] = 2] = \"AlphaTex\";\r\n    })(exports.AlphaTabErrorType || (exports.AlphaTabErrorType = {}));\r\n    class AlphaTabError extends Error {\r\n        constructor(type, message, inner) {\r\n            super(message);\r\n            this.type = type;\r\n            this.inner = inner !== null && inner !== void 0 ? inner : null;\r\n            Object.setPrototypeOf(this, AlphaTabError.prototype);\r\n        }\r\n    }\n\n    /**\r\n     * An invalid input format was detected (e.g. invalid setting values, file formats,...)\r\n     */\r\n    class FormatError extends AlphaTabError {\r\n        constructor(message) {\r\n            super(exports.AlphaTabErrorType.Format, message);\r\n            Object.setPrototypeOf(this, FormatError.prototype);\r\n        }\r\n    }\n\n    /**\r\n     * This public class provides names for all general midi instruments.\r\n     */\r\n    class GeneralMidi {\r\n        static getValue(name) {\r\n            if (!GeneralMidi._values) {\r\n                GeneralMidi._values = new Map();\r\n            }\r\n            name = name.toLowerCase().split(' ').join('');\r\n            return GeneralMidi._values.has(name) ? GeneralMidi._values.get(name) : 0;\r\n        }\r\n        static isPiano(program) {\r\n            return program <= 7 || program >= 16 && program <= 23;\r\n        }\r\n        static isGuitar(program) {\r\n            return program >= 24 && program <= 39 || program === 105 || program === 43;\r\n        }\r\n    }\r\n    GeneralMidi._values = new Map([\r\n        ['acousticgrandpiano', 0], ['brightacousticpiano', 1], ['electricgrandpiano', 2],\r\n        ['honkytonkpiano', 3], ['electricpiano1', 4], ['electricpiano2', 5], ['harpsichord', 6],\r\n        ['clavinet', 7], ['celesta', 8], ['glockenspiel', 9], ['musicbox', 10], ['vibraphone', 11],\r\n        ['marimba', 12], ['xylophone', 13], ['tubularbells', 14], ['dulcimer', 15],\r\n        ['drawbarorgan', 16], ['percussiveorgan', 17], ['rockorgan', 18], ['churchorgan', 19],\r\n        ['reedorgan', 20], ['accordion', 21], ['harmonica', 22], ['tangoaccordion', 23],\r\n        ['acousticguitarnylon', 24], ['acousticguitarsteel', 25], ['electricguitarjazz', 26],\r\n        ['electricguitarclean', 27], ['electricguitarmuted', 28], ['overdrivenguitar', 29],\r\n        ['distortionguitar', 30], ['guitarharmonics', 31], ['acousticbass', 32],\r\n        ['electricbassfinger', 33], ['electricbasspick', 34], ['fretlessbass', 35],\r\n        ['slapbass1', 36], ['slapbass2', 37], ['synthbass1', 38], ['synthbass2', 39],\r\n        ['violin', 40], ['viola', 41], ['cello', 42], ['contrabass', 43], ['tremolostrings', 44],\r\n        ['pizzicatostrings', 45], ['orchestralharp', 46], ['timpani', 47], ['stringensemble1', 48],\r\n        ['stringensemble2', 49], ['synthstrings1', 50], ['synthstrings2', 51], ['choiraahs', 52],\r\n        ['voiceoohs', 53], ['synthvoice', 54], ['orchestrahit', 55], ['trumpet', 56],\r\n        ['trombone', 57], ['tuba', 58], ['mutedtrumpet', 59], ['frenchhorn', 60],\r\n        ['brasssection', 61], ['synthbrass1', 62], ['synthbrass2', 63], ['sopranosax', 64],\r\n        ['altosax', 65], ['tenorsax', 66], ['baritonesax', 67], ['oboe', 68], ['englishhorn', 69],\r\n        ['bassoon', 70], ['clarinet', 71], ['piccolo', 72], ['flute', 73], ['recorder', 74],\r\n        ['panflute', 75], ['blownbottle', 76], ['shakuhachi', 77], ['whistle', 78], ['ocarina', 79],\r\n        ['lead1square', 80], ['lead2sawtooth', 81], ['lead3calliope', 82], ['lead4chiff', 83],\r\n        ['lead5charang', 84], ['lead6voice', 85], ['lead7fifths', 86], ['lead8bassandlead', 87],\r\n        ['pad1newage', 88], ['pad2warm', 89], ['pad3polysynth', 90], ['pad4choir', 91],\r\n        ['pad5bowed', 92], ['pad6metallic', 93], ['pad7halo', 94], ['pad8sweep', 95],\r\n        ['fx1rain', 96], ['fx2soundtrack', 97], ['fx3crystal', 98], ['fx4atmosphere', 99],\r\n        ['fx5brightness', 100], ['fx6goblins', 101], ['fx7echoes', 102], ['fx8scifi', 103],\r\n        ['sitar', 104], ['banjo', 105], ['shamisen', 106], ['koto', 107], ['kalimba', 108],\r\n        ['bagpipe', 109], ['fiddle', 110], ['shanai', 111], ['tinklebell', 112], ['agogo', 113],\r\n        ['steeldrums', 114], ['woodblock', 115], ['taikodrum', 116], ['melodictom', 117],\r\n        ['synthdrum', 118], ['reversecymbal', 119], ['guitarfretnoise', 120], ['breathnoise', 121],\r\n        ['seashore', 122], ['birdtweet', 123], ['telephonering', 124], ['helicopter', 125],\r\n        ['applause', 126], ['gunshot', 127]\r\n    ]);\n\n    /**\r\n     * Lists all fingers.\r\n     */\r\n    var Fingers;\r\n    (function (Fingers) {\r\n        /**\r\n         * Unknown type (not documented)\r\n         */\r\n        Fingers[Fingers[\"Unknown\"] = -2] = \"Unknown\";\r\n        /**\r\n         * No finger, dead note\r\n         */\r\n        Fingers[Fingers[\"NoOrDead\"] = -1] = \"NoOrDead\";\r\n        /**\r\n         * The thumb\r\n         */\r\n        Fingers[Fingers[\"Thumb\"] = 0] = \"Thumb\";\r\n        /**\r\n         * The index finger\r\n         */\r\n        Fingers[Fingers[\"IndexFinger\"] = 1] = \"IndexFinger\";\r\n        /**\r\n         * The middle finger\r\n         */\r\n        Fingers[Fingers[\"MiddleFinger\"] = 2] = \"MiddleFinger\";\r\n        /**\r\n         * The annular finger\r\n         */\r\n        Fingers[Fingers[\"AnnularFinger\"] = 3] = \"AnnularFinger\";\r\n        /**\r\n         * The little finger\r\n         */\r\n        Fingers[Fingers[\"LittleFinger\"] = 4] = \"LittleFinger\";\r\n    })(Fingers || (Fingers = {}));\n\n    /**\r\n     * Lists the different modes on how rhythm notation is shown on the tab staff.\r\n     */\r\n    (function (TabRhythmMode) {\r\n        /**\r\n         * Rhythm notation is hidden.\r\n         */\r\n        TabRhythmMode[TabRhythmMode[\"Hidden\"] = 0] = \"Hidden\";\r\n        /**\r\n         * Rhythm notation is shown with individual beams per beat.\r\n         */\r\n        TabRhythmMode[TabRhythmMode[\"ShowWithBeams\"] = 1] = \"ShowWithBeams\";\r\n        /**\r\n         * Rhythm notation is shown and behaves like normal score notation with connected bars.\r\n         */\r\n        TabRhythmMode[TabRhythmMode[\"ShowWithBars\"] = 2] = \"ShowWithBars\";\r\n    })(exports.TabRhythmMode || (exports.TabRhythmMode = {}));\r\n    (function (FingeringMode) {\r\n        /**\r\n         * Fingerings will be shown in the standard notation staff.\r\n         */\r\n        FingeringMode[FingeringMode[\"ScoreDefault\"] = 0] = \"ScoreDefault\";\r\n        /**\r\n         * Fingerings will be shown in the standard notation staff. Piano finger style is enforced, where\r\n         * fingers are rendered as 1-5 instead of p,i,m,a,c and T,1,2,3,4.\r\n         */\r\n        FingeringMode[FingeringMode[\"ScoreForcePiano\"] = 1] = \"ScoreForcePiano\";\r\n        /**\r\n         * Fingerings will be shown in a effect band above the tabs in case\r\n         * they have only a single note on the beat.\r\n         */\r\n        FingeringMode[FingeringMode[\"SingleNoteEffectBand\"] = 2] = \"SingleNoteEffectBand\";\r\n        /**\r\n         * Fingerings will be shown in a effect band above the tabs in case\r\n         * they have only a single note on the beat. Piano finger style is enforced, where\r\n         * fingers are rendered as 1-5 instead of p,i,m,a,c and T,1,2,3,4.\r\n         */\r\n        FingeringMode[FingeringMode[\"SingleNoteEffectBandForcePiano\"] = 3] = \"SingleNoteEffectBandForcePiano\";\r\n    })(exports.FingeringMode || (exports.FingeringMode = {}));\r\n    (function (NotationMode) {\r\n        /**\r\n         * Music elements will be displayed and played as in Guitar Pro.\r\n         */\r\n        NotationMode[NotationMode[\"GuitarPro\"] = 0] = \"GuitarPro\";\r\n        /**\r\n         * Music elements will be displayed and played as in traditional songbooks.\r\n         * Changes:\r\n         * 1. Bends\r\n         *   For bends additional grace beats are introduced.\r\n         *   Bends are categorized into gradual and fast bends.\r\n         *   - Gradual bends are indicated by beat text \"grad\" or \"grad.\". Bend will sound along the beat duration.\r\n         *   - Fast bends are done right before the next note. If the next note is tied even on-beat of the next note.\r\n         * 2. Whammy Bars\r\n         *   Dips are shown as simple annotation over the beats\r\n         *   Whammy Bars are categorized into gradual and fast.\r\n         *   - Gradual whammys are indicated by beat text \"grad\" or \"grad.\". Whammys will sound along the beat duration.\r\n         *   - Fast whammys are done right the beat.\r\n         * 3. Let Ring\r\n         *   Tied notes with let ring are not shown in standard notation\r\n         *   Let ring does not cause a longer playback, duration is defined via tied notes.\r\n         */\r\n        NotationMode[NotationMode[\"SongBook\"] = 1] = \"SongBook\";\r\n    })(exports.NotationMode || (exports.NotationMode = {}));\r\n    /**\r\n     * Lists all major music notation elements that are part\r\n     * of the music sheet and can be dynamically controlled to be shown\r\n     * or hidden.\r\n     */\r\n    var NotationElement;\r\n    (function (NotationElement) {\r\n        /**\r\n         * The score title shown at the start of the music sheet.\r\n         */\r\n        NotationElement[NotationElement[\"ScoreTitle\"] = 0] = \"ScoreTitle\";\r\n        /**\r\n         * The score subtitle shown at the start of the music sheet.\r\n         */\r\n        NotationElement[NotationElement[\"ScoreSubTitle\"] = 1] = \"ScoreSubTitle\";\r\n        /**\r\n         * The score artist shown at the start of the music sheet.\r\n         */\r\n        NotationElement[NotationElement[\"ScoreArtist\"] = 2] = \"ScoreArtist\";\r\n        /**\r\n         * The score album shown at the start of the music sheet.\r\n         */\r\n        NotationElement[NotationElement[\"ScoreAlbum\"] = 3] = \"ScoreAlbum\";\r\n        /**\r\n         * The score words author shown at the start of the music sheet.\r\n         */\r\n        NotationElement[NotationElement[\"ScoreWords\"] = 4] = \"ScoreWords\";\r\n        /**\r\n         * The score music author shown at the start of the music sheet.\r\n         */\r\n        NotationElement[NotationElement[\"ScoreMusic\"] = 5] = \"ScoreMusic\";\r\n        /**\r\n         * The score words&music author shown at the start of the music sheet.\r\n         */\r\n        NotationElement[NotationElement[\"ScoreWordsAndMusic\"] = 6] = \"ScoreWordsAndMusic\";\r\n        /**\r\n         * The score copyright owner shown at the start of the music sheet.\r\n         */\r\n        NotationElement[NotationElement[\"ScoreCopyright\"] = 7] = \"ScoreCopyright\";\r\n        /**\r\n         * The tuning information of the guitar shown\r\n         * above the staves.\r\n         */\r\n        NotationElement[NotationElement[\"GuitarTuning\"] = 8] = \"GuitarTuning\";\r\n        /**\r\n         * The track names which are shown in the accolade.\r\n         */\r\n        NotationElement[NotationElement[\"TrackNames\"] = 9] = \"TrackNames\";\r\n        /**\r\n         * The chord diagrams for guitars. Usually shown\r\n         * below the score info.\r\n         */\r\n        NotationElement[NotationElement[\"ChordDiagrams\"] = 10] = \"ChordDiagrams\";\r\n        /**\r\n         * Parenthesis that are shown for tied bends\r\n         * if they are preceeded by bends.\r\n         */\r\n        NotationElement[NotationElement[\"ParenthesisOnTiedBends\"] = 11] = \"ParenthesisOnTiedBends\";\r\n        /**\r\n         * The tab number for tied notes if the\r\n         * bend of a note is increased at that point.\r\n         */\r\n        NotationElement[NotationElement[\"TabNotesOnTiedBends\"] = 12] = \"TabNotesOnTiedBends\";\r\n        /**\r\n         * Zero tab numbers on \"dive whammys\".\r\n         */\r\n        NotationElement[NotationElement[\"ZerosOnDiveWhammys\"] = 13] = \"ZerosOnDiveWhammys\";\r\n        /**\r\n         * The alternate endings information on repeats shown above the staff.\r\n         */\r\n        NotationElement[NotationElement[\"EffectAlternateEndings\"] = 14] = \"EffectAlternateEndings\";\r\n        /**\r\n         * The information about the fret on which the capo is placed shown above the staff.\r\n         */\r\n        NotationElement[NotationElement[\"EffectCapo\"] = 15] = \"EffectCapo\";\r\n        /**\r\n         * The chord names shown above beats shown above the staff.\r\n         */\r\n        NotationElement[NotationElement[\"EffectChordNames\"] = 16] = \"EffectChordNames\";\r\n        /**\r\n         * The crescendo/decrescendo angle  shown above the staff.\r\n         */\r\n        NotationElement[NotationElement[\"EffectCrescendo\"] = 17] = \"EffectCrescendo\";\r\n        /**\r\n         * The beat dynamics  shown above the staff.\r\n         */\r\n        NotationElement[NotationElement[\"EffectDynamics\"] = 18] = \"EffectDynamics\";\r\n        /**\r\n         * The curved angle for fade in/out effects  shown above the staff.\r\n         */\r\n        NotationElement[NotationElement[\"EffectFadeIn\"] = 19] = \"EffectFadeIn\";\r\n        /**\r\n         * The fermata symbol shown above the staff.\r\n         */\r\n        NotationElement[NotationElement[\"EffectFermata\"] = 20] = \"EffectFermata\";\r\n        /**\r\n         * The fingering information.\r\n         */\r\n        NotationElement[NotationElement[\"EffectFingering\"] = 21] = \"EffectFingering\";\r\n        /**\r\n         * The harmonics names shown above the staff.\r\n         * (does not represent the harmonic note heads)\r\n         */\r\n        NotationElement[NotationElement[\"EffectHarmonics\"] = 22] = \"EffectHarmonics\";\r\n        /**\r\n         * The let ring name and line above the staff.\r\n         */\r\n        NotationElement[NotationElement[\"EffectLetRing\"] = 23] = \"EffectLetRing\";\r\n        /**\r\n         * The lyrics of the track shown above the staff.\r\n         */\r\n        NotationElement[NotationElement[\"EffectLyrics\"] = 24] = \"EffectLyrics\";\r\n        /**\r\n         * The section markers shown above the staff.\r\n         */\r\n        NotationElement[NotationElement[\"EffectMarker\"] = 25] = \"EffectMarker\";\r\n        /**\r\n         * The ottava symbol and lines shown above the staff.\r\n         */\r\n        NotationElement[NotationElement[\"EffectOttavia\"] = 26] = \"EffectOttavia\";\r\n        /**\r\n         * The palm mute name and line shown above the staff.\r\n         */\r\n        NotationElement[NotationElement[\"EffectPalmMute\"] = 27] = \"EffectPalmMute\";\r\n        /**\r\n         * The pick slide information shown above the staff.\r\n         * (does not control the pick slide lines)\r\n         */\r\n        NotationElement[NotationElement[\"EffectPickSlide\"] = 28] = \"EffectPickSlide\";\r\n        /**\r\n         * The pick stroke symbols shown above the staff.\r\n         */\r\n        NotationElement[NotationElement[\"EffectPickStroke\"] = 29] = \"EffectPickStroke\";\r\n        /**\r\n         * The slight beat vibrato waves shown above the staff.\r\n         */\r\n        NotationElement[NotationElement[\"EffectSlightBeatVibrato\"] = 30] = \"EffectSlightBeatVibrato\";\r\n        /**\r\n         * The slight note vibrato waves shown above the staff.\r\n         */\r\n        NotationElement[NotationElement[\"EffectSlightNoteVibrato\"] = 31] = \"EffectSlightNoteVibrato\";\r\n        /**\r\n         * The tap/slap/pop effect names shown above the staff.\r\n         */\r\n        NotationElement[NotationElement[\"EffectTap\"] = 32] = \"EffectTap\";\r\n        /**\r\n         * The tempo information shown above the staff.\r\n         */\r\n        NotationElement[NotationElement[\"EffectTempo\"] = 33] = \"EffectTempo\";\r\n        /**\r\n         * The additional beat text shown above the staff.\r\n         */\r\n        NotationElement[NotationElement[\"EffectText\"] = 34] = \"EffectText\";\r\n        /**\r\n         * The trill name and waves shown above the staff.\r\n         */\r\n        NotationElement[NotationElement[\"EffectTrill\"] = 35] = \"EffectTrill\";\r\n        /**\r\n         * The triplet feel symbol shown above the staff.\r\n         */\r\n        NotationElement[NotationElement[\"EffectTripletFeel\"] = 36] = \"EffectTripletFeel\";\r\n        /**\r\n         * The whammy bar information shown above the staff.\r\n         * (does not control the whammy lines shown within the staff)\r\n         */\r\n        NotationElement[NotationElement[\"EffectWhammyBar\"] = 37] = \"EffectWhammyBar\";\r\n        /**\r\n         * The wide beat vibrato waves shown above the staff.\r\n         */\r\n        NotationElement[NotationElement[\"EffectWideBeatVibrato\"] = 38] = \"EffectWideBeatVibrato\";\r\n        /**\r\n         * The wide note vibrato waves shown above the staff.\r\n         */\r\n        NotationElement[NotationElement[\"EffectWideNoteVibrato\"] = 39] = \"EffectWideNoteVibrato\";\r\n        /**\r\n         * The left hand tap symbol shown above the staff.\r\n         */\r\n        NotationElement[NotationElement[\"EffectLeftHandTap\"] = 40] = \"EffectLeftHandTap\";\r\n    })(NotationElement || (NotationElement = {}));\r\n    /**\r\n     * The notation settings control how various music notation elements are shown and behaving\r\n     * @json\r\n     */\r\n    class NotationSettings {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the mode to use for display and play music notation elements.\r\n             */\r\n            this.notationMode = exports.NotationMode.GuitarPro;\r\n            /**\r\n             * Gets or sets the fingering mode to use.\r\n             */\r\n            this.fingeringMode = exports.FingeringMode.ScoreDefault;\r\n            /**\r\n             * Gets or sets the configuration on whether music notation elements are visible or not.\r\n             * If notation elements are not specified, the default configuration will be applied.\r\n             */\r\n            this.elements = new Map();\r\n            /**\r\n             * Whether to show rhythm notation in the guitar tablature.\r\n             */\r\n            this.rhythmMode = exports.TabRhythmMode.Hidden;\r\n            /**\r\n             * The height of the rythm bars.\r\n             */\r\n            this.rhythmHeight = 15;\r\n            /**\r\n             * The transposition pitch offsets for the individual tracks.\r\n             * They apply to rendering and playback.\r\n             */\r\n            this.transpositionPitches = [];\r\n            /**\r\n             * The transposition pitch offsets for the individual tracks.\r\n             * They apply to rendering only.\r\n             */\r\n            this.displayTranspositionPitches = [];\r\n            /**\r\n             * If set to true the guitar tabs on grace beats are rendered smaller.\r\n             */\r\n            this.smallGraceTabNotes = true;\r\n            /**\r\n             * If set to true bend arrows expand to the end of the last tied note\r\n             * of the string. Otherwise they end on the next beat.\r\n             */\r\n            this.extendBendArrowsOnTiedNotes = true;\r\n            /**\r\n             * If set to true, line effects (like w/bar, let-ring etc)\r\n             * are drawn until the end of the beat instead of the start.\r\n             */\r\n            this.extendLineEffectsToBeatEnd = false;\r\n            /**\r\n             * Gets or sets the height for slurs. The factor is multiplied with the a logarithmic distance\r\n             * between slur start and end.\r\n             */\r\n            this.slurHeight = 5.0;\r\n        }\r\n        /**\r\n         * Gets whether the given music notation element should be shown\r\n         * @param element the element to check\r\n         * @returns true if the element should be shown, otherwise false.\r\n         */\r\n        isNotationElementVisible(element) {\r\n            if (this.elements.has(element)) {\r\n                return this.elements.get(element);\r\n            }\r\n            if (NotationSettings.defaultElements.has(element)) {\r\n                return NotationSettings.defaultElements.get(element);\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    /**\r\n     * Gets the default configuration of the {@see notationElements} setting. Do not modify\r\n     * this map as it might not result in the expected side effects.\r\n     * If items are not listed explicitly in this list, they are considered visible.\r\n     */\r\n    NotationSettings.defaultElements = new Map([\r\n        [NotationElement.ZerosOnDiveWhammys, false]\r\n    ]);\n\n    class TuningParseResult {\r\n        constructor() {\r\n            this.note = null;\r\n            this.noteValue = 0;\r\n            this.octave = 0;\r\n        }\r\n        get realValue() {\r\n            return this.octave * 12 + this.noteValue;\r\n        }\r\n    }\r\n    /**\r\n     * This public class contains some utilities for working with model public classes\r\n     */\r\n    class ModelUtils {\r\n        static getIndex(duration) {\r\n            let index = 0;\r\n            let value = duration;\r\n            if (value < 0) {\r\n                return index;\r\n            }\r\n            return Math.log2(duration) | 0;\r\n        }\r\n        static keySignatureIsFlat(ks) {\r\n            return ks < 0;\r\n        }\r\n        static keySignatureIsNatural(ks) {\r\n            return ks === 0;\r\n        }\r\n        static keySignatureIsSharp(ks) {\r\n            return ks > 0;\r\n        }\r\n        static applyPitchOffsets(settings, score) {\r\n            for (let i = 0; i < score.tracks.length; i++) {\r\n                if (i < settings.notation.displayTranspositionPitches.length) {\r\n                    for (let staff of score.tracks[i].staves) {\r\n                        staff.displayTranspositionPitch = -settings.notation.displayTranspositionPitches[i];\r\n                    }\r\n                }\r\n                if (i < settings.notation.transpositionPitches.length) {\r\n                    for (let staff of score.tracks[i].staves) {\r\n                        staff.transpositionPitch = -settings.notation.transpositionPitches[i];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        static fingerToString(settings, beat, finger, leftHand) {\r\n            if (settings.notation.fingeringMode === exports.FingeringMode.ScoreForcePiano ||\r\n                settings.notation.fingeringMode === exports.FingeringMode.SingleNoteEffectBandForcePiano ||\r\n                GeneralMidi.isPiano(beat.voice.bar.staff.track.playbackInfo.program)) {\r\n                switch (finger) {\r\n                    case Fingers.Unknown:\r\n                    case Fingers.NoOrDead:\r\n                        return null;\r\n                    case Fingers.Thumb:\r\n                        return '1';\r\n                    case Fingers.IndexFinger:\r\n                        return '2';\r\n                    case Fingers.MiddleFinger:\r\n                        return '3';\r\n                    case Fingers.AnnularFinger:\r\n                        return '4';\r\n                    case Fingers.LittleFinger:\r\n                        return '5';\r\n                    default:\r\n                        return null;\r\n                }\r\n            }\r\n            if (leftHand) {\r\n                switch (finger) {\r\n                    case Fingers.Unknown:\r\n                    case Fingers.NoOrDead:\r\n                        return '0';\r\n                    case Fingers.Thumb:\r\n                        return 'T';\r\n                    case Fingers.IndexFinger:\r\n                        return '1';\r\n                    case Fingers.MiddleFinger:\r\n                        return '2';\r\n                    case Fingers.AnnularFinger:\r\n                        return '3';\r\n                    case Fingers.LittleFinger:\r\n                        return '4';\r\n                    default:\r\n                        return null;\r\n                }\r\n            }\r\n            switch (finger) {\r\n                case Fingers.Unknown:\r\n                case Fingers.NoOrDead:\r\n                    return null;\r\n                case Fingers.Thumb:\r\n                    return 'p';\r\n                case Fingers.IndexFinger:\r\n                    return 'i';\r\n                case Fingers.MiddleFinger:\r\n                    return 'm';\r\n                case Fingers.AnnularFinger:\r\n                    return 'a';\r\n                case Fingers.LittleFinger:\r\n                    return 'c';\r\n                default:\r\n                    return null;\r\n            }\r\n        }\r\n        /**\r\n         * Checks if the given string is a tuning inticator.\r\n         * @param name\r\n         * @returns\r\n         */\r\n        static isTuning(name) {\r\n            return !!ModelUtils.parseTuning(name);\r\n        }\r\n        static parseTuning(name) {\r\n            let note = '';\r\n            let octave = '';\r\n            for (let i = 0; i < name.length; i++) {\r\n                let c = name.charCodeAt(i);\r\n                if (c >= 0x30 && c <= 0x39) {\r\n                    // number without note?\r\n                    if (!note) {\r\n                        return null;\r\n                    }\r\n                    octave += String.fromCharCode(c);\r\n                }\r\n                else if ((c >= 0x41 && c <= 0x5a) || (c >= 0x61 && c <= 0x7a) || c === 0x23) {\r\n                    note += String.fromCharCode(c);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n            if (!octave || !note) {\r\n                return null;\r\n            }\r\n            let result = new TuningParseResult();\r\n            result.octave = parseInt(octave) + 1;\r\n            result.note = note.toLowerCase();\r\n            result.noteValue = ModelUtils.getToneForText(result.note);\r\n            return result;\r\n        }\r\n        static getTuningForText(str) {\r\n            let result = ModelUtils.parseTuning(str);\r\n            if (!result) {\r\n                return -1;\r\n            }\r\n            return result.realValue;\r\n        }\r\n        static getToneForText(note) {\r\n            let b = 0;\r\n            switch (note.toLowerCase()) {\r\n                case 'c':\r\n                    b = 0;\r\n                    break;\r\n                case 'c#':\r\n                case 'db':\r\n                    b = 1;\r\n                    break;\r\n                case 'd':\r\n                    b = 2;\r\n                    break;\r\n                case 'd#':\r\n                case 'eb':\r\n                    b = 3;\r\n                    break;\r\n                case 'e':\r\n                    b = 4;\r\n                    break;\r\n                case 'f':\r\n                    b = 5;\r\n                    break;\r\n                case 'f#':\r\n                case 'gb':\r\n                    b = 6;\r\n                    break;\r\n                case 'g':\r\n                    b = 7;\r\n                    break;\r\n                case 'g#':\r\n                case 'ab':\r\n                    b = 8;\r\n                    break;\r\n                case 'a':\r\n                    b = 9;\r\n                    break;\r\n                case 'a#':\r\n                case 'bb':\r\n                    b = 10;\r\n                    break;\r\n                case 'b':\r\n                    b = 11;\r\n                    break;\r\n                default:\r\n                    return 0;\r\n            }\r\n            return b;\r\n        }\r\n        static newGuid() {\r\n            return (Math.floor((1 + Math.random()) * 0x10000)\r\n                .toString(16)\r\n                .substring(1) +\r\n                Math.floor((1 + Math.random()) * 0x10000)\r\n                    .toString(16)\r\n                    .substring(1) +\r\n                '-' +\r\n                Math.floor((1 + Math.random()) * 0x10000)\r\n                    .toString(16)\r\n                    .substring(1) +\r\n                '-' +\r\n                Math.floor((1 + Math.random()) * 0x10000)\r\n                    .toString(16)\r\n                    .substring(1) +\r\n                '-' +\r\n                Math.floor((1 + Math.random()) * 0x10000)\r\n                    .toString(16)\r\n                    .substring(1) +\r\n                '-' +\r\n                Math.floor((1 + Math.random()) * 0x10000)\r\n                    .toString(16)\r\n                    .substring(1) +\r\n                Math.floor((1 + Math.random()) * 0x10000)\r\n                    .toString(16)\r\n                    .substring(1) +\r\n                Math.floor((1 + Math.random()) * 0x10000)\r\n                    .toString(16)\r\n                    .substring(1));\r\n        }\r\n        static isAlmostEqualTo(a, b) {\r\n            return Math.abs(a - b) < 0.00001;\r\n        }\r\n        static toHexString(n, digits = 0) {\r\n            let s = '';\r\n            let hexChars = '0123456789ABCDEF';\r\n            do {\r\n                s = String.fromCharCode(hexChars.charCodeAt(n & 15)) + s;\r\n                n = n >> 4;\r\n            } while (n > 0);\r\n            while (s.length < digits) {\r\n                s = '0' + s;\r\n            }\r\n            return s;\r\n        }\r\n    }\n\n    /**\r\n     * @json_immutable\r\n     */\r\n    class Color {\r\n        /**\r\n         * Initializes a new instance of the {@link Color} class.\r\n         * @param r The red component.\r\n         * @param g The green component.\r\n         * @param b The blue component.\r\n         * @param a The alpha component.\r\n         */\r\n        constructor(r, g, b, a = 0xff) {\r\n            /**\r\n             * Gets or sets the raw RGBA value.\r\n             */\r\n            this.raw = 0;\r\n            this.raw = 0;\r\n            this.raw = ((a & 0xff) << 24) | ((r & 0xff) << 16) | ((g & 0xff) << 8) | (b & 0xff);\r\n            this.updateRgba();\r\n        }\r\n        updateRgba() {\r\n            if (this.a === 0xff) {\r\n                this.rgba =\r\n                    '#' +\r\n                        ModelUtils.toHexString(this.r, 2) +\r\n                        ModelUtils.toHexString(this.g, 2) +\r\n                        ModelUtils.toHexString(this.b, 2);\r\n            }\r\n            else {\r\n                this.rgba = `rgba(${this.r},${this.g},${this.b},${this.a / 255.0})`;\r\n            }\r\n        }\r\n        get a() {\r\n            return (this.raw >> 24) & 0xff;\r\n        }\r\n        get r() {\r\n            return (this.raw >> 16) & 0xff;\r\n        }\r\n        get g() {\r\n            return (this.raw >> 8) & 0xff;\r\n        }\r\n        get b() {\r\n            return this.raw & 0xff;\r\n        }\r\n        static random(opacity = 100) {\r\n            return new Color((Math.random() * 255) | 0, (Math.random() * 255) | 0, (Math.random() * 255) | 0, opacity);\r\n        }\r\n        static fromJson(v) {\r\n            switch (typeof v) {\r\n                case 'number':\r\n                    {\r\n                        const c = new Color(0, 0, 0, 0);\r\n                        c.raw = v;\r\n                        c.updateRgba();\r\n                        return c;\r\n                    }\r\n                case 'string':\r\n                    {\r\n                        const json = v;\r\n                        if (json.startsWith('#')) {\r\n                            if (json.length === 4) {\r\n                                // #RGB\r\n                                return new Color(parseInt(json.substring(1, 1), 16) * 17, parseInt(json.substring(2, 1), 16) * 17, parseInt(json.substring(3, 1), 16) * 17);\r\n                            }\r\n                            if (json.length === 5) {\r\n                                // #RGBA\r\n                                return new Color(parseInt(json.substring(1, 1), 16) * 17, parseInt(json.substring(2, 1), 16) * 17, parseInt(json.substring(3, 1), 16) * 17, parseInt(json.substring(4, 1), 16) * 17);\r\n                            }\r\n                            if (json.length === 7) {\r\n                                // #RRGGBB\r\n                                return new Color(parseInt(json.substring(1, 2), 16), parseInt(json.substring(3, 2), 16), parseInt(json.substring(5, 2), 16));\r\n                            }\r\n                            if (json.length === 9) {\r\n                                // #RRGGBBAA\r\n                                return new Color(parseInt(json.substring(1, 2), 16), parseInt(json.substring(3, 2), 16), parseInt(json.substring(5, 2), 16), parseInt(json.substring(7, 2), 16));\r\n                            }\r\n                        }\r\n                        else if (json.startsWith('rgba') || json.startsWith('rgb')) {\r\n                            const start = json.indexOf('(');\r\n                            const end = json.lastIndexOf(')');\r\n                            if (start === -1 || end === -1) {\r\n                                throw new FormatError('No values specified for rgb/rgba function');\r\n                            }\r\n                            const numbers = json.substring(start + 1, end - start - 1).split(',');\r\n                            if (numbers.length === 3) {\r\n                                return new Color(parseInt(numbers[0]), parseInt(numbers[1]), parseInt(numbers[2]));\r\n                            }\r\n                            if (numbers.length === 4) {\r\n                                return new Color(parseInt(numbers[0]), parseInt(numbers[1]), parseInt(numbers[2]), parseFloat(numbers[3]) * 255);\r\n                            }\r\n                        }\r\n                        return null;\r\n                    }\r\n            }\r\n            throw new FormatError('Unsupported format for color');\r\n        }\r\n        static toJson(obj) {\r\n            return obj.raw;\r\n        }\r\n    }\r\n    Color.BlackRgb = '#000000';\n\n    /**\r\n     * @partial\r\n     */\r\n    class JsonHelper {\r\n        /**\r\n         * @target web\r\n         */\r\n        static parseEnum(s, enumType) {\r\n            switch (typeof s) {\r\n                case 'string':\r\n                    const num = parseInt(s);\r\n                    return isNaN(num)\r\n                        ? enumType[Object.keys(enumType).find(k => k.toLowerCase() === s.toLowerCase())]\r\n                        : num;\r\n                case 'number':\r\n                    return s;\r\n                case 'undefined':\r\n                case 'object':\r\n                    return null;\r\n            }\r\n            throw new AlphaTabError(exports.AlphaTabErrorType.Format, `Could not parse enum value '${s}'`);\r\n        }\r\n        /**\r\n         * @target web\r\n         */\r\n        static forEach(s, func) {\r\n            if (s instanceof Map) {\r\n                s.forEach(func);\r\n            }\r\n            else if (typeof s === 'object') {\r\n                for (const k in s) {\r\n                    func(s[k], k);\r\n                }\r\n            }\r\n            // skip\r\n        }\r\n    }\n\n    /**\r\n     * A very basic font parser which parses the fields according to\r\n     * https://www.w3.org/TR/CSS21/fonts.html#propdef-font\r\n     */\r\n    class FontParserToken {\r\n        constructor(text, startPos, endPos) {\r\n            this.text = text;\r\n            this.startPos = startPos;\r\n            this.endPos = endPos;\r\n        }\r\n    }\r\n    class FontParser {\r\n        constructor(input) {\r\n            this.style = 'normal';\r\n            this.variant = 'normal';\r\n            this.weight = 'normal';\r\n            this.stretch = 'normal';\r\n            this.lineHeight = 'normal';\r\n            this.size = '1rem';\r\n            this.families = [];\r\n            this._currentTokenIndex = -1;\r\n            this._input = '';\r\n            this._currentToken = null;\r\n            this._input = input;\r\n            this._tokens = this.splitToTokens(input);\r\n        }\r\n        splitToTokens(input) {\r\n            const tokens = [];\r\n            let startPos = 0;\r\n            while (startPos < input.length) {\r\n                let endPos = startPos;\r\n                while (endPos < input.length && input.charAt(endPos) !== ' ') {\r\n                    endPos++;\r\n                }\r\n                if (endPos > startPos) {\r\n                    tokens.push(new FontParserToken(input.substring(startPos, endPos), startPos, endPos));\r\n                }\r\n                startPos = endPos + 1;\r\n            }\r\n            return tokens;\r\n        }\r\n        parse() {\r\n            var _a;\r\n            this.reset();\r\n            // default font flags\r\n            if (this._tokens.length === 1) {\r\n                switch ((_a = this._currentToken) === null || _a === void 0 ? void 0 : _a.text) {\r\n                    case 'caption':\r\n                    case 'icon':\r\n                    case 'menu':\r\n                    case 'message-box':\r\n                    case 'small-caption':\r\n                    case 'status-bar':\r\n                    case 'inherit':\r\n                        return;\r\n                }\r\n            }\r\n            this.fontStyleVariantWeight();\r\n            this.fontSizeLineHeight();\r\n            this.fontFamily();\r\n        }\r\n        fontFamily() {\r\n            if (!this._currentToken) {\r\n                throw new Error(`Missing font list`);\r\n            }\r\n            const familyListInput = this._input.substr(this._currentToken.startPos).trim();\r\n            let pos = 0;\r\n            while (pos < familyListInput.length) {\r\n                let c = familyListInput.charAt(pos);\r\n                if (c === ' ' || c == ',') {\r\n                    // skip whitespace and quotes\r\n                    pos++;\r\n                }\r\n                else if (c === '\"' || c === \"'\") {\r\n                    // quoted \r\n                    const endOfString = this.findEndOfQuote(familyListInput, pos + 1, c);\r\n                    this.families.push(familyListInput.substring(pos + 1, endOfString).split(\"\\\\\" + c).join(c));\r\n                    pos = endOfString + 1;\r\n                }\r\n                else {\r\n                    // until comma\r\n                    const endOfString = this.findEndOfQuote(familyListInput, pos + 1, ',');\r\n                    this.families.push(familyListInput.substring(pos, endOfString).trim());\r\n                    pos = endOfString + 1;\r\n                }\r\n            }\r\n        }\r\n        findEndOfQuote(s, pos, quoteChar) {\r\n            let escaped = false;\r\n            while (pos < s.length) {\r\n                const c = s.charAt(pos);\r\n                if (!escaped && c === quoteChar) {\r\n                    return pos;\r\n                }\r\n                if (!escaped && c === '\\\\') {\r\n                    escaped = true;\r\n                }\r\n                else {\r\n                    escaped = false;\r\n                }\r\n                pos++;\r\n            }\r\n            return s.length;\r\n        }\r\n        fontSizeLineHeight() {\r\n            var _a;\r\n            if (!this._currentToken) {\r\n                throw new Error(`Missing font size`);\r\n            }\r\n            const parts = this._currentToken.text.split('/');\r\n            if (parts.length >= 3) {\r\n                throw new Error(`Invalid font size '${this._currentToken}' specified`);\r\n            }\r\n            this.nextToken();\r\n            if (parts.length >= 2) {\r\n                if (parts[1] === '/') {\r\n                    // size/ line-height (space after slash)\r\n                    if (!this._currentToken) {\r\n                        throw new Error('Missing line-height after font size');\r\n                    }\r\n                    this.lineHeight = this._currentToken.text;\r\n                    this.nextToken();\r\n                }\r\n                else {\r\n                    // size/line-height (no spaces)\r\n                    this.size = parts[0];\r\n                    this.lineHeight = parts[1];\r\n                }\r\n            }\r\n            else if (parts.length >= 1) {\r\n                this.size = parts[0];\r\n                if (((_a = this._currentToken) === null || _a === void 0 ? void 0 : _a.text.indexOf('/')) === 0) {\r\n                    // size / line-height (with spaces befor and after slash)\r\n                    if (this._currentToken.text === '/') {\r\n                        this.nextToken();\r\n                        if (!this._currentToken) {\r\n                            throw new Error('Missing line-height after font size');\r\n                        }\r\n                        this.lineHeight = this._currentToken.text;\r\n                        this.nextToken();\r\n                    }\r\n                    else {\r\n                        this.lineHeight = this._currentToken.text.substr(1);\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                throw new Error(`Missing font size`);\r\n            }\r\n        }\r\n        nextToken() {\r\n            this._currentTokenIndex++;\r\n            if (this._currentTokenIndex < this._tokens.length) {\r\n                this._currentToken = this._tokens[this._currentTokenIndex];\r\n            }\r\n            else {\r\n                this._currentToken = null;\r\n            }\r\n        }\r\n        fontStyleVariantWeight() {\r\n            var _a, _b, _c, _d, _e;\r\n            let hasStyle = false;\r\n            let hasVariant = false;\r\n            let hasWeight = false;\r\n            let valuesNeeded = 3;\r\n            let ambiguous = [];\r\n            while (true) {\r\n                switch ((_a = this._currentToken) === null || _a === void 0 ? void 0 : _a.text) {\r\n                    // ambiguous\r\n                    case 'normal':\r\n                    case 'inherit':\r\n                        ambiguous.push((_b = this._currentToken) === null || _b === void 0 ? void 0 : _b.text);\r\n                        valuesNeeded--;\r\n                        this.nextToken();\r\n                        break;\r\n                    // style\r\n                    case 'italic':\r\n                    case 'oblique':\r\n                        this.style = (_c = this._currentToken) === null || _c === void 0 ? void 0 : _c.text;\r\n                        hasStyle = true;\r\n                        valuesNeeded--;\r\n                        this.nextToken();\r\n                        break;\r\n                    // variant\r\n                    case 'small-caps':\r\n                        this.variant = (_d = this._currentToken) === null || _d === void 0 ? void 0 : _d.text;\r\n                        hasVariant = true;\r\n                        valuesNeeded--;\r\n                        this.nextToken();\r\n                        break;\r\n                    // weight\r\n                    case 'bold':\r\n                    case 'bolder':\r\n                    case 'lighter':\r\n                    case '100':\r\n                    case '200':\r\n                    case '300':\r\n                    case '400':\r\n                    case '500':\r\n                    case '600':\r\n                    case '700':\r\n                    case '800':\r\n                    case '900':\r\n                        this.weight = (_e = this._currentToken) === null || _e === void 0 ? void 0 : _e.text;\r\n                        hasWeight = true;\r\n                        valuesNeeded--;\r\n                        this.nextToken();\r\n                        break;\r\n                    default:\r\n                        // unknown token -> done with this part\r\n                        return;\r\n                }\r\n                if (valuesNeeded === 0) {\r\n                    break;\r\n                }\r\n            }\r\n            while (ambiguous.length > 0) {\r\n                const v = ambiguous.pop();\r\n                if (!hasWeight) {\r\n                    this.weight = v;\r\n                }\r\n                else if (!hasVariant) {\r\n                    this.variant = v;\r\n                }\r\n                else if (!hasStyle) {\r\n                    this.style = v;\r\n                }\r\n            }\r\n        }\r\n        reset() {\r\n            this._currentTokenIndex = -1;\r\n            this.nextToken();\r\n        }\r\n    }\r\n    /**\r\n     * Lists all flags for font styles.\r\n     */\r\n    var FontStyle;\r\n    (function (FontStyle) {\r\n        /**\r\n         * No flags.\r\n         */\r\n        FontStyle[FontStyle[\"Plain\"] = 0] = \"Plain\";\r\n        /**\r\n         * Font is bold\r\n         */\r\n        FontStyle[FontStyle[\"Bold\"] = 1] = \"Bold\";\r\n        /**\r\n         * Font is italic.\r\n         */\r\n        FontStyle[FontStyle[\"Italic\"] = 2] = \"Italic\";\r\n    })(FontStyle || (FontStyle = {}));\r\n    /**\r\n     * @json_immutable\r\n     */\r\n    class Font {\r\n        /**\r\n         * Initializes a new instance of the {@link Font} class.\r\n         * @param family The family.\r\n         * @param size The size.\r\n         * @param style The style.\r\n         */\r\n        constructor(family, size, style = FontStyle.Plain) {\r\n            this._cssScale = 0.0;\r\n            this.family = family;\r\n            this.size = size;\r\n            this.style = style;\r\n            this._css = this.toCssString(1);\r\n        }\r\n        get isBold() {\r\n            return (this.style & FontStyle.Bold) !== 0;\r\n        }\r\n        get isItalic() {\r\n            return (this.style & FontStyle.Italic) !== 0;\r\n        }\r\n        toCssString(scale) {\r\n            if (!this._css || !(Math.abs(scale - this._cssScale) < 0.01)) {\r\n                let buf = '';\r\n                if (this.isBold) {\r\n                    buf += 'bold ';\r\n                }\r\n                if (this.isItalic) {\r\n                    buf += 'italic ';\r\n                }\r\n                buf += this.size * scale;\r\n                buf += 'px ';\r\n                buf += \"'\";\r\n                buf += this.family;\r\n                buf += \"'\";\r\n                this._css = buf;\r\n                this._cssScale = scale;\r\n            }\r\n            return this._css;\r\n        }\r\n        static fromJson(v) {\r\n            switch (typeof v) {\r\n                case 'undefined':\r\n                    return null;\r\n                case 'object':\r\n                    {\r\n                        const m = v;\r\n                        let family = m.get('family');\r\n                        let size = m.get('size');\r\n                        let style = JsonHelper.parseEnum(m.get('style'), FontStyle);\r\n                        return new Font(family, size, style);\r\n                    }\r\n                case 'string':\r\n                    {\r\n                        const parser = new FontParser(v);\r\n                        parser.parse();\r\n                        let family = parser.families[0];\r\n                        if ((family.startsWith(\"'\") && family.endsWith(\"'\")) || (family.startsWith('\"') && family.endsWith('\"'))) {\r\n                            family = family.substr(1, family.length - 2);\r\n                        }\r\n                        let fontSizeString = parser.size.toLowerCase();\r\n                        let fontSize = 0;\r\n                        // as per https://websemantics.uk/articles/font-size-conversion/\r\n                        switch (fontSizeString) {\r\n                            case 'xx-small':\r\n                                fontSize = 7;\r\n                                break;\r\n                            case 'x-small':\r\n                                fontSize = 10;\r\n                                break;\r\n                            case 'small':\r\n                            case 'smaller':\r\n                                fontSize = 13;\r\n                                break;\r\n                            case 'medium':\r\n                                fontSize = 16;\r\n                                break;\r\n                            case 'large':\r\n                            case 'larger':\r\n                                fontSize = 18;\r\n                                break;\r\n                            case 'x-large':\r\n                                fontSize = 24;\r\n                                break;\r\n                            case 'xx-large':\r\n                                fontSize = 32;\r\n                                break;\r\n                            default:\r\n                                try {\r\n                                    if (fontSizeString.endsWith('em')) {\r\n                                        fontSize = parseFloat(fontSizeString.substr(0, fontSizeString.length - 2)) * 16;\r\n                                    }\r\n                                    else if (fontSizeString.endsWith('pt')) {\r\n                                        fontSize = (parseFloat(fontSizeString.substr(0, fontSizeString.length - 2)) * 16.0) / 12.0;\r\n                                    }\r\n                                    else if (fontSizeString.endsWith('px')) {\r\n                                        fontSize = parseFloat(fontSizeString.substr(0, fontSizeString.length - 2));\r\n                                    }\r\n                                    else {\r\n                                        fontSize = 12;\r\n                                    }\r\n                                }\r\n                                catch (e) {\r\n                                    fontSize = 12;\r\n                                }\r\n                                break;\r\n                        }\r\n                        let fontStyle = FontStyle.Plain;\r\n                        if (parser.style === 'italic') {\r\n                            fontStyle |= FontStyle.Italic;\r\n                        }\r\n                        let fontWeightString = parser.weight.toLowerCase();\r\n                        switch (fontWeightString) {\r\n                            case 'normal':\r\n                            case 'lighter':\r\n                                break;\r\n                            default:\r\n                                fontStyle |= FontStyle.Bold;\r\n                                break;\r\n                        }\r\n                        return new Font(family, fontSize, fontStyle);\r\n                    }\r\n                default:\r\n                    return null;\r\n            }\r\n        }\r\n        static toJson(font) {\r\n            const o = new Map();\r\n            o.set('family', font.family);\r\n            o.set('size', font.size);\r\n            o.set('style', font.style);\r\n            return o;\r\n        }\r\n    }\n\n    /**\r\n     * This public class contains central definitions for controlling the visual appearance.\r\n     * @json\r\n     */\r\n    class RenderingResources {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the font to use for displaying the songs copyright information in the header of the music sheet.\r\n             */\r\n            this.copyrightFont = new Font(RenderingResources.sansFont, 12, FontStyle.Bold);\r\n            /**\r\n             * Gets or sets the font to use for displaying the songs title in the header of the music sheet.\r\n             */\r\n            this.titleFont = new Font(RenderingResources.serifFont, 32, FontStyle.Plain);\r\n            /**\r\n             * Gets or sets the font to use for displaying the songs subtitle in the header of the music sheet.\r\n             */\r\n            this.subTitleFont = new Font(RenderingResources.serifFont, 20, FontStyle.Plain);\r\n            /**\r\n             * Gets or sets the font to use for displaying the lyrics information in the header of the music sheet.\r\n             */\r\n            this.wordsFont = new Font(RenderingResources.serifFont, 15, FontStyle.Plain);\r\n            /**\r\n             * Gets or sets the font to use for displaying certain effect related elements in the music sheet.\r\n             */\r\n            this.effectFont = new Font(RenderingResources.serifFont, 12, FontStyle.Italic);\r\n            /**\r\n             * Gets or sets the font to use for displaying the fretboard numbers in chord diagrams.\r\n             */\r\n            this.fretboardNumberFont = new Font(RenderingResources.sansFont, 11, FontStyle.Plain);\r\n            /**\r\n             * Gets or sets the font to use for displaying the guitar tablature numbers in the music sheet.\r\n             */\r\n            this.tablatureFont = new Font(RenderingResources.sansFont, 13, FontStyle.Plain);\r\n            /**\r\n             * Gets or sets the font to use for grace notation related texts in the music sheet.\r\n             */\r\n            this.graceFont = new Font(RenderingResources.sansFont, 11, FontStyle.Plain);\r\n            /**\r\n             * Gets or sets the color to use for rendering the lines of staves.\r\n             */\r\n            this.staffLineColor = new Color(165, 165, 165, 0xff);\r\n            /**\r\n             * Gets or sets the color to use for rendering bar separators, the accolade and repeat signs.\r\n             */\r\n            this.barSeparatorColor = new Color(34, 34, 17, 0xff);\r\n            /**\r\n             * Gets or sets the font to use for displaying the bar numbers above the music sheet.\r\n             */\r\n            this.barNumberFont = new Font(RenderingResources.sansFont, 11, FontStyle.Plain);\r\n            /**\r\n             * Gets or sets the color to use for displaying the bar numbers above the music sheet.\r\n             */\r\n            this.barNumberColor = new Color(200, 0, 0, 0xff);\r\n            /**\r\n             * Gets or sets the font to use for displaying finger information in the music sheet.\r\n             */\r\n            this.fingeringFont = new Font(RenderingResources.serifFont, 14, FontStyle.Plain);\r\n            /**\r\n             * Gets or sets the font to use for section marker labels shown above the music sheet.\r\n             */\r\n            this.markerFont = new Font(RenderingResources.serifFont, 14, FontStyle.Bold);\r\n            /**\r\n             * Gets or sets the color to use for music notation elements of the primary voice.\r\n             */\r\n            this.mainGlyphColor = new Color(0, 0, 0, 0xff);\r\n            /**\r\n             * Gets or sets the color to use for music notation elements of the secondary voices.\r\n             */\r\n            this.secondaryGlyphColor = new Color(0, 0, 0, 100);\r\n            /**\r\n             * Gets or sets the color to use for displaying the song information above the music sheet.\r\n             */\r\n            this.scoreInfoColor = new Color(0, 0, 0, 0xff);\r\n        }\r\n    }\r\n    RenderingResources.sansFont = 'Arial';\r\n    RenderingResources.serifFont = 'Georgia';\n\n    (function (StaveProfile) {\r\n        /**\r\n         * The profile is auto detected by the track configurations.\r\n         */\r\n        StaveProfile[StaveProfile[\"Default\"] = 0] = \"Default\";\r\n        /**\r\n         * Standard music notation and guitar tablature are rendered.\r\n         */\r\n        StaveProfile[StaveProfile[\"ScoreTab\"] = 1] = \"ScoreTab\";\r\n        /**\r\n         * Only standard music notation is rendered.\r\n         */\r\n        StaveProfile[StaveProfile[\"Score\"] = 2] = \"Score\";\r\n        /**\r\n         * Only guitar tablature is rendered.\r\n         */\r\n        StaveProfile[StaveProfile[\"Tab\"] = 3] = \"Tab\";\r\n        /**\r\n         * Only guitar tablature is rendered, but also rests and time signatures are not shown.\r\n         * This profile is typically used in multi-track scenarios.\r\n         */\r\n        StaveProfile[StaveProfile[\"TabMixed\"] = 4] = \"TabMixed\";\r\n    })(exports.StaveProfile || (exports.StaveProfile = {}));\r\n    (function (LayoutMode) {\r\n        /**\r\n         * Bars are aligned in rows using a fixed width.\r\n         */\r\n        LayoutMode[LayoutMode[\"Page\"] = 0] = \"Page\";\r\n        /**\r\n         * Bars are aligned horizontally in one row\r\n         */\r\n        LayoutMode[LayoutMode[\"Horizontal\"] = 1] = \"Horizontal\";\r\n    })(exports.LayoutMode || (exports.LayoutMode = {}));\r\n    /**\r\n     * The display settings control how the general layout and display of alphaTab is done.\r\n     * @json\r\n     */\r\n    class DisplaySettings {\r\n        constructor() {\r\n            /**\r\n             * Sets the zoom level of the rendered notation\r\n             */\r\n            this.scale = 1.0;\r\n            /**\r\n             * The default stretch force to use for layouting.\r\n             */\r\n            this.stretchForce = 1.0;\r\n            /**\r\n             * The layouting mode used to arrange the the notation.\r\n             */\r\n            this.layoutMode = exports.LayoutMode.Page;\r\n            /**\r\n             * The stave profile to use.\r\n             */\r\n            this.staveProfile = exports.StaveProfile.Default;\r\n            /**\r\n             * Limit the displayed bars per row.\r\n             */\r\n            this.barsPerRow = -1;\r\n            /**\r\n             * The bar start number to start layouting with. Note that this is the bar number and not an index!\r\n             */\r\n            this.startBar = 1;\r\n            /**\r\n             * The amount of bars to render overall.\r\n             */\r\n            this.barCount = -1;\r\n            /**\r\n             * The number of bars that should be rendered per partial. This setting is not used by all layouts.\r\n             */\r\n            this.barCountPerPartial = 10;\r\n            /**\r\n             * Gets or sets the resources used during rendering. This defines all fonts and colors used.\r\n             * @json_partial_names\r\n             */\r\n            this.resources = new RenderingResources();\r\n            /**\r\n             * Gets or sets the padding between the music notation and the border.\r\n             */\r\n            this.padding = null;\r\n        }\r\n    }\n\n    /**\r\n     * This is the base public class for creating new song importers which\r\n     * enable reading scores from any binary datasource\r\n     */\r\n    class ScoreImporter {\r\n        /**\r\n         * Initializes the importer with the given data and settings.\r\n         */\r\n        init(data, settings) {\r\n            this.data = data;\r\n            this.settings = settings;\r\n        }\r\n    }\n\n    /**\r\n     * The exception thrown by a {@link ScoreImporter} in case the\r\n     * binary data does not contain a reader compatible structure.\r\n     */\r\n    class UnsupportedFormatError extends AlphaTabError {\r\n        constructor(message = 'Unsupported format', inner = null) {\r\n            super(exports.AlphaTabErrorType.Format, message);\r\n            this.inner = inner;\r\n            Object.setPrototypeOf(this, UnsupportedFormatError.prototype);\r\n        }\r\n    }\n\n    /**\r\n     * Lists all types of note acceuntations\r\n     */\r\n    var AccentuationType;\r\n    (function (AccentuationType) {\r\n        /**\r\n         * No accentuation\r\n         */\r\n        AccentuationType[AccentuationType[\"None\"] = 0] = \"None\";\r\n        /**\r\n         * Normal accentuation\r\n         */\r\n        AccentuationType[AccentuationType[\"Normal\"] = 1] = \"Normal\";\r\n        /**\r\n         * Heavy accentuation\r\n         */\r\n        AccentuationType[AccentuationType[\"Heavy\"] = 2] = \"Heavy\";\r\n    })(AccentuationType || (AccentuationType = {}));\n\n    /**\r\n     * This public enumeration lists all types of automations.\r\n     */\r\n    var AutomationType;\r\n    (function (AutomationType) {\r\n        /**\r\n         * Tempo change.\r\n         */\r\n        AutomationType[AutomationType[\"Tempo\"] = 0] = \"Tempo\";\r\n        /**\r\n         * Colume change.\r\n         */\r\n        AutomationType[AutomationType[\"Volume\"] = 1] = \"Volume\";\r\n        /**\r\n         * Instrument change.\r\n         */\r\n        AutomationType[AutomationType[\"Instrument\"] = 2] = \"Instrument\";\r\n        /**\r\n         * Balance change.\r\n         */\r\n        AutomationType[AutomationType[\"Balance\"] = 3] = \"Balance\";\r\n    })(AutomationType || (AutomationType = {}));\r\n    /**\r\n     * Automations are used to change the behaviour of a song.\r\n     * @cloneable\r\n     * @json\r\n     */\r\n    class Automation {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets whether the automation is applied linear.\r\n             */\r\n            this.isLinear = false;\r\n            /**\r\n             * Gets or sets the type of the automation.\r\n             */\r\n            this.type = AutomationType.Tempo;\r\n            /**\r\n             * Gets or sets the target value of the automation.\r\n             */\r\n            this.value = 0;\r\n            /**\r\n             * Gets or sets the relative position of of the automation.\r\n             */\r\n            this.ratioPosition = 0;\r\n            /**\r\n             * Gets or sets the additional text of the automation.\r\n             */\r\n            this.text = '';\r\n        }\r\n        static buildTempoAutomation(isLinear, ratioPosition, value, reference) {\r\n            if (reference < 1 || reference > 5) {\r\n                reference = 2;\r\n            }\r\n            let references = new Float32Array([1, 0.5, 1.0, 1.5, 2.0, 3.0]);\r\n            let automation = new Automation();\r\n            automation.type = AutomationType.Tempo;\r\n            automation.isLinear = isLinear;\r\n            automation.ratioPosition = ratioPosition;\r\n            automation.value = value * references[reference];\r\n            return automation;\r\n        }\r\n        static buildInstrumentAutomation(isLinear, ratioPosition, value) {\r\n            let automation = new Automation();\r\n            automation.type = AutomationType.Instrument;\r\n            automation.isLinear = isLinear;\r\n            automation.ratioPosition = ratioPosition;\r\n            automation.value = value;\r\n            return automation;\r\n        }\r\n    }\n\n    /**\r\n     * This public enumeration lists all supported Clefs.\r\n     */\r\n    var Clef;\r\n    (function (Clef) {\r\n        /**\r\n         * Neutral clef.\r\n         */\r\n        Clef[Clef[\"Neutral\"] = 0] = \"Neutral\";\r\n        /**\r\n         * C3 clef\r\n         */\r\n        Clef[Clef[\"C3\"] = 1] = \"C3\";\r\n        /**\r\n         * C4 clef\r\n         */\r\n        Clef[Clef[\"C4\"] = 2] = \"C4\";\r\n        /**\r\n         * F4 clef\r\n         */\r\n        Clef[Clef[\"F4\"] = 3] = \"F4\";\r\n        /**\r\n         * G2 clef\r\n         */\r\n        Clef[Clef[\"G2\"] = 4] = \"G2\";\r\n    })(Clef || (Clef = {}));\n\n    /**\r\n     * Lists all ottavia.\r\n     */\r\n    var Ottavia;\r\n    (function (Ottavia) {\r\n        /**\r\n         * 2 octaves higher\r\n         */\r\n        Ottavia[Ottavia[\"_15ma\"] = 0] = \"_15ma\";\r\n        /**\r\n         * 1 octave higher\r\n         */\r\n        Ottavia[Ottavia[\"_8va\"] = 1] = \"_8va\";\r\n        /**\r\n         * Normal\r\n         */\r\n        Ottavia[Ottavia[\"Regular\"] = 2] = \"Regular\";\r\n        /**\r\n         * 1 octave lower\r\n         */\r\n        Ottavia[Ottavia[\"_8vb\"] = 3] = \"_8vb\";\r\n        /**\r\n         * 2 octaves lower.\r\n         */\r\n        Ottavia[Ottavia[\"_15mb\"] = 4] = \"_15mb\";\r\n    })(Ottavia || (Ottavia = {}));\n\n    /**\r\n     * Lists all simile mark types as they are assigned to bars.\r\n     */\r\n    var SimileMark;\r\n    (function (SimileMark) {\r\n        /**\r\n         * No simile mark is applied\r\n         */\r\n        SimileMark[SimileMark[\"None\"] = 0] = \"None\";\r\n        /**\r\n         * A simple simile mark. The previous bar is repeated.\r\n         */\r\n        SimileMark[SimileMark[\"Simple\"] = 1] = \"Simple\";\r\n        /**\r\n         * A double simile mark. This value is assigned to the first\r\n         * bar of the 2 repeat bars.\r\n         */\r\n        SimileMark[SimileMark[\"FirstOfDouble\"] = 2] = \"FirstOfDouble\";\r\n        /**\r\n         * A double simile mark. This value is assigned to the second\r\n         * bar of the 2 repeat bars.\r\n         */\r\n        SimileMark[SimileMark[\"SecondOfDouble\"] = 3] = \"SecondOfDouble\";\r\n    })(SimileMark || (SimileMark = {}));\n\n    /**\r\n     * A bar is a single block within a track, also known as Measure.\r\n     * @json\r\n     */\r\n    class Bar {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the unique id of this bar.\r\n             */\r\n            this.id = Bar._globalBarId++;\r\n            /**\r\n             * Gets or sets the zero-based index of this bar within the staff.\r\n             * @json_ignore\r\n             */\r\n            this.index = 0;\r\n            /**\r\n             * Gets or sets the next bar that comes after this bar.\r\n             * @json_ignore\r\n             */\r\n            this.nextBar = null;\r\n            /**\r\n             * Gets or sets the previous bar that comes before this bar.\r\n             * @json_ignore\r\n             */\r\n            this.previousBar = null;\r\n            /**\r\n             * Gets or sets the clef on this bar.\r\n             */\r\n            this.clef = Clef.G2;\r\n            /**\r\n             * Gets or sets the ottava applied to the clef.\r\n             */\r\n            this.clefOttava = Ottavia.Regular;\r\n            /**\r\n             * Gets or sets the list of voices contained in this bar.\r\n             * @json_add addVoice\r\n             */\r\n            this.voices = [];\r\n            /**\r\n             * Gets or sets the simile mark on this bar.\r\n             */\r\n            this.simileMark = SimileMark.None;\r\n            /**\r\n             * Gets a value indicating whether this bar contains multiple voices with notes.\r\n             * @json_ignore\r\n             */\r\n            this.isMultiVoice = false;\r\n        }\r\n        get masterBar() {\r\n            return this.staff.track.score.masterBars[this.index];\r\n        }\r\n        get isEmpty() {\r\n            for (let i = 0, j = this.voices.length; i < j; i++) {\r\n                if (!this.voices[i].isEmpty) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        addVoice(voice) {\r\n            voice.bar = this;\r\n            voice.index = this.voices.length;\r\n            this.voices.push(voice);\r\n        }\r\n        finish(settings) {\r\n            this.isMultiVoice = false;\r\n            for (let i = 0, j = this.voices.length; i < j; i++) {\r\n                let voice = this.voices[i];\r\n                voice.finish(settings);\r\n                if (i > 0 && !voice.isEmpty) {\r\n                    this.isMultiVoice = true;\r\n                }\r\n            }\r\n        }\r\n        calculateDuration() {\r\n            let duration = 0;\r\n            for (let voice of this.voices) {\r\n                let voiceDuration = voice.calculateDuration();\r\n                if (voiceDuration > duration) {\r\n                    duration = voiceDuration;\r\n                }\r\n            }\r\n            return duration;\r\n        }\r\n    }\r\n    Bar._globalBarId = 0;\n\n    class MidiUtils {\r\n        /**\r\n         * Converts the given midi tick duration into milliseconds.\r\n         * @param ticks The duration in midi ticks\r\n         * @param tempo The current tempo in BPM.\r\n         * @returns The converted duration in milliseconds.\r\n         */\r\n        static ticksToMillis(ticks, tempo) {\r\n            return (ticks * (60000.0 / (tempo * MidiUtils.QuarterTime))) | 0;\r\n        }\r\n        /**\r\n         * Converts the given midi tick duration into milliseconds.\r\n         * @param millis The duration in milliseconds\r\n         * @param tempo The current tempo in BPM.\r\n         * @returns The converted duration in midi ticks.\r\n         */\r\n        static millisToTicks(millis, tempo) {\r\n            return (millis / (60000.0 / (tempo * MidiUtils.QuarterTime))) | 0;\r\n        }\r\n        /**\r\n         * Converts a duration value to its ticks equivalent.\r\n         */\r\n        static toTicks(duration) {\r\n            return MidiUtils.valueToTicks(duration);\r\n        }\r\n        /**\r\n         * Converts a numerical value to its ticks equivalent.\r\n         * @param duration the numerical proportion to convert. (i.E. timesignature denominator, note duration,...)\r\n         */\r\n        static valueToTicks(duration) {\r\n            let denomninator = duration;\r\n            if (denomninator < 0) {\r\n                denomninator = 1 / -denomninator;\r\n            }\r\n            return (MidiUtils.QuarterTime * (4.0 / denomninator)) | 0;\r\n        }\r\n        static applyDot(ticks, doubleDotted) {\r\n            if (doubleDotted) {\r\n                return ticks + ((ticks / 4) | 0) * 3;\r\n            }\r\n            return ticks + ((ticks / 2) | 0);\r\n        }\r\n        static applyTuplet(ticks, numerator, denominator) {\r\n            return ((ticks * denominator) / numerator) | 0;\r\n        }\r\n        static removeTuplet(ticks, numerator, denominator) {\r\n            return ((ticks * numerator) / denominator) | 0;\r\n        }\r\n        static dynamicToVelocity(dyn) {\r\n            return MidiUtils.MinVelocity + dyn * MidiUtils.VelocityIncrement;\r\n        }\r\n    }\r\n    MidiUtils.QuarterTime = 960;\r\n    MidiUtils.MinVelocity = 15;\r\n    MidiUtils.VelocityIncrement = 16;\n\n    /**\r\n     * A single point of a bending graph. Used to\r\n     * describe WhammyBar and String Bending effects.\r\n     * @cloneable\r\n     * @json\r\n     */\r\n    class BendPoint {\r\n        /**\r\n         * Initializes a new instance of the {@link BendPoint} class.\r\n         * @param offset The offset.\r\n         * @param value The value.\r\n         */\r\n        constructor(offset = 0, value = 0) {\r\n            this.offset = offset;\r\n            this.value = value;\r\n        }\r\n    }\r\n    BendPoint.MaxPosition = 60;\r\n    BendPoint.MaxValue = 12;\n\n    /**\r\n     * Lists the different bend styles\r\n     */\r\n    var BendStyle;\r\n    (function (BendStyle) {\r\n        /**\r\n         * The bends are as described by the bend points\r\n         */\r\n        BendStyle[BendStyle[\"Default\"] = 0] = \"Default\";\r\n        /**\r\n         * The bends are gradual over the beat duration.\r\n         */\r\n        BendStyle[BendStyle[\"Gradual\"] = 1] = \"Gradual\";\r\n        /**\r\n         * The bends are done fast before the next note.\r\n         */\r\n        BendStyle[BendStyle[\"Fast\"] = 2] = \"Fast\";\r\n    })(BendStyle || (BendStyle = {}));\n\n    /**\r\n     * Lists all types of bends\r\n     */\r\n    var BendType;\r\n    (function (BendType) {\r\n        /**\r\n         * No bend at all\r\n         */\r\n        BendType[BendType[\"None\"] = 0] = \"None\";\r\n        /**\r\n         * Individual points define the bends in a flexible manner.\r\n         * This system was mainly used in Guitar Pro 3-5\r\n         */\r\n        BendType[BendType[\"Custom\"] = 1] = \"Custom\";\r\n        /**\r\n         * Simple Bend from an unbended string to a higher note.\r\n         */\r\n        BendType[BendType[\"Bend\"] = 2] = \"Bend\";\r\n        /**\r\n         * Release of a bend that was started on an earlier note.\r\n         */\r\n        BendType[BendType[\"Release\"] = 3] = \"Release\";\r\n        /**\r\n         * A bend that starts from an unbended string,\r\n         * and also releases the bend after some time.\r\n         */\r\n        BendType[BendType[\"BendRelease\"] = 4] = \"BendRelease\";\r\n        /**\r\n         * Holds a bend that was started on an earlier note\r\n         */\r\n        BendType[BendType[\"Hold\"] = 5] = \"Hold\";\r\n        /**\r\n         * A bend that is already started before the note is played then it is held until the end.\r\n         */\r\n        BendType[BendType[\"Prebend\"] = 6] = \"Prebend\";\r\n        /**\r\n         * A bend that is already started before the note is played and\r\n         * bends even further, then it is held until the end.\r\n         */\r\n        BendType[BendType[\"PrebendBend\"] = 7] = \"PrebendBend\";\r\n        /**\r\n         * A bend that is already started before the note is played and\r\n         * then releases the bend to a lower note where it is held until the end.\r\n         */\r\n        BendType[BendType[\"PrebendRelease\"] = 8] = \"PrebendRelease\";\r\n    })(BendType || (BendType = {}));\n\n    /**\r\n     * Lists all types of how to brush multiple notes on a beat.\r\n     */\r\n    var BrushType;\r\n    (function (BrushType) {\r\n        /**\r\n         * No brush.\r\n         */\r\n        BrushType[BrushType[\"None\"] = 0] = \"None\";\r\n        /**\r\n         * Normal brush up.\r\n         */\r\n        BrushType[BrushType[\"BrushUp\"] = 1] = \"BrushUp\";\r\n        /**\r\n         * Normal brush down.\r\n         */\r\n        BrushType[BrushType[\"BrushDown\"] = 2] = \"BrushDown\";\r\n        /**\r\n         * Arpeggio up.\r\n         */\r\n        BrushType[BrushType[\"ArpeggioUp\"] = 3] = \"ArpeggioUp\";\r\n        /**\r\n         * Arpeggio down.\r\n         */\r\n        BrushType[BrushType[\"ArpeggioDown\"] = 4] = \"ArpeggioDown\";\r\n    })(BrushType || (BrushType = {}));\n\n    /**\r\n     * Lists all Crescendo and Decrescendo types.\r\n     */\r\n    var CrescendoType;\r\n    (function (CrescendoType) {\r\n        /**\r\n         * No crescendo applied.\r\n         */\r\n        CrescendoType[CrescendoType[\"None\"] = 0] = \"None\";\r\n        /**\r\n         * Normal crescendo applied.\r\n         */\r\n        CrescendoType[CrescendoType[\"Crescendo\"] = 1] = \"Crescendo\";\r\n        /**\r\n         * Normal decrescendo applied.\r\n         */\r\n        CrescendoType[CrescendoType[\"Decrescendo\"] = 2] = \"Decrescendo\";\r\n    })(CrescendoType || (CrescendoType = {}));\n\n    /**\r\n     * Lists all durations of a beat.\r\n     */\r\n    var Duration;\r\n    (function (Duration) {\r\n        /**\r\n         * A quadruple whole note duration\r\n         */\r\n        Duration[Duration[\"QuadrupleWhole\"] = -4] = \"QuadrupleWhole\";\r\n        /**\r\n         * A double whole note duration\r\n         */\r\n        Duration[Duration[\"DoubleWhole\"] = -2] = \"DoubleWhole\";\r\n        /**\r\n         * A whole note duration\r\n         */\r\n        Duration[Duration[\"Whole\"] = 1] = \"Whole\";\r\n        /**\r\n         * A 1/2 note duration\r\n         */\r\n        Duration[Duration[\"Half\"] = 2] = \"Half\";\r\n        /**\r\n         * A 1/4 note duration\r\n         */\r\n        Duration[Duration[\"Quarter\"] = 4] = \"Quarter\";\r\n        /**\r\n         * A 1/8 note duration\r\n         */\r\n        Duration[Duration[\"Eighth\"] = 8] = \"Eighth\";\r\n        /**\r\n         * A 1/16 note duration\r\n         */\r\n        Duration[Duration[\"Sixteenth\"] = 16] = \"Sixteenth\";\r\n        /**\r\n         * A 1/32 note duration\r\n         */\r\n        Duration[Duration[\"ThirtySecond\"] = 32] = \"ThirtySecond\";\r\n        /**\r\n         * A 1/64 note duration\r\n         */\r\n        Duration[Duration[\"SixtyFourth\"] = 64] = \"SixtyFourth\";\r\n        /**\r\n         * A 1/128 note duration\r\n         */\r\n        Duration[Duration[\"OneHundredTwentyEighth\"] = 128] = \"OneHundredTwentyEighth\";\r\n        /**\r\n         * A 1/256 note duration\r\n         */\r\n        Duration[Duration[\"TwoHundredFiftySixth\"] = 256] = \"TwoHundredFiftySixth\";\r\n    })(Duration || (Duration = {}));\n\n    /**\r\n     * Lists all dynamics.\r\n     */\r\n    var DynamicValue;\r\n    (function (DynamicValue) {\r\n        /**\r\n         * pianississimo (very very soft)\r\n         */\r\n        DynamicValue[DynamicValue[\"PPP\"] = 0] = \"PPP\";\r\n        /**\r\n         * pianissimo (very soft)\r\n         */\r\n        DynamicValue[DynamicValue[\"PP\"] = 1] = \"PP\";\r\n        /**\r\n         * piano (soft)\r\n         */\r\n        DynamicValue[DynamicValue[\"P\"] = 2] = \"P\";\r\n        /**\r\n         * mezzo-piano (half soft)\r\n         */\r\n        DynamicValue[DynamicValue[\"MP\"] = 3] = \"MP\";\r\n        /**\r\n         * mezzo-forte (half loud)\r\n         */\r\n        DynamicValue[DynamicValue[\"MF\"] = 4] = \"MF\";\r\n        /**\r\n         * forte (loud)\r\n         */\r\n        DynamicValue[DynamicValue[\"F\"] = 5] = \"F\";\r\n        /**\r\n         * fortissimo (very loud)\r\n         */\r\n        DynamicValue[DynamicValue[\"FF\"] = 6] = \"FF\";\r\n        /**\r\n         * fortississimo (very very loud)\r\n         */\r\n        DynamicValue[DynamicValue[\"FFF\"] = 7] = \"FFF\";\r\n    })(DynamicValue || (DynamicValue = {}));\n\n    /**\r\n     * Lists all types of grace notes\r\n     */\r\n    var GraceType;\r\n    (function (GraceType) {\r\n        /**\r\n         * No grace, normal beat.\r\n         */\r\n        GraceType[GraceType[\"None\"] = 0] = \"None\";\r\n        /**\r\n         * The beat contains on-beat grace notes.\r\n         */\r\n        GraceType[GraceType[\"OnBeat\"] = 1] = \"OnBeat\";\r\n        /**\r\n         * The beat contains before-beat grace notes.\r\n         */\r\n        GraceType[GraceType[\"BeforeBeat\"] = 2] = \"BeforeBeat\";\r\n        /**\r\n         * The beat contains very special bend-grace notes used in SongBook style displays.\r\n         */\r\n        GraceType[GraceType[\"BendGrace\"] = 3] = \"BendGrace\";\r\n    })(GraceType || (GraceType = {}));\n\n    /**\r\n     * Lists all harmonic types.\r\n     */\r\n    var HarmonicType;\r\n    (function (HarmonicType) {\r\n        /**\r\n         * No harmonics.\r\n         */\r\n        HarmonicType[HarmonicType[\"None\"] = 0] = \"None\";\r\n        /**\r\n         * Natural harmonic\r\n         */\r\n        HarmonicType[HarmonicType[\"Natural\"] = 1] = \"Natural\";\r\n        /**\r\n         * Artificial harmonic\r\n         */\r\n        HarmonicType[HarmonicType[\"Artificial\"] = 2] = \"Artificial\";\r\n        /**\r\n         * Pinch harmonics\r\n         */\r\n        HarmonicType[HarmonicType[\"Pinch\"] = 3] = \"Pinch\";\r\n        /**\r\n         * Tap harmonics\r\n         */\r\n        HarmonicType[HarmonicType[\"Tap\"] = 4] = \"Tap\";\r\n        /**\r\n         * Semi harmonics\r\n         */\r\n        HarmonicType[HarmonicType[\"Semi\"] = 5] = \"Semi\";\r\n        /**\r\n         * Feedback harmonics\r\n         */\r\n        HarmonicType[HarmonicType[\"Feedback\"] = 6] = \"Feedback\";\r\n    })(HarmonicType || (HarmonicType = {}));\n\n    /**\r\n     * Lists the modes how accidentals are handled for notes\r\n     */\r\n    var NoteAccidentalMode;\r\n    (function (NoteAccidentalMode) {\r\n        /**\r\n         * Accidentals are calculated automatically.\r\n         */\r\n        NoteAccidentalMode[NoteAccidentalMode[\"Default\"] = 0] = \"Default\";\r\n        /**\r\n         * This will try to ensure that no accidental is shown.\r\n         */\r\n        NoteAccidentalMode[NoteAccidentalMode[\"ForceNone\"] = 1] = \"ForceNone\";\r\n        /**\r\n         * This will move the note one line down and applies a Naturalize.\r\n         */\r\n        NoteAccidentalMode[NoteAccidentalMode[\"ForceNatural\"] = 2] = \"ForceNatural\";\r\n        /**\r\n         * This will move the note one line down and applies a Sharp.\r\n         */\r\n        NoteAccidentalMode[NoteAccidentalMode[\"ForceSharp\"] = 3] = \"ForceSharp\";\r\n        /**\r\n         * This will move the note to be shown 2 half-notes deeper with a double sharp symbol\r\n         */\r\n        NoteAccidentalMode[NoteAccidentalMode[\"ForceDoubleSharp\"] = 4] = \"ForceDoubleSharp\";\r\n        /**\r\n         * This will move the note one line up and applies a Flat.\r\n         */\r\n        NoteAccidentalMode[NoteAccidentalMode[\"ForceFlat\"] = 5] = \"ForceFlat\";\r\n        /**\r\n         * This will move the note two half notes up with a double flag symbol.\r\n         */\r\n        NoteAccidentalMode[NoteAccidentalMode[\"ForceDoubleFlat\"] = 6] = \"ForceDoubleFlat\";\r\n    })(NoteAccidentalMode || (NoteAccidentalMode = {}));\n\n    /**\r\n     * This public enum lists all different types of finger slide-ins on a string.\r\n     */\r\n    var SlideInType;\r\n    (function (SlideInType) {\r\n        /**\r\n         * No slide.\r\n         */\r\n        SlideInType[SlideInType[\"None\"] = 0] = \"None\";\r\n        /**\r\n         * Slide into the note from below on the same string.\r\n         */\r\n        SlideInType[SlideInType[\"IntoFromBelow\"] = 1] = \"IntoFromBelow\";\r\n        /**\r\n         * Slide into the note from above on the same string.\r\n         */\r\n        SlideInType[SlideInType[\"IntoFromAbove\"] = 2] = \"IntoFromAbove\";\r\n    })(SlideInType || (SlideInType = {}));\n\n    /**\r\n     * This public enum lists all different types of finger slide-outs on a string.\r\n     */\r\n    var SlideOutType;\r\n    (function (SlideOutType) {\r\n        /**\r\n         * No slide.\r\n         */\r\n        SlideOutType[SlideOutType[\"None\"] = 0] = \"None\";\r\n        /**\r\n         * Shift slide to next note on same string\r\n         */\r\n        SlideOutType[SlideOutType[\"Shift\"] = 1] = \"Shift\";\r\n        /**\r\n         * Legato slide to next note on same string.\r\n         */\r\n        SlideOutType[SlideOutType[\"Legato\"] = 2] = \"Legato\";\r\n        /**\r\n         * Slide out from the note from upwards on the same string.\r\n         */\r\n        SlideOutType[SlideOutType[\"OutUp\"] = 3] = \"OutUp\";\r\n        /**\r\n         * Slide out from the note from downwards on the same string.\r\n         */\r\n        SlideOutType[SlideOutType[\"OutDown\"] = 4] = \"OutDown\";\r\n        /**\r\n         * Pickslide down on this note\r\n         */\r\n        SlideOutType[SlideOutType[\"PickSlideDown\"] = 5] = \"PickSlideDown\";\r\n        /**\r\n         * Pickslide up on this note\r\n         */\r\n        SlideOutType[SlideOutType[\"PickSlideUp\"] = 6] = \"PickSlideUp\";\r\n    })(SlideOutType || (SlideOutType = {}));\n\n    /**\r\n     * This public enum lists all vibrato types that can be performed.\r\n     */\r\n    var VibratoType;\r\n    (function (VibratoType) {\r\n        /**\r\n         * No vibrato.\r\n         */\r\n        VibratoType[VibratoType[\"None\"] = 0] = \"None\";\r\n        /**\r\n         * A slight vibrato.\r\n         */\r\n        VibratoType[VibratoType[\"Slight\"] = 1] = \"Slight\";\r\n        /**\r\n         * A wide vibrato.\r\n         */\r\n        VibratoType[VibratoType[\"Wide\"] = 2] = \"Wide\";\r\n    })(VibratoType || (VibratoType = {}));\n\n    /**\r\n     * @target web\r\n     */\r\n    class Lazy {\r\n        constructor(factory) {\r\n            this._value = undefined;\r\n            this._factory = factory;\r\n        }\r\n        get value() {\r\n            if (this._value === undefined) {\r\n                this._value = this._factory();\r\n            }\r\n            return this._value;\r\n        }\r\n    }\n\n    /**\r\n     * Defines all loglevels.\r\n     * @json\r\n     */\r\n    (function (LogLevel) {\r\n        /**\r\n         * No logging\r\n         */\r\n        LogLevel[LogLevel[\"None\"] = 0] = \"None\";\r\n        /**\r\n         * Debug level (internal details are displayed).\r\n         */\r\n        LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\r\n        /**\r\n         * Info level (only important details are shown)\r\n         */\r\n        LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\r\n        /**\r\n         * Warning level\r\n         */\r\n        LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\r\n        /**\r\n         * Error level.\r\n         */\r\n        LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\r\n    })(exports.LogLevel || (exports.LogLevel = {}));\n\n    class ConsoleLogger {\r\n        static format(category, msg) {\r\n            return `[AlphaTab][${category}] ${msg}`;\r\n        }\r\n        debug(category, msg, ...details) {\r\n            console.debug(ConsoleLogger.format(category, msg), ...details);\r\n        }\r\n        warning(category, msg, ...details) {\r\n            console.warn(ConsoleLogger.format(category, msg), ...details);\r\n        }\r\n        info(category, msg, ...details) {\r\n            console.info(ConsoleLogger.format(category, msg), ...details);\r\n        }\r\n        error(category, msg, ...details) {\r\n            console.error(ConsoleLogger.format(category, msg), ...details);\r\n        }\r\n    }\r\n    ConsoleLogger.logLevel = exports.LogLevel.Info;\r\n    class Logger {\r\n        static shouldLog(level) {\r\n            return Logger.logLevel !== exports.LogLevel.None && level >= Logger.logLevel;\r\n        }\r\n        static debug(category, msg, ...details) {\r\n            if (Logger.shouldLog(exports.LogLevel.Debug)) {\r\n                Logger.log.debug(category, msg, ...details);\r\n            }\r\n        }\r\n        static warning(category, msg, ...details) {\r\n            if (Logger.shouldLog(exports.LogLevel.Warning)) {\r\n                Logger.log.warning(category, msg, ...details);\r\n            }\r\n        }\r\n        static info(category, msg, ...details) {\r\n            if (Logger.shouldLog(exports.LogLevel.Info)) {\r\n                Logger.log.info(category, msg, ...details);\r\n            }\r\n        }\r\n        static error(category, msg, ...details) {\r\n            if (Logger.shouldLog(exports.LogLevel.Error)) {\r\n                Logger.log.error(category, msg, ...details);\r\n            }\r\n        }\r\n    }\r\n    Logger.logLevel = exports.LogLevel.Info;\r\n    Logger.log = new ConsoleLogger();\n\n    /**\r\n     * Lists all types of pick strokes.\r\n     */\r\n    var PickStroke;\r\n    (function (PickStroke) {\r\n        /**\r\n         * No pickstroke used.\r\n         */\r\n        PickStroke[PickStroke[\"None\"] = 0] = \"None\";\r\n        /**\r\n         * Pickstroke up.\r\n         */\r\n        PickStroke[PickStroke[\"Up\"] = 1] = \"Up\";\r\n        /**\r\n         * Pickstroke down\r\n         */\r\n        PickStroke[PickStroke[\"Down\"] = 2] = \"Down\";\r\n    })(PickStroke || (PickStroke = {}));\n\n    /**\r\n     * Lists all music font symbols used within alphaTab. The names\r\n     * and values are aligned with the SMuFL standard.\r\n     */\r\n    var MusicFontSymbol;\r\n    (function (MusicFontSymbol) {\r\n        MusicFontSymbol[MusicFontSymbol[\"None\"] = -1] = \"None\";\r\n        MusicFontSymbol[MusicFontSymbol[\"GClef\"] = 57424] = \"GClef\";\r\n        MusicFontSymbol[MusicFontSymbol[\"CClef\"] = 57436] = \"CClef\";\r\n        MusicFontSymbol[MusicFontSymbol[\"FClef\"] = 57442] = \"FClef\";\r\n        MusicFontSymbol[MusicFontSymbol[\"UnpitchedPercussionClef1\"] = 57449] = \"UnpitchedPercussionClef1\";\r\n        MusicFontSymbol[MusicFontSymbol[\"SixStringTabClef\"] = 57453] = \"SixStringTabClef\";\r\n        MusicFontSymbol[MusicFontSymbol[\"FourStringTabClef\"] = 57454] = \"FourStringTabClef\";\r\n        MusicFontSymbol[MusicFontSymbol[\"TimeSig0\"] = 57472] = \"TimeSig0\";\r\n        MusicFontSymbol[MusicFontSymbol[\"TimeSig1\"] = 57473] = \"TimeSig1\";\r\n        MusicFontSymbol[MusicFontSymbol[\"TimeSig2\"] = 57474] = \"TimeSig2\";\r\n        MusicFontSymbol[MusicFontSymbol[\"TimeSig3\"] = 57475] = \"TimeSig3\";\r\n        MusicFontSymbol[MusicFontSymbol[\"TimeSig4\"] = 57476] = \"TimeSig4\";\r\n        MusicFontSymbol[MusicFontSymbol[\"TimeSig5\"] = 57477] = \"TimeSig5\";\r\n        MusicFontSymbol[MusicFontSymbol[\"TimeSig6\"] = 57478] = \"TimeSig6\";\r\n        MusicFontSymbol[MusicFontSymbol[\"TimeSig7\"] = 57479] = \"TimeSig7\";\r\n        MusicFontSymbol[MusicFontSymbol[\"TimeSig8\"] = 57480] = \"TimeSig8\";\r\n        MusicFontSymbol[MusicFontSymbol[\"TimeSig9\"] = 57481] = \"TimeSig9\";\r\n        MusicFontSymbol[MusicFontSymbol[\"TimeSigCommon\"] = 57482] = \"TimeSigCommon\";\r\n        MusicFontSymbol[MusicFontSymbol[\"TimeSigCutCommon\"] = 57483] = \"TimeSigCutCommon\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteheadDoubleWholeSquare\"] = 57505] = \"NoteheadDoubleWholeSquare\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteheadDoubleWhole\"] = 57504] = \"NoteheadDoubleWhole\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteheadWhole\"] = 57506] = \"NoteheadWhole\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteheadHalf\"] = 57507] = \"NoteheadHalf\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteheadBlack\"] = 57508] = \"NoteheadBlack\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteheadNull\"] = 57509] = \"NoteheadNull\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteheadXOrnate\"] = 57514] = \"NoteheadXOrnate\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteheadTriangleUpWhole\"] = 57531] = \"NoteheadTriangleUpWhole\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteheadTriangleUpHalf\"] = 57532] = \"NoteheadTriangleUpHalf\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteheadTriangleUpBlack\"] = 57534] = \"NoteheadTriangleUpBlack\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteheadDiamondBlackWide\"] = 57564] = \"NoteheadDiamondBlackWide\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteheadDiamondWhite\"] = 57565] = \"NoteheadDiamondWhite\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteheadDiamondWhiteWide\"] = 57566] = \"NoteheadDiamondWhiteWide\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteheadCircleX\"] = 57523] = \"NoteheadCircleX\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteheadXWhole\"] = 57511] = \"NoteheadXWhole\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteheadXHalf\"] = 57512] = \"NoteheadXHalf\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteheadXBlack\"] = 57513] = \"NoteheadXBlack\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteheadParenthesis\"] = 57550] = \"NoteheadParenthesis\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteheadSlashedBlack2\"] = 57552] = \"NoteheadSlashedBlack2\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteheadCircleSlash\"] = 57591] = \"NoteheadCircleSlash\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteheadHeavyX\"] = 57592] = \"NoteheadHeavyX\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteheadHeavyXHat\"] = 57593] = \"NoteheadHeavyXHat\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteQuarterUp\"] = 57813] = \"NoteQuarterUp\";\r\n        MusicFontSymbol[MusicFontSymbol[\"NoteEighthUp\"] = 57815] = \"NoteEighthUp\";\r\n        MusicFontSymbol[MusicFontSymbol[\"Tremolo3\"] = 57890] = \"Tremolo3\";\r\n        MusicFontSymbol[MusicFontSymbol[\"Tremolo2\"] = 57889] = \"Tremolo2\";\r\n        MusicFontSymbol[MusicFontSymbol[\"Tremolo1\"] = 57888] = \"Tremolo1\";\r\n        MusicFontSymbol[MusicFontSymbol[\"FlagEighthUp\"] = 57920] = \"FlagEighthUp\";\r\n        MusicFontSymbol[MusicFontSymbol[\"FlagEighthDown\"] = 57921] = \"FlagEighthDown\";\r\n        MusicFontSymbol[MusicFontSymbol[\"FlagSixteenthUp\"] = 57922] = \"FlagSixteenthUp\";\r\n        MusicFontSymbol[MusicFontSymbol[\"FlagSixteenthDown\"] = 57923] = \"FlagSixteenthDown\";\r\n        MusicFontSymbol[MusicFontSymbol[\"FlagThirtySecondUp\"] = 57924] = \"FlagThirtySecondUp\";\r\n        MusicFontSymbol[MusicFontSymbol[\"FlagThirtySecondDown\"] = 57925] = \"FlagThirtySecondDown\";\r\n        MusicFontSymbol[MusicFontSymbol[\"FlagSixtyFourthUp\"] = 57926] = \"FlagSixtyFourthUp\";\r\n        MusicFontSymbol[MusicFontSymbol[\"FlagSixtyFourthDown\"] = 57927] = \"FlagSixtyFourthDown\";\r\n        MusicFontSymbol[MusicFontSymbol[\"FlagOneHundredTwentyEighthUp\"] = 57928] = \"FlagOneHundredTwentyEighthUp\";\r\n        MusicFontSymbol[MusicFontSymbol[\"FlagOneHundredTwentyEighthDown\"] = 57929] = \"FlagOneHundredTwentyEighthDown\";\r\n        MusicFontSymbol[MusicFontSymbol[\"FlagTwoHundredFiftySixthUp\"] = 57930] = \"FlagTwoHundredFiftySixthUp\";\r\n        MusicFontSymbol[MusicFontSymbol[\"FlagTwoHundredFiftySixthDown\"] = 57931] = \"FlagTwoHundredFiftySixthDown\";\r\n        MusicFontSymbol[MusicFontSymbol[\"AccidentalFlat\"] = 57952] = \"AccidentalFlat\";\r\n        MusicFontSymbol[MusicFontSymbol[\"AccidentalNatural\"] = 57953] = \"AccidentalNatural\";\r\n        MusicFontSymbol[MusicFontSymbol[\"AccidentalSharp\"] = 57954] = \"AccidentalSharp\";\r\n        MusicFontSymbol[MusicFontSymbol[\"AccidentalDoubleSharp\"] = 57955] = \"AccidentalDoubleSharp\";\r\n        MusicFontSymbol[MusicFontSymbol[\"AccidentalDoubleFlat\"] = 57956] = \"AccidentalDoubleFlat\";\r\n        MusicFontSymbol[MusicFontSymbol[\"AccidentalQuarterToneFlatArrowUp\"] = 57968] = \"AccidentalQuarterToneFlatArrowUp\";\r\n        MusicFontSymbol[MusicFontSymbol[\"AccidentalQuarterToneSharpArrowUp\"] = 57972] = \"AccidentalQuarterToneSharpArrowUp\";\r\n        MusicFontSymbol[MusicFontSymbol[\"AccidentalQuarterToneNaturalArrowUp\"] = 57970] = \"AccidentalQuarterToneNaturalArrowUp\";\r\n        MusicFontSymbol[MusicFontSymbol[\"ArticAccentAbove\"] = 58528] = \"ArticAccentAbove\";\r\n        MusicFontSymbol[MusicFontSymbol[\"ArticStaccatoAbove\"] = 58530] = \"ArticStaccatoAbove\";\r\n        MusicFontSymbol[MusicFontSymbol[\"ArticMarcatoAbove\"] = 58540] = \"ArticMarcatoAbove\";\r\n        MusicFontSymbol[MusicFontSymbol[\"FermataAbove\"] = 58560] = \"FermataAbove\";\r\n        MusicFontSymbol[MusicFontSymbol[\"FermataShortAbove\"] = 58564] = \"FermataShortAbove\";\r\n        MusicFontSymbol[MusicFontSymbol[\"FermataLongAbove\"] = 58566] = \"FermataLongAbove\";\r\n        MusicFontSymbol[MusicFontSymbol[\"RestLonga\"] = 58593] = \"RestLonga\";\r\n        MusicFontSymbol[MusicFontSymbol[\"RestDoubleWhole\"] = 58594] = \"RestDoubleWhole\";\r\n        MusicFontSymbol[MusicFontSymbol[\"RestWhole\"] = 58595] = \"RestWhole\";\r\n        MusicFontSymbol[MusicFontSymbol[\"RestHalf\"] = 58596] = \"RestHalf\";\r\n        MusicFontSymbol[MusicFontSymbol[\"RestQuarter\"] = 58597] = \"RestQuarter\";\r\n        MusicFontSymbol[MusicFontSymbol[\"RestEighth\"] = 58598] = \"RestEighth\";\r\n        MusicFontSymbol[MusicFontSymbol[\"RestSixteenth\"] = 58599] = \"RestSixteenth\";\r\n        MusicFontSymbol[MusicFontSymbol[\"RestThirtySecond\"] = 58600] = \"RestThirtySecond\";\r\n        MusicFontSymbol[MusicFontSymbol[\"RestSixtyFourth\"] = 58601] = \"RestSixtyFourth\";\r\n        MusicFontSymbol[MusicFontSymbol[\"RestOneHundredTwentyEighth\"] = 58602] = \"RestOneHundredTwentyEighth\";\r\n        MusicFontSymbol[MusicFontSymbol[\"RestTwoHundredFiftySixth\"] = 58603] = \"RestTwoHundredFiftySixth\";\r\n        MusicFontSymbol[MusicFontSymbol[\"Repeat1Bar\"] = 58624] = \"Repeat1Bar\";\r\n        MusicFontSymbol[MusicFontSymbol[\"Repeat2Bars\"] = 58625] = \"Repeat2Bars\";\r\n        MusicFontSymbol[MusicFontSymbol[\"Ottava\"] = 58640] = \"Ottava\";\r\n        MusicFontSymbol[MusicFontSymbol[\"OttavaAlta\"] = 58641] = \"OttavaAlta\";\r\n        MusicFontSymbol[MusicFontSymbol[\"OttavaBassaVb\"] = 58652] = \"OttavaBassaVb\";\r\n        MusicFontSymbol[MusicFontSymbol[\"Quindicesima\"] = 58644] = \"Quindicesima\";\r\n        MusicFontSymbol[MusicFontSymbol[\"QuindicesimaAlta\"] = 58645] = \"QuindicesimaAlta\";\r\n        MusicFontSymbol[MusicFontSymbol[\"DynamicPPP\"] = 58666] = \"DynamicPPP\";\r\n        MusicFontSymbol[MusicFontSymbol[\"DynamicPP\"] = 58667] = \"DynamicPP\";\r\n        MusicFontSymbol[MusicFontSymbol[\"DynamicPiano\"] = 58656] = \"DynamicPiano\";\r\n        MusicFontSymbol[MusicFontSymbol[\"DynamicMP\"] = 58668] = \"DynamicMP\";\r\n        MusicFontSymbol[MusicFontSymbol[\"DynamicMF\"] = 58669] = \"DynamicMF\";\r\n        MusicFontSymbol[MusicFontSymbol[\"DynamicForte\"] = 58658] = \"DynamicForte\";\r\n        MusicFontSymbol[MusicFontSymbol[\"DynamicFF\"] = 58671] = \"DynamicFF\";\r\n        MusicFontSymbol[MusicFontSymbol[\"DynamicFFF\"] = 58672] = \"DynamicFFF\";\r\n        MusicFontSymbol[MusicFontSymbol[\"OrnamentTrill\"] = 58726] = \"OrnamentTrill\";\r\n        MusicFontSymbol[MusicFontSymbol[\"StringsDownBow\"] = 58896] = \"StringsDownBow\";\r\n        MusicFontSymbol[MusicFontSymbol[\"StringsUpBow\"] = 58898] = \"StringsUpBow\";\r\n        MusicFontSymbol[MusicFontSymbol[\"PictEdgeOfCymbal\"] = 59177] = \"PictEdgeOfCymbal\";\r\n        MusicFontSymbol[MusicFontSymbol[\"GuitarString0\"] = 59443] = \"GuitarString0\";\r\n        MusicFontSymbol[MusicFontSymbol[\"GuitarString1\"] = 59444] = \"GuitarString1\";\r\n        MusicFontSymbol[MusicFontSymbol[\"GuitarString2\"] = 59445] = \"GuitarString2\";\r\n        MusicFontSymbol[MusicFontSymbol[\"GuitarString3\"] = 59446] = \"GuitarString3\";\r\n        MusicFontSymbol[MusicFontSymbol[\"GuitarString4\"] = 59447] = \"GuitarString4\";\r\n        MusicFontSymbol[MusicFontSymbol[\"GuitarString5\"] = 59448] = \"GuitarString5\";\r\n        MusicFontSymbol[MusicFontSymbol[\"GuitarString6\"] = 59449] = \"GuitarString6\";\r\n        MusicFontSymbol[MusicFontSymbol[\"GuitarString7\"] = 59450] = \"GuitarString7\";\r\n        MusicFontSymbol[MusicFontSymbol[\"GuitarString8\"] = 59451] = \"GuitarString8\";\r\n        MusicFontSymbol[MusicFontSymbol[\"GuitarString9\"] = 59452] = \"GuitarString9\";\r\n        MusicFontSymbol[MusicFontSymbol[\"GuitarGolpe\"] = 59458] = \"GuitarGolpe\";\r\n        MusicFontSymbol[MusicFontSymbol[\"FretboardX\"] = 59481] = \"FretboardX\";\r\n        MusicFontSymbol[MusicFontSymbol[\"FretboardO\"] = 59482] = \"FretboardO\";\r\n        MusicFontSymbol[MusicFontSymbol[\"WiggleTrill\"] = 60068] = \"WiggleTrill\";\r\n        MusicFontSymbol[MusicFontSymbol[\"WiggleVibratoMediumFast\"] = 60126] = \"WiggleVibratoMediumFast\";\r\n        MusicFontSymbol[MusicFontSymbol[\"OctaveBaselineM\"] = 60565] = \"OctaveBaselineM\";\r\n        MusicFontSymbol[MusicFontSymbol[\"OctaveBaselineB\"] = 60563] = \"OctaveBaselineB\";\r\n    })(MusicFontSymbol || (MusicFontSymbol = {}));\n\n    /**\r\n     * This public enum lists all different text alignments\r\n     */\r\n    var TextAlign;\r\n    (function (TextAlign) {\r\n        /**\r\n         * Text is left aligned.\r\n         */\r\n        TextAlign[TextAlign[\"Left\"] = 0] = \"Left\";\r\n        /**\r\n         * Text is centered.\r\n         */ TextAlign[TextAlign[\"Center\"] = 1] = \"Center\";\r\n        /**\r\n         * Text is right aligned.\r\n         */ TextAlign[TextAlign[\"Right\"] = 2] = \"Right\";\r\n    })(TextAlign || (TextAlign = {}));\r\n    /**\r\n     * This public enum lists all base line modes\r\n     */\r\n    var TextBaseline;\r\n    (function (TextBaseline) {\r\n        /**\r\n         * Text is aligned on top.\r\n         */\r\n        TextBaseline[TextBaseline[\"Top\"] = 0] = \"Top\";\r\n        /**\r\n         * Text is aligned middle\r\n         */\r\n        TextBaseline[TextBaseline[\"Middle\"] = 1] = \"Middle\";\r\n        /**\r\n         * Text is aligend on the bottom.\r\n         */\r\n        TextBaseline[TextBaseline[\"Bottom\"] = 2] = \"Bottom\";\r\n    })(TextBaseline || (TextBaseline = {}));\n\n    /**\r\n     * Describes an instrument articulation which is used for percussions.\r\n     * @json\r\n     */\r\n    class InstrumentArticulation {\r\n        constructor(elementType = \"\", staffLine = 0, outputMidiNumber = 0, noteHeadDefault = MusicFontSymbol.None, noteHeadHalf = MusicFontSymbol.None, noteHeadWhole = MusicFontSymbol.None, techniqueSymbol = MusicFontSymbol.None, techniqueSymbolPlacement = TextBaseline.Middle) {\r\n            this.elementType = elementType;\r\n            this.outputMidiNumber = outputMidiNumber;\r\n            this.staffLine = staffLine;\r\n            this.noteHeadDefault = noteHeadDefault;\r\n            this.noteHeadHalf = noteHeadHalf !== MusicFontSymbol.None ? noteHeadHalf : noteHeadDefault;\r\n            this.noteHeadWhole = noteHeadWhole !== MusicFontSymbol.None ? noteHeadWhole : noteHeadDefault;\r\n            this.techniqueSymbol = techniqueSymbol;\r\n            this.techniqueSymbolPlacement = techniqueSymbolPlacement;\r\n        }\r\n        getSymbol(duration) {\r\n            switch (duration) {\r\n                case Duration.Whole:\r\n                    return this.noteHeadWhole;\r\n                case Duration.Half:\r\n                    return this.noteHeadHalf;\r\n                default:\r\n                    return this.noteHeadDefault;\r\n            }\r\n        }\r\n    }\n\n    class PercussionMapper {\r\n        static articulationFromElementVariation(element, variation) {\r\n            if (element < PercussionMapper.gp6ElementAndVariationToArticulation.length) {\r\n                if (variation >= PercussionMapper.gp6ElementAndVariationToArticulation.length) {\r\n                    variation = 0;\r\n                }\r\n                return PercussionMapper.gp6ElementAndVariationToArticulation[element][variation];\r\n            }\r\n            // unknown combination, should not happen, fallback to some default value (Snare hit)\r\n            return 38;\r\n        }\r\n        static getArticulation(n) {\r\n            const articulationIndex = n.percussionArticulation;\r\n            const trackArticulations = n.beat.voice.bar.staff.track.percussionArticulations;\r\n            if (articulationIndex < trackArticulations.length) {\r\n                return trackArticulations[articulationIndex];\r\n            }\r\n            return PercussionMapper.getArticulationByValue(articulationIndex);\r\n        }\r\n        static getElementAndVariation(n) {\r\n            const articulation = PercussionMapper.getArticulation(n);\r\n            if (!articulation) {\r\n                return [-1, -1];\r\n            }\r\n            // search for the first element/variation combination with the same midi output \r\n            for (let element = 0; element < PercussionMapper.gp6ElementAndVariationToArticulation.length; element++) {\r\n                const variations = PercussionMapper.gp6ElementAndVariationToArticulation[element];\r\n                for (let variation = 0; variation < variations.length; variation++) {\r\n                    const gp6Articulation = PercussionMapper.getArticulationByValue(variations[variation]);\r\n                    if ((gp6Articulation === null || gp6Articulation === void 0 ? void 0 : gp6Articulation.outputMidiNumber) === articulation.outputMidiNumber) {\r\n                        return [element, variation];\r\n                    }\r\n                }\r\n            }\r\n            return [-1, -1];\r\n        }\r\n        static getArticulationByValue(midiNumber) {\r\n            if (PercussionMapper.instrumentArticulations.has(midiNumber)) {\r\n                return PercussionMapper.instrumentArticulations.get(midiNumber);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    PercussionMapper.gp6ElementAndVariationToArticulation = [\r\n        // known GP6 elements and variations, analyzed from a GPX test file\r\n        // with all instruments inside manually aligned with the same names of articulations in GP7\r\n        // [{articulation index}]   // [{element number}] => {element name} ({variation[0]}, {variation[1]}, {variation[2]})\r\n        [35, 35, 35],\r\n        [38, 91, 37],\r\n        [99, 100, 99],\r\n        [56, 100, 56],\r\n        [102, 103, 102],\r\n        [43, 43, 43],\r\n        [45, 45, 45],\r\n        [47, 47, 47],\r\n        [48, 48, 48],\r\n        [50, 50, 50],\r\n        [42, 92, 46],\r\n        [44, 44, 44],\r\n        [57, 98, 57],\r\n        [49, 97, 49],\r\n        [55, 95, 55],\r\n        [51, 93, 127],\r\n        [52, 96, 52],\r\n    ];\r\n    /*\r\n     * This map was generated using the following steps:\r\n     * 1. Make a new GP7 file with a drumkit track\r\n     * 2. Add one note for each midi value using the instrument panel\r\n     * 3. Load the file in alphaTab and set a breakpoint in the GP7 importer.\r\n     * 4. Use the following snipped in the console to generate the map initializer (fix enums manually):\r\n     * parser = new DOMParser();\r\n     * xmlDoc = parser.parseFromString(xml, 'text/xml');\r\n     * articulations = xmlDoc.getElementsByTagName('Articulation');\r\n     * existingArticulations = new Map();\r\n     * s = '';\r\n     * for(let i = 0; i < articulations.length; i++) {\r\n     *     const articulation = articulations[i];\r\n     *     let midi = articulation.getElementsByTagName('InputMidiNumbers');\r\n     * \tif(midi.length === 1) {\r\n     * \t\tmidi = midi[0].textContent;\r\n     *      const elementType = articulation.parentElement.parentElement.getElementsByTagName('Type')[0].textContent;\r\n     *      const outputMidiNumber = articulation.getElementsByTagName('OutputMidiNumber')[0].textContent;\r\n     * \t\tconst staffLine = articulation.getElementsByTagName('StaffLine')[0].textContent;\r\n     * \t\tconst techniqueSymbol = articulation.getElementsByTagName('TechniqueSymbol')[0].textContent;\r\n     * \t\tconst techniquePlacement = articulation.getElementsByTagName('TechniquePlacement')[0].textContent;\r\n     * \t\tconst noteHeads = articulation.getElementsByTagName('Noteheads')[0].textContent.split(' ').map(n=>n = 'MusicFontSymbol.' + n);\r\n     * \t\tif(!existingArticulations.has(midi)) {\r\n     *        if(techniqueSymbol) {\r\n     * \t\t    s += `['${elementType}', ${midi}, new InstrumentArticulation(${staffLine}, ${outputMidiNumber}, ${noteHeads[0]}, ${noteHeads[1]}, ${noteHeads[2]}, ${techniqueSymbol}, ${techniquePlacement})],\\r\\n`;\r\n     *        }\r\n     *        else {\r\n     * \t\t    s += `['${elementType}', ${midi}, new InstrumentArticulation(${staffLine}, ${outputMidiNumber}, ${noteHeads[0]}, ${noteHeads[1]}, ${noteHeads[2]})],\\r\\n`;\r\n     *        }\r\n     * \t\t  existingArticulations.set(midi, true);\r\n     * \t\t}\r\n     * \t}\r\n     * }\r\n     * copy(s)\r\n     */\r\n    PercussionMapper.instrumentArticulations = new Map([\r\n        [38, new InstrumentArticulation(\"snare\", 3, 38, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [37, new InstrumentArticulation(\"snare\", 3, 37, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack)],\r\n        [91, new InstrumentArticulation(\"snare\", 3, 38, MusicFontSymbol.NoteheadDiamondWhite, MusicFontSymbol.NoteheadDiamondWhite, MusicFontSymbol.NoteheadDiamondWhite)],\r\n        [42, new InstrumentArticulation(\"hiHat\", -1, 42, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack)],\r\n        [92, new InstrumentArticulation(\"hiHat\", -1, 46, MusicFontSymbol.NoteheadCircleSlash, MusicFontSymbol.NoteheadCircleSlash, MusicFontSymbol.NoteheadCircleSlash)],\r\n        [46, new InstrumentArticulation(\"hiHat\", -1, 46, MusicFontSymbol.NoteheadCircleX, MusicFontSymbol.NoteheadCircleX, MusicFontSymbol.NoteheadCircleX)],\r\n        [44, new InstrumentArticulation(\"hiHat\", 9, 44, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack)],\r\n        [35, new InstrumentArticulation(\"kickDrum\", 8, 35, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [36, new InstrumentArticulation(\"kickDrum\", 7, 36, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [50, new InstrumentArticulation(\"tom\", 1, 50, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [48, new InstrumentArticulation(\"tom\", 2, 48, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [47, new InstrumentArticulation(\"tom\", 4, 47, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [45, new InstrumentArticulation(\"tom\", 5, 45, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [43, new InstrumentArticulation(\"tom\", 6, 43, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [93, new InstrumentArticulation(\"ride\", 0, 51, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.PictEdgeOfCymbal, TextBaseline.Bottom)],\r\n        [51, new InstrumentArticulation(\"ride\", 0, 51, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack)],\r\n        [53, new InstrumentArticulation(\"ride\", 0, 53, MusicFontSymbol.NoteheadDiamondWhite, MusicFontSymbol.NoteheadDiamondWhite, MusicFontSymbol.NoteheadDiamondWhite)],\r\n        [94, new InstrumentArticulation(\"ride\", 0, 51, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.ArticStaccatoAbove, TextBaseline.Top)],\r\n        [55, new InstrumentArticulation(\"splash\", -2, 55, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack)],\r\n        [95, new InstrumentArticulation(\"splash\", -2, 55, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.ArticStaccatoAbove, TextBaseline.Bottom)],\r\n        [52, new InstrumentArticulation(\"china\", -3, 52, MusicFontSymbol.NoteheadHeavyXHat, MusicFontSymbol.NoteheadHeavyXHat, MusicFontSymbol.NoteheadHeavyXHat)],\r\n        [96, new InstrumentArticulation(\"china\", -3, 52, MusicFontSymbol.NoteheadHeavyXHat, MusicFontSymbol.NoteheadHeavyXHat, MusicFontSymbol.NoteheadHeavyXHat)],\r\n        [49, new InstrumentArticulation(\"crash\", -2, 49, MusicFontSymbol.NoteheadHeavyX, MusicFontSymbol.NoteheadHeavyX, MusicFontSymbol.NoteheadHeavyX)],\r\n        [97, new InstrumentArticulation(\"crash\", -2, 49, MusicFontSymbol.NoteheadHeavyX, MusicFontSymbol.NoteheadHeavyX, MusicFontSymbol.NoteheadHeavyX, MusicFontSymbol.ArticStaccatoAbove, TextBaseline.Bottom)],\r\n        [57, new InstrumentArticulation(\"crash\", -1, 57, MusicFontSymbol.NoteheadHeavyX, MusicFontSymbol.NoteheadHeavyX, MusicFontSymbol.NoteheadHeavyX)],\r\n        [98, new InstrumentArticulation(\"crash\", -1, 57, MusicFontSymbol.NoteheadHeavyX, MusicFontSymbol.NoteheadHeavyX, MusicFontSymbol.NoteheadHeavyX, MusicFontSymbol.ArticStaccatoAbove, TextBaseline.Bottom)],\r\n        [99, new InstrumentArticulation(\"cowbell\", 1, 56, MusicFontSymbol.NoteheadTriangleUpBlack, MusicFontSymbol.NoteheadTriangleUpHalf, MusicFontSymbol.NoteheadTriangleUpWhole)],\r\n        [100, new InstrumentArticulation(\"cowbell\", 1, 56, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXHalf, MusicFontSymbol.NoteheadXWhole)],\r\n        [56, new InstrumentArticulation(\"cowbell\", 0, 56, MusicFontSymbol.NoteheadTriangleUpBlack, MusicFontSymbol.NoteheadTriangleUpHalf, MusicFontSymbol.NoteheadTriangleUpWhole)],\r\n        [101, new InstrumentArticulation(\"cowbell\", 0, 56, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXHalf, MusicFontSymbol.NoteheadXWhole)],\r\n        [102, new InstrumentArticulation(\"cowbell\", -1, 56, MusicFontSymbol.NoteheadTriangleUpBlack, MusicFontSymbol.NoteheadTriangleUpHalf, MusicFontSymbol.NoteheadTriangleUpWhole)],\r\n        [103, new InstrumentArticulation(\"cowbell\", -1, 56, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXHalf, MusicFontSymbol.NoteheadXWhole)],\r\n        [77, new InstrumentArticulation(\"woodblock\", -9, 77, MusicFontSymbol.NoteheadTriangleUpBlack, MusicFontSymbol.NoteheadTriangleUpBlack, MusicFontSymbol.NoteheadTriangleUpBlack)],\r\n        [76, new InstrumentArticulation(\"woodblock\", -10, 76, MusicFontSymbol.NoteheadTriangleUpBlack, MusicFontSymbol.NoteheadTriangleUpBlack, MusicFontSymbol.NoteheadTriangleUpBlack)],\r\n        [60, new InstrumentArticulation(\"bongo\", -4, 60, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [104, new InstrumentArticulation(\"bongo\", -5, 60, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole, MusicFontSymbol.NoteheadParenthesis, TextBaseline.Middle)],\r\n        [105, new InstrumentArticulation(\"bongo\", -6, 60, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack)],\r\n        [61, new InstrumentArticulation(\"bongo\", -7, 61, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [106, new InstrumentArticulation(\"bongo\", -8, 61, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole, MusicFontSymbol.NoteheadParenthesis, TextBaseline.Middle)],\r\n        [107, new InstrumentArticulation(\"bongo\", -16, 61, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack)],\r\n        [66, new InstrumentArticulation(\"timbale\", 10, 66, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [65, new InstrumentArticulation(\"timbale\", 9, 65, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [68, new InstrumentArticulation(\"agogo\", 12, 68, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [67, new InstrumentArticulation(\"agogo\", 11, 67, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [64, new InstrumentArticulation(\"conga\", 17, 64, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [108, new InstrumentArticulation(\"conga\", 16, 64, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack)],\r\n        [109, new InstrumentArticulation(\"conga\", 15, 64, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole, MusicFontSymbol.NoteheadParenthesis, TextBaseline.Middle)],\r\n        [63, new InstrumentArticulation(\"conga\", 14, 63, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [110, new InstrumentArticulation(\"conga\", 13, 63, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack)],\r\n        [62, new InstrumentArticulation(\"conga\", 19, 62, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole, MusicFontSymbol.NoteheadParenthesis, TextBaseline.Middle)],\r\n        [72, new InstrumentArticulation(\"whistle\", -11, 72, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [71, new InstrumentArticulation(\"whistle\", -17, 71, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [73, new InstrumentArticulation(\"guiro\", 38, 73, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [74, new InstrumentArticulation(\"guiro\", 37, 74, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [86, new InstrumentArticulation(\"surdo\", 36, 86, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [87, new InstrumentArticulation(\"surdo\", 35, 87, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadParenthesis, TextBaseline.Middle)],\r\n        [54, new InstrumentArticulation(\"tambourine\", 3, 54, MusicFontSymbol.NoteheadTriangleUpBlack, MusicFontSymbol.NoteheadTriangleUpBlack, MusicFontSymbol.NoteheadTriangleUpBlack)],\r\n        [111, new InstrumentArticulation(\"tambourine\", 2, 54, MusicFontSymbol.NoteheadTriangleUpBlack, MusicFontSymbol.NoteheadTriangleUpBlack, MusicFontSymbol.NoteheadTriangleUpBlack, MusicFontSymbol.StringsUpBow, TextBaseline.Bottom)],\r\n        [112, new InstrumentArticulation(\"tambourine\", 1, 54, MusicFontSymbol.NoteheadTriangleUpBlack, MusicFontSymbol.NoteheadTriangleUpBlack, MusicFontSymbol.NoteheadTriangleUpBlack, MusicFontSymbol.StringsDownBow, TextBaseline.Bottom)],\r\n        [113, new InstrumentArticulation(\"tambourine\", -7, 54, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack)],\r\n        [79, new InstrumentArticulation(\"cuica\", 30, 79, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [78, new InstrumentArticulation(\"cuica\", 29, 78, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack)],\r\n        [58, new InstrumentArticulation(\"vibraslap\", 28, 58, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [81, new InstrumentArticulation(\"triangle\", 27, 81, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [80, new InstrumentArticulation(\"triangle\", 26, 80, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadParenthesis, TextBaseline.Middle)],\r\n        [114, new InstrumentArticulation(\"grancassa\", 25, 43, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [115, new InstrumentArticulation(\"piatti\", 18, 49, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [116, new InstrumentArticulation(\"piatti\", 24, 49, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack)],\r\n        [69, new InstrumentArticulation(\"cabasa\", 23, 69, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [117, new InstrumentArticulation(\"cabasa\", 22, 69, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole, MusicFontSymbol.StringsUpBow, TextBaseline.Bottom)],\r\n        [85, new InstrumentArticulation(\"castanets\", 21, 85, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [75, new InstrumentArticulation(\"claves\", 20, 75, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [70, new InstrumentArticulation(\"maraca\", -12, 70, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [118, new InstrumentArticulation(\"maraca\", -13, 70, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole, MusicFontSymbol.StringsUpBow, TextBaseline.Bottom)],\r\n        [119, new InstrumentArticulation(\"maraca\", -14, 70, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [120, new InstrumentArticulation(\"maraca\", -15, 70, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole, MusicFontSymbol.StringsUpBow, TextBaseline.Bottom)],\r\n        [82, new InstrumentArticulation(\"shaker\", -23, 54, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [122, new InstrumentArticulation(\"shaker\", -24, 54, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole, MusicFontSymbol.StringsUpBow, TextBaseline.Bottom)],\r\n        [84, new InstrumentArticulation(\"bellTree\", -18, 53, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [123, new InstrumentArticulation(\"bellTree\", -19, 53, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole, MusicFontSymbol.StringsUpBow, TextBaseline.Bottom)],\r\n        [83, new InstrumentArticulation(\"jingleBell\", -20, 53, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [124, new InstrumentArticulation(\"unpitched\", -21, 62, MusicFontSymbol.NoteheadNull, MusicFontSymbol.NoteheadNull, MusicFontSymbol.NoteheadNull, MusicFontSymbol.GuitarGolpe, TextBaseline.Top)],\r\n        [125, new InstrumentArticulation(\"unpitched\", -22, 62, MusicFontSymbol.NoteheadNull, MusicFontSymbol.NoteheadNull, MusicFontSymbol.NoteheadNull, MusicFontSymbol.GuitarGolpe, TextBaseline.Bottom)],\r\n        [39, new InstrumentArticulation(\"handClap\", 3, 39, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [40, new InstrumentArticulation(\"snare\", 3, 40, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [31, new InstrumentArticulation(\"snare\", 3, 40, MusicFontSymbol.NoteheadSlashedBlack2, MusicFontSymbol.NoteheadSlashedBlack2, MusicFontSymbol.NoteheadSlashedBlack2)],\r\n        [41, new InstrumentArticulation(\"tom\", 5, 41, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadHalf, MusicFontSymbol.NoteheadWhole)],\r\n        [59, new InstrumentArticulation(\"ride\", 2, 59, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.PictEdgeOfCymbal, TextBaseline.Bottom)],\r\n        [126, new InstrumentArticulation(\"ride\", 2, 59, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack)],\r\n        [127, new InstrumentArticulation(\"ride\", 2, 59, MusicFontSymbol.NoteheadDiamondWhite, MusicFontSymbol.NoteheadDiamondWhite, MusicFontSymbol.NoteheadDiamondWhite)],\r\n        [29, new InstrumentArticulation(\"ride\", 2, 59, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.ArticStaccatoAbove, TextBaseline.Top)],\r\n        [30, new InstrumentArticulation(\"crash\", -3, 49, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack)],\r\n        [33, new InstrumentArticulation(\"snare\", 3, 37, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack, MusicFontSymbol.NoteheadXBlack)],\r\n        [34, new InstrumentArticulation(\"snare\", 3, 38, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadBlack, MusicFontSymbol.NoteheadBlack)]\r\n    ]);\n\n    /**\r\n     * A note is a single played sound on a fretted instrument.\r\n     * It consists of a fret offset and a string on which the note is played on.\r\n     * It also can be modified by a lot of different effects.\r\n     * @cloneable\r\n     * @json\r\n     */\r\n    class Note {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the unique id of this note.\r\n             * @clone_ignore\r\n             */\r\n            this.id = Note.GlobalNoteId++;\r\n            /**\r\n             * Gets or sets the zero-based index of this note within the beat.\r\n             * @json_ignore\r\n             */\r\n            this.index = 0;\r\n            /**\r\n             * Gets or sets the accentuation of this note.\r\n             */\r\n            this.accentuated = AccentuationType.None;\r\n            /**\r\n             * Gets or sets the bend type for this note.\r\n             */\r\n            this.bendType = BendType.None;\r\n            /**\r\n             * Gets or sets the bend style for this note.\r\n             */\r\n            this.bendStyle = BendStyle.Default;\r\n            /**\r\n             * Gets or sets the note from which this note continues the bend.\r\n             * @clone_ignore\r\n             * @json_ignore\r\n             */\r\n            this.bendOrigin = null;\r\n            /**\r\n             * Gets or sets whether this note continues a bend from a previous note.\r\n             */\r\n            this.isContinuedBend = false;\r\n            /**\r\n             * Gets or sets a list of the points defining the bend behavior.\r\n             * @clone_add addBendPoint\r\n             * @json_add addBendPoint\r\n             */\r\n            this.bendPoints = [];\r\n            /**\r\n             * Gets or sets the bend point with the highest bend value.\r\n             * @clone_ignore\r\n             * @json_ignore\r\n             */\r\n            this.maxBendPoint = null;\r\n            /**\r\n             * Gets or sets the fret on which this note is played on the instrument.\r\n             */\r\n            this.fret = -1;\r\n            /**\r\n             * Gets or sets the string number where the note is placed.\r\n             * 1 is the lowest string on the guitar and the bottom line on the tablature.\r\n             * It then increases the the number of strings on available on the track.\r\n             */\r\n            this.string = -1;\r\n            /**\r\n             * Gets or sets the octave on which this note is played.\r\n             */\r\n            this.octave = -1;\r\n            /**\r\n             * Gets or sets the tone of this note within the octave.\r\n             */\r\n            this.tone = -1;\r\n            /**\r\n             * Gets or sets the index of percussion articulation in the related `track.percussionArticulations`.\r\n             * If the articulation is not listed in `track.percussionArticulations` the following list based on GP7 applies:\r\n             * - 029 Ride (choke)\r\n             * - 030 Cymbal (hit)\r\n             * - 031 Snare (side stick)\r\n             * - 033 Snare (side stick)\r\n             * - 034 Snare (hit)\r\n             * - 035 Kick (hit)\r\n             * - 036 Kick (hit)\r\n             * - 037 Snare (side stick)\r\n             * - 038 Snare (hit)\r\n             * - 039 Hand Clap (hit)\r\n             * - 040 Snare (hit)\r\n             * - 041 Low Floor Tom (hit)\r\n             * - 042 Hi-Hat (closed)\r\n             * - 043 Very Low Tom (hit)\r\n             * - 044 Pedal Hi-Hat (hit)\r\n             * - 045 Low Tom (hit)\r\n             * - 046 Hi-Hat (open)\r\n             * - 047 Mid Tom (hit)\r\n             * - 048 High Tom (hit)\r\n             * - 049 Crash high (hit)\r\n             * - 050 High Floor Tom (hit)\r\n             * - 051 Ride (middle)\r\n             * - 052 China (hit)\r\n             * - 053 Ride (bell)\r\n             * - 054 Tambourine (hit)\r\n             * - 055 Splash (hit)\r\n             * - 056 Cowbell medium (hit)\r\n             * - 057 Crash medium (hit)\r\n             * - 058 Vibraslap (hit)\r\n             * - 059 Ride (edge)\r\n             * - 060 Hand (hit)\r\n             * - 061 Hand (hit)\r\n             * - 062 Conga high (mute)\r\n             * - 063 Conga high (hit)\r\n             * - 064 Conga low (hit)\r\n             * - 065 Timbale high (hit)\r\n             * - 066 Timbale low (hit)\r\n             * - 067 Agogo high (hit)\r\n             * - 068 Agogo tow (hit)\r\n             * - 069 Cabasa (hit)\r\n             * - 070 Left Maraca (hit)\r\n             * - 071 Whistle high (hit)\r\n             * - 072 Whistle low (hit)\r\n             * - 073 Guiro (hit)\r\n             * - 074 Guiro (scrap-return)\r\n             * - 075 Claves (hit)\r\n             * - 076 Woodblock high (hit)\r\n             * - 077 Woodblock low (hit)\r\n             * - 078 Cuica (mute)\r\n             * - 079 Cuica (open)\r\n             * - 080 Triangle (rnute)\r\n             * - 081 Triangle (hit)\r\n             * - 082 Shaker (hit)\r\n             * - 083 Tinkle Bell (hat)\r\n             * - 083 Jingle Bell (hit)\r\n             * - 084 Bell Tree (hit)\r\n             * - 085 Castanets (hit)\r\n             * - 086 Surdo (hit)\r\n             * - 087 Surdo (mute)\r\n             * - 091 Snare (rim shot)\r\n             * - 092 Hi-Hat (half)\r\n             * - 093 Ride (edge)\r\n             * - 094 Ride (choke)\r\n             * - 095 Splash (choke)\r\n             * - 096 China (choke)\r\n             * - 097 Crash high (choke)\r\n             * - 098 Crash medium (choke)\r\n             * - 099 Cowbell low (hit)\r\n             * - 100 Cowbell low (tip)\r\n             * - 101 Cowbell medium (tip)\r\n             * - 102 Cowbell high (hit)\r\n             * - 103 Cowbell high (tip)\r\n             * - 104 Hand (mute)\r\n             * - 105 Hand (slap)\r\n             * - 106 Hand (mute)\r\n             * - 107 Hand (slap)\r\n             * - 108 Conga low (slap)\r\n             * - 109 Conga low (mute)\r\n             * - 110 Conga high (slap)\r\n             * - 111 Tambourine (return)\r\n             * - 112 Tambourine (roll)\r\n             * - 113 Tambourine (hand)\r\n             * - 114 Grancassa (hit)\r\n             * - 115 Piatti (hat)\r\n             * - 116 Piatti (hand)\r\n             * - 117 Cabasa (return)\r\n             * - 118 Left Maraca (return)\r\n             * - 119 Right Maraca (hit)\r\n             * - 120 Right Maraca (return)\r\n             * - 122 Shaker (return)\r\n             * - 123 Bell Tee (return)\r\n             * - 124 Golpe (thumb)\r\n             * - 125 Golpe (finger)\r\n             * - 126 Ride (middle)\r\n             * - 127 Ride (bell)\r\n             */\r\n            this.percussionArticulation = -1;\r\n            /**\r\n             * Gets or sets whether this note is visible on the music sheet.\r\n             */\r\n            this.isVisible = true;\r\n            /**\r\n             * Gets a value indicating whether the note is left hand tapped.\r\n             */\r\n            this.isLeftHandTapped = false;\r\n            /**\r\n             * Gets or sets whether this note starts a hammeron or pulloff.\r\n             */\r\n            this.isHammerPullOrigin = false;\r\n            /**\r\n             * Gets the origin note id of the hammeron/pull-off of this note.\r\n             */\r\n            this.hammerPullOriginNoteId = -1;\r\n            /**\r\n             * Gets the destination note id of the hammeron/pull-off of this note.\r\n             */\r\n            this.hammerPullDestinationNoteId = -1;\r\n            /**\r\n             * Gets or sets whether this note finishes a slur.\r\n             */\r\n            this.isSlurDestination = false;\r\n            /**\r\n             * Gets the note id where the slur of this note starts.\r\n             */\r\n            this.slurOriginNoteId = -1;\r\n            /**\r\n             * Gets or sets the note id where the slur of this note ends.\r\n             */\r\n            this.slurDestinationNoteId = -1;\r\n            /**\r\n             * Gets or sets the harmonic type applied to this note.\r\n             */\r\n            this.harmonicType = HarmonicType.None;\r\n            /**\r\n             * Gets or sets the value defining the harmonic pitch.\r\n             */\r\n            this.harmonicValue = 0;\r\n            /**\r\n             * Gets or sets whether the note is a ghost note and shown in parenthesis. Also this will make the note a bit more silent.\r\n             */\r\n            this.isGhost = false;\r\n            /**\r\n             * Gets or sets whether this note has a let-ring effect.\r\n             */\r\n            this.isLetRing = false;\r\n            /**\r\n             * Gets or sets the destination note for the let-ring effect.\r\n             * @clone_ignore\r\n             * @json_ignore\r\n             */\r\n            this.letRingDestination = null;\r\n            /**\r\n             * Gets or sets whether this note has a palm-mute effect.\r\n             */\r\n            this.isPalmMute = false;\r\n            /**\r\n             * Gets or sets the destination note for the palm-mute effect.\r\n             * @clone_ignore\r\n             * @json_ignore\r\n             */\r\n            this.palmMuteDestination = null;\r\n            /**\r\n             * Gets or sets whether the note is shown and played as dead note.\r\n             */\r\n            this.isDead = false;\r\n            /**\r\n             * Gets or sets whether the note is played as staccato.\r\n             */\r\n            this.isStaccato = false;\r\n            /**\r\n             * Gets or sets the slide-in type this note is played with.\r\n             */\r\n            this.slideInType = SlideInType.None;\r\n            /**\r\n             * Gets or sets the slide-out type this note is played with.\r\n             */\r\n            this.slideOutType = SlideOutType.None;\r\n            /**\r\n             * Gets or sets the target note for several slide types.\r\n             * @clone_ignore\r\n             * @json_ignore\r\n             */\r\n            this.slideTarget = null;\r\n            /**\r\n             * Gets or sets the source note for several slide types.\r\n             * @clone_ignore\r\n             * @json_ignore\r\n             */\r\n            this.slideOrigin = null;\r\n            /**\r\n             * Gets or sets whether a vibrato is played on the note.\r\n             */\r\n            this.vibrato = VibratoType.None;\r\n            /**\r\n             * Gets the origin note id of the tied if this note is tied.\r\n             */\r\n            this.tieOriginNoteId = -1;\r\n            /**\r\n             * Gets the desination note id of the tie.\r\n             */\r\n            this.tieDestinationNoteId = -1;\r\n            /**\r\n             * Gets or sets whether this note is ends a tied note.\r\n             */\r\n            this.isTieDestination = false;\r\n            /**\r\n             * Gets or sets the fingers used for this note on the left hand.\r\n             */\r\n            this.leftHandFinger = Fingers.Unknown;\r\n            /**\r\n             * Gets or sets the fingers used for this note on the right hand.\r\n             */\r\n            this.rightHandFinger = Fingers.Unknown;\r\n            /**\r\n             * Gets or sets whether this note has fingering defined.\r\n             */\r\n            this.isFingering = false;\r\n            /**\r\n             * Gets or sets the target note value for the trill effect.\r\n             */\r\n            this.trillValue = -1;\r\n            /**\r\n             * Gets or sets the speed of the trill effect.\r\n             */\r\n            this.trillSpeed = Duration.ThirtySecond;\r\n            /**\r\n             * Gets or sets the percentual duration of the note relative to the overall beat duration .\r\n             */\r\n            this.durationPercent = 1;\r\n            /**\r\n             * Gets or sets how accidetnals for this note should  be handled.\r\n             */\r\n            this.accidentalMode = NoteAccidentalMode.Default;\r\n            /**\r\n             * Gets or sets the dynamics for this note.\r\n             */\r\n            this.dynamics = DynamicValue.F;\r\n            /**\r\n             * @clone_ignore\r\n             * @json_ignore\r\n             */\r\n            this.isEffectSlurOrigin = false;\r\n            /**\r\n             * @clone_ignore\r\n             * @json_ignore\r\n             */\r\n            this.hasEffectSlur = false;\r\n            /**\r\n             * @clone_ignore\r\n             * @json_ignore\r\n             */\r\n            this.effectSlurOrigin = null;\r\n            /**\r\n             * @clone_ignore\r\n             * @json_ignore\r\n             */\r\n            this.effectSlurDestination = null;\r\n        }\r\n        get hasBend() {\r\n            return this.bendType !== BendType.None;\r\n        }\r\n        get isStringed() {\r\n            return this.string >= 0;\r\n        }\r\n        get isPiano() {\r\n            return !this.isStringed && this.octave >= 0 && this.tone >= 0;\r\n        }\r\n        get isPercussion() {\r\n            return !this.isStringed && this.percussionArticulation >= 0;\r\n        }\r\n        /**\r\n         * Gets or sets the percusson element.\r\n         * @deprecated\r\n         */\r\n        get element() {\r\n            return this.isPercussion ? PercussionMapper.getElementAndVariation(this)[0] : -1;\r\n        }\r\n        /**\r\n         * Gets or sets the variation of this note.\r\n         * @deprecated\r\n         */\r\n        get variation() {\r\n            return this.isPercussion ? PercussionMapper.getElementAndVariation(this)[1] : -1;\r\n        }\r\n        get isHammerPullDestination() {\r\n            return !!this.hammerPullOrigin;\r\n        }\r\n        /**\r\n         * Gets the origin of the hammeron/pulloff of this note.\r\n         */\r\n        get hammerPullOrigin() {\r\n            return this.hammerPullOriginNoteId === -1 ? null : this.beat.voice.bar.staff.track.score.getNoteById(this.hammerPullOriginNoteId);\r\n        }\r\n        /**\r\n         * Gets the destination for the hammeron/pullof started by this note.\r\n         */\r\n        get hammerPullDestination() {\r\n            return this.hammerPullDestinationNoteId === -1 ? null : this.beat.voice.bar.staff.track.score.getNoteById(this.hammerPullDestinationNoteId);\r\n        }\r\n        get isSlurOrigin() {\r\n            return !!this.slurDestination;\r\n        }\r\n        /**\r\n         * Gets or sets the note where the slur of this note starts.\r\n         */\r\n        get slurOrigin() {\r\n            return this.slurOriginNoteId === -1 ? null : this.beat.voice.bar.staff.track.score.getNoteById(this.slurOriginNoteId);\r\n        }\r\n        /**\r\n         * Gets or sets the note where the slur of this note ends.\r\n         */\r\n        get slurDestination() {\r\n            return this.slurDestinationNoteId === -1 ? null : this.beat.voice.bar.staff.track.score.getNoteById(this.slurDestinationNoteId);\r\n        }\r\n        get isHarmonic() {\r\n            return this.harmonicType !== HarmonicType.None;\r\n        }\r\n        /**\r\n         * Gets the origin of the tied if this note is tied.\r\n         */\r\n        get tieOrigin() {\r\n            return this.tieOriginNoteId === -1 ? null : this.beat.voice.bar.staff.track.score.getNoteById(this.tieOriginNoteId);\r\n        }\r\n        /**\r\n         * Gets the desination of the tie.\r\n         */\r\n        get tieDestination() {\r\n            return this.tieDestinationNoteId === -1 ? null : this.beat.voice.bar.staff.track.score.getNoteById(this.tieDestinationNoteId);\r\n        }\r\n        get isTieOrigin() {\r\n            return this.tieDestinationNoteId !== -1;\r\n        }\r\n        get trillFret() {\r\n            return this.trillValue - this.stringTuning;\r\n        }\r\n        get isTrill() {\r\n            return this.trillValue >= 0;\r\n        }\r\n        get isEffectSlurDestination() {\r\n            return !!this.effectSlurOrigin;\r\n        }\r\n        get stringTuning() {\r\n            return this.beat.voice.bar.staff.capo + Note.getStringTuning(this.beat.voice.bar.staff, this.string);\r\n        }\r\n        static getStringTuning(staff, noteString) {\r\n            if (staff.tuning.length > 0) {\r\n                return staff.tuning[staff.tuning.length - (noteString - 1) - 1];\r\n            }\r\n            return 0;\r\n        }\r\n        get realValue() {\r\n            let realValue = this.realValueWithoutHarmonic;\r\n            if (this.isStringed) {\r\n                if (this.harmonicType === HarmonicType.Natural) {\r\n                    realValue = this.harmonicPitch + this.stringTuning - this.beat.voice.bar.staff.transpositionPitch;\r\n                }\r\n                else {\r\n                    realValue += this.harmonicPitch;\r\n                }\r\n            }\r\n            return realValue;\r\n        }\r\n        get realValueWithoutHarmonic() {\r\n            if (this.isPercussion) {\r\n                return this.percussionArticulation;\r\n            }\r\n            if (this.isStringed) {\r\n                return this.fret + this.stringTuning - this.beat.voice.bar.staff.transpositionPitch;\r\n            }\r\n            if (this.isPiano) {\r\n                return this.octave * 12 + this.tone - this.beat.voice.bar.staff.transpositionPitch;\r\n            }\r\n            return 0;\r\n        }\r\n        get harmonicPitch() {\r\n            if (this.harmonicType === HarmonicType.None || !this.isStringed) {\r\n                return 0;\r\n            }\r\n            let value = this.harmonicValue;\r\n            // add semitones to reach corresponding harmonic frets\r\n            if (ModelUtils.isAlmostEqualTo(value, 2.4)) {\r\n                return 36;\r\n            }\r\n            if (ModelUtils.isAlmostEqualTo(value, 2.7)) {\r\n                // Fret 3 2nd octave + minor seventh\r\n                return 34;\r\n            }\r\n            if (value < 3) {\r\n                // no natural harmonics below fret 3\r\n                return 0;\r\n            }\r\n            if (value <= 3.5) {\r\n                // Fret 3 2nd octave + fifth\r\n                return 31;\r\n            }\r\n            if (value <= 4) {\r\n                return 28;\r\n            }\r\n            if (value <= 5) {\r\n                return 24;\r\n            }\r\n            if (value <= 6) {\r\n                return 34;\r\n            }\r\n            if (value <= 7) {\r\n                return 19;\r\n            }\r\n            if (value <= 8.5) {\r\n                return 36;\r\n            }\r\n            if (value <= 9) {\r\n                return 28;\r\n            }\r\n            if (value <= 10) {\r\n                return 34;\r\n            }\r\n            if (value <= 11) {\r\n                return 0;\r\n            }\r\n            if (value <= 12) {\r\n                return 12;\r\n            }\r\n            if (value < 14) {\r\n                // fret 13,14 stay\r\n                return 0;\r\n            }\r\n            if (value <= 15) {\r\n                return 34;\r\n            }\r\n            if (value <= 16) {\r\n                return 28;\r\n            }\r\n            if (value <= 17) {\r\n                return 36;\r\n            }\r\n            if (value <= 18) {\r\n                return 0;\r\n            }\r\n            if (value <= 19) {\r\n                return 19;\r\n            }\r\n            if (value <= 21) {\r\n                //  20,21 stay\r\n                return 0;\r\n            }\r\n            if (value <= 22) {\r\n                return 36;\r\n            }\r\n            if (value <= 24) {\r\n                return 24;\r\n            }\r\n            return 0;\r\n        }\r\n        get initialBendValue() {\r\n            if (this.hasBend) {\r\n                return (this.bendPoints[0].value / 2) | 0;\r\n            }\r\n            else if (this.bendOrigin) {\r\n                return (this.bendOrigin.bendPoints[this.bendOrigin.bendPoints.length - 1].value / 2) | 0;\r\n            }\r\n            else if (this.isTieDestination && this.tieOrigin.bendOrigin) {\r\n                return (this.tieOrigin.bendOrigin.bendPoints[this.tieOrigin.bendOrigin.bendPoints.length - 1].value / 2) | 0;\r\n            }\r\n            else if (this.beat.hasWhammyBar) {\r\n                return (this.beat.whammyBarPoints[0].value / 2) | 0;\r\n            }\r\n            else if (this.beat.isContinuedWhammy) {\r\n                return (this.beat.previousBeat.whammyBarPoints[this.beat.previousBeat.whammyBarPoints.length - 1].value / 2) | 0;\r\n            }\r\n            return 0;\r\n        }\r\n        get displayValue() {\r\n            return this.displayValueWithoutBend + this.initialBendValue;\r\n        }\r\n        get displayValueWithoutBend() {\r\n            let noteValue = this.realValue;\r\n            if (this.harmonicType !== HarmonicType.Natural && this.harmonicType !== HarmonicType.None) {\r\n                noteValue -= this.harmonicPitch;\r\n            }\r\n            switch (this.beat.ottava) {\r\n                case Ottavia._15ma:\r\n                    noteValue -= 24;\r\n                    break;\r\n                case Ottavia._8va:\r\n                    noteValue -= 12;\r\n                    break;\r\n                case Ottavia.Regular:\r\n                    break;\r\n                case Ottavia._8vb:\r\n                    noteValue += 12;\r\n                    break;\r\n                case Ottavia._15mb:\r\n                    noteValue += 24;\r\n                    break;\r\n            }\r\n            switch (this.beat.voice.bar.clefOttava) {\r\n                case Ottavia._15ma:\r\n                    noteValue -= 24;\r\n                    break;\r\n                case Ottavia._8va:\r\n                    noteValue -= 12;\r\n                    break;\r\n                case Ottavia.Regular:\r\n                    break;\r\n                case Ottavia._8vb:\r\n                    noteValue += 12;\r\n                    break;\r\n                case Ottavia._15mb:\r\n                    noteValue += 24;\r\n                    break;\r\n            }\r\n            return noteValue - this.beat.voice.bar.staff.displayTranspositionPitch;\r\n        }\r\n        get hasQuarterToneOffset() {\r\n            if (this.hasBend) {\r\n                return this.bendPoints[0].value % 2 !== 0;\r\n            }\r\n            if (this.bendOrigin) {\r\n                return this.bendOrigin.bendPoints[this.bendOrigin.bendPoints.length - 1].value % 2 !== 0;\r\n            }\r\n            if (this.beat.hasWhammyBar) {\r\n                return this.beat.whammyBarPoints[0].value % 2 !== 0;\r\n            }\r\n            if (this.beat.isContinuedWhammy) {\r\n                return (this.beat.previousBeat.whammyBarPoints[this.beat.previousBeat.whammyBarPoints.length - 1].value %\r\n                    2 !==\r\n                    0);\r\n            }\r\n            return false;\r\n        }\r\n        addBendPoint(point) {\r\n            this.bendPoints.push(point);\r\n            if (!this.maxBendPoint || point.value > this.maxBendPoint.value) {\r\n                this.maxBendPoint = point;\r\n            }\r\n            if (this.bendType === BendType.None) {\r\n                this.bendType = BendType.Custom;\r\n            }\r\n        }\r\n        finish(settings) {\r\n            let nextNoteOnLine = new Lazy(() => Note.nextNoteOnSameLine(this));\r\n            let isSongBook = settings && settings.notation.notationMode === exports.NotationMode.SongBook;\r\n            // connect ties\r\n            if (this.isTieDestination) {\r\n                this.chain();\r\n                // implicit let ring\r\n                if (isSongBook && this.tieOrigin && this.tieOrigin.isLetRing) {\r\n                    this.isLetRing = true;\r\n                }\r\n            }\r\n            // connect letring\r\n            if (this.isLetRing) {\r\n                if (!nextNoteOnLine.value || !nextNoteOnLine.value.isLetRing) {\r\n                    this.letRingDestination = this;\r\n                }\r\n                else {\r\n                    this.letRingDestination = nextNoteOnLine.value;\r\n                }\r\n                if (isSongBook && this.isTieDestination && !this.tieOrigin.hasBend) {\r\n                    this.isVisible = false;\r\n                }\r\n            }\r\n            // connect palmmute\r\n            if (this.isPalmMute) {\r\n                if (!nextNoteOnLine.value || !nextNoteOnLine.value.isPalmMute) {\r\n                    this.palmMuteDestination = this;\r\n                }\r\n                else {\r\n                    this.palmMuteDestination = nextNoteOnLine.value;\r\n                }\r\n            }\r\n            // set hammeron/pulloffs\r\n            if (this.isHammerPullOrigin) {\r\n                let hammerPullDestination = Note.findHammerPullDestination(this);\r\n                if (!hammerPullDestination) {\r\n                    this.isHammerPullOrigin = false;\r\n                }\r\n                else {\r\n                    this.hammerPullDestinationNoteId = hammerPullDestination.id;\r\n                    hammerPullDestination.hammerPullOriginNoteId = this.id;\r\n                }\r\n            }\r\n            // set slides\r\n            switch (this.slideOutType) {\r\n                case SlideOutType.Shift:\r\n                case SlideOutType.Legato:\r\n                    this.slideTarget = nextNoteOnLine.value;\r\n                    if (!this.slideTarget) {\r\n                        this.slideOutType = SlideOutType.None;\r\n                    }\r\n                    else {\r\n                        this.slideTarget.slideOrigin = this;\r\n                    }\r\n                    break;\r\n            }\r\n            let effectSlurDestination = null;\r\n            if (this.isHammerPullOrigin && this.hammerPullDestination) {\r\n                effectSlurDestination = this.hammerPullDestination;\r\n            }\r\n            else if (this.slideOutType === SlideOutType.Legato && this.slideTarget) {\r\n                effectSlurDestination = this.slideTarget;\r\n            }\r\n            if (effectSlurDestination) {\r\n                this.hasEffectSlur = true;\r\n                if (this.effectSlurOrigin && this.beat.pickStroke === PickStroke.None) {\r\n                    this.effectSlurOrigin.effectSlurDestination = effectSlurDestination;\r\n                    this.effectSlurOrigin.effectSlurDestination.effectSlurOrigin = this.effectSlurOrigin;\r\n                    this.effectSlurOrigin = null;\r\n                }\r\n                else {\r\n                    this.isEffectSlurOrigin = true;\r\n                    this.effectSlurDestination = effectSlurDestination;\r\n                    this.effectSlurDestination.effectSlurOrigin = this;\r\n                }\r\n            }\r\n            // try to detect what kind of bend was used and cleans unneeded points if required\r\n            // Guitar Pro 6 and above (gpif.xml) uses exactly 4 points to define all bends\r\n            if (this.bendPoints.length > 0 && this.bendType === BendType.Custom) {\r\n                let isContinuedBend = (this.isContinuedBend = this.isTieDestination && this.tieOrigin.hasBend);\r\n                if (this.bendPoints.length === 4) {\r\n                    let origin = this.bendPoints[0];\r\n                    let middle1 = this.bendPoints[1];\r\n                    let middle2 = this.bendPoints[2];\r\n                    let destination = this.bendPoints[3];\r\n                    // the middle points are used for holds, anything else is a new feature we do not support yet\r\n                    if (middle1.value === middle2.value) {\r\n                        // bend higher?\r\n                        if (destination.value > origin.value) {\r\n                            if (middle1.value > destination.value) {\r\n                                this.bendType = BendType.BendRelease;\r\n                            }\r\n                            else if (!isContinuedBend && origin.value > 0) {\r\n                                this.bendType = BendType.PrebendBend;\r\n                                this.bendPoints.splice(2, 1);\r\n                                this.bendPoints.splice(1, 1);\r\n                            }\r\n                            else {\r\n                                this.bendType = BendType.Bend;\r\n                                this.bendPoints.splice(2, 1);\r\n                                this.bendPoints.splice(1, 1);\r\n                            }\r\n                        }\r\n                        else if (destination.value < origin.value) {\r\n                            // origin must be > 0 otherwise it's no release, we cannot bend negative\r\n                            if (isContinuedBend) {\r\n                                this.bendType = BendType.Release;\r\n                                this.bendPoints.splice(2, 1);\r\n                                this.bendPoints.splice(1, 1);\r\n                            }\r\n                            else {\r\n                                this.bendType = BendType.PrebendRelease;\r\n                                this.bendPoints.splice(2, 1);\r\n                                this.bendPoints.splice(1, 1);\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (middle1.value > origin.value) {\r\n                                this.bendType = BendType.BendRelease;\r\n                            }\r\n                            else if (origin.value > 0 && !isContinuedBend) {\r\n                                this.bendType = BendType.Prebend;\r\n                                this.bendPoints.splice(2, 1);\r\n                                this.bendPoints.splice(1, 1);\r\n                            }\r\n                            else {\r\n                                this.bendType = BendType.Hold;\r\n                                this.bendPoints.splice(2, 1);\r\n                                this.bendPoints.splice(1, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        Logger.warning('Model', 'Unsupported bend type detected, fallback to custom', null);\r\n                    }\r\n                }\r\n                else if (this.bendPoints.length === 2) {\r\n                    let origin = this.bendPoints[0];\r\n                    let destination = this.bendPoints[1];\r\n                    // bend higher?\r\n                    if (destination.value > origin.value) {\r\n                        if (!isContinuedBend && origin.value > 0) {\r\n                            this.bendType = BendType.PrebendBend;\r\n                        }\r\n                        else {\r\n                            this.bendType = BendType.Bend;\r\n                        }\r\n                    }\r\n                    else if (destination.value < origin.value) {\r\n                        // origin must be > 0 otherwise it's no release, we cannot bend negative\r\n                        if (isContinuedBend) {\r\n                            this.bendType = BendType.Release;\r\n                        }\r\n                        else {\r\n                            this.bendType = BendType.PrebendRelease;\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.bendType = BendType.Hold;\r\n                    }\r\n                }\r\n            }\r\n            else if (this.bendPoints.length === 0) {\r\n                this.bendType = BendType.None;\r\n            }\r\n            // initial bend pitch offsets and forced accidentals don't play well together\r\n            // we reset it\r\n            if (this.initialBendValue > 0) {\r\n                this.accidentalMode = NoteAccidentalMode.Default;\r\n            }\r\n        }\r\n        static nextNoteOnSameLine(note) {\r\n            let nextBeat = note.beat.nextBeat;\r\n            // keep searching in same bar\r\n            while (nextBeat && nextBeat.voice.bar.index <= note.beat.voice.bar.index + Note.MaxOffsetForSameLineSearch) {\r\n                let noteOnString = nextBeat.getNoteOnString(note.string);\r\n                if (noteOnString) {\r\n                    return noteOnString;\r\n                }\r\n                nextBeat = nextBeat.nextBeat;\r\n            }\r\n            return null;\r\n        }\r\n        static findHammerPullDestination(note) {\r\n            // For Hammer-Pull destinations we have 2 potential candidates\r\n            // 1. A note on the same string\r\n            // 2. A note on a different string, but with a left-hand-tapping applied\r\n            // for the second case we have a special logic to search for notes:\r\n            // 1. We first search on lower strings, then on higher strings\r\n            // 2. If we find a note with a left-hand-tap applied it becomes the target\r\n            // 3. If we find a note without a left-hand-tap we stop searching in this direction\r\n            let nextBeat = note.beat.nextBeat;\r\n            // keep searching in same bar\r\n            while (nextBeat && nextBeat.voice.bar.index <= note.beat.voice.bar.index + Note.MaxOffsetForSameLineSearch) {\r\n                // 1. same string first\r\n                let noteOnString = nextBeat.getNoteOnString(note.string);\r\n                if (noteOnString) {\r\n                    return noteOnString;\r\n                }\r\n                // 2. search toward lower strings\r\n                for (let str = note.string; str > 0; str--) {\r\n                    noteOnString = nextBeat.getNoteOnString(str);\r\n                    if (noteOnString) {\r\n                        if (noteOnString.isLeftHandTapped) {\r\n                            return noteOnString;\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                // 3. search toward higher strings\r\n                for (let str = note.string; str <= note.beat.voice.bar.staff.tuning.length; str++) {\r\n                    noteOnString = nextBeat.getNoteOnString(str);\r\n                    if (noteOnString) {\r\n                        if (noteOnString.isLeftHandTapped) {\r\n                            return noteOnString;\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                // nothing found, search on next beat\r\n                nextBeat = nextBeat.nextBeat;\r\n            }\r\n            return null;\r\n        }\r\n        static findTieOrigin(note) {\r\n            let previousBeat = note.beat.previousBeat;\r\n            // keep searching in same bar\r\n            while (previousBeat &&\r\n                previousBeat.voice.bar.index >= note.beat.voice.bar.index - Note.MaxOffsetForSameLineSearch) {\r\n                if (note.isStringed) {\r\n                    let noteOnString = previousBeat.getNoteOnString(note.string);\r\n                    if (noteOnString) {\r\n                        return noteOnString;\r\n                    }\r\n                }\r\n                else {\r\n                    if (note.octave === -1 && note.tone === -1) {\r\n                        // if the note has no value (e.g. alphaTex dash tie), we try to find a matching\r\n                        // note on the previous beat by index.\r\n                        if (note.index < previousBeat.notes.length) {\r\n                            return previousBeat.notes[note.index];\r\n                        }\r\n                    }\r\n                    else {\r\n                        let noteWithValue = previousBeat.getNoteWithRealValue(note.realValue);\r\n                        if (noteWithValue) {\r\n                            return noteWithValue;\r\n                        }\r\n                    }\r\n                }\r\n                previousBeat = previousBeat.previousBeat;\r\n            }\r\n            return null;\r\n        }\r\n        chain() {\r\n            this.beat.voice.bar.staff.track.score.registerNote(this);\r\n            if (!this.isTieDestination) {\r\n                return;\r\n            }\r\n            let tieOrigin;\r\n            if (this.tieOriginNoteId === -1) {\r\n                tieOrigin = Note.findTieOrigin(this);\r\n                this.tieOriginNoteId = tieOrigin ? tieOrigin.id : -1;\r\n            }\r\n            else {\r\n                tieOrigin = this.tieOrigin;\r\n            }\r\n            if (!tieOrigin) {\r\n                this.isTieDestination = false;\r\n            }\r\n            else {\r\n                tieOrigin.tieDestinationNoteId = this.id;\r\n                this.fret = tieOrigin.fret;\r\n                this.octave = tieOrigin.octave;\r\n                this.tone = tieOrigin.tone;\r\n                if (tieOrigin.hasBend) {\r\n                    this.bendOrigin = this.tieOrigin;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    Note.GlobalNoteId = 0;\r\n    Note.MaxOffsetForSameLineSearch = 3;\n\n    /**\r\n     * Represents a list of beats that are grouped within the same tuplet.\r\n     */\r\n    class TupletGroup {\r\n        /**\r\n         * Initializes a new instance of the {@link TupletGroup} class.\r\n         * @param voice The voice this group belongs to.\r\n         */\r\n        constructor(voice) {\r\n            this._isEqualLengthTuplet = true;\r\n            this.totalDuration = 0;\r\n            /**\r\n             * Gets or sets the list of beats contained in this group.\r\n             */\r\n            this.beats = [];\r\n            /**\r\n             * Gets a value indicating whether the tuplet group is fully filled.\r\n             */\r\n            this.isFull = false;\r\n            this.voice = voice;\r\n        }\r\n        check(beat) {\r\n            if (this.beats.length === 0) {\r\n                // accept first beat\r\n                this.beats.push(beat);\r\n                this.totalDuration += beat.playbackDuration;\r\n                return true;\r\n            }\r\n            if (beat.graceType !== GraceType.None) {\r\n                // grace notes do not break tuplet group, but also do not contribute to them.\r\n                return true;\r\n            }\r\n            if (beat.voice !== this.voice ||\r\n                this.isFull ||\r\n                beat.tupletNumerator !== this.beats[0].tupletNumerator ||\r\n                beat.tupletDenominator !== this.beats[0].tupletDenominator) {\r\n                // only same tuplets are potentially accepted\r\n                return false;\r\n            }\r\n            // TBH: I do not really know how the 100% tuplet grouping of Guitar Pro might work\r\n            // it sometimes has really strange rules where notes filling 3 quarters, are considered a full 3:2 tuplet\r\n            // in alphaTab we have now 2 rules where we consider a tuplet full:\r\n            // 1. if all beats have the same length, the tuplet must contain N notes of an N:M tuplet\r\n            // 2. if we have mixed beats, we check if the current set of beats, matches a N:M tuplet\r\n            //    by checking all potential note durations.\r\n            // this logic is very likely not 100% correct but for most cases the tuplets\r\n            // appeared correct.\r\n            if (beat.playbackDuration !== this.beats[0].playbackDuration) {\r\n                this._isEqualLengthTuplet = false;\r\n            }\r\n            this.beats.push(beat);\r\n            this.totalDuration += beat.playbackDuration;\r\n            if (this._isEqualLengthTuplet) {\r\n                if (this.beats.length === this.beats[0].tupletNumerator) {\r\n                    this.isFull = true;\r\n                }\r\n            }\r\n            else {\r\n                let factor = (this.beats[0].tupletNumerator / this.beats[0].tupletDenominator) | 0;\r\n                for (let potentialMatch of TupletGroup.AllTicks) {\r\n                    if (this.totalDuration === potentialMatch * factor) {\r\n                        this.isFull = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    TupletGroup.HalfTicks = 1920;\r\n    TupletGroup.QuarterTicks = 960;\r\n    TupletGroup.EighthTicks = 480;\r\n    TupletGroup.SixteenthTicks = 240;\r\n    TupletGroup.ThirtySecondTicks = 120;\r\n    TupletGroup.SixtyFourthTicks = 60;\r\n    TupletGroup.OneHundredTwentyEighthTicks = 30;\r\n    TupletGroup.TwoHundredFiftySixthTicks = 15;\r\n    TupletGroup.AllTicks = [\r\n        TupletGroup.HalfTicks,\r\n        TupletGroup.QuarterTicks,\r\n        TupletGroup.EighthTicks,\r\n        TupletGroup.SixteenthTicks,\r\n        TupletGroup.ThirtySecondTicks,\r\n        TupletGroup.SixtyFourthTicks,\r\n        TupletGroup.OneHundredTwentyEighthTicks,\r\n        TupletGroup.TwoHundredFiftySixthTicks\r\n    ];\n\n    /**\r\n     * Lists all types of whammy bars\r\n     */\r\n    var WhammyType;\r\n    (function (WhammyType) {\r\n        /**\r\n         * No whammy at all\r\n         */\r\n        WhammyType[WhammyType[\"None\"] = 0] = \"None\";\r\n        /**\r\n         * Individual points define the whammy in a flexible manner.\r\n         * This system was mainly used in Guitar Pro 3-5\r\n         */\r\n        WhammyType[WhammyType[\"Custom\"] = 1] = \"Custom\";\r\n        /**\r\n         * Simple dive to a lower or higher note.\r\n         */\r\n        WhammyType[WhammyType[\"Dive\"] = 2] = \"Dive\";\r\n        /**\r\n         * A dive to a lower or higher note and releasing it back to normal.\r\n         */\r\n        WhammyType[WhammyType[\"Dip\"] = 3] = \"Dip\";\r\n        /**\r\n         * Continue to hold the whammy at the position from a previous whammy.\r\n         */\r\n        WhammyType[WhammyType[\"Hold\"] = 4] = \"Hold\";\r\n        /**\r\n         * Dive to a lower or higher note before playing it.\r\n         */\r\n        WhammyType[WhammyType[\"Predive\"] = 5] = \"Predive\";\r\n        /**\r\n         * Dive to a lower or higher note before playing it, then change to another\r\n         * note.\r\n         */\r\n        WhammyType[WhammyType[\"PrediveDive\"] = 6] = \"PrediveDive\";\r\n    })(WhammyType || (WhammyType = {}));\n\n    // <auto-generated>\r\n    class BendPointCloner {\r\n        static clone(original) {\r\n            const clone = new BendPoint();\r\n            clone.offset = original.offset;\r\n            clone.value = original.value;\r\n            return clone;\r\n        }\r\n    }\n\n    // <auto-generated>\r\n    class NoteCloner {\r\n        static clone(original) {\r\n            const clone = new Note();\r\n            clone.index = original.index;\r\n            clone.accentuated = original.accentuated;\r\n            clone.bendType = original.bendType;\r\n            clone.bendStyle = original.bendStyle;\r\n            clone.isContinuedBend = original.isContinuedBend;\r\n            clone.bendPoints = [];\r\n            for (const i of original.bendPoints) {\r\n                clone.addBendPoint(BendPointCloner.clone(i));\r\n            }\r\n            clone.fret = original.fret;\r\n            clone.string = original.string;\r\n            clone.octave = original.octave;\r\n            clone.tone = original.tone;\r\n            clone.percussionArticulation = original.percussionArticulation;\r\n            clone.isVisible = original.isVisible;\r\n            clone.isLeftHandTapped = original.isLeftHandTapped;\r\n            clone.isHammerPullOrigin = original.isHammerPullOrigin;\r\n            clone.hammerPullOriginNoteId = original.hammerPullOriginNoteId;\r\n            clone.hammerPullDestinationNoteId = original.hammerPullDestinationNoteId;\r\n            clone.isSlurDestination = original.isSlurDestination;\r\n            clone.slurOriginNoteId = original.slurOriginNoteId;\r\n            clone.slurDestinationNoteId = original.slurDestinationNoteId;\r\n            clone.harmonicType = original.harmonicType;\r\n            clone.harmonicValue = original.harmonicValue;\r\n            clone.isGhost = original.isGhost;\r\n            clone.isLetRing = original.isLetRing;\r\n            clone.isPalmMute = original.isPalmMute;\r\n            clone.isDead = original.isDead;\r\n            clone.isStaccato = original.isStaccato;\r\n            clone.slideInType = original.slideInType;\r\n            clone.slideOutType = original.slideOutType;\r\n            clone.vibrato = original.vibrato;\r\n            clone.tieOriginNoteId = original.tieOriginNoteId;\r\n            clone.tieDestinationNoteId = original.tieDestinationNoteId;\r\n            clone.isTieDestination = original.isTieDestination;\r\n            clone.leftHandFinger = original.leftHandFinger;\r\n            clone.rightHandFinger = original.rightHandFinger;\r\n            clone.isFingering = original.isFingering;\r\n            clone.trillValue = original.trillValue;\r\n            clone.trillSpeed = original.trillSpeed;\r\n            clone.durationPercent = original.durationPercent;\r\n            clone.accidentalMode = original.accidentalMode;\r\n            clone.dynamics = original.dynamics;\r\n            return clone;\r\n        }\r\n    }\n\n    // <auto-generated>\r\n    class AutomationCloner {\r\n        static clone(original) {\r\n            const clone = new Automation();\r\n            clone.isLinear = original.isLinear;\r\n            clone.type = original.type;\r\n            clone.value = original.value;\r\n            clone.ratioPosition = original.ratioPosition;\r\n            clone.text = original.text;\r\n            return clone;\r\n        }\r\n    }\n\n    // <auto-generated>\r\n    class BeatCloner {\r\n        static clone(original) {\r\n            const clone = new Beat();\r\n            clone.index = original.index;\r\n            clone.notes = [];\r\n            for (const i of original.notes) {\r\n                clone.addNote(NoteCloner.clone(i));\r\n            }\r\n            clone.isEmpty = original.isEmpty;\r\n            clone.whammyStyle = original.whammyStyle;\r\n            clone.ottava = original.ottava;\r\n            clone.isLegatoOrigin = original.isLegatoOrigin;\r\n            clone.duration = original.duration;\r\n            clone.isLetRing = original.isLetRing;\r\n            clone.isPalmMute = original.isPalmMute;\r\n            clone.automations = [];\r\n            for (const i of original.automations) {\r\n                clone.automations.push(AutomationCloner.clone(i));\r\n            }\r\n            clone.dots = original.dots;\r\n            clone.fadeIn = original.fadeIn;\r\n            clone.lyrics = original.lyrics ? original.lyrics.slice() : null;\r\n            clone.hasRasgueado = original.hasRasgueado;\r\n            clone.pop = original.pop;\r\n            clone.slap = original.slap;\r\n            clone.tap = original.tap;\r\n            clone.text = original.text;\r\n            clone.brushType = original.brushType;\r\n            clone.brushDuration = original.brushDuration;\r\n            clone.tupletDenominator = original.tupletDenominator;\r\n            clone.tupletNumerator = original.tupletNumerator;\r\n            clone.isContinuedWhammy = original.isContinuedWhammy;\r\n            clone.whammyBarType = original.whammyBarType;\r\n            clone.whammyBarPoints = [];\r\n            for (const i of original.whammyBarPoints) {\r\n                clone.addWhammyBarPoint(BendPointCloner.clone(i));\r\n            }\r\n            clone.vibrato = original.vibrato;\r\n            clone.chordId = original.chordId;\r\n            clone.graceType = original.graceType;\r\n            clone.pickStroke = original.pickStroke;\r\n            clone.tremoloSpeed = original.tremoloSpeed;\r\n            clone.crescendo = original.crescendo;\r\n            clone.displayStart = original.displayStart;\r\n            clone.playbackStart = original.playbackStart;\r\n            clone.displayDuration = original.displayDuration;\r\n            clone.playbackDuration = original.playbackDuration;\r\n            clone.dynamics = original.dynamics;\r\n            clone.invertBeamDirection = original.invertBeamDirection;\r\n            clone.preferredBeamDirection = original.preferredBeamDirection;\r\n            clone.isEffectSlurOrigin = original.isEffectSlurOrigin;\r\n            clone.beamingMode = original.beamingMode;\r\n            return clone;\r\n        }\r\n    }\n\n    /**\r\n     * Represents a group of grace beats that belong together\r\n     */\r\n    class GraceGroup {\r\n        constructor() {\r\n            /**\r\n             * All beats within this group.\r\n             */\r\n            this.beats = [];\r\n            /**\r\n             * Gets a unique ID for this grace group.\r\n             */\r\n            this.id = 'empty';\r\n            /**\r\n             * true if the grace beat are followed by a normal beat within the same\r\n             * bar.\r\n             */\r\n            this.isComplete = false;\r\n        }\r\n        /**\r\n         * Adds a new beat to this group\r\n         * @param beat The beat to add\r\n         */\r\n        addBeat(beat) {\r\n            if (this.beats.length === 0) {\r\n                this.id = beat.absoluteDisplayStart + \"_\" + beat.voice.index;\r\n            }\r\n            beat.graceIndex = this.beats.length;\r\n            beat.graceGroup = this;\r\n            this.beats.push(beat);\r\n        }\r\n    }\n\n    /**\r\n     * Lists the different modes on how beaming for a beat should be done.\r\n     */\r\n    var BeatBeamingMode;\r\n    (function (BeatBeamingMode) {\r\n        /**\r\n         * Automatic beaming based on the timing rules.\r\n         */\r\n        BeatBeamingMode[BeatBeamingMode[\"Auto\"] = 0] = \"Auto\";\r\n        /**\r\n         * Force a split to the next beat.\r\n         */\r\n        BeatBeamingMode[BeatBeamingMode[\"ForceSplitToNext\"] = 1] = \"ForceSplitToNext\";\r\n        /**\r\n         * Force a merge with the next beat.\r\n         */\r\n        BeatBeamingMode[BeatBeamingMode[\"ForceMergeWithNext\"] = 2] = \"ForceMergeWithNext\";\r\n    })(BeatBeamingMode || (BeatBeamingMode = {}));\r\n    /**\r\n     * A beat is a single block within a bar. A beat is a combination\r\n     * of several notes played at the same time.\r\n     * @json\r\n     * @cloneable\r\n     */\r\n    class Beat {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the unique id of this beat.\r\n             * @clone_ignore\r\n             */\r\n            this.id = Beat._globalBeatId++;\r\n            /**\r\n             * Gets or sets the zero-based index of this beat within the voice.\r\n             * @json_ignore\r\n             */\r\n            this.index = 0;\r\n            /**\r\n             * Gets or sets the previous beat within the whole song.\r\n             * @json_ignore\r\n             * @clone_ignore\r\n             */\r\n            this.previousBeat = null;\r\n            /**\r\n             * Gets or sets the next beat within the whole song.\r\n             * @json_ignore\r\n             * @clone_ignore\r\n             */\r\n            this.nextBeat = null;\r\n            /**\r\n             * Gets or sets the list of notes contained in this beat.\r\n             * @json_add addNote\r\n             * @clone_add addNote\r\n             */\r\n            this.notes = [];\r\n            /**\r\n             * Gets the lookup where the notes per string are registered.\r\n             * If this staff contains string based notes this lookup allows fast access.\r\n             * @json_ignore\r\n             */\r\n            this.noteStringLookup = new Map();\r\n            /**\r\n             * Gets the lookup where the notes per value are registered.\r\n             * If this staff contains string based notes this lookup allows fast access.\r\n             * @json_ignore\r\n             */\r\n            this.noteValueLookup = new Map();\r\n            /**\r\n             * Gets or sets a value indicating whether this beat is considered empty.\r\n             */\r\n            this.isEmpty = false;\r\n            /**\r\n             * Gets or sets which whammy bar style should be used for this bar.\r\n             */\r\n            this.whammyStyle = BendStyle.Default;\r\n            /**\r\n             * Gets or sets the ottava applied to this beat.\r\n             */\r\n            this.ottava = Ottavia.Regular;\r\n            /**\r\n             * Gets or sets the fermata applied to this beat.\r\n             * @clone_ignore\r\n             * @json_ignore\r\n             */\r\n            this.fermata = null;\r\n            /**\r\n             * Gets a value indicating whether this beat starts a legato slur.\r\n             */\r\n            this.isLegatoOrigin = false;\r\n            /**\r\n             * Gets or sets the note with the lowest pitch in this beat. Only visible notes are considered.\r\n             * @json_ignore\r\n             * @clone_ignore\r\n             */\r\n            this.minNote = null;\r\n            /**\r\n             * Gets or sets the note with the highest pitch in this beat. Only visible notes are considered.\r\n             * @json_ignore\r\n             * @clone_ignore\r\n             */\r\n            this.maxNote = null;\r\n            /**\r\n             * Gets or sets the note with the highest string number in this beat. Only visible notes are considered.\r\n             * @json_ignore\r\n             * @clone_ignore\r\n             */\r\n            this.maxStringNote = null;\r\n            /**\r\n             * Gets or sets the note with the lowest string number in this beat. Only visible notes are considered.\r\n             * @json_ignore\r\n             * @clone_ignore\r\n             */\r\n            this.minStringNote = null;\r\n            /**\r\n             * Gets or sets the duration of this beat.\r\n             */\r\n            this.duration = Duration.Quarter;\r\n            /**\r\n             * Gets or sets whether any note in this beat has a let-ring applied.\r\n             * @json_ignore\r\n             */\r\n            this.isLetRing = false;\r\n            /**\r\n             * Gets or sets whether any note in this beat has a palm-mute paplied.\r\n             * @json_ignore\r\n             */\r\n            this.isPalmMute = false;\r\n            /**\r\n             * Gets or sets a list of all automations on this beat.\r\n             */\r\n            this.automations = [];\r\n            /**\r\n             * Gets or sets the number of dots applied to the duration of this beat.\r\n             */\r\n            this.dots = 0;\r\n            /**\r\n             * Gets or sets a value indicating whether this beat is fade-in.\r\n             */\r\n            this.fadeIn = false;\r\n            /**\r\n             * Gets or sets the lyrics shown on this beat.\r\n             */\r\n            this.lyrics = null;\r\n            /**\r\n             * Gets or sets a value indicating whether the beat is played in rasgueado style.\r\n             */\r\n            this.hasRasgueado = false;\r\n            /**\r\n             * Gets or sets a value indicating whether the notes on this beat are played with a pop-style (bass).\r\n             */\r\n            this.pop = false;\r\n            /**\r\n             * Gets or sets a value indicating whether the notes on this beat are played with a slap-style (bass).\r\n             */\r\n            this.slap = false;\r\n            /**\r\n             * Gets or sets a value indicating whether the notes on this beat are played with a tap-style (bass).\r\n             */\r\n            this.tap = false;\r\n            /**\r\n             * Gets or sets the text annotation shown on this beat.\r\n             */\r\n            this.text = null;\r\n            /**\r\n             * Gets or sets the brush type applied to the notes of this beat.\r\n             */\r\n            this.brushType = BrushType.None;\r\n            /**\r\n             * Gets or sets the duration of the brush between the notes in midi ticks.\r\n             */\r\n            this.brushDuration = 0;\r\n            /**\r\n             * Gets or sets the tuplet denominator.\r\n             */\r\n            this.tupletDenominator = -1;\r\n            /**\r\n             * Gets or sets the tuplet numerator.\r\n             */\r\n            this.tupletNumerator = -1;\r\n            /**\r\n             * @clone_ignore\r\n             * @json_ignore\r\n             */\r\n            this.tupletGroup = null;\r\n            /**\r\n             * Gets or sets whether this beat continues a whammy effect.\r\n             */\r\n            this.isContinuedWhammy = false;\r\n            /**\r\n             * Gets or sets the whammy bar style of this beat.\r\n             */\r\n            this.whammyBarType = WhammyType.None;\r\n            /**\r\n             * Gets or sets the points defining the whammy bar usage.\r\n             * @json_add addWhammyBarPoint\r\n             * @clone_add addWhammyBarPoint\r\n             */\r\n            this.whammyBarPoints = [];\r\n            /**\r\n             * Gets or sets the highest point with for the highest whammy bar value.\r\n             * @json_ignore\r\n             * @clone_ignore\r\n             */\r\n            this.maxWhammyPoint = null;\r\n            /**\r\n             * Gets or sets the highest point with for the lowest whammy bar value.\r\n             * @json_ignore\r\n             * @clone_ignore\r\n             */\r\n            this.minWhammyPoint = null;\r\n            /**\r\n             * Gets or sets the vibrato effect used on this beat.\r\n             */\r\n            this.vibrato = VibratoType.None;\r\n            /**\r\n             * Gets or sets the ID of the chord used on this beat.\r\n             */\r\n            this.chordId = null;\r\n            /**\r\n             * Gets or sets the grace style of this beat.\r\n             */\r\n            this.graceType = GraceType.None;\r\n            /**\r\n             * Gets or sets the grace group this beat belongs to.\r\n             * If this beat is not a grace note, it holds the group which belongs to this beat.\r\n             * @json_ignore\r\n             * @clone_ignore\r\n             */\r\n            this.graceGroup = null;\r\n            /**\r\n             * Gets or sets the index of this beat within the grace group if\r\n             * this is a grace beat.\r\n             * @json_ignore\r\n             * @clone_ignore\r\n             */\r\n            this.graceIndex = -1;\r\n            /**\r\n             * Gets or sets the pickstroke applied on this beat.\r\n             */\r\n            this.pickStroke = PickStroke.None;\r\n            /**\r\n             * Gets or sets the speed of the tremolo effect.\r\n             */\r\n            this.tremoloSpeed = null;\r\n            /**\r\n             * Gets or sets whether a crescendo/decrescendo is applied on this beat.\r\n             */\r\n            this.crescendo = CrescendoType.None;\r\n            /**\r\n             * The timeline position of the voice within the current bar as it is displayed. (unit: midi ticks)\r\n             * This might differ from the actual playback time due to special grace types.\r\n             */\r\n            this.displayStart = 0;\r\n            /**\r\n             * The timeline position of the voice within the current bar as it is played. (unit: midi ticks)\r\n             * This might differ from the actual playback time due to special grace types.\r\n             */\r\n            this.playbackStart = 0;\r\n            /**\r\n             * Gets or sets the duration that is used for the display of this beat. It defines the size/width of the beat in\r\n             * the music sheet. (unit: midi ticks).\r\n             */\r\n            this.displayDuration = 0;\r\n            /**\r\n             * Gets or sets the duration that the note is played during the audio generation.\r\n             */\r\n            this.playbackDuration = 0;\r\n            /**\r\n             * Gets or sets the dynamics applied to this beat.\r\n             */\r\n            this.dynamics = DynamicValue.F;\r\n            /**\r\n             * Gets or sets a value indicating whether the beam direction should be inverted.\r\n             */\r\n            this.invertBeamDirection = false;\r\n            /**\r\n             * Gets or sets the preferred beam direction as specified in the input source.\r\n             */\r\n            this.preferredBeamDirection = null;\r\n            /**\r\n             * @json_ignore\r\n             */\r\n            this.isEffectSlurOrigin = false;\r\n            /**\r\n             * @clone_ignore\r\n             * @json_ignore\r\n             */\r\n            this.effectSlurOrigin = null;\r\n            /**\r\n             * @clone_ignore\r\n             * @json_ignore\r\n             */\r\n            this.effectSlurDestination = null;\r\n            /**\r\n             * Gets or sets how the beaming should be done for this beat.\r\n             */\r\n            this.beamingMode = BeatBeamingMode.Auto;\r\n        }\r\n        get isLastOfVoice() {\r\n            return this.index === this.voice.beats.length - 1;\r\n        }\r\n        get isLegatoDestination() {\r\n            return !!this.previousBeat && this.previousBeat.isLegatoOrigin;\r\n        }\r\n        get isRest() {\r\n            return this.isEmpty || this.notes.length === 0;\r\n        }\r\n        /**\r\n         * Gets a value indicating whether this beat is a full bar rest.\r\n         */\r\n        get isFullBarRest() {\r\n            return this.isRest && this.voice.beats.length === 1 && this.duration === Duration.Whole;\r\n        }\r\n        get hasTuplet() {\r\n            return (!(this.tupletDenominator === -1 && this.tupletNumerator === -1) &&\r\n                !(this.tupletDenominator === 1 && this.tupletNumerator === 1));\r\n        }\r\n        get hasWhammyBar() {\r\n            return this.whammyBarType !== WhammyType.None;\r\n        }\r\n        get hasChord() {\r\n            return !!this.chordId;\r\n        }\r\n        get chord() {\r\n            return this.chordId ? this.voice.bar.staff.chords.get(this.chordId) : null;\r\n        }\r\n        get isTremolo() {\r\n            return !!this.tremoloSpeed;\r\n        }\r\n        get absoluteDisplayStart() {\r\n            return this.voice.bar.masterBar.start + this.displayStart;\r\n        }\r\n        get absolutePlaybackStart() {\r\n            return this.voice.bar.masterBar.start + this.playbackStart;\r\n        }\r\n        get isEffectSlurDestination() {\r\n            return !!this.effectSlurOrigin;\r\n        }\r\n        addWhammyBarPoint(point) {\r\n            this.whammyBarPoints.push(point);\r\n            if (!this.maxWhammyPoint || point.value > this.maxWhammyPoint.value) {\r\n                this.maxWhammyPoint = point;\r\n            }\r\n            if (!this.minWhammyPoint || point.value < this.minWhammyPoint.value) {\r\n                this.minWhammyPoint = point;\r\n            }\r\n            if (this.whammyBarType === WhammyType.None) {\r\n                this.whammyBarType = WhammyType.Custom;\r\n            }\r\n        }\r\n        removeWhammyBarPoint(index) {\r\n            // check index\r\n            if (index < 0 || index >= this.whammyBarPoints.length) {\r\n                return;\r\n            }\r\n            // remove point\r\n            this.whammyBarPoints.splice(index, 1);\r\n            let point = this.whammyBarPoints[index];\r\n            // update maxWhammy point if required\r\n            if (point === this.maxWhammyPoint) {\r\n                this.maxWhammyPoint = null;\r\n                for (let currentPoint of this.whammyBarPoints) {\r\n                    if (!this.maxWhammyPoint || currentPoint.value > this.maxWhammyPoint.value) {\r\n                        this.maxWhammyPoint = currentPoint;\r\n                    }\r\n                }\r\n            }\r\n            if (point === this.minWhammyPoint) {\r\n                this.minWhammyPoint = null;\r\n                for (let currentPoint of this.whammyBarPoints) {\r\n                    if (!this.minWhammyPoint || currentPoint.value < this.minWhammyPoint.value) {\r\n                        this.minWhammyPoint = currentPoint;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        addNote(note) {\r\n            note.beat = this;\r\n            note.index = this.notes.length;\r\n            this.notes.push(note);\r\n            if (note.isStringed) {\r\n                this.noteStringLookup.set(note.string, note);\r\n            }\r\n        }\r\n        removeNote(note) {\r\n            let index = this.notes.indexOf(note);\r\n            if (index >= 0) {\r\n                this.notes.splice(index, 1);\r\n            }\r\n        }\r\n        getAutomation(type) {\r\n            for (let i = 0, j = this.automations.length; i < j; i++) {\r\n                let automation = this.automations[i];\r\n                if (automation.type === type) {\r\n                    return automation;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        getNoteOnString(noteString) {\r\n            if (this.noteStringLookup.has(noteString)) {\r\n                return this.noteStringLookup.get(noteString);\r\n            }\r\n            return null;\r\n        }\r\n        calculateDuration() {\r\n            if (this.isFullBarRest) {\r\n                return this.voice.bar.masterBar.calculateDuration();\r\n            }\r\n            let ticks = MidiUtils.toTicks(this.duration);\r\n            if (this.dots === 2) {\r\n                ticks = MidiUtils.applyDot(ticks, true);\r\n            }\r\n            else if (this.dots === 1) {\r\n                ticks = MidiUtils.applyDot(ticks, false);\r\n            }\r\n            if (this.tupletDenominator > 0 && this.tupletNumerator >= 0) {\r\n                ticks = MidiUtils.applyTuplet(ticks, this.tupletNumerator, this.tupletDenominator);\r\n            }\r\n            return ticks;\r\n        }\r\n        updateDurations() {\r\n            let ticks = this.calculateDuration();\r\n            this.playbackDuration = ticks;\r\n            switch (this.graceType) {\r\n                case GraceType.BeforeBeat:\r\n                case GraceType.OnBeat:\r\n                    switch (this.duration) {\r\n                        case Duration.Sixteenth:\r\n                            this.playbackDuration = MidiUtils.toTicks(Duration.SixtyFourth);\r\n                            break;\r\n                        case Duration.ThirtySecond:\r\n                            this.playbackDuration = MidiUtils.toTicks(Duration.OneHundredTwentyEighth);\r\n                            break;\r\n                        default:\r\n                            this.playbackDuration = MidiUtils.toTicks(Duration.ThirtySecond);\r\n                            break;\r\n                    }\r\n                    this.displayDuration = 0;\r\n                    break;\r\n                case GraceType.BendGrace:\r\n                    this.playbackDuration /= 2;\r\n                    this.displayDuration = 0;\r\n                    break;\r\n                default:\r\n                    this.displayDuration = ticks;\r\n                    let previous = this.previousBeat;\r\n                    if (previous && previous.graceType === GraceType.BendGrace) {\r\n                        this.playbackDuration = previous.playbackDuration;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        finishTuplet() {\r\n            let previousBeat = this.previousBeat;\r\n            let currentTupletGroup = previousBeat ? previousBeat.tupletGroup : null;\r\n            if (this.hasTuplet || (this.graceType !== GraceType.None && currentTupletGroup)) {\r\n                if (!previousBeat || !currentTupletGroup || !currentTupletGroup.check(this)) {\r\n                    currentTupletGroup = new TupletGroup(this.voice);\r\n                    currentTupletGroup.check(this);\r\n                }\r\n                this.tupletGroup = currentTupletGroup;\r\n            }\r\n        }\r\n        finish(settings) {\r\n            if (this.getAutomation(AutomationType.Instrument) === null &&\r\n                this.index === 0 &&\r\n                this.voice.index === 0 &&\r\n                this.voice.bar.index === 0 &&\r\n                this.voice.bar.staff.index === 0) {\r\n                this.automations.push(Automation.buildInstrumentAutomation(false, 0, this.voice.bar.staff.track.playbackInfo.program));\r\n            }\r\n            switch (this.graceType) {\r\n                case GraceType.OnBeat:\r\n                case GraceType.BeforeBeat:\r\n                    let numberOfGraceBeats = this.graceGroup.beats.length;\r\n                    // set right duration for beaming/display\r\n                    if (numberOfGraceBeats === 1) {\r\n                        this.duration = Duration.Eighth;\r\n                    }\r\n                    else if (numberOfGraceBeats === 2) {\r\n                        this.duration = Duration.Sixteenth;\r\n                    }\r\n                    else {\r\n                        this.duration = Duration.ThirtySecond;\r\n                    }\r\n                    break;\r\n            }\r\n            let displayMode = !settings ? exports.NotationMode.GuitarPro : settings.notation.notationMode;\r\n            let isGradual = this.text === 'grad' || this.text === 'grad.';\r\n            if (isGradual && displayMode === exports.NotationMode.SongBook) {\r\n                this.text = '';\r\n            }\r\n            let needCopyBeatForBend = false;\r\n            this.minNote = null;\r\n            this.maxNote = null;\r\n            this.minStringNote = null;\r\n            this.maxStringNote = null;\r\n            let visibleNotes = 0;\r\n            let isEffectSlurBeat = false;\r\n            for (let i = 0, j = this.notes.length; i < j; i++) {\r\n                let note = this.notes[i];\r\n                note.dynamics = this.dynamics;\r\n                note.finish(settings);\r\n                if (note.isLetRing) {\r\n                    this.isLetRing = true;\r\n                }\r\n                if (note.isPalmMute) {\r\n                    this.isPalmMute = true;\r\n                }\r\n                if (displayMode === exports.NotationMode.SongBook && note.hasBend && this.graceType !== GraceType.BendGrace) {\r\n                    if (!note.isTieOrigin) {\r\n                        switch (note.bendType) {\r\n                            case BendType.Bend:\r\n                            case BendType.PrebendRelease:\r\n                            case BendType.PrebendBend:\r\n                                needCopyBeatForBend = true;\r\n                                break;\r\n                        }\r\n                    }\r\n                    if (isGradual || note.bendStyle === BendStyle.Gradual) {\r\n                        isGradual = true;\r\n                        note.bendStyle = BendStyle.Gradual;\r\n                        needCopyBeatForBend = false;\r\n                    }\r\n                    else {\r\n                        note.bendStyle = BendStyle.Fast;\r\n                    }\r\n                }\r\n                if (note.isVisible) {\r\n                    visibleNotes++;\r\n                    if (!this.minNote || note.realValue < this.minNote.realValue) {\r\n                        this.minNote = note;\r\n                    }\r\n                    if (!this.maxNote || note.realValue > this.maxNote.realValue) {\r\n                        this.maxNote = note;\r\n                    }\r\n                    if (!this.minStringNote || note.string < this.minStringNote.string) {\r\n                        this.minStringNote = note;\r\n                    }\r\n                    if (!this.maxStringNote || note.string > this.maxStringNote.string) {\r\n                        this.maxStringNote = note;\r\n                    }\r\n                    if (note.hasEffectSlur) {\r\n                        isEffectSlurBeat = true;\r\n                    }\r\n                }\r\n            }\r\n            if (isEffectSlurBeat) {\r\n                if (this.effectSlurOrigin) {\r\n                    this.effectSlurOrigin.effectSlurDestination = this.nextBeat;\r\n                    if (this.effectSlurOrigin.effectSlurDestination) {\r\n                        this.effectSlurOrigin.effectSlurDestination.effectSlurOrigin = this.effectSlurOrigin;\r\n                    }\r\n                    this.effectSlurOrigin = null;\r\n                }\r\n                else {\r\n                    this.isEffectSlurOrigin = true;\r\n                    this.effectSlurDestination = this.nextBeat;\r\n                    if (this.effectSlurDestination) {\r\n                        this.effectSlurDestination.effectSlurOrigin = this;\r\n                    }\r\n                }\r\n            }\r\n            if (this.notes.length > 0 && visibleNotes === 0) {\r\n                this.isEmpty = true;\r\n            }\r\n            // we need to clean al letring/palmmute flags for rests\r\n            // in case the effect is not continued on this beat\r\n            if (!this.isRest && (!this.isLetRing || !this.isPalmMute)) {\r\n                let currentBeat = this.previousBeat;\r\n                while (currentBeat && currentBeat.isRest) {\r\n                    if (!this.isLetRing) {\r\n                        currentBeat.isLetRing = false;\r\n                    }\r\n                    if (!this.isPalmMute) {\r\n                        currentBeat.isPalmMute = false;\r\n                    }\r\n                    currentBeat = currentBeat.previousBeat;\r\n                }\r\n            }\r\n            else if (this.isRest &&\r\n                this.previousBeat &&\r\n                settings &&\r\n                settings.notation.notationMode === exports.NotationMode.GuitarPro) {\r\n                if (this.previousBeat.isLetRing) {\r\n                    this.isLetRing = true;\r\n                }\r\n                if (this.previousBeat.isPalmMute) {\r\n                    this.isPalmMute = true;\r\n                }\r\n            }\r\n            // try to detect what kind of bend was used and cleans unneeded points if required\r\n            // Guitar Pro 6 and above (gpif.xml) uses exactly 4 points to define all whammys\r\n            if (this.whammyBarPoints.length > 0 && this.whammyBarType === WhammyType.Custom) {\r\n                if (displayMode === exports.NotationMode.SongBook) {\r\n                    this.whammyStyle = isGradual ? BendStyle.Gradual : BendStyle.Fast;\r\n                }\r\n                let isContinuedWhammy = !!this.previousBeat && this.previousBeat.hasWhammyBar;\r\n                this.isContinuedWhammy = isContinuedWhammy;\r\n                if (this.whammyBarPoints.length === 4) {\r\n                    let origin = this.whammyBarPoints[0];\r\n                    let middle1 = this.whammyBarPoints[1];\r\n                    let middle2 = this.whammyBarPoints[2];\r\n                    let destination = this.whammyBarPoints[3];\r\n                    // the middle points are used for holds, anything else is a new feature we do not support yet\r\n                    if (middle1.value === middle2.value) {\r\n                        // constant decrease or increase\r\n                        if ((origin.value < middle1.value && middle1.value < destination.value) ||\r\n                            (origin.value > middle1.value && middle1.value > destination.value)) {\r\n                            if (origin.value !== 0 && !isContinuedWhammy) {\r\n                                this.whammyBarType = WhammyType.PrediveDive;\r\n                            }\r\n                            else {\r\n                                this.whammyBarType = WhammyType.Dive;\r\n                            }\r\n                            this.whammyBarPoints.splice(2, 1);\r\n                            this.whammyBarPoints.splice(1, 1);\r\n                        }\r\n                        else if ((origin.value > middle1.value && middle1.value < destination.value) ||\r\n                            (origin.value < middle1.value && middle1.value > destination.value)) {\r\n                            this.whammyBarType = WhammyType.Dip;\r\n                            if (middle1.offset === middle2.offset || displayMode === exports.NotationMode.SongBook) {\r\n                                this.whammyBarPoints.splice(2, 1);\r\n                            }\r\n                        }\r\n                        else if (origin.value === middle1.value && middle1.value === destination.value) {\r\n                            if (origin.value !== 0 && !isContinuedWhammy) {\r\n                                this.whammyBarType = WhammyType.Predive;\r\n                            }\r\n                            else {\r\n                                this.whammyBarType = WhammyType.Hold;\r\n                            }\r\n                            this.whammyBarPoints.splice(2, 1);\r\n                            this.whammyBarPoints.splice(1, 1);\r\n                        }\r\n                        else {\r\n                            Logger.warning('Model', 'Unsupported whammy type detected, fallback to custom', null);\r\n                        }\r\n                    }\r\n                    else {\r\n                        Logger.warning('Model', 'Unsupported whammy type detected, fallback to custom', null);\r\n                    }\r\n                }\r\n            }\r\n            this.updateDurations();\r\n            if (needCopyBeatForBend) {\r\n                // if this beat is a simple bend convert it to a grace beat\r\n                // and generate a placeholder beat with tied notes\r\n                let cloneBeat = BeatCloner.clone(this);\r\n                cloneBeat.id = Beat._globalBeatId++;\r\n                cloneBeat.pickStroke = PickStroke.None;\r\n                for (let i = 0, j = cloneBeat.notes.length; i < j; i++) {\r\n                    let cloneNote = cloneBeat.notes[i];\r\n                    let note = this.notes[i];\r\n                    // remove bend on cloned note\r\n                    cloneNote.bendType = BendType.None;\r\n                    cloneNote.maxBendPoint = null;\r\n                    cloneNote.bendPoints = [];\r\n                    cloneNote.bendStyle = BendStyle.Default;\r\n                    cloneNote.id = Note.GlobalNoteId++;\r\n                    // fix ties\r\n                    if (note.isTieOrigin) {\r\n                        cloneNote.tieDestinationNoteId = note.tieDestination.id;\r\n                        note.tieDestination.tieOriginNoteId = cloneNote.id;\r\n                    }\r\n                    if (note.isTieDestination) {\r\n                        cloneNote.tieOriginNoteId = note.tieOrigin ? note.tieOrigin.id : -1;\r\n                        note.tieOrigin.tieDestinationNoteId = cloneNote.id;\r\n                    }\r\n                    // if the note has a bend which is continued on the next note\r\n                    // we need to convert this note into a hold bend\r\n                    if (note.hasBend && note.isTieOrigin) {\r\n                        let tieDestination = Note.findTieOrigin(note);\r\n                        if (tieDestination && tieDestination.hasBend) {\r\n                            cloneNote.bendType = BendType.Hold;\r\n                            let lastPoint = note.bendPoints[note.bendPoints.length - 1];\r\n                            cloneNote.addBendPoint(new BendPoint(0, lastPoint.value));\r\n                            cloneNote.addBendPoint(new BendPoint(BendPoint.MaxPosition, lastPoint.value));\r\n                        }\r\n                    }\r\n                    // mark as tied note\r\n                    cloneNote.isTieDestination = true;\r\n                }\r\n                this.graceType = GraceType.BendGrace;\r\n                this.graceGroup = new GraceGroup();\r\n                this.graceGroup.addBeat(this);\r\n                this.graceGroup.isComplete = true;\r\n                this.updateDurations();\r\n                this.voice.insertBeat(this, cloneBeat);\r\n            }\r\n        }\r\n        /**\r\n         * Checks whether the current beat is timewise before the given beat.\r\n         * @param beat\r\n         * @returns\r\n         */\r\n        isBefore(beat) {\r\n            return (this.voice.bar.index < beat.voice.bar.index ||\r\n                (beat.voice.bar.index === this.voice.bar.index && this.index < beat.index));\r\n        }\r\n        /**\r\n         * Checks whether the current beat is timewise after the given beat.\r\n         * @param beat\r\n         * @returns\r\n         */\r\n        isAfter(beat) {\r\n            return (this.voice.bar.index > beat.voice.bar.index ||\r\n                (beat.voice.bar.index === this.voice.bar.index && this.index > beat.index));\r\n        }\r\n        hasNoteOnString(noteString) {\r\n            return this.noteStringLookup.has(noteString);\r\n        }\r\n        getNoteWithRealValue(noteRealValue) {\r\n            if (this.noteValueLookup.has(noteRealValue)) {\r\n                return this.noteValueLookup.get(noteRealValue);\r\n            }\r\n            return null;\r\n        }\r\n        chain() {\r\n            for (const n of this.notes) {\r\n                this.noteValueLookup.set(n.realValue, n);\r\n                n.chain();\r\n            }\r\n        }\r\n    }\r\n    Beat._globalBeatId = 0;\n\n    // TODO: rework model to specify for each finger \r\n    // on which frets they are placed. \r\n    /**\r\n     * A chord definition.\r\n     * @json\r\n     */\r\n    class Chord {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the name of the chord\r\n             */\r\n            this.name = '';\r\n            /**\r\n             * Indicates the first fret of the chord diagram.\r\n             */\r\n            this.firstFret = 1;\r\n            /**\r\n             * Gets or sets the frets played on the individual strings for this chord.\r\n             * - The order in this list goes from the highest string to the lowest string.\r\n             * - -1 indicates that the string is not played.\r\n             */\r\n            this.strings = [];\r\n            /**\r\n             * Gets or sets a list of frets where the finger should hold a barre\r\n             */\r\n            this.barreFrets = [];\r\n            /**\r\n             * Gets or sets whether the chord name is shown above the chord diagram.\r\n             */\r\n            this.showName = true;\r\n            /**\r\n             * Gets or sets whether the chord diagram is shown.\r\n             */\r\n            this.showDiagram = true;\r\n            /**\r\n             * Gets or sets whether the fingering is shown below the chord diagram.\r\n             */\r\n            this.showFingering = true;\r\n        }\r\n    }\n\n    var LyricsState;\r\n    (function (LyricsState) {\r\n        LyricsState[LyricsState[\"IgnoreSpaces\"] = 0] = \"IgnoreSpaces\";\r\n        LyricsState[LyricsState[\"Begin\"] = 1] = \"Begin\";\r\n        LyricsState[LyricsState[\"Text\"] = 2] = \"Text\";\r\n        LyricsState[LyricsState[\"Comment\"] = 3] = \"Comment\";\r\n        LyricsState[LyricsState[\"Dash\"] = 4] = \"Dash\";\r\n    })(LyricsState || (LyricsState = {}));\r\n    /**\r\n     * Represents the lyrics of a song.\r\n     */\r\n    class Lyrics {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets he start bar on which the lyrics should begin.\r\n             */\r\n            this.startBar = 0;\r\n            /**\r\n             * Gets or sets the raw lyrics text in Guitar Pro format.\r\n             * (spaces split word syllables, plus merge syllables, [..] are comments)\r\n             */\r\n            this.text = '';\r\n        }\r\n        finish(skipEmptyEntries = false) {\r\n            this.chunks = [];\r\n            this.parse(this.text, 0, this.chunks, skipEmptyEntries);\r\n        }\r\n        parse(str, p, chunks, skipEmptyEntries) {\r\n            if (!str) {\r\n                return;\r\n            }\r\n            let state = LyricsState.Begin;\r\n            let next = LyricsState.Begin;\r\n            let skipSpace = false;\r\n            let start = 0;\r\n            while (p < str.length) {\r\n                let c = str.charCodeAt(p);\r\n                switch (state) {\r\n                    case LyricsState.IgnoreSpaces:\r\n                        switch (c) {\r\n                            case Lyrics.CharCodeLF:\r\n                            case Lyrics.CharCodeCR:\r\n                            case Lyrics.CharCodeTab:\r\n                                break;\r\n                            case Lyrics.CharCodeSpace:\r\n                                if (!skipSpace) {\r\n                                    state = next;\r\n                                    continue;\r\n                                }\r\n                                break;\r\n                            default:\r\n                                skipSpace = false;\r\n                                state = next;\r\n                                continue;\r\n                        }\r\n                        break;\r\n                    case LyricsState.Begin:\r\n                        switch (c) {\r\n                            case Lyrics.CharCodeBrackedOpen:\r\n                                state = LyricsState.Comment;\r\n                                break;\r\n                            default:\r\n                                start = p;\r\n                                state = LyricsState.Text;\r\n                                continue;\r\n                        }\r\n                        break;\r\n                    case LyricsState.Comment:\r\n                        switch (c) {\r\n                            case Lyrics.CharCodeBrackedClose:\r\n                                state = LyricsState.Begin;\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case LyricsState.Text:\r\n                        switch (c) {\r\n                            case Lyrics.CharCodeDash:\r\n                                state = LyricsState.Dash;\r\n                                break;\r\n                            case Lyrics.CharCodeCR:\r\n                            case Lyrics.CharCodeLF:\r\n                            case Lyrics.CharCodeSpace:\r\n                                let txt = str.substr(start, p - start);\r\n                                this.addChunk(txt, skipEmptyEntries);\r\n                                state = LyricsState.IgnoreSpaces;\r\n                                next = LyricsState.Begin;\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case LyricsState.Dash:\r\n                        switch (c) {\r\n                            case Lyrics.CharCodeDash:\r\n                                break;\r\n                            default:\r\n                                let txt = str.substr(start, p - start);\r\n                                this.addChunk(txt, skipEmptyEntries);\r\n                                skipSpace = true;\r\n                                state = LyricsState.IgnoreSpaces;\r\n                                next = LyricsState.Begin;\r\n                                continue;\r\n                        }\r\n                        break;\r\n                }\r\n                p++;\r\n            }\r\n            if (state === LyricsState.Text) {\r\n                if (p !== start) {\r\n                    this.addChunk(str.substr(start, p - start), skipEmptyEntries);\r\n                }\r\n            }\r\n        }\r\n        addChunk(txt, skipEmptyEntries) {\r\n            txt = this.prepareChunk(txt);\r\n            if (!skipEmptyEntries || (txt.length > 0 && txt !== '-')) {\r\n                this.chunks.push(txt);\r\n            }\r\n        }\r\n        prepareChunk(txt) {\r\n            let chunk = txt.split('+').join(' ');\r\n            // trim off trailing _ like \"You____\" becomes \"You\"\r\n            let endLength = chunk.length;\r\n            while (endLength > 0 && chunk.charAt(endLength - 1) === '_') {\r\n                endLength--;\r\n            }\r\n            return endLength !== chunk.length ? chunk.substr(0, endLength) : chunk;\r\n        }\r\n    }\r\n    Lyrics.CharCodeLF = 10;\r\n    Lyrics.CharCodeTab = 9;\r\n    Lyrics.CharCodeCR = 13;\r\n    Lyrics.CharCodeSpace = 32;\r\n    Lyrics.CharCodeBrackedClose = 93;\r\n    Lyrics.CharCodeBrackedOpen = 91;\r\n    Lyrics.CharCodeDash = 45;\n\n    /**\r\n     * This public enumeration lists all available key signatures\r\n     */\r\n    var KeySignature;\r\n    (function (KeySignature) {\r\n        /**\r\n         * Cb (7 flats)\r\n         */\r\n        KeySignature[KeySignature[\"Cb\"] = -7] = \"Cb\";\r\n        /**\r\n         * Gb (6 flats)\r\n         */\r\n        KeySignature[KeySignature[\"Gb\"] = -6] = \"Gb\";\r\n        /**\r\n         * Db (5 flats)\r\n         */\r\n        KeySignature[KeySignature[\"Db\"] = -5] = \"Db\";\r\n        /**\r\n         * Ab (4 flats)\r\n         */\r\n        KeySignature[KeySignature[\"Ab\"] = -4] = \"Ab\";\r\n        /**\r\n         * Eb (3 flats)\r\n         */\r\n        KeySignature[KeySignature[\"Eb\"] = -3] = \"Eb\";\r\n        /**\r\n         * Bb (2 flats)\r\n         */\r\n        KeySignature[KeySignature[\"Bb\"] = -2] = \"Bb\";\r\n        /**\r\n         * F (1 flat)\r\n         */\r\n        KeySignature[KeySignature[\"F\"] = -1] = \"F\";\r\n        /**\r\n         * C (no signs)\r\n         */\r\n        KeySignature[KeySignature[\"C\"] = 0] = \"C\";\r\n        /**\r\n         * G (1 sharp)\r\n         */\r\n        KeySignature[KeySignature[\"G\"] = 1] = \"G\";\r\n        /**\r\n         * D (2 sharp)\r\n         */\r\n        KeySignature[KeySignature[\"D\"] = 2] = \"D\";\r\n        /**\r\n         * A (3 sharp)\r\n         */\r\n        KeySignature[KeySignature[\"A\"] = 3] = \"A\";\r\n        /**\r\n         * E (4 sharp)\r\n         */\r\n        KeySignature[KeySignature[\"E\"] = 4] = \"E\";\r\n        /**\r\n         * B (5 sharp)\r\n         */\r\n        KeySignature[KeySignature[\"B\"] = 5] = \"B\";\r\n        /**\r\n         * F# (6 sharp)\r\n         */\r\n        KeySignature[KeySignature[\"FSharp\"] = 6] = \"FSharp\";\r\n        /**\r\n         * C# (8 sharp)\r\n         */\r\n        KeySignature[KeySignature[\"CSharp\"] = 7] = \"CSharp\";\r\n    })(KeySignature || (KeySignature = {}));\n\n    /**\r\n     * This public enumeration lists all available types of KeySignatures\r\n     */\r\n    var KeySignatureType;\r\n    (function (KeySignatureType) {\r\n        /**\r\n         * Major\r\n         */\r\n        KeySignatureType[KeySignatureType[\"Major\"] = 0] = \"Major\";\r\n        /**\r\n         * Minor\r\n         */\r\n        KeySignatureType[KeySignatureType[\"Minor\"] = 1] = \"Minor\";\r\n    })(KeySignatureType || (KeySignatureType = {}));\n\n    /**\r\n     * This public enumeration lists all feels of triplets.\r\n     */\r\n    var TripletFeel;\r\n    (function (TripletFeel) {\r\n        /**\r\n         * No triplet feel\r\n         */\r\n        TripletFeel[TripletFeel[\"NoTripletFeel\"] = 0] = \"NoTripletFeel\";\r\n        /**\r\n         * Triplet 16th\r\n         */\r\n        TripletFeel[TripletFeel[\"Triplet16th\"] = 1] = \"Triplet16th\";\r\n        /**\r\n         * Triplet 8th\r\n         */\r\n        TripletFeel[TripletFeel[\"Triplet8th\"] = 2] = \"Triplet8th\";\r\n        /**\r\n         * Dotted 16th\r\n         */\r\n        TripletFeel[TripletFeel[\"Dotted16th\"] = 3] = \"Dotted16th\";\r\n        /**\r\n         * Dotted 8th\r\n         */\r\n        TripletFeel[TripletFeel[\"Dotted8th\"] = 4] = \"Dotted8th\";\r\n        /**\r\n         * Scottish 16th\r\n         */\r\n        TripletFeel[TripletFeel[\"Scottish16th\"] = 5] = \"Scottish16th\";\r\n        /**\r\n         * Scottish 8th\r\n         */\r\n        TripletFeel[TripletFeel[\"Scottish8th\"] = 6] = \"Scottish8th\";\r\n    })(TripletFeel || (TripletFeel = {}));\n\n    /**\r\n     * The MasterBar stores information about a bar which affects\r\n     * all tracks.\r\n     * @json\r\n     */\r\n    class MasterBar {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the bitflag for the alternate endings. Each bit defines for which repeat counts\r\n             * the bar is played.\r\n             */\r\n            this.alternateEndings = 0;\r\n            /**\r\n             * Gets or sets the next masterbar in the song.\r\n             * @json_ignore\r\n             */\r\n            this.nextMasterBar = null;\r\n            /**\r\n             * Gets or sets the next masterbar in the song.\r\n             * @json_ignore\r\n             */\r\n            this.previousMasterBar = null;\r\n            /**\r\n             * Gets the zero based index of the masterbar.\r\n             * @json_ignore\r\n             */\r\n            this.index = 0;\r\n            /**\r\n             * Gets or sets the key signature used on all bars.\r\n             */\r\n            this.keySignature = KeySignature.C;\r\n            /**\r\n             * Gets or sets the type of key signature (major/minor)\r\n             */\r\n            this.keySignatureType = KeySignatureType.Major;\r\n            /**\r\n             * Gets or sets whether a double bar is shown for this masterbar.\r\n             */\r\n            this.isDoubleBar = false;\r\n            /**\r\n             * Gets or sets whether a repeat section starts on this masterbar.\r\n             */\r\n            this.isRepeatStart = false;\r\n            /**\r\n             * Gets or sets the number of repeats for the current repeat section.\r\n             */\r\n            this.repeatCount = 0;\r\n            /**\r\n             * Gets or sets the time signature numerator.\r\n             */\r\n            this.timeSignatureNumerator = 4;\r\n            /**\r\n             * Gets or sets the time signature denominiator.\r\n             */\r\n            this.timeSignatureDenominator = 4;\r\n            /**\r\n             * Gets or sets whether this is bar has a common time signature.\r\n             */\r\n            this.timeSignatureCommon = false;\r\n            /**\r\n             * Gets or sets the triplet feel that is valid for this bar.\r\n             */\r\n            this.tripletFeel = TripletFeel.NoTripletFeel;\r\n            /**\r\n             * Gets or sets the new section information for this bar.\r\n             */\r\n            this.section = null;\r\n            /**\r\n             * Gets or sets the tempo automation for this bar.\r\n             */\r\n            this.tempoAutomation = null;\r\n            /**\r\n             * Gets or sets the fermatas for this bar. The key is the offset of the fermata in midi ticks.\r\n             */\r\n            this.fermata = new Map();\r\n            /**\r\n             * The timeline position of the voice within the whole score. (unit: midi ticks)\r\n             */\r\n            this.start = 0;\r\n            /**\r\n             * Gets or sets a value indicating whether the master bar is an anacrusis (aka. pickup bar)\r\n             */\r\n            this.isAnacrusis = false;\r\n        }\r\n        get isRepeatEnd() {\r\n            return this.repeatCount > 0;\r\n        }\r\n        get isSectionStart() {\r\n            return !!this.section;\r\n        }\r\n        /**\r\n         * Calculates the time spent in this bar. (unit: midi ticks)\r\n         */\r\n        calculateDuration(respectAnacrusis = true) {\r\n            if (this.isAnacrusis && respectAnacrusis) {\r\n                let duration = 0;\r\n                for (let track of this.score.tracks) {\r\n                    for (let staff of track.staves) {\r\n                        let barDuration = this.index < staff.bars.length\r\n                            ? staff.bars[this.index].calculateDuration()\r\n                            : 0;\r\n                        if (barDuration > duration) {\r\n                            duration = barDuration;\r\n                        }\r\n                    }\r\n                }\r\n                return duration;\r\n            }\r\n            return this.timeSignatureNumerator * MidiUtils.valueToTicks(this.timeSignatureDenominator);\r\n        }\r\n        /**\r\n         * Adds a fermata to the masterbar.\r\n         * @param offset The offset of the fermata within the bar in midi ticks.\r\n         * @param fermata The fermata.\r\n         */\r\n        addFermata(offset, fermata) {\r\n            this.fermata.set(offset, fermata);\r\n        }\r\n        /**\r\n         * Gets the fermata for a given beat.\r\n         * @param beat The beat to get the fermata for.\r\n         * @returns\r\n         */\r\n        getFermata(beat) {\r\n            if (this.fermata.has(beat.playbackStart)) {\r\n                return this.fermata.get(beat.playbackStart);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    MasterBar.MaxAlternateEndings = 8;\n\n    /**\r\n     * This class represents the rendering stylesheet.\r\n     * It contains settings which control the display of the score when rendered.\r\n     * @json\r\n     */\r\n    class RenderStylesheet {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets whether dynamics are hidden.\r\n             */\r\n            this.hideDynamics = false;\r\n        }\r\n    }\n\n    /**\r\n     * This public class can store the information about a group of measures which are repeated\r\n     */\r\n    class RepeatGroup {\r\n        constructor() {\r\n            /**\r\n             * All masterbars repeated within this group\r\n             */\r\n            this.masterBars = [];\r\n            /**\r\n             * a list of masterbars which open the group.\r\n             */\r\n            this.openings = [];\r\n            /**\r\n             * a list of masterbars which close the group.\r\n             */\r\n            this.closings = [];\r\n            /**\r\n             * true if the repeat group was opened well\r\n             */\r\n            this.isOpened = false;\r\n            /**\r\n             * true if the repeat group was closed well\r\n             */\r\n            this.isClosed = false;\r\n        }\r\n        addMasterBar(masterBar) {\r\n            if (this.openings.length === 0) {\r\n                this.openings.push(masterBar);\r\n            }\r\n            this.masterBars.push(masterBar);\r\n            masterBar.repeatGroup = this;\r\n            if (masterBar.isRepeatEnd) {\r\n                this.closings.push(masterBar);\r\n                this.isClosed = true;\r\n                if (!this.isOpened) {\r\n                    this.masterBars[0].isRepeatStart = true;\r\n                    this.isOpened = true;\r\n                }\r\n            }\r\n            else if (this.isClosed) {\r\n                this.isClosed = false;\r\n                this.openings.push(masterBar);\r\n            }\r\n        }\r\n    }\n\n    /**\r\n     * The score is the root node of the complete\r\n     * model. It stores the basic information of\r\n     * a song and stores the sub components.\r\n     * @json\r\n     */\r\n    class Score {\r\n        constructor() {\r\n            this._noteByIdLookup = new Map();\r\n            this._currentRepeatGroup = new RepeatGroup();\r\n            /**\r\n             * The album of this song.\r\n             */\r\n            this.album = '';\r\n            /**\r\n             * The artist who performs this song.\r\n             */\r\n            this.artist = '';\r\n            /**\r\n             * The owner of the copyright of this song.\r\n             */\r\n            this.copyright = '';\r\n            /**\r\n             * Additional instructions\r\n             */\r\n            this.instructions = '';\r\n            /**\r\n             * The author of the music.\r\n             */\r\n            this.music = '';\r\n            /**\r\n             * Some additional notes about the song.\r\n             */\r\n            this.notices = '';\r\n            /**\r\n             * The subtitle of the song.\r\n             */\r\n            this.subTitle = '';\r\n            /**\r\n             * The title of the song.\r\n             */\r\n            this.title = '';\r\n            /**\r\n             * The author of the song lyrics\r\n             */\r\n            this.words = '';\r\n            /**\r\n             * The author of this tablature.\r\n             */\r\n            this.tab = '';\r\n            /**\r\n             * Gets or sets the global tempo of the song in BPM. The tempo might change via {@link MasterBar.tempo}.\r\n             */\r\n            this.tempo = 120;\r\n            /**\r\n             * Gets or sets the name/label of the tempo.\r\n             */\r\n            this.tempoLabel = '';\r\n            /**\r\n             * Gets or sets a list of all masterbars contained in this song.\r\n             * @json_add addMasterBar\r\n             */\r\n            this.masterBars = [];\r\n            /**\r\n             * Gets or sets a list of all tracks contained in this song.\r\n             * @json_add addTrack\r\n             */\r\n            this.tracks = [];\r\n            /**\r\n             * Gets or sets the rendering stylesheet for this song.\r\n             */\r\n            this.stylesheet = new RenderStylesheet();\r\n        }\r\n        rebuildRepeatGroups() {\r\n            let currentGroup = new RepeatGroup();\r\n            for (let bar of this.masterBars) {\r\n                // if the group is closed only the next upcoming header can\r\n                // reopen the group in case of a repeat alternative, so we\r\n                // remove the current group\r\n                if (bar.isRepeatStart || (this._currentRepeatGroup.isClosed && bar.alternateEndings <= 0)) {\r\n                    currentGroup = new RepeatGroup();\r\n                }\r\n                currentGroup.addMasterBar(bar);\r\n            }\r\n        }\r\n        addMasterBar(bar) {\r\n            bar.score = this;\r\n            bar.index = this.masterBars.length;\r\n            if (this.masterBars.length !== 0) {\r\n                bar.previousMasterBar = this.masterBars[this.masterBars.length - 1];\r\n                bar.previousMasterBar.nextMasterBar = bar;\r\n                bar.start = bar.previousMasterBar.start + bar.previousMasterBar.calculateDuration();\r\n            }\r\n            // if the group is closed only the next upcoming header can\r\n            // reopen the group in case of a repeat alternative, so we\r\n            // remove the current group\r\n            if (bar.isRepeatStart || (this._currentRepeatGroup.isClosed && bar.alternateEndings <= 0)) {\r\n                this._currentRepeatGroup = new RepeatGroup();\r\n            }\r\n            this._currentRepeatGroup.addMasterBar(bar);\r\n            this.masterBars.push(bar);\r\n        }\r\n        addTrack(track) {\r\n            track.score = this;\r\n            track.index = this.tracks.length;\r\n            this.tracks.push(track);\r\n        }\r\n        finish(settings) {\r\n            this._noteByIdLookup.clear();\r\n            for (let i = 0, j = this.tracks.length; i < j; i++) {\r\n                this.tracks[i].finish(settings);\r\n            }\r\n        }\r\n        registerNote(note) {\r\n            this._noteByIdLookup.set(note.id, note);\r\n        }\r\n        getNoteById(noteId) {\r\n            return this._noteByIdLookup.has(noteId)\r\n                ? this._noteByIdLookup.get(noteId)\r\n                : null;\r\n        }\r\n    }\n\n    /**\r\n     * This public class is used to describe the beginning of a\r\n     * section within a song. It acts like a marker.\r\n     * @json\r\n     */\r\n    class Section {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the marker ID for this section.\r\n             */\r\n            this.marker = '';\r\n            /**\r\n             * Gets or sets the descriptional text of this section.\r\n             */\r\n            this.text = '';\r\n        }\r\n    }\n\n    /**\r\n     * This public class stores the midi specific information of a track needed\r\n     * for playback.\r\n     * @json\r\n     */\r\n    class PlaybackInformation {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the volume (0-16)\r\n             */\r\n            this.volume = 15;\r\n            /**\r\n             * Gets or sets the balance (0-16; 8=center)\r\n             */\r\n            this.balance = 8;\r\n            /**\r\n             * Gets or sets the midi port to use.\r\n             */\r\n            this.port = 1;\r\n            /**\r\n             * Gets or sets the midi program to use.\r\n             */\r\n            this.program = 0;\r\n            /**\r\n             * Gets or sets the primary channel for all normal midi events.\r\n             */\r\n            this.primaryChannel = 0;\r\n            /**\r\n             * Gets or sets the secondary channel for special midi events.\r\n             */\r\n            this.secondaryChannel = 0;\r\n            /**\r\n             * Gets or sets whether the track is muted.\r\n             */\r\n            this.isMute = false;\r\n            /**\r\n             * Gets or sets whether the track is playing alone.\r\n             */\r\n            this.isSolo = false;\r\n        }\r\n    }\n\n    /**\r\n     * This public class represents a predefined string tuning.\r\n     * @json\r\n     */\r\n    class Tuning {\r\n        /**\r\n         * Initializes a new instance of the {@link Tuning} class.\r\n         * @param name The name.\r\n         * @param tuning The tuning.\r\n         * @param isStandard if set to`true`[is standard].\r\n         */\r\n        constructor(name = '', tuning = null, isStandard = false) {\r\n            this.isStandard = isStandard;\r\n            this.name = name;\r\n            this.tunings = tuning !== null && tuning !== void 0 ? tuning : [];\r\n        }\r\n        static getTextForTuning(tuning, includeOctave) {\r\n            let parts = Tuning.getTextPartsForTuning(tuning);\r\n            return includeOctave ? parts.join('') : parts[0];\r\n        }\r\n        static getTextPartsForTuning(tuning, octaveShift = -1) {\r\n            let octave = (tuning / 12) | 0;\r\n            let note = tuning % 12;\r\n            let notes = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\r\n            return [notes[note], (octave + octaveShift).toString()];\r\n        }\r\n        /**\r\n         * Gets the default tuning for the given string count.\r\n         * @param stringCount The string count.\r\n         * @returns The tuning for the given string count or null if the string count is not defined.\r\n         */\r\n        static getDefaultTuningFor(stringCount) {\r\n            if (Tuning._defaultTunings.has(stringCount)) {\r\n                return Tuning._defaultTunings.get(stringCount);\r\n            }\r\n            return null;\r\n        }\r\n        /**\r\n         * Gets a list of all tuning presets for a given stirng count.\r\n         * @param stringCount The string count.\r\n         * @returns The list of known tunings for the given string count or an empty list if the string count is not defined.\r\n         */\r\n        static getPresetsFor(stringCount) {\r\n            switch (stringCount) {\r\n                case 7:\r\n                    return Tuning._sevenStrings;\r\n                case 6:\r\n                    return Tuning._sixStrings;\r\n                case 5:\r\n                    return Tuning._fiveStrings;\r\n                case 4:\r\n                    return Tuning._fourStrings;\r\n            }\r\n            return [];\r\n        }\r\n        static initialize() {\r\n            Tuning._defaultTunings.set(7, new Tuning('Guitar 7 strings', [64, 59, 55, 50, 45, 40, 35], true));\r\n            Tuning._sevenStrings.push(Tuning._defaultTunings.get(7));\r\n            Tuning._defaultTunings.set(6, new Tuning('Guitar Standard Tuning', [64, 59, 55, 50, 45, 40], true));\r\n            Tuning._sixStrings.push(Tuning._defaultTunings.get(6));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Tune down ½ step', [63, 58, 54, 49, 44, 39], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Tune down 1 step', [62, 57, 53, 48, 43, 38], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Tune down 2 step', [60, 55, 51, 46, 41, 36], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Dropped D Tuning', [64, 59, 55, 50, 45, 38], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Dropped D Tuning variant', [64, 57, 55, 50, 45, 38], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Double Dropped D Tuning', [62, 59, 55, 50, 45, 38], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Dropped E Tuning', [66, 61, 57, 52, 47, 40], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Dropped C Tuning', [62, 57, 53, 48, 43, 36], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Open C Tuning', [64, 60, 55, 48, 43, 36], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Open Cm Tuning', [63, 60, 55, 48, 43, 36], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Open C6 Tuning', [64, 57, 55, 48, 43, 36], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Open Cmaj7 Tuning', [64, 59, 55, 52, 43, 36], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Open D Tuning', [62, 57, 54, 50, 45, 38], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Open Dm Tuning', [62, 57, 53, 50, 45, 38], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Open D5 Tuning', [62, 57, 50, 50, 45, 38], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Open D6 Tuning', [62, 59, 54, 50, 45, 38], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Open Dsus4 Tuning', [62, 57, 55, 50, 45, 38], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Open E Tuning', [64, 59, 56, 52, 47, 40], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Open Em Tuning', [64, 59, 55, 52, 47, 40], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Open Esus11 Tuning', [64, 59, 55, 52, 45, 40], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Open F Tuning', [65, 60, 53, 48, 45, 41], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Open G Tuning', [62, 59, 55, 50, 43, 38], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Open Gm Tuning', [62, 58, 55, 50, 43, 38], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Open G6 Tuning', [64, 59, 55, 50, 43, 38], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Open Gsus4 Tuning', [62, 60, 55, 50, 43, 38], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Open A Tuning', [64, 61, 57, 52, 45, 40], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Open Am Tuning', [64, 60, 57, 52, 45, 40], false));\r\n            Tuning._sixStrings.push(new Tuning('Guitar Nashville Tuning', [64, 59, 67, 62, 57, 52], false));\r\n            Tuning._sixStrings.push(new Tuning('Bass 6 Strings Tuning', [48, 43, 38, 33, 28, 23], false));\r\n            Tuning._sixStrings.push(new Tuning('Lute or Vihuela Tuning', [64, 59, 54, 50, 45, 40], false));\r\n            Tuning._defaultTunings.set(5, new Tuning('Bass 5 Strings Tuning', [43, 38, 33, 28, 23], true));\r\n            Tuning._fiveStrings.push(Tuning._defaultTunings.get(5));\r\n            Tuning._fiveStrings.push(new Tuning('Banjo Dropped C Tuning', [62, 59, 55, 48, 67], false));\r\n            Tuning._fiveStrings.push(new Tuning('Banjo Open D Tuning', [62, 57, 54, 50, 69], false));\r\n            Tuning._fiveStrings.push(new Tuning('Banjo Open G Tuning', [62, 59, 55, 50, 67], false));\r\n            Tuning._fiveStrings.push(new Tuning('Banjo G Minor Tuning', [62, 58, 55, 50, 67], false));\r\n            Tuning._fiveStrings.push(new Tuning('Banjo G Modal Tuning', [62, 57, 55, 50, 67], false));\r\n            Tuning._defaultTunings.set(4, new Tuning('Bass Standard Tuning', [43, 38, 33, 28], true));\r\n            Tuning._fourStrings.push(Tuning._defaultTunings.get(4));\r\n            Tuning._fourStrings.push(new Tuning('Bass Tune down ½ step', [42, 37, 32, 27], false));\r\n            Tuning._fourStrings.push(new Tuning('Bass Tune down 1 step', [41, 36, 31, 26], false));\r\n            Tuning._fourStrings.push(new Tuning('Bass Tune down 2 step', [39, 34, 29, 24], false));\r\n            Tuning._fourStrings.push(new Tuning('Bass Dropped D Tuning', [43, 38, 33, 26], false));\r\n            Tuning._fourStrings.push(new Tuning('Ukulele C Tuning', [45, 40, 36, 43], false));\r\n            Tuning._fourStrings.push(new Tuning('Ukulele G Tuning', [52, 47, 43, 38], false));\r\n            Tuning._fourStrings.push(new Tuning('Mandolin Standard Tuning', [64, 57, 50, 43], false));\r\n            Tuning._fourStrings.push(new Tuning('Mandolin or Violin Tuning', [76, 69, 62, 55], false));\r\n            Tuning._fourStrings.push(new Tuning('Viola Tuning', [69, 62, 55, 48], false));\r\n            Tuning._fourStrings.push(new Tuning('Cello Tuning', [57, 50, 43, 36], false));\r\n        }\r\n        /**\r\n         * Tries to find a known tuning by a given list of tuning values.\r\n         * @param strings The values defining the tuning.\r\n         * @returns The known tuning.\r\n         */\r\n        static findTuning(strings) {\r\n            let tunings = Tuning.getPresetsFor(strings.length);\r\n            for (let t = 0, tc = tunings.length; t < tc; t++) {\r\n                let tuning = tunings[t];\r\n                let equals = true;\r\n                for (let i = 0, j = strings.length; i < j; i++) {\r\n                    if (strings[i] !== tuning.tunings[i]) {\r\n                        equals = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if (equals) {\r\n                    return tuning;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        /**\r\n         * Tries to detect the name and standard flag of the tuning from a known tuning list based\r\n         * on the string values.\r\n         */\r\n        finish() {\r\n            const knownTuning = Tuning.findTuning(this.tunings);\r\n            if (knownTuning) {\r\n                this.name = knownTuning.name;\r\n                this.isStandard = knownTuning.isStandard;\r\n            }\r\n            this.name = this.name.trim();\r\n        }\r\n    }\r\n    Tuning._sevenStrings = [];\r\n    Tuning._sixStrings = [];\r\n    Tuning._fiveStrings = [];\r\n    Tuning._fourStrings = [];\r\n    Tuning._defaultTunings = new Map();\r\n    Tuning.defaultAccidentals = ['', '#', '', '#', '', '', '#', '', '#', '', '#', ''];\r\n    Tuning.defaultSteps = ['C', 'C', 'D', 'D', 'E', 'F', 'F', 'G', 'G', 'A', 'A', 'B'];\r\n    Tuning.initialize();\n\n    /**\r\n     * This class describes a single staff within a track. There are instruments like pianos\r\n     * where a single track can contain multiple staffs.\r\n     * @json\r\n     */\r\n    class Staff {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the zero-based index of this staff within the track.\r\n             * @json_ignore\r\n             */\r\n            this.index = 0;\r\n            /**\r\n             * Gets or sets a list of all bars contained in this staff.\r\n             * @json_add addBar\r\n             */\r\n            this.bars = [];\r\n            /**\r\n             * Gets or sets a list of all chords defined for this staff. {@link Beat.chordId} refers to entries in this lookup.\r\n             * @json_add addChord\r\n             */\r\n            this.chords = new Map();\r\n            /**\r\n             * Gets or sets the fret on which a capo is set.\r\n             */\r\n            this.capo = 0;\r\n            /**\r\n             * Gets or sets the number of semitones this track should be\r\n             * transposed. This applies to rendering and playback.\r\n             */\r\n            this.transpositionPitch = 0;\r\n            /**\r\n             * Gets or sets the number of semitones this track should be\r\n             * transposed. This applies only to rendering.\r\n             */\r\n            this.displayTranspositionPitch = 0;\r\n            /**\r\n             * Get or set the guitar tuning of the guitar. This tuning also indicates the number of strings shown in the\r\n             * guitar tablature. Unlike the {@link Note.string} property this array directly represents\r\n             * the order of the tracks shown in the tablature. The first item is the most top tablature line.\r\n             */\r\n            this.stringTuning = new Tuning(\"\", [], false);\r\n            /**\r\n             * Gets or sets whether the tabs are shown.\r\n             */\r\n            this.showTablature = true;\r\n            /**\r\n             * Gets or sets whether the standard notation is shown.\r\n             */\r\n            this.showStandardNotation = true;\r\n            /**\r\n             * Gets or sets whether the staff contains percussion notation\r\n             */\r\n            this.isPercussion = false;\r\n            /**\r\n             * The number of lines shown for the standard notation.\r\n             * For some percussion instruments this number might vary.\r\n             */\r\n            this.standardNotationLineCount = 5;\r\n        }\r\n        /**\r\n         * Get or set the values of the related guitar tuning.\r\n         */\r\n        get tuning() {\r\n            return this.stringTuning.tunings;\r\n        }\r\n        /**\r\n         * Gets or sets the name of the tuning.\r\n         */\r\n        get tuningName() {\r\n            return this.stringTuning.name;\r\n        }\r\n        get isStringed() {\r\n            return this.stringTuning.tunings.length > 0;\r\n        }\r\n        finish(settings) {\r\n            this.stringTuning.finish();\r\n            for (let i = 0, j = this.bars.length; i < j; i++) {\r\n                this.bars[i].finish(settings);\r\n            }\r\n        }\r\n        addChord(chordId, chord) {\r\n            chord.staff = this;\r\n            this.chords.set(chordId, chord);\r\n        }\r\n        addBar(bar) {\r\n            let bars = this.bars;\r\n            bar.staff = this;\r\n            bar.index = bars.length;\r\n            if (bars.length > 0) {\r\n                bar.previousBar = bars[bars.length - 1];\r\n                bar.previousBar.nextBar = bar;\r\n            }\r\n            bars.push(bar);\r\n        }\r\n    }\n\n    /**\r\n     * This public class describes a single track or instrument of score.\r\n     * It is bascially a list of staffs containing individual music notation kinds.\r\n     * @json\r\n     */\r\n    class Track {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the zero-based index of this track.\r\n             * @json_ignore\r\n             */\r\n            this.index = 0;\r\n            /**\r\n             * Gets or sets the list of staffs that are defined for this track.\r\n             * @json_add addStaff\r\n             */\r\n            this.staves = [];\r\n            /**\r\n             * Gets or sets the playback information for this track.\r\n             */\r\n            this.playbackInfo = new PlaybackInformation();\r\n            /**\r\n             * Gets or sets the display color defined for this track.\r\n             */\r\n            this.color = new Color(200, 0, 0, 255);\r\n            /**\r\n             * Gets or sets the long name of this track.\r\n             */\r\n            this.name = '';\r\n            /**\r\n             * Gets or sets the short name of this track.\r\n             */\r\n            this.shortName = '';\r\n            /**\r\n             * Gets or sets a mapping on which staff liens particular percussion instruments\r\n             * should be shown.\r\n             */\r\n            this.percussionArticulations = [];\r\n        }\r\n        ensureStaveCount(staveCount) {\r\n            while (this.staves.length < staveCount) {\r\n                this.addStaff(new Staff());\r\n            }\r\n        }\r\n        addStaff(staff) {\r\n            staff.index = this.staves.length;\r\n            staff.track = this;\r\n            this.staves.push(staff);\r\n        }\r\n        finish(settings) {\r\n            if (!this.shortName) {\r\n                this.shortName = this.name;\r\n                if (this.shortName.length > Track.ShortNameMaxLength) {\r\n                    this.shortName = this.shortName.substr(0, Track.ShortNameMaxLength);\r\n                }\r\n            }\r\n            for (let i = 0, j = this.staves.length; i < j; i++) {\r\n                this.staves[i].finish(settings);\r\n            }\r\n        }\r\n        applyLyrics(lyrics) {\r\n            for (let lyric of lyrics) {\r\n                lyric.finish();\r\n            }\r\n            let staff = this.staves[0];\r\n            for (let li = 0; li < lyrics.length; li++) {\r\n                let lyric = lyrics[li];\r\n                if (lyric.startBar >= 0 && lyric.startBar < staff.bars.length) {\r\n                    let beat = staff.bars[lyric.startBar].voices[0].beats[0];\r\n                    for (let ci = 0; ci < lyric.chunks.length && beat; ci++) {\r\n                        // skip rests and empty beats\r\n                        while (beat && (beat.isEmpty || beat.isRest)) {\r\n                            beat = beat.nextBeat;\r\n                        }\r\n                        // mismatch between chunks and beats might lead to missing beats\r\n                        if (beat) {\r\n                            // initialize lyrics list for beat if required\r\n                            if (!beat.lyrics) {\r\n                                beat.lyrics = new Array(lyrics.length);\r\n                            }\r\n                            // assign chunk\r\n                            beat.lyrics[li] = lyric.chunks[ci];\r\n                            beat = beat.nextBeat;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    Track.ShortNameMaxLength = 10;\n\n    /**\r\n     * A voice represents a group of beats\r\n     * that can be played during a bar.\r\n     * @json\r\n     */\r\n    class Voice {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the unique id of this bar.\r\n             */\r\n            this.id = Voice._globalBarId++;\r\n            /**\r\n             * Gets or sets the zero-based index of this voice within the bar.\r\n             * @json_ignore\r\n             */\r\n            this.index = 0;\r\n            /**\r\n             * Gets or sets the list of beats contained in this voice.\r\n             * @json_add addBeat\r\n             */\r\n            this.beats = [];\r\n            /**\r\n             * Gets or sets a value indicating whether this voice is empty.\r\n             */\r\n            this.isEmpty = true;\r\n        }\r\n        insertBeat(after, newBeat) {\r\n            newBeat.nextBeat = after.nextBeat;\r\n            if (newBeat.nextBeat) {\r\n                newBeat.nextBeat.previousBeat = newBeat;\r\n            }\r\n            newBeat.previousBeat = after;\r\n            newBeat.voice = this;\r\n            after.nextBeat = newBeat;\r\n            this.beats.splice(after.index + 1, 0, newBeat);\r\n        }\r\n        addBeat(beat) {\r\n            beat.voice = this;\r\n            beat.index = this.beats.length;\r\n            this.beats.push(beat);\r\n            if (!beat.isEmpty) {\r\n                this.isEmpty = false;\r\n            }\r\n        }\r\n        chain(beat) {\r\n            if (!this.bar) {\r\n                return;\r\n            }\r\n            if (beat.index < this.beats.length - 1) {\r\n                beat.nextBeat = this.beats[beat.index + 1];\r\n                beat.nextBeat.previousBeat = beat;\r\n            }\r\n            else if (beat.isLastOfVoice && beat.voice.bar.nextBar) {\r\n                let nextVoice = this.bar.nextBar.voices[this.index];\r\n                if (nextVoice.beats.length > 0) {\r\n                    beat.nextBeat = nextVoice.beats[0];\r\n                    beat.nextBeat.previousBeat = beat;\r\n                }\r\n                else {\r\n                    beat.nextBeat.previousBeat = beat;\r\n                }\r\n            }\r\n            beat.chain();\r\n        }\r\n        addGraceBeat(beat) {\r\n            if (this.beats.length === 0) {\r\n                this.addBeat(beat);\r\n                return;\r\n            }\r\n            // remove last beat\r\n            let lastBeat = this.beats[this.beats.length - 1];\r\n            this.beats.splice(this.beats.length - 1, 1);\r\n            // insert grace beat\r\n            this.addBeat(beat);\r\n            // reinsert last beat\r\n            this.addBeat(lastBeat);\r\n            this.isEmpty = false;\r\n        }\r\n        getBeatAtPlaybackStart(playbackStart) {\r\n            if (this._beatLookup.has(playbackStart)) {\r\n                return this._beatLookup.get(playbackStart);\r\n            }\r\n            return null;\r\n        }\r\n        finish(settings) {\r\n            this._beatLookup = new Map();\r\n            let currentGraceGroup = null;\r\n            for (let index = 0; index < this.beats.length; index++) {\r\n                let beat = this.beats[index];\r\n                beat.index = index;\r\n                this.chain(beat);\r\n                if (beat.graceType === GraceType.None) {\r\n                    beat.graceGroup = currentGraceGroup;\r\n                    if (currentGraceGroup) {\r\n                        currentGraceGroup.isComplete = true;\r\n                    }\r\n                    currentGraceGroup = null;\r\n                }\r\n                else {\r\n                    if (!currentGraceGroup) {\r\n                        currentGraceGroup = new GraceGroup();\r\n                    }\r\n                    currentGraceGroup.addBeat(beat);\r\n                }\r\n            }\r\n            let currentDisplayTick = 0;\r\n            let currentPlaybackTick = 0;\r\n            for (let i = 0; i < this.beats.length; i++) {\r\n                let beat = this.beats[i];\r\n                beat.index = i;\r\n                beat.finish(settings);\r\n                // if this beat is a non-grace but has grace notes\r\n                // we need to first steal the duration from the right beat\r\n                // and place the grace beats correctly\r\n                if (beat.graceType === GraceType.None) {\r\n                    if (beat.graceGroup) {\r\n                        const firstGraceBeat = beat.graceGroup.beats[0];\r\n                        const lastGraceBeat = beat.graceGroup.beats[beat.graceGroup.beats.length - 1];\r\n                        if (firstGraceBeat.graceType !== GraceType.BendGrace) {\r\n                            // find out the stolen duration first\r\n                            let stolenDuration = (lastGraceBeat.playbackStart + lastGraceBeat.playbackDuration) - firstGraceBeat.playbackStart;\r\n                            switch (firstGraceBeat.graceType) {\r\n                                case GraceType.BeforeBeat:\r\n                                    // steal duration from previous beat and then place grace beats newly\r\n                                    if (firstGraceBeat.previousBeat) {\r\n                                        firstGraceBeat.previousBeat.playbackDuration -= stolenDuration;\r\n                                        // place beats starting after new beat end\r\n                                        if (firstGraceBeat.previousBeat.voice == this) {\r\n                                            currentPlaybackTick = firstGraceBeat.previousBeat.playbackStart +\r\n                                                firstGraceBeat.previousBeat.playbackDuration;\r\n                                        }\r\n                                        else {\r\n                                            // stealing into the previous bar\r\n                                            currentPlaybackTick = -stolenDuration;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        // before-beat on start is somehow not possible as it causes negative ticks\r\n                                        currentPlaybackTick = -stolenDuration;\r\n                                    }\r\n                                    for (const graceBeat of beat.graceGroup.beats) {\r\n                                        this._beatLookup.delete(graceBeat.playbackStart);\r\n                                        graceBeat.playbackStart = currentPlaybackTick;\r\n                                        this._beatLookup.set(graceBeat.playbackStart, beat);\r\n                                        currentPlaybackTick += graceBeat.playbackDuration;\r\n                                    }\r\n                                    break;\r\n                                case GraceType.OnBeat:\r\n                                    // steal duration from current beat \r\n                                    beat.playbackDuration -= stolenDuration;\r\n                                    if (lastGraceBeat.voice === this) {\r\n                                        // with changed durations, update current position to be after the last grace beat\r\n                                        currentPlaybackTick = lastGraceBeat.playbackStart + lastGraceBeat.playbackDuration;\r\n                                    }\r\n                                    else {\r\n                                        // if last grace beat is on the previous bar, we shift the time back to have the note played earlier\r\n                                        currentPlaybackTick = -stolenDuration;\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (beat.fermata) {\r\n                        this.bar.masterBar.addFermata(beat.playbackStart, beat.fermata);\r\n                    }\r\n                    else {\r\n                        beat.fermata = this.bar.masterBar.getFermata(beat);\r\n                    }\r\n                    this._beatLookup.set(beat.playbackStart, beat);\r\n                }\r\n                beat.displayStart = currentDisplayTick;\r\n                beat.playbackStart = currentPlaybackTick;\r\n                beat.finishTuplet();\r\n                currentDisplayTick += beat.displayDuration;\r\n                currentPlaybackTick += beat.playbackDuration;\r\n            }\r\n        }\r\n        calculateDuration() {\r\n            if (this.isEmpty || this.beats.length === 0) {\r\n                return 0;\r\n            }\r\n            let lastBeat = this.beats[this.beats.length - 1];\r\n            let firstBeat = this.beats[0];\r\n            return lastBeat.playbackStart + lastBeat.playbackDuration - firstBeat.playbackStart;\r\n        }\r\n    }\r\n    Voice._globalBarId = 0;\n\n    /**\r\n     * A list of terminals recognized by the alphaTex-parser\r\n     */\r\n    var AlphaTexSymbols;\r\n    (function (AlphaTexSymbols) {\r\n        AlphaTexSymbols[AlphaTexSymbols[\"No\"] = 0] = \"No\";\r\n        AlphaTexSymbols[AlphaTexSymbols[\"Eof\"] = 1] = \"Eof\";\r\n        AlphaTexSymbols[AlphaTexSymbols[\"Number\"] = 2] = \"Number\";\r\n        AlphaTexSymbols[AlphaTexSymbols[\"DoubleDot\"] = 3] = \"DoubleDot\";\r\n        AlphaTexSymbols[AlphaTexSymbols[\"Dot\"] = 4] = \"Dot\";\r\n        AlphaTexSymbols[AlphaTexSymbols[\"String\"] = 5] = \"String\";\r\n        AlphaTexSymbols[AlphaTexSymbols[\"Tuning\"] = 6] = \"Tuning\";\r\n        AlphaTexSymbols[AlphaTexSymbols[\"LParensis\"] = 7] = \"LParensis\";\r\n        AlphaTexSymbols[AlphaTexSymbols[\"RParensis\"] = 8] = \"RParensis\";\r\n        AlphaTexSymbols[AlphaTexSymbols[\"LBrace\"] = 9] = \"LBrace\";\r\n        AlphaTexSymbols[AlphaTexSymbols[\"RBrace\"] = 10] = \"RBrace\";\r\n        AlphaTexSymbols[AlphaTexSymbols[\"Pipe\"] = 11] = \"Pipe\";\r\n        AlphaTexSymbols[AlphaTexSymbols[\"MetaCommand\"] = 12] = \"MetaCommand\";\r\n        AlphaTexSymbols[AlphaTexSymbols[\"Multiply\"] = 13] = \"Multiply\";\r\n        AlphaTexSymbols[AlphaTexSymbols[\"LowerThan\"] = 14] = \"LowerThan\";\r\n        AlphaTexSymbols[AlphaTexSymbols[\"Property\"] = 15] = \"Property\";\r\n    })(AlphaTexSymbols || (AlphaTexSymbols = {}));\r\n    class AlphaTexError extends AlphaTabError {\r\n        constructor(message) {\r\n            super(exports.AlphaTabErrorType.AlphaTex, message);\r\n            this.position = 0;\r\n            this.nonTerm = '';\r\n            this.expected = AlphaTexSymbols.No;\r\n            this.symbol = AlphaTexSymbols.No;\r\n            Object.setPrototypeOf(this, AlphaTexError.prototype);\r\n        }\r\n        static symbolError(position, nonTerm, expected, symbol, symbolData = null) {\r\n            let message;\r\n            if (!symbolData) {\r\n                message = `MalFormed AlphaTex: @${position}: Error on block ${nonTerm}, expected a ${AlphaTexSymbols[expected]} found a ${AlphaTexSymbols[symbol]}: '${symbolData}'`;\r\n            }\r\n            else {\r\n                message = `MalFormed AlphaTex: @${position}: Error on block ${nonTerm}, invalid value: ${symbolData}`;\r\n            }\r\n            let exception = new AlphaTexError(message);\r\n            exception.position = position;\r\n            exception.nonTerm = nonTerm;\r\n            exception.expected = expected;\r\n            exception.symbol = symbol;\r\n            exception.symbolData = symbolData;\r\n            return exception;\r\n        }\r\n        static errorMessage(position, message) {\r\n            message = 'MalFormed AlphaTex: @' + position + ': ' + message;\r\n            let exception = new AlphaTexError(message);\r\n            exception.position = position;\r\n            return exception;\r\n        }\r\n    }\r\n    /**\r\n     * This importer can parse alphaTex markup into a score structure.\r\n     */\r\n    class AlphaTexImporter extends ScoreImporter {\r\n        constructor() {\r\n            super();\r\n            this._trackChannel = 0;\r\n            this._ch = 0;\r\n            this._curChPos = 0;\r\n            this._sy = AlphaTexSymbols.No;\r\n            this._allowNegatives = false;\r\n            this._allowTuning = false;\r\n            this._currentDuration = Duration.QuadrupleWhole;\r\n            this._currentDynamics = DynamicValue.PPP;\r\n            this._currentTuplet = 0;\r\n            this._staffHasExplicitTuning = false;\r\n            this._staffTuningApplied = false;\r\n        }\r\n        get name() {\r\n            return 'AlphaTex';\r\n        }\r\n        readScore() {\r\n            try {\r\n                this._allowTuning = true;\r\n                this._lyrics = new Map();\r\n                this.createDefaultScore();\r\n                this._curChPos = 0;\r\n                this._currentDuration = Duration.Quarter;\r\n                this._currentDynamics = DynamicValue.F;\r\n                this._currentTuplet = 1;\r\n                this._ch = this.nextChar();\r\n                this._sy = this.newSy();\r\n                if (this._sy === AlphaTexSymbols.LowerThan) {\r\n                    // potential XML, stop parsing (alphaTex never starts with <)\r\n                    throw new UnsupportedFormatError('Unknown start sign <');\r\n                }\r\n                this.score();\r\n                this.consolidate();\r\n                this._score.finish(this.settings);\r\n                this._score.rebuildRepeatGroups();\r\n                for (const [track, lyrics] of this._lyrics) {\r\n                    this._score.tracks[track].applyLyrics(lyrics);\r\n                }\r\n                return this._score;\r\n            }\r\n            catch (e) {\r\n                if (e instanceof AlphaTexError) {\r\n                    throw new UnsupportedFormatError(e.message);\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        consolidate() {\r\n            // the number of bars per staff and track could be inconsistent,\r\n            // we need to ensure all staffs of all tracks have the correct number of bars\r\n            for (let track of this._score.tracks) {\r\n                for (let staff of track.staves) {\r\n                    while (staff.bars.length < this._score.masterBars.length) {\r\n                        let bar = this.newBar(staff);\r\n                        let emptyBeat = new Beat();\r\n                        emptyBeat.isEmpty = true;\r\n                        bar.voices[0].addBeat(emptyBeat);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        error(nonterm, expected, symbolError = true) {\r\n            let e;\r\n            if (symbolError) {\r\n                e = AlphaTexError.symbolError(this._curChPos, nonterm, expected, this._sy, null);\r\n            }\r\n            else {\r\n                e = AlphaTexError.symbolError(this._curChPos, nonterm, expected, expected, this._syData);\r\n            }\r\n            Logger.error(this.name, e.message);\r\n            throw e;\r\n        }\r\n        errorMessage(message) {\r\n            let e = AlphaTexError.errorMessage(this._curChPos, message);\r\n            Logger.error(this.name, e.message);\r\n            throw e;\r\n        }\r\n        /**\r\n         * Initializes the song with some required default values.\r\n         * @returns\r\n         */\r\n        createDefaultScore() {\r\n            this._score = new Score();\r\n            this._score.tempo = 120;\r\n            this._score.tempoLabel = '';\r\n            this.newTrack();\r\n        }\r\n        newTrack() {\r\n            this._currentTrack = new Track();\r\n            this._currentTrack.ensureStaveCount(1);\r\n            this._currentTrack.playbackInfo.program = 25;\r\n            this._currentTrack.playbackInfo.primaryChannel = this._trackChannel++;\r\n            this._currentTrack.playbackInfo.secondaryChannel = this._trackChannel++;\r\n            this._currentStaff = this._currentTrack.staves[0];\r\n            this._currentStaff.displayTranspositionPitch = -12;\r\n            this._currentStaff.stringTuning.tunings = Tuning.getDefaultTuningFor(6).tunings;\r\n            this._score.addTrack(this._currentTrack);\r\n            this._lyrics.set(this._currentTrack.index, []);\r\n            this._currentDynamics = DynamicValue.F;\r\n        }\r\n        /**\r\n         * Converts a clef string into the clef value.\r\n         * @param str the string to convert\r\n         * @returns the clef value\r\n         */\r\n        parseClefFromString(str) {\r\n            switch (str.toLowerCase()) {\r\n                case 'g2':\r\n                case 'treble':\r\n                    return Clef.G2;\r\n                case 'f4':\r\n                case 'bass':\r\n                    return Clef.F4;\r\n                case 'c3':\r\n                case 'tenor':\r\n                    return Clef.C3;\r\n                case 'c4':\r\n                case 'alto':\r\n                    return Clef.C4;\r\n                case 'n':\r\n                case 'neutral':\r\n                    return Clef.Neutral;\r\n                default:\r\n                    return Clef.G2;\r\n                // error(\"clef-value\", AlphaTexSymbols.String, false);\r\n            }\r\n        }\r\n        /**\r\n         * Converts a clef tuning into the clef value.\r\n         * @param i the tuning value to convert\r\n         * @returns the clef value\r\n         */\r\n        parseClefFromInt(i) {\r\n            switch (i) {\r\n                case 43:\r\n                    return Clef.G2;\r\n                case 65:\r\n                    return Clef.F4;\r\n                case 48:\r\n                    return Clef.C3;\r\n                case 60:\r\n                    return Clef.C4;\r\n                default:\r\n                    return Clef.G2;\r\n            }\r\n        }\r\n        parseTripletFeelFromString(str) {\r\n            switch (str.toLowerCase()) {\r\n                case 'no':\r\n                case 'none':\r\n                    return TripletFeel.NoTripletFeel;\r\n                case 't16':\r\n                case 'triplet-16th':\r\n                    return TripletFeel.Triplet16th;\r\n                case 't8':\r\n                case 'triplet-8th':\r\n                    return TripletFeel.Triplet8th;\r\n                case 'd16':\r\n                case 'dotted-16th':\r\n                    return TripletFeel.Dotted16th;\r\n                case 'd8':\r\n                case 'dotted-8th':\r\n                    return TripletFeel.Dotted8th;\r\n                case 's16':\r\n                case 'scottish-16th':\r\n                    return TripletFeel.Scottish16th;\r\n                case 's8':\r\n                case 'scottish-8th':\r\n                    return TripletFeel.Scottish8th;\r\n                default:\r\n                    return TripletFeel.NoTripletFeel;\r\n            }\r\n        }\r\n        parseTripletFeelFromInt(i) {\r\n            switch (i) {\r\n                case 0:\r\n                    return TripletFeel.NoTripletFeel;\r\n                case 1:\r\n                    return TripletFeel.Triplet16th;\r\n                case 2:\r\n                    return TripletFeel.Triplet8th;\r\n                case 3:\r\n                    return TripletFeel.Dotted16th;\r\n                case 4:\r\n                    return TripletFeel.Dotted8th;\r\n                case 5:\r\n                    return TripletFeel.Scottish16th;\r\n                case 6:\r\n                    return TripletFeel.Scottish8th;\r\n                default:\r\n                    return TripletFeel.NoTripletFeel;\r\n            }\r\n        }\r\n        /**\r\n         * Converts a keysignature string into the assocciated value.\r\n         * @param str the string to convert\r\n         * @returns the assocciated keysignature value\r\n         */\r\n        parseKeySignature(str) {\r\n            switch (str.toLowerCase()) {\r\n                case 'cb':\r\n                    return -7;\r\n                case 'gb':\r\n                    return -6;\r\n                case 'db':\r\n                    return -5;\r\n                case 'ab':\r\n                    return -4;\r\n                case 'eb':\r\n                    return -3;\r\n                case 'bb':\r\n                    return -2;\r\n                case 'f':\r\n                    return -1;\r\n                case 'c':\r\n                    return 0;\r\n                case 'g':\r\n                    return 1;\r\n                case 'd':\r\n                    return 2;\r\n                case 'a':\r\n                    return 3;\r\n                case 'e':\r\n                    return 4;\r\n                case 'b':\r\n                    return 5;\r\n                case 'f#':\r\n                    return 6;\r\n                case 'c#':\r\n                    return 7;\r\n                default:\r\n                    return 0;\r\n                // error(\"keysignature-value\", AlphaTexSymbols.String, false); return 0\r\n            }\r\n        }\r\n        /**\r\n         * Reads the next character of the source stream.\r\n         */\r\n        nextChar() {\r\n            let b = this.data.readByte();\r\n            if (b === -1) {\r\n                this._ch = 0;\r\n            }\r\n            else {\r\n                this._ch = b;\r\n                this._curChPos++;\r\n            }\r\n            return this._ch;\r\n        }\r\n        /**\r\n         * Reads the next terminal symbol.\r\n         */\r\n        newSy() {\r\n            this._sy = AlphaTexSymbols.No;\r\n            do {\r\n                if (this._ch === AlphaTexImporter.Eof) {\r\n                    this._sy = AlphaTexSymbols.Eof;\r\n                }\r\n                else if (this._ch === 0x20 || this._ch === 0x0b || this._ch === 0x0d || this._ch === 0x0a || this._ch === 0x09) {\r\n                    // skip whitespaces\r\n                    this._ch = this.nextChar();\r\n                }\r\n                else if (this._ch === 0x2f /* / */) {\r\n                    this._ch = this.nextChar();\r\n                    if (this._ch === 0x2f /* / */) {\r\n                        // single line comment\r\n                        while (this._ch !== 0x0d /* \\r */ &&\r\n                            this._ch !== 0x0a /* \\n */ &&\r\n                            this._ch !== AlphaTexImporter.Eof) {\r\n                            this._ch = this.nextChar();\r\n                        }\r\n                    }\r\n                    else if (this._ch === 0x2a /* * */) {\r\n                        // multiline comment\r\n                        while (this._ch !== 0) {\r\n                            if (this._ch === 0x2a /* * */) {\r\n                                this._ch = this.nextChar();\r\n                                if (this._ch === 0x2f /* / */) {\r\n                                    this._ch = this.nextChar();\r\n                                    break;\r\n                                }\r\n                            }\r\n                            else {\r\n                                this._ch = this.nextChar();\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.error('symbol', AlphaTexSymbols.String, false);\r\n                    }\r\n                }\r\n                else if (this._ch === 0x22 /* \" */ || this._ch === 0x27 /* ' */) {\r\n                    let startChar = this._ch;\r\n                    this._ch = this.nextChar();\r\n                    let s = '';\r\n                    this._sy = AlphaTexSymbols.String;\r\n                    while (this._ch !== startChar && this._ch !== AlphaTexImporter.Eof) {\r\n                        s += String.fromCharCode(this._ch);\r\n                        this._ch = this.nextChar();\r\n                    }\r\n                    this._syData = s;\r\n                    this._ch = this.nextChar();\r\n                }\r\n                else if (this._ch === 0x2d /* - */) {\r\n                    // negative number\r\n                    // is number?\r\n                    if (this._allowNegatives && this.isDigit(this._ch)) {\r\n                        let num = this.readNumber();\r\n                        this._sy = AlphaTexSymbols.Number;\r\n                        this._syData = num;\r\n                    }\r\n                    else {\r\n                        this._sy = AlphaTexSymbols.String;\r\n                        this._syData = this.readName();\r\n                    }\r\n                }\r\n                else if (this._ch === 0x2e /* . */) {\r\n                    this._sy = AlphaTexSymbols.Dot;\r\n                    this._ch = this.nextChar();\r\n                }\r\n                else if (this._ch === 0x3a /* : */) {\r\n                    this._sy = AlphaTexSymbols.DoubleDot;\r\n                    this._ch = this.nextChar();\r\n                }\r\n                else if (this._ch === 0x28 /* ( */) {\r\n                    this._sy = AlphaTexSymbols.LParensis;\r\n                    this._ch = this.nextChar();\r\n                }\r\n                else if (this._ch === 0x5c /* \\ */) {\r\n                    this._ch = this.nextChar();\r\n                    let name = this.readName();\r\n                    this._sy = AlphaTexSymbols.MetaCommand;\r\n                    this._syData = name;\r\n                }\r\n                else if (this._ch === 0x29 /* ) */) {\r\n                    this._sy = AlphaTexSymbols.RParensis;\r\n                    this._ch = this.nextChar();\r\n                }\r\n                else if (this._ch === 0x7b /* { */) {\r\n                    this._sy = AlphaTexSymbols.LBrace;\r\n                    this._ch = this.nextChar();\r\n                }\r\n                else if (this._ch === 0x7d /* } */) {\r\n                    this._sy = AlphaTexSymbols.RBrace;\r\n                    this._ch = this.nextChar();\r\n                }\r\n                else if (this._ch === 0x7c /* | */) {\r\n                    this._sy = AlphaTexSymbols.Pipe;\r\n                    this._ch = this.nextChar();\r\n                }\r\n                else if (this._ch === 0x2a /* * */) {\r\n                    this._sy = AlphaTexSymbols.Multiply;\r\n                    this._ch = this.nextChar();\r\n                }\r\n                else if (this._ch === 0x3c /* < */) {\r\n                    this._sy = AlphaTexSymbols.LowerThan;\r\n                    this._ch = this.nextChar();\r\n                }\r\n                else if (this.isDigit(this._ch)) {\r\n                    let num = this.readNumber();\r\n                    this._sy = AlphaTexSymbols.Number;\r\n                    this._syData = num;\r\n                }\r\n                else if (AlphaTexImporter.isLetter(this._ch)) {\r\n                    let name = this.readName();\r\n                    let tuning = this._allowTuning ? ModelUtils.parseTuning(name) : null;\r\n                    if (tuning) {\r\n                        this._sy = AlphaTexSymbols.Tuning;\r\n                        this._syData = tuning;\r\n                    }\r\n                    else {\r\n                        this._sy = AlphaTexSymbols.String;\r\n                        this._syData = name;\r\n                    }\r\n                }\r\n                else {\r\n                    this.error('symbol', AlphaTexSymbols.String, false);\r\n                }\r\n            } while (this._sy === AlphaTexSymbols.No);\r\n            return this._sy;\r\n        }\r\n        /**\r\n         * Checks if the given character is a letter.\r\n         * (no control characters, whitespaces, numbers or dots)\r\n         * @param code the character\r\n         * @returns true if the given character is a letter, otherwise false.\r\n         */\r\n        static isLetter(code) {\r\n            // no control characters, whitespaces, numbers or dots\r\n            return (!AlphaTexImporter.isTerminal(code) &&\r\n                ((code >= 0x21 && code <= 0x2f) || (code >= 0x3a && code <= 0x7e) || code > 0x80)); /* Unicode Symbols */\r\n        }\r\n        /**\r\n         * Checks if the given charater is a non terminal.\r\n         * @param ch the character\r\n         * @returns true if the given character is a terminal, otherwise false.\r\n         */\r\n        static isTerminal(ch) {\r\n            return (ch === 0x2e /* . */ ||\r\n                ch === 0x7b /* { */ ||\r\n                ch === 0x7d /* } */ ||\r\n                ch === 0x5b /* [ */ ||\r\n                ch === 0x5d /* ] */ ||\r\n                ch === 0x28 /* ( */ ||\r\n                ch === 0x29 /* ) */ ||\r\n                ch === 0x7c /* | */ ||\r\n                ch === 0x27 /* ' */ ||\r\n                ch === 0x22 /* \" */ ||\r\n                ch === 0x5c /* \\ */);\r\n        }\r\n        /**\r\n         * Checks if the given character is a digit.\r\n         * @param code the character\r\n         * @returns true if the given character is a digit, otherwise false.\r\n         */\r\n        isDigit(code) {\r\n            return (code >= 0x30 && code <= 0x39) /*0-9*/ || (code === 0x2d /* - */ && this._allowNegatives); // allow - if negatives\r\n        }\r\n        /**\r\n         * Reads a string from the stream.\r\n         * @returns the read string.\r\n         */\r\n        readName() {\r\n            let str = '';\r\n            do {\r\n                str += String.fromCharCode(this._ch);\r\n                this._ch = this.nextChar();\r\n            } while (AlphaTexImporter.isLetter(this._ch) || this.isDigit(this._ch) || this._ch === 0x23);\r\n            return str;\r\n        }\r\n        /**\r\n         * Reads a number from the stream.\r\n         * @returns the read number.\r\n         */\r\n        readNumber() {\r\n            let str = '';\r\n            do {\r\n                str += String.fromCharCode(this._ch);\r\n                this._ch = this.nextChar();\r\n            } while (this.isDigit(this._ch));\r\n            return parseInt(str);\r\n        }\r\n        score() {\r\n            if (this._sy === AlphaTexSymbols.Eof) {\r\n                throw new UnsupportedFormatError('Unexpected end of file');\r\n            }\r\n            const anyMetaRead = this.metaData();\r\n            const anyBarsRead = this.bars();\r\n            if (!anyMetaRead && !anyBarsRead) {\r\n                throw new UnsupportedFormatError('No alphaTex data found');\r\n            }\r\n        }\r\n        metaData() {\r\n            let anyMeta = false;\r\n            let continueReading = true;\r\n            while (this._sy === AlphaTexSymbols.MetaCommand && continueReading) {\r\n                let syData = this._syData.toLowerCase();\r\n                switch (syData) {\r\n                    case 'title':\r\n                        this._sy = this.newSy();\r\n                        if (this._sy === AlphaTexSymbols.String) {\r\n                            this._score.title = this._syData;\r\n                        }\r\n                        else {\r\n                            this.error('title', AlphaTexSymbols.String, true);\r\n                        }\r\n                        this._sy = this.newSy();\r\n                        anyMeta = true;\r\n                        break;\r\n                    case 'subtitle':\r\n                        this._sy = this.newSy();\r\n                        if (this._sy === AlphaTexSymbols.String) {\r\n                            this._score.subTitle = this._syData;\r\n                        }\r\n                        else {\r\n                            this.error('subtitle', AlphaTexSymbols.String, true);\r\n                        }\r\n                        this._sy = this.newSy();\r\n                        anyMeta = true;\r\n                        break;\r\n                    case 'artist':\r\n                        this._sy = this.newSy();\r\n                        if (this._sy === AlphaTexSymbols.String) {\r\n                            this._score.artist = this._syData;\r\n                        }\r\n                        else {\r\n                            this.error('artist', AlphaTexSymbols.String, true);\r\n                        }\r\n                        this._sy = this.newSy();\r\n                        anyMeta = true;\r\n                        break;\r\n                    case 'album':\r\n                        this._sy = this.newSy();\r\n                        if (this._sy === AlphaTexSymbols.String) {\r\n                            this._score.album = this._syData;\r\n                        }\r\n                        else {\r\n                            this.error('album', AlphaTexSymbols.String, true);\r\n                        }\r\n                        this._sy = this.newSy();\r\n                        anyMeta = true;\r\n                        break;\r\n                    case 'words':\r\n                        this._sy = this.newSy();\r\n                        if (this._sy === AlphaTexSymbols.String) {\r\n                            this._score.words = this._syData;\r\n                        }\r\n                        else {\r\n                            this.error('words', AlphaTexSymbols.String, true);\r\n                        }\r\n                        this._sy = this.newSy();\r\n                        anyMeta = true;\r\n                        break;\r\n                    case 'music':\r\n                        this._sy = this.newSy();\r\n                        if (this._sy === AlphaTexSymbols.String) {\r\n                            this._score.music = this._syData;\r\n                        }\r\n                        else {\r\n                            this.error('music', AlphaTexSymbols.String, true);\r\n                        }\r\n                        this._sy = this.newSy();\r\n                        anyMeta = true;\r\n                        break;\r\n                    case 'copyright':\r\n                        this._sy = this.newSy();\r\n                        if (this._sy === AlphaTexSymbols.String) {\r\n                            this._score.copyright = this._syData;\r\n                        }\r\n                        else {\r\n                            this.error('copyright', AlphaTexSymbols.String, true);\r\n                        }\r\n                        this._sy = this.newSy();\r\n                        anyMeta = true;\r\n                        break;\r\n                    case 'tempo':\r\n                        this._sy = this.newSy();\r\n                        if (this._sy === AlphaTexSymbols.Number) {\r\n                            this._score.tempo = this._syData;\r\n                        }\r\n                        else {\r\n                            this.error('tempo', AlphaTexSymbols.Number, true);\r\n                        }\r\n                        this._sy = this.newSy();\r\n                        anyMeta = true;\r\n                        break;\r\n                    default:\r\n                        if (this.handleStaffMeta()) {\r\n                            anyMeta = true;\r\n                        }\r\n                        else if (anyMeta) {\r\n                            // invalid meta encountered\r\n                            this.error('metaDataTags', AlphaTexSymbols.String, false);\r\n                        }\r\n                        else {\r\n                            // fall forward to bar meta if unknown score meta was found\r\n                            continueReading = false;\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            if (anyMeta) {\r\n                if (this._sy !== AlphaTexSymbols.Dot) {\r\n                    this.error('song', AlphaTexSymbols.Dot, true);\r\n                }\r\n                this._sy = this.newSy();\r\n            }\r\n            else if (this._sy === AlphaTexSymbols.Dot) {\r\n                this._sy = this.newSy();\r\n            }\r\n            return anyMeta;\r\n        }\r\n        handleStaffMeta() {\r\n            let syData = this._syData.toLowerCase();\r\n            switch (syData) {\r\n                case 'capo':\r\n                    this._sy = this.newSy();\r\n                    if (this._sy === AlphaTexSymbols.Number) {\r\n                        this._currentStaff.capo = this._syData;\r\n                    }\r\n                    else {\r\n                        this.error('capo', AlphaTexSymbols.Number, true);\r\n                    }\r\n                    this._sy = this.newSy();\r\n                    return true;\r\n                case 'tuning':\r\n                    this._sy = this.newSy();\r\n                    let strings = this._currentStaff.tuning.length;\r\n                    this._staffHasExplicitTuning = true;\r\n                    this._staffTuningApplied = false;\r\n                    switch (this._sy) {\r\n                        case AlphaTexSymbols.String:\r\n                            let text = this._syData.toLowerCase();\r\n                            if (text === 'piano' || text === 'none' || text === 'voice') {\r\n                                // clear tuning\r\n                                this._currentStaff.stringTuning.tunings = [];\r\n                                this._currentStaff.displayTranspositionPitch = 0;\r\n                            }\r\n                            else {\r\n                                this.error('tuning', AlphaTexSymbols.Tuning, true);\r\n                            }\r\n                            this._sy = this.newSy();\r\n                            break;\r\n                        case AlphaTexSymbols.Tuning:\r\n                            let tuning = [];\r\n                            do {\r\n                                let t = this._syData;\r\n                                tuning.push(t.realValue);\r\n                                this._sy = this.newSy();\r\n                            } while (this._sy === AlphaTexSymbols.Tuning);\r\n                            this._currentStaff.stringTuning.tunings = tuning;\r\n                            break;\r\n                        default:\r\n                            this.error('tuning', AlphaTexSymbols.Tuning, true);\r\n                            break;\r\n                    }\r\n                    if (strings !== this._currentStaff.tuning.length && this._currentStaff.chords.size > 0) {\r\n                        this.errorMessage('Tuning must be defined before any chord');\r\n                    }\r\n                    return true;\r\n                case 'instrument':\r\n                    this._sy = this.newSy();\r\n                    this._staffTuningApplied = false;\r\n                    if (this._sy === AlphaTexSymbols.Number) {\r\n                        let instrument = this._syData;\r\n                        if (instrument >= 0 && instrument <= 128) {\r\n                            this._currentTrack.playbackInfo.program = this._syData;\r\n                        }\r\n                        else {\r\n                            this.error('instrument', AlphaTexSymbols.Number, false);\r\n                        }\r\n                    }\r\n                    else if (this._sy === AlphaTexSymbols.String) {\r\n                        let instrumentName = this._syData.toLowerCase();\r\n                        this._currentTrack.playbackInfo.program = GeneralMidi.getValue(instrumentName);\r\n                    }\r\n                    else {\r\n                        this.error('instrument', AlphaTexSymbols.Number, true);\r\n                    }\r\n                    this._sy = this.newSy();\r\n                    return true;\r\n                case 'lyrics':\r\n                    this._sy = this.newSy();\r\n                    let lyrics = new Lyrics();\r\n                    lyrics.startBar = 0;\r\n                    lyrics.text = '';\r\n                    if (this._sy === AlphaTexSymbols.Number) {\r\n                        lyrics.startBar = this._syData;\r\n                        this._sy = this.newSy();\r\n                    }\r\n                    if (this._sy === AlphaTexSymbols.String) {\r\n                        lyrics.text = this._syData;\r\n                        this._sy = this.newSy();\r\n                    }\r\n                    else {\r\n                        this.error('lyrics', AlphaTexSymbols.String, true);\r\n                    }\r\n                    this._lyrics.get(this._currentTrack.index).push(lyrics);\r\n                    return true;\r\n                case 'chord':\r\n                    this._sy = this.newSy();\r\n                    let chord = new Chord();\r\n                    this.chordProperties(chord);\r\n                    if (this._sy === AlphaTexSymbols.String) {\r\n                        chord.name = this._syData;\r\n                        this._sy = this.newSy();\r\n                    }\r\n                    else {\r\n                        this.error('chord-name', AlphaTexSymbols.Number, true);\r\n                    }\r\n                    for (let i = 0; i < this._currentStaff.tuning.length; i++) {\r\n                        if (this._sy === AlphaTexSymbols.Number) {\r\n                            chord.strings.push(this._syData);\r\n                        }\r\n                        else if (this._sy === AlphaTexSymbols.String && this._syData.toLowerCase() === 'x') {\r\n                            chord.strings.push(-1);\r\n                        }\r\n                        this._sy = this.newSy();\r\n                    }\r\n                    this._currentStaff.addChord(this.getChordId(this._currentStaff, chord.name), chord);\r\n                    return true;\r\n                default:\r\n                    return false;\r\n            }\r\n        }\r\n        chordProperties(chord) {\r\n            if (this._sy !== AlphaTexSymbols.LBrace) {\r\n                return;\r\n            }\r\n            this._sy = this.newSy();\r\n            while (this._sy === AlphaTexSymbols.String) {\r\n                switch (this._syData.toLowerCase()) {\r\n                    case 'firstfret':\r\n                        this._sy = this.newSy();\r\n                        switch (this._sy) {\r\n                            case AlphaTexSymbols.Number:\r\n                                chord.firstFret = this._syData;\r\n                                break;\r\n                            default:\r\n                                this.error('chord-firstfret', AlphaTexSymbols.Number, true);\r\n                                break;\r\n                        }\r\n                        this._sy = this.newSy();\r\n                        break;\r\n                    case 'showdiagram':\r\n                        this._sy = this.newSy();\r\n                        switch (this._sy) {\r\n                            case AlphaTexSymbols.String:\r\n                                chord.showDiagram = this._syData.toLowerCase() !== 'false';\r\n                                break;\r\n                            case AlphaTexSymbols.Number:\r\n                                chord.showDiagram = this._syData !== 0;\r\n                                break;\r\n                            default:\r\n                                this.error('chord-showdiagram', AlphaTexSymbols.String, true);\r\n                                break;\r\n                        }\r\n                        this._sy = this.newSy();\r\n                        break;\r\n                    case 'showfingering':\r\n                        this._sy = this.newSy();\r\n                        switch (this._sy) {\r\n                            case AlphaTexSymbols.String:\r\n                                chord.showDiagram = this._syData.toLowerCase() !== 'false';\r\n                                break;\r\n                            case AlphaTexSymbols.Number:\r\n                                chord.showFingering = this._syData !== 0;\r\n                                break;\r\n                            default:\r\n                                this.error('chord-showfingering', AlphaTexSymbols.String, true);\r\n                                break;\r\n                        }\r\n                        this._sy = this.newSy();\r\n                        break;\r\n                    case 'showname':\r\n                        this._sy = this.newSy();\r\n                        switch (this._sy) {\r\n                            case AlphaTexSymbols.String:\r\n                                chord.showName = this._syData.toLowerCase() !== 'false';\r\n                                break;\r\n                            case AlphaTexSymbols.Number:\r\n                                chord.showName = this._syData !== 0;\r\n                                break;\r\n                            default:\r\n                                this.error('chord-showname', AlphaTexSymbols.String, true);\r\n                                break;\r\n                        }\r\n                        this._sy = this.newSy();\r\n                        break;\r\n                    case 'barre':\r\n                        this._sy = this.newSy();\r\n                        while (this._sy === AlphaTexSymbols.Number) {\r\n                            chord.barreFrets.push(this._syData);\r\n                            this._sy = this.newSy();\r\n                        }\r\n                        break;\r\n                    default:\r\n                        this.error('chord-properties', AlphaTexSymbols.String, false);\r\n                        break;\r\n                }\r\n            }\r\n            if (this._sy !== AlphaTexSymbols.RBrace) {\r\n                this.error('chord-properties', AlphaTexSymbols.RBrace, true);\r\n            }\r\n            this._sy = this.newSy();\r\n        }\r\n        bars() {\r\n            let anyData = this.bar();\r\n            while (this._sy !== AlphaTexSymbols.Eof) {\r\n                // read pipe from last bar\r\n                if (this._sy === AlphaTexSymbols.Pipe) {\r\n                    this._sy = this.newSy();\r\n                    this.bar();\r\n                }\r\n                else if (this._sy === AlphaTexSymbols.MetaCommand) {\r\n                    this.bar();\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            return anyData;\r\n        }\r\n        trackStaffMeta() {\r\n            let anyMeta = false;\r\n            if (this._sy === AlphaTexSymbols.MetaCommand) {\r\n                anyMeta = true;\r\n                let syData = this._syData.toLowerCase();\r\n                if (syData === 'track') {\r\n                    this._staffHasExplicitTuning = false;\r\n                    this._staffTuningApplied = false;\r\n                    this._sy = this.newSy();\r\n                    // new track starting? - if no masterbars it's the \\track of the initial track.\r\n                    if (this._score.masterBars.length > 0) {\r\n                        this.newTrack();\r\n                    }\r\n                    // name\r\n                    if (this._sy === AlphaTexSymbols.String) {\r\n                        this._currentTrack.name = this._syData;\r\n                        this._sy = this.newSy();\r\n                    }\r\n                    // short name\r\n                    if (this._sy === AlphaTexSymbols.String) {\r\n                        this._currentTrack.shortName = this._syData;\r\n                        this._sy = this.newSy();\r\n                    }\r\n                }\r\n                if (this._sy === AlphaTexSymbols.MetaCommand) {\r\n                    syData = this._syData.toLowerCase();\r\n                    if (syData === 'staff') {\r\n                        this._staffHasExplicitTuning = false;\r\n                        this._staffTuningApplied = false;\r\n                        this._sy = this.newSy();\r\n                        if (this._currentTrack.staves[0].bars.length > 0) {\r\n                            this._currentTrack.ensureStaveCount(this._currentTrack.staves.length + 1);\r\n                            this._currentStaff = this._currentTrack.staves[this._currentTrack.staves.length - 1];\r\n                            this._currentDynamics = DynamicValue.F;\r\n                        }\r\n                        this.staffProperties();\r\n                    }\r\n                }\r\n            }\r\n            return anyMeta;\r\n        }\r\n        staffProperties() {\r\n            if (this._sy !== AlphaTexSymbols.LBrace) {\r\n                return;\r\n            }\r\n            this._sy = this.newSy();\r\n            let showStandardNotation = false;\r\n            let showTabs = false;\r\n            while (this._sy === AlphaTexSymbols.String) {\r\n                switch (this._syData.toLowerCase()) {\r\n                    case 'score':\r\n                        showStandardNotation = true;\r\n                        this._sy = this.newSy();\r\n                        break;\r\n                    case 'tabs':\r\n                        showTabs = true;\r\n                        this._sy = this.newSy();\r\n                        break;\r\n                    default:\r\n                        this.error('staff-properties', AlphaTexSymbols.String, false);\r\n                        break;\r\n                }\r\n            }\r\n            if (showStandardNotation || showTabs) {\r\n                this._currentStaff.showStandardNotation = showStandardNotation;\r\n                this._currentStaff.showTablature = showTabs;\r\n            }\r\n            if (this._sy !== AlphaTexSymbols.RBrace) {\r\n                this.error('staff-properties', AlphaTexSymbols.RBrace, true);\r\n            }\r\n            this._sy = this.newSy();\r\n        }\r\n        bar() {\r\n            const anyStaffMeta = this.trackStaffMeta();\r\n            let bar = this.newBar(this._currentStaff);\r\n            if (this._currentStaff.bars.length > this._score.masterBars.length) {\r\n                let master = new MasterBar();\r\n                this._score.addMasterBar(master);\r\n                if (master.index > 0) {\r\n                    master.keySignature = master.previousMasterBar.keySignature;\r\n                    master.keySignatureType = master.previousMasterBar.keySignatureType;\r\n                    master.timeSignatureDenominator = master.previousMasterBar.timeSignatureDenominator;\r\n                    master.timeSignatureNumerator = master.previousMasterBar.timeSignatureNumerator;\r\n                    master.tripletFeel = master.previousMasterBar.tripletFeel;\r\n                }\r\n            }\r\n            const anyBarMeta = this.barMeta(bar);\r\n            // detect tuning for staff\r\n            if (!this._staffTuningApplied && !this._staffHasExplicitTuning) {\r\n                const program = this._currentTrack.playbackInfo.program;\r\n                // reset to defaults\r\n                this._currentStaff.displayTranspositionPitch = 0;\r\n                this._currentStaff.stringTuning.tunings = [];\r\n                if (program == 15 || program >= 24 && program <= 31) {\r\n                    // dulcimer+guitar E4 B3 G3 D3 A2 E2\r\n                    this._currentStaff.displayTranspositionPitch = -12;\r\n                    this._currentStaff.stringTuning.tunings = Tuning.getDefaultTuningFor(6).tunings;\r\n                }\r\n                else if (program >= 32 && program <= 39) {\r\n                    // bass G2 D2 A1 E1\r\n                    this._currentStaff.displayTranspositionPitch = -12;\r\n                    this._currentStaff.stringTuning.tunings = [43, 38, 33, 28];\r\n                }\r\n                else if (program == 40 || program == 44 || program == 45 || program == 48 || program == 49 || program == 50 || program == 51) {\r\n                    // violin E3 A3 D3 G2\r\n                    this._currentStaff.stringTuning.tunings = [52, 57, 50, 43];\r\n                }\r\n                else if (program == 41) {\r\n                    // viola A3 D3 G2 C2\r\n                    this._currentStaff.stringTuning.tunings = [57, 50, 43, 36];\r\n                }\r\n                else if (program == 42) {\r\n                    // cello A2 D2 G1 C1\r\n                    this._currentStaff.stringTuning.tunings = [45, 38, 31, 24];\r\n                }\r\n                else if (program == 43) {\r\n                    // contrabass\r\n                    // G2 D2 A1 E1\r\n                    this._currentStaff.displayTranspositionPitch = -12;\r\n                    this._currentStaff.stringTuning.tunings = [43, 38, 33, 28];\r\n                }\r\n                else if (program == 105) {\r\n                    // banjo\r\n                    // D3 B2 G2 D2 G3\r\n                    this._currentStaff.stringTuning.tunings = [50, 47, 43, 38, 55];\r\n                }\r\n                else if (program == 106) {\r\n                    // shamisen\r\n                    // A3 E3 A2\r\n                    this._currentStaff.stringTuning.tunings = [57, 52, 45];\r\n                }\r\n                else if (program == 107) {\r\n                    // koto\r\n                    // E3 A2 D2 G1\r\n                    this._currentStaff.stringTuning.tunings = [52, 45, 38, 31];\r\n                }\r\n                else if (program == 110) {\r\n                    // Fiddle\r\n                    // E4 A3 D3 G2\r\n                    this._currentStaff.stringTuning.tunings = [64, 57, 50, 43];\r\n                }\r\n                this._staffTuningApplied = true;\r\n            }\r\n            let anyBeatData = false;\r\n            let voice = bar.voices[0];\r\n            while (this._sy !== AlphaTexSymbols.Pipe && this._sy !== AlphaTexSymbols.Eof) {\r\n                if (!this.beat(voice)) {\r\n                    break;\r\n                }\r\n                anyBeatData = true;\r\n            }\r\n            if (voice.beats.length === 0) {\r\n                let emptyBeat = new Beat();\r\n                emptyBeat.isEmpty = true;\r\n                voice.addBeat(emptyBeat);\r\n            }\r\n            return anyStaffMeta || anyBarMeta || anyBeatData;\r\n        }\r\n        newBar(staff) {\r\n            let bar = new Bar();\r\n            staff.addBar(bar);\r\n            if (bar.index > 0) {\r\n                bar.clef = bar.previousBar.clef;\r\n            }\r\n            let voice = new Voice();\r\n            bar.addVoice(voice);\r\n            return bar;\r\n        }\r\n        beat(voice) {\r\n            // duration specifier?\r\n            this.beatDuration();\r\n            let beat = new Beat();\r\n            voice.addBeat(beat);\r\n            // notes\r\n            if (this._sy === AlphaTexSymbols.LParensis) {\r\n                this._sy = this.newSy();\r\n                this.note(beat);\r\n                while (this._sy !== AlphaTexSymbols.RParensis && this._sy !== AlphaTexSymbols.Eof) {\r\n                    if (!this.note(beat)) {\r\n                        break;\r\n                    }\r\n                }\r\n                if (this._sy !== AlphaTexSymbols.RParensis) {\r\n                    this.error('note-list', AlphaTexSymbols.RParensis, true);\r\n                }\r\n                this._sy = this.newSy();\r\n            }\r\n            else if (this._sy === AlphaTexSymbols.String && this._syData.toLowerCase() === 'r') {\r\n                // rest voice -> no notes\r\n                this._sy = this.newSy();\r\n            }\r\n            else {\r\n                if (!this.note(beat)) {\r\n                    voice.beats.splice(voice.beats.length - 1, 1);\r\n                    return false;\r\n                }\r\n            }\r\n            // new duration\r\n            if (this._sy === AlphaTexSymbols.Dot) {\r\n                this._allowNegatives = true;\r\n                this._sy = this.newSy();\r\n                this._allowNegatives = false;\r\n                if (this._sy !== AlphaTexSymbols.Number) {\r\n                    this.error('duration', AlphaTexSymbols.Number, true);\r\n                }\r\n                this._currentDuration = this.parseDuration(this._syData);\r\n                this._sy = this.newSy();\r\n            }\r\n            beat.duration = this._currentDuration;\r\n            beat.dynamics = this._currentDynamics;\r\n            if (this._currentTuplet !== 1 && !beat.hasTuplet) {\r\n                this.applyTuplet(beat, this._currentTuplet);\r\n            }\r\n            // beat multiplier (repeat beat n times)\r\n            let beatRepeat = 1;\r\n            if (this._sy === AlphaTexSymbols.Multiply) {\r\n                this._sy = this.newSy();\r\n                // multiplier count\r\n                if (this._sy !== AlphaTexSymbols.Number) {\r\n                    this.error('multiplier', AlphaTexSymbols.Number, true);\r\n                }\r\n                else {\r\n                    beatRepeat = this._syData;\r\n                }\r\n                this._sy = this.newSy();\r\n            }\r\n            this.beatEffects(beat);\r\n            for (let i = 0; i < beatRepeat - 1; i++) {\r\n                voice.addBeat(BeatCloner.clone(beat));\r\n            }\r\n            return true;\r\n        }\r\n        beatDuration() {\r\n            if (this._sy !== AlphaTexSymbols.DoubleDot) {\r\n                return;\r\n            }\r\n            this._allowNegatives = true;\r\n            this._sy = this.newSy();\r\n            this._allowNegatives = false;\r\n            if (this._sy !== AlphaTexSymbols.Number) {\r\n                this.error('duration', AlphaTexSymbols.Number, true);\r\n            }\r\n            this._currentDuration = this.parseDuration(this._syData);\r\n            this._currentTuplet = 1;\r\n            this._sy = this.newSy();\r\n            if (this._sy !== AlphaTexSymbols.LBrace) {\r\n                return;\r\n            }\r\n            this._sy = this.newSy();\r\n            while (this._sy === AlphaTexSymbols.String) {\r\n                let effect = this._syData.toLowerCase();\r\n                switch (effect) {\r\n                    case 'tu':\r\n                        this._sy = this.newSy();\r\n                        if (this._sy !== AlphaTexSymbols.Number) {\r\n                            this.error('duration-tuplet', AlphaTexSymbols.Number, true);\r\n                        }\r\n                        this._currentTuplet = this._syData;\r\n                        this._sy = this.newSy();\r\n                        break;\r\n                    default:\r\n                        this.error('beat-duration', AlphaTexSymbols.String, false);\r\n                        break;\r\n                }\r\n            }\r\n            if (this._sy !== AlphaTexSymbols.RBrace) {\r\n                this.error('beat-duration', AlphaTexSymbols.RBrace, true);\r\n            }\r\n            this._sy = this.newSy();\r\n        }\r\n        beatEffects(beat) {\r\n            if (this._sy !== AlphaTexSymbols.LBrace) {\r\n                return;\r\n            }\r\n            this._sy = this.newSy();\r\n            while (this._sy === AlphaTexSymbols.String) {\r\n                this._syData = this._syData.toLowerCase();\r\n                if (!this.applyBeatEffect(beat)) {\r\n                    this.error('beat-effects', AlphaTexSymbols.String, false);\r\n                }\r\n            }\r\n            if (this._sy !== AlphaTexSymbols.RBrace) {\r\n                this.error('beat-effects', AlphaTexSymbols.RBrace, true);\r\n            }\r\n            this._sy = this.newSy();\r\n        }\r\n        /**\r\n         * Tries to apply a beat effect to the given beat.\r\n         * @returns true if a effect could be applied, otherwise false\r\n         */\r\n        applyBeatEffect(beat) {\r\n            let syData = this._syData.toLowerCase();\r\n            if (syData === 'f') {\r\n                beat.fadeIn = true;\r\n                this._sy = this.newSy();\r\n                return true;\r\n            }\r\n            if (syData === 'v') {\r\n                beat.vibrato = VibratoType.Slight;\r\n                this._sy = this.newSy();\r\n                return true;\r\n            }\r\n            if (syData === 's') {\r\n                beat.slap = true;\r\n                this._sy = this.newSy();\r\n                return true;\r\n            }\r\n            if (syData === 'p') {\r\n                beat.pop = true;\r\n                this._sy = this.newSy();\r\n                return true;\r\n            }\r\n            if (syData === 'tt') {\r\n                beat.tap = true;\r\n                this._sy = this.newSy();\r\n                return true;\r\n            }\r\n            if (syData === 'dd') {\r\n                beat.dots = 2;\r\n                this._sy = this.newSy();\r\n                return true;\r\n            }\r\n            if (syData === 'd') {\r\n                beat.dots = 1;\r\n                this._sy = this.newSy();\r\n                return true;\r\n            }\r\n            if (syData === 'su') {\r\n                beat.pickStroke = PickStroke.Up;\r\n                this._sy = this.newSy();\r\n                return true;\r\n            }\r\n            if (syData === 'sd') {\r\n                beat.pickStroke = PickStroke.Down;\r\n                this._sy = this.newSy();\r\n                return true;\r\n            }\r\n            if (syData === 'tu') {\r\n                this._sy = this.newSy();\r\n                if (this._sy !== AlphaTexSymbols.Number) {\r\n                    this.error('tuplet', AlphaTexSymbols.Number, true);\r\n                    return false;\r\n                }\r\n                this.applyTuplet(beat, this._syData);\r\n                this._sy = this.newSy();\r\n                return true;\r\n            }\r\n            if (syData === 'tb' || syData === 'tbe') {\r\n                let exact = syData === 'tbe';\r\n                // read points\r\n                this._sy = this.newSy();\r\n                if (this._sy !== AlphaTexSymbols.LParensis) {\r\n                    this.error('tremolobar-effect', AlphaTexSymbols.LParensis, true);\r\n                    return false;\r\n                }\r\n                this._allowNegatives = true;\r\n                this._sy = this.newSy();\r\n                while (this._sy !== AlphaTexSymbols.RParensis && this._sy !== AlphaTexSymbols.Eof) {\r\n                    let offset = 0;\r\n                    let value = 0;\r\n                    if (exact) {\r\n                        if (this._sy !== AlphaTexSymbols.Number) {\r\n                            this.error('tremolobar-effect', AlphaTexSymbols.Number, true);\r\n                            return false;\r\n                        }\r\n                        offset = this._syData;\r\n                        this._sy = this.newSy();\r\n                        if (this._sy !== AlphaTexSymbols.Number) {\r\n                            this.error('tremolobar-effect', AlphaTexSymbols.Number, true);\r\n                            return false;\r\n                        }\r\n                        value = this._syData;\r\n                    }\r\n                    else {\r\n                        if (this._sy !== AlphaTexSymbols.Number) {\r\n                            this.error('tremolobar-effect', AlphaTexSymbols.Number, true);\r\n                            return false;\r\n                        }\r\n                        offset = 0;\r\n                        value = this._syData;\r\n                    }\r\n                    beat.addWhammyBarPoint(new BendPoint(offset, value));\r\n                    this._sy = this.newSy();\r\n                }\r\n                while (beat.whammyBarPoints.length > 60) {\r\n                    beat.removeWhammyBarPoint(beat.whammyBarPoints.length - 1);\r\n                }\r\n                // set positions\r\n                if (!exact) {\r\n                    let count = beat.whammyBarPoints.length;\r\n                    let step = (60 / count) | 0;\r\n                    let i = 0;\r\n                    while (i < count) {\r\n                        beat.whammyBarPoints[i].offset = Math.min(60, i * step);\r\n                        i++;\r\n                    }\r\n                }\r\n                else {\r\n                    beat.whammyBarPoints.sort((a, b) => {\r\n                        return a.offset - b.offset;\r\n                    });\r\n                }\r\n                this._allowNegatives = false;\r\n                if (this._sy !== AlphaTexSymbols.RParensis) {\r\n                    this.error('tremolobar-effect', AlphaTexSymbols.RParensis, true);\r\n                    return false;\r\n                }\r\n                this._sy = this.newSy();\r\n                return true;\r\n            }\r\n            if (syData === 'ch') {\r\n                this._sy = this.newSy();\r\n                let chordName = this._syData;\r\n                let chordId = this.getChordId(this._currentStaff, chordName);\r\n                if (!this._currentStaff.chords.has(chordId)) {\r\n                    let chord = new Chord();\r\n                    chord.showDiagram = false;\r\n                    chord.name = chordName;\r\n                    this._currentStaff.addChord(chordId, chord);\r\n                }\r\n                beat.chordId = chordId;\r\n                this._sy = this.newSy();\r\n                return true;\r\n            }\r\n            if (syData === 'gr') {\r\n                this._sy = this.newSy();\r\n                if (this._syData.toLowerCase() === 'ob') {\r\n                    beat.graceType = GraceType.OnBeat;\r\n                    this._sy = this.newSy();\r\n                }\r\n                else if (this._syData.toLowerCase() === 'b') {\r\n                    beat.graceType = GraceType.BendGrace;\r\n                    this._sy = this.newSy();\r\n                }\r\n                else {\r\n                    beat.graceType = GraceType.BeforeBeat;\r\n                }\r\n                return true;\r\n            }\r\n            if (syData === 'dy') {\r\n                this.newSy();\r\n                switch (this._syData.toLowerCase()) {\r\n                    case 'ppp':\r\n                        beat.dynamics = DynamicValue.PPP;\r\n                        break;\r\n                    case 'pp':\r\n                        beat.dynamics = DynamicValue.PP;\r\n                        break;\r\n                    case 'p':\r\n                        beat.dynamics = DynamicValue.P;\r\n                        break;\r\n                    case 'mp':\r\n                        beat.dynamics = DynamicValue.MP;\r\n                        break;\r\n                    case 'mf':\r\n                        beat.dynamics = DynamicValue.MF;\r\n                        break;\r\n                    case 'f':\r\n                        beat.dynamics = DynamicValue.F;\r\n                        break;\r\n                    case 'ff':\r\n                        beat.dynamics = DynamicValue.FF;\r\n                        break;\r\n                    case 'fff':\r\n                        beat.dynamics = DynamicValue.FFF;\r\n                        break;\r\n                }\r\n                this._currentDynamics = beat.dynamics;\r\n                this.newSy();\r\n                return true;\r\n            }\r\n            if (syData === 'cre') {\r\n                beat.crescendo = CrescendoType.Crescendo;\r\n                this.newSy();\r\n                return true;\r\n            }\r\n            if (syData === 'dec') {\r\n                beat.crescendo = CrescendoType.Decrescendo;\r\n                this.newSy();\r\n                return true;\r\n            }\r\n            if (syData === 'tp') {\r\n                this._sy = this.newSy();\r\n                let duration = Duration.Eighth;\r\n                if (this._sy === AlphaTexSymbols.Number) {\r\n                    switch (this._syData) {\r\n                        case 8:\r\n                            duration = Duration.Eighth;\r\n                            break;\r\n                        case 16:\r\n                            duration = Duration.Sixteenth;\r\n                            break;\r\n                        case 32:\r\n                            duration = Duration.ThirtySecond;\r\n                            break;\r\n                        default:\r\n                            duration = Duration.Eighth;\r\n                            break;\r\n                    }\r\n                    this._sy = this.newSy();\r\n                }\r\n                beat.tremoloSpeed = duration;\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        getChordId(currentStaff, chordName) {\r\n            return chordName.toLowerCase() + currentStaff.index + currentStaff.track.index;\r\n        }\r\n        applyTuplet(beat, tuplet) {\r\n            switch (tuplet) {\r\n                case 3:\r\n                    beat.tupletNumerator = 3;\r\n                    beat.tupletDenominator = 2;\r\n                    break;\r\n                case 5:\r\n                    beat.tupletNumerator = 5;\r\n                    beat.tupletDenominator = 4;\r\n                    break;\r\n                case 6:\r\n                    beat.tupletNumerator = 6;\r\n                    beat.tupletDenominator = 4;\r\n                    break;\r\n                case 7:\r\n                    beat.tupletNumerator = 7;\r\n                    beat.tupletDenominator = 4;\r\n                    break;\r\n                case 9:\r\n                    beat.tupletNumerator = 9;\r\n                    beat.tupletDenominator = 8;\r\n                    break;\r\n                case 10:\r\n                    beat.tupletNumerator = 10;\r\n                    beat.tupletDenominator = 8;\r\n                    break;\r\n                case 11:\r\n                    beat.tupletNumerator = 11;\r\n                    beat.tupletDenominator = 8;\r\n                    break;\r\n                case 12:\r\n                    beat.tupletNumerator = 12;\r\n                    beat.tupletDenominator = 8;\r\n                    break;\r\n                default:\r\n                    beat.tupletNumerator = 1;\r\n                    beat.tupletDenominator = 1;\r\n                    break;\r\n            }\r\n        }\r\n        note(beat) {\r\n            // fret.string\r\n            let isDead = false;\r\n            let isTie = false;\r\n            let fret = -1;\r\n            let octave = -1;\r\n            let tone = -1;\r\n            switch (this._sy) {\r\n                case AlphaTexSymbols.Number:\r\n                    fret = this._syData;\r\n                    break;\r\n                case AlphaTexSymbols.String:\r\n                    isDead = this._syData === 'x';\r\n                    isTie = this._syData === '-';\r\n                    if (isTie || isDead) {\r\n                        fret = 0;\r\n                    }\r\n                    else {\r\n                        this.error('note-fret', AlphaTexSymbols.Number, true);\r\n                    }\r\n                    break;\r\n                case AlphaTexSymbols.Tuning:\r\n                    let tuning = this._syData;\r\n                    octave = tuning.octave;\r\n                    tone = tuning.noteValue;\r\n                    break;\r\n                default:\r\n                    return false;\r\n            }\r\n            this._sy = this.newSy(); // Fret done\r\n            let isFretted = octave === -1 && this._currentStaff.tuning.length > 0;\r\n            let noteString = -1;\r\n            if (isFretted) {\r\n                // Fret [Dot] String\r\n                if (this._sy !== AlphaTexSymbols.Dot) {\r\n                    this.error('note', AlphaTexSymbols.Dot, true);\r\n                }\r\n                this._sy = this.newSy(); // dot done\r\n                if (this._sy !== AlphaTexSymbols.Number) {\r\n                    this.error('note-string', AlphaTexSymbols.Number, true);\r\n                }\r\n                noteString = this._syData;\r\n                if (noteString < 1 || noteString > this._currentStaff.tuning.length) {\r\n                    this.error('note-string', AlphaTexSymbols.Number, false);\r\n                }\r\n                this._sy = this.newSy(); // string done\r\n            }\r\n            // read effects\r\n            let note = new Note();\r\n            if (isFretted) {\r\n                note.string = this._currentStaff.tuning.length - (noteString - 1);\r\n                note.isDead = isDead;\r\n                note.isTieDestination = isTie;\r\n                if (!isTie) {\r\n                    note.fret = fret;\r\n                }\r\n            }\r\n            else {\r\n                note.octave = octave;\r\n                note.tone = tone;\r\n                note.isTieDestination = isTie;\r\n            }\r\n            beat.addNote(note);\r\n            this.noteEffects(note);\r\n            return true;\r\n        }\r\n        noteEffects(note) {\r\n            if (this._sy !== AlphaTexSymbols.LBrace) {\r\n                return;\r\n            }\r\n            this._sy = this.newSy();\r\n            while (this._sy === AlphaTexSymbols.String) {\r\n                let syData = this._syData.toLowerCase();\r\n                this._syData = syData;\r\n                if (syData === 'b' || syData === 'be') {\r\n                    let exact = this._syData === 'be';\r\n                    // read points\r\n                    this._sy = this.newSy();\r\n                    if (this._sy !== AlphaTexSymbols.LParensis) {\r\n                        this.error('bend-effect', AlphaTexSymbols.LParensis, true);\r\n                    }\r\n                    this._sy = this.newSy();\r\n                    while (this._sy !== AlphaTexSymbols.RParensis && this._sy !== AlphaTexSymbols.Eof) {\r\n                        let offset = 0;\r\n                        let value = 0;\r\n                        if (exact) {\r\n                            if (this._sy !== AlphaTexSymbols.Number) {\r\n                                this.error('bend-effect-value', AlphaTexSymbols.Number, true);\r\n                            }\r\n                            offset = this._syData;\r\n                            this._sy = this.newSy();\r\n                            if (this._sy !== AlphaTexSymbols.Number) {\r\n                                this.error('bend-effect-value', AlphaTexSymbols.Number, true);\r\n                            }\r\n                            value = this._syData;\r\n                        }\r\n                        else {\r\n                            if (this._sy !== AlphaTexSymbols.Number) {\r\n                                this.error('bend-effect-value', AlphaTexSymbols.Number, true);\r\n                            }\r\n                            value = this._syData;\r\n                        }\r\n                        note.addBendPoint(new BendPoint(offset, value));\r\n                        this._sy = this.newSy();\r\n                    }\r\n                    while (note.bendPoints.length > 60) {\r\n                        note.bendPoints.splice(note.bendPoints.length - 1, 1);\r\n                    }\r\n                    // set positions\r\n                    if (exact) {\r\n                        note.bendPoints.sort((a, b) => {\r\n                            return a.offset - b.offset;\r\n                        });\r\n                    }\r\n                    else {\r\n                        let count = note.bendPoints.length;\r\n                        let step = (60 / (count - 1)) | 0;\r\n                        let i = 0;\r\n                        while (i < count) {\r\n                            note.bendPoints[i].offset = Math.min(60, i * step);\r\n                            i++;\r\n                        }\r\n                    }\r\n                    if (this._sy !== AlphaTexSymbols.RParensis) {\r\n                        this.error('bend-effect', AlphaTexSymbols.RParensis, true);\r\n                    }\r\n                    this._sy = this.newSy();\r\n                }\r\n                else if (syData === 'nh') {\r\n                    note.harmonicType = HarmonicType.Natural;\r\n                    this._sy = this.newSy();\r\n                }\r\n                else if (syData === 'ah') {\r\n                    // todo: Artificial Key\r\n                    note.harmonicType = HarmonicType.Artificial;\r\n                    this._sy = this.newSy();\r\n                }\r\n                else if (syData === 'th') {\r\n                    // todo: store tapped fret in data\r\n                    note.harmonicType = HarmonicType.Tap;\r\n                    this._sy = this.newSy();\r\n                }\r\n                else if (syData === 'ph') {\r\n                    note.harmonicType = HarmonicType.Pinch;\r\n                    this._sy = this.newSy();\r\n                }\r\n                else if (syData === 'sh') {\r\n                    note.harmonicType = HarmonicType.Semi;\r\n                    this._sy = this.newSy();\r\n                }\r\n                else if (syData === 'tr') {\r\n                    this._sy = this.newSy();\r\n                    if (this._sy !== AlphaTexSymbols.Number) {\r\n                        this.error('trill-effect', AlphaTexSymbols.Number, true);\r\n                    }\r\n                    let fret = this._syData;\r\n                    this._sy = this.newSy();\r\n                    let duration = Duration.Sixteenth;\r\n                    if (this._sy === AlphaTexSymbols.Number) {\r\n                        switch (this._syData) {\r\n                            case 16:\r\n                                duration = Duration.Sixteenth;\r\n                                break;\r\n                            case 32:\r\n                                duration = Duration.ThirtySecond;\r\n                                break;\r\n                            case 64:\r\n                                duration = Duration.SixtyFourth;\r\n                                break;\r\n                            default:\r\n                                duration = Duration.Sixteenth;\r\n                                break;\r\n                        }\r\n                        this._sy = this.newSy();\r\n                    }\r\n                    note.trillValue = fret + note.stringTuning;\r\n                    note.trillSpeed = duration;\r\n                }\r\n                else if (syData === 'v') {\r\n                    this._sy = this.newSy();\r\n                    note.vibrato = VibratoType.Slight;\r\n                }\r\n                else if (syData === 'sl') {\r\n                    this._sy = this.newSy();\r\n                    note.slideOutType = SlideOutType.Legato;\r\n                }\r\n                else if (syData === 'ss') {\r\n                    this._sy = this.newSy();\r\n                    note.slideOutType = SlideOutType.Shift;\r\n                }\r\n                else if (syData === 'sib') {\r\n                    this._sy = this.newSy();\r\n                    note.slideInType = SlideInType.IntoFromBelow;\r\n                }\r\n                else if (syData === 'sia') {\r\n                    this._sy = this.newSy();\r\n                    note.slideInType = SlideInType.IntoFromAbove;\r\n                }\r\n                else if (syData === 'sou') {\r\n                    this._sy = this.newSy();\r\n                    note.slideOutType = SlideOutType.OutUp;\r\n                }\r\n                else if (syData === 'sod') {\r\n                    this._sy = this.newSy();\r\n                    note.slideOutType = SlideOutType.OutDown;\r\n                }\r\n                else if (syData === 'psd') {\r\n                    this._sy = this.newSy();\r\n                    note.slideOutType = SlideOutType.PickSlideDown;\r\n                }\r\n                else if (syData === 'psu') {\r\n                    this._sy = this.newSy();\r\n                    note.slideOutType = SlideOutType.PickSlideUp;\r\n                }\r\n                else if (syData === 'h') {\r\n                    this._sy = this.newSy();\r\n                    note.isHammerPullOrigin = true;\r\n                }\r\n                else if (syData === 'lht') {\r\n                    this._sy = this.newSy();\r\n                    note.isLeftHandTapped = true;\r\n                }\r\n                else if (syData === 'g') {\r\n                    this._sy = this.newSy();\r\n                    note.isGhost = true;\r\n                }\r\n                else if (syData === 'ac') {\r\n                    this._sy = this.newSy();\r\n                    note.accentuated = AccentuationType.Normal;\r\n                }\r\n                else if (syData === 'hac') {\r\n                    this._sy = this.newSy();\r\n                    note.accentuated = AccentuationType.Heavy;\r\n                }\r\n                else if (syData === 'pm') {\r\n                    this._sy = this.newSy();\r\n                    note.isPalmMute = true;\r\n                }\r\n                else if (syData === 'st') {\r\n                    this._sy = this.newSy();\r\n                    note.isStaccato = true;\r\n                }\r\n                else if (syData === 'lr') {\r\n                    this._sy = this.newSy();\r\n                    note.isLetRing = true;\r\n                }\r\n                else if (syData === 'x') {\r\n                    this._sy = this.newSy();\r\n                    note.fret = 0;\r\n                    note.isDead = true;\r\n                }\r\n                else if (syData === '-' || syData === 't') {\r\n                    this._sy = this.newSy();\r\n                    note.isTieDestination = true;\r\n                }\r\n                else if (syData === 'lf') {\r\n                    this._sy = this.newSy();\r\n                    let finger = Fingers.Thumb;\r\n                    if (this._sy === AlphaTexSymbols.Number) {\r\n                        finger = this.toFinger(this._syData);\r\n                        this._sy = this.newSy();\r\n                    }\r\n                    note.leftHandFinger = finger;\r\n                }\r\n                else if (syData === 'rf') {\r\n                    this._sy = this.newSy();\r\n                    let finger = Fingers.Thumb;\r\n                    if (this._sy === AlphaTexSymbols.Number) {\r\n                        finger = this.toFinger(this._syData);\r\n                        this._sy = this.newSy();\r\n                    }\r\n                    note.rightHandFinger = finger;\r\n                }\r\n                else if (this.applyBeatEffect(note.beat)) ;\r\n                else {\r\n                    this.error(syData, AlphaTexSymbols.String, false);\r\n                }\r\n            }\r\n            if (this._sy !== AlphaTexSymbols.RBrace) {\r\n                this.error('note-effect', AlphaTexSymbols.RBrace, false);\r\n            }\r\n            this._sy = this.newSy();\r\n        }\r\n        toFinger(syData) {\r\n            switch (syData) {\r\n                case 1:\r\n                    return Fingers.Thumb;\r\n                case 2:\r\n                    return Fingers.IndexFinger;\r\n                case 3:\r\n                    return Fingers.MiddleFinger;\r\n                case 4:\r\n                    return Fingers.AnnularFinger;\r\n                case 5:\r\n                    return Fingers.LittleFinger;\r\n            }\r\n            return Fingers.Thumb;\r\n        }\r\n        parseDuration(duration) {\r\n            switch (duration) {\r\n                case -4:\r\n                    return Duration.QuadrupleWhole;\r\n                case -2:\r\n                    return Duration.DoubleWhole;\r\n                case 1:\r\n                    return Duration.Whole;\r\n                case 2:\r\n                    return Duration.Half;\r\n                case 4:\r\n                    return Duration.Quarter;\r\n                case 8:\r\n                    return Duration.Eighth;\r\n                case 16:\r\n                    return Duration.Sixteenth;\r\n                case 32:\r\n                    return Duration.ThirtySecond;\r\n                case 64:\r\n                    return Duration.SixtyFourth;\r\n                case 128:\r\n                    return Duration.OneHundredTwentyEighth;\r\n                default:\r\n                    return Duration.Quarter;\r\n            }\r\n        }\r\n        barMeta(bar) {\r\n            let anyMeta = false;\r\n            let master = bar.masterBar;\r\n            while (this._sy === AlphaTexSymbols.MetaCommand) {\r\n                anyMeta = true;\r\n                let syData = this._syData.toLowerCase();\r\n                if (syData === 'ts') {\r\n                    this._sy = this.newSy();\r\n                    if (this._sy !== AlphaTexSymbols.Number) {\r\n                        this.error('timesignature-numerator', AlphaTexSymbols.Number, true);\r\n                    }\r\n                    master.timeSignatureNumerator = this._syData;\r\n                    this._sy = this.newSy();\r\n                    if (this._sy !== AlphaTexSymbols.Number) {\r\n                        this.error('timesignature-denominator', AlphaTexSymbols.Number, true);\r\n                    }\r\n                    master.timeSignatureDenominator = this._syData;\r\n                    this._sy = this.newSy();\r\n                }\r\n                else if (syData === 'ro') {\r\n                    master.isRepeatStart = true;\r\n                    this._sy = this.newSy();\r\n                }\r\n                else if (syData === 'rc') {\r\n                    this._sy = this.newSy();\r\n                    if (this._sy !== AlphaTexSymbols.Number) {\r\n                        this.error('repeatclose', AlphaTexSymbols.Number, true);\r\n                    }\r\n                    master.repeatCount = this._syData;\r\n                    this._sy = this.newSy();\r\n                }\r\n                else if (syData === 'ks') {\r\n                    this._sy = this.newSy();\r\n                    if (this._sy !== AlphaTexSymbols.String) {\r\n                        this.error('keysignature', AlphaTexSymbols.String, true);\r\n                    }\r\n                    master.keySignature = this.parseKeySignature(this._syData.toLowerCase());\r\n                    this._sy = this.newSy();\r\n                }\r\n                else if (syData === 'clef') {\r\n                    this._sy = this.newSy();\r\n                    switch (this._sy) {\r\n                        case AlphaTexSymbols.String:\r\n                            bar.clef = this.parseClefFromString(this._syData.toLowerCase());\r\n                            break;\r\n                        case AlphaTexSymbols.Number:\r\n                            bar.clef = this.parseClefFromInt(this._syData);\r\n                            break;\r\n                        case AlphaTexSymbols.Tuning:\r\n                            let parseResult = this._syData;\r\n                            bar.clef = this.parseClefFromInt(parseResult.realValue);\r\n                            break;\r\n                        default:\r\n                            this.error('clef', AlphaTexSymbols.String, true);\r\n                            break;\r\n                    }\r\n                    this._sy = this.newSy();\r\n                }\r\n                else if (syData === 'tempo') {\r\n                    this._sy = this.newSy();\r\n                    if (this._sy !== AlphaTexSymbols.Number) {\r\n                        this.error('tempo', AlphaTexSymbols.Number, true);\r\n                    }\r\n                    let tempoAutomation = new Automation();\r\n                    tempoAutomation.isLinear = false;\r\n                    tempoAutomation.type = AutomationType.Tempo;\r\n                    tempoAutomation.value = this._syData;\r\n                    master.tempoAutomation = tempoAutomation;\r\n                    this._sy = this.newSy();\r\n                }\r\n                else if (syData === 'section') {\r\n                    this._sy = this.newSy();\r\n                    if (this._sy !== AlphaTexSymbols.String) {\r\n                        this.error('section', AlphaTexSymbols.String, true);\r\n                    }\r\n                    let text = this._syData;\r\n                    this._sy = this.newSy();\r\n                    let marker = '';\r\n                    if (this._sy === AlphaTexSymbols.String) {\r\n                        marker = text;\r\n                        text = this._syData;\r\n                        this._sy = this.newSy();\r\n                    }\r\n                    let section = new Section();\r\n                    section.marker = marker;\r\n                    section.text = text;\r\n                    master.section = section;\r\n                }\r\n                else if (syData === 'tf') {\r\n                    this._allowTuning = false;\r\n                    this._sy = this.newSy();\r\n                    this._allowTuning = true;\r\n                    switch (this._sy) {\r\n                        case AlphaTexSymbols.String:\r\n                            master.tripletFeel = this.parseTripletFeelFromString(this._syData.toLowerCase());\r\n                            break;\r\n                        case AlphaTexSymbols.Number:\r\n                            master.tripletFeel = this.parseTripletFeelFromInt(this._syData);\r\n                            break;\r\n                        default:\r\n                            this.error('triplet-feel', AlphaTexSymbols.String, true);\r\n                            break;\r\n                    }\r\n                    this._sy = this.newSy();\r\n                }\r\n                else if (syData === 'ac') {\r\n                    master.isAnacrusis = true;\r\n                    this._sy = this.newSy();\r\n                }\r\n                else {\r\n                    if (bar.index === 0 && !this.handleStaffMeta()) {\r\n                        this.error('measure-effects', AlphaTexSymbols.String, false);\r\n                    }\r\n                }\r\n            }\r\n            if (master.index === 0 && !master.tempoAutomation) {\r\n                let tempoAutomation = new Automation();\r\n                tempoAutomation.isLinear = false;\r\n                tempoAutomation.type = AutomationType.Tempo;\r\n                tempoAutomation.value = this._score.tempo;\r\n                master.tempoAutomation = tempoAutomation;\r\n            }\r\n            return anyMeta;\r\n        }\r\n    }\r\n    AlphaTexImporter.Eof = 0;\n\n    class TypeConversions {\r\n        static uint16ToInt16(v) {\r\n            TypeConversions._dataView.setUint16(0, v, true);\r\n            return TypeConversions._dataView.getInt16(0, true);\r\n        }\r\n        static int16ToUint32(v) {\r\n            TypeConversions._dataView.setInt16(0, v, true);\r\n            return TypeConversions._dataView.getUint32(0, true);\r\n        }\r\n        static int32ToUint16(v) {\r\n            TypeConversions._dataView.setInt32(0, v, true);\r\n            return TypeConversions._dataView.getUint16(0, true);\r\n        }\r\n        static int32ToInt16(v) {\r\n            TypeConversions._dataView.setInt32(0, v, true);\r\n            return TypeConversions._dataView.getInt16(0, true);\r\n        }\r\n        static int32ToUint32(v) {\r\n            TypeConversions._dataView.setInt32(0, v, true);\r\n            return TypeConversions._dataView.getUint32(0, true);\r\n        }\r\n        static uint8ToInt8(v) {\r\n            TypeConversions._dataView.setUint8(0, v);\r\n            return TypeConversions._dataView.getInt8(0);\r\n        }\r\n    }\r\n    TypeConversions._conversionBuffer = new ArrayBuffer(8);\r\n    TypeConversions._dataView = new DataView(TypeConversions._conversionBuffer);\n\n    class IOHelper {\r\n        static readInt32BE(input) {\r\n            let ch1 = input.readByte();\r\n            let ch2 = input.readByte();\r\n            let ch3 = input.readByte();\r\n            let ch4 = input.readByte();\r\n            return (ch1 << 24) | (ch2 << 16) | (ch3 << 8) | ch4;\r\n        }\r\n        static readInt32LE(input) {\r\n            let ch1 = input.readByte();\r\n            let ch2 = input.readByte();\r\n            let ch3 = input.readByte();\r\n            let ch4 = input.readByte();\r\n            return (ch4 << 24) | (ch3 << 16) | (ch2 << 8) | ch1;\r\n        }\r\n        static readUInt32LE(input) {\r\n            let ch1 = input.readByte();\r\n            let ch2 = input.readByte();\r\n            let ch3 = input.readByte();\r\n            let ch4 = input.readByte();\r\n            return (ch4 << 24) | (ch3 << 16) | (ch2 << 8) | ch1;\r\n        }\r\n        static decodeUInt32LE(data, index) {\r\n            let ch1 = data[index];\r\n            let ch2 = data[index + 1];\r\n            let ch3 = data[index + 2];\r\n            let ch4 = data[index + 3];\r\n            return (ch4 << 24) | (ch3 << 16) | (ch2 << 8) | ch1;\r\n        }\r\n        static readUInt16LE(input) {\r\n            let ch1 = input.readByte();\r\n            let ch2 = input.readByte();\r\n            return TypeConversions.int32ToUint16((ch2 << 8) | ch1);\r\n        }\r\n        static readInt16LE(input) {\r\n            let ch1 = input.readByte();\r\n            let ch2 = input.readByte();\r\n            return TypeConversions.int32ToInt16((ch2 << 8) | ch1);\r\n        }\r\n        static readUInt32BE(input) {\r\n            let ch1 = input.readByte();\r\n            let ch2 = input.readByte();\r\n            let ch3 = input.readByte();\r\n            let ch4 = input.readByte();\r\n            return TypeConversions.int32ToUint32((ch1 << 24) | (ch2 << 16) | (ch3 << 8) | ch4);\r\n        }\r\n        static readUInt16BE(input) {\r\n            let ch1 = input.readByte();\r\n            let ch2 = input.readByte();\r\n            return TypeConversions.int32ToInt16((ch1 << 8) | ch2);\r\n        }\r\n        static readInt16BE(input) {\r\n            let ch1 = input.readByte();\r\n            let ch2 = input.readByte();\r\n            return TypeConversions.int32ToInt16((ch1 << 8) | ch2);\r\n        }\r\n        static readByteArray(input, length) {\r\n            let v = new Uint8Array(length);\r\n            input.read(v, 0, length);\r\n            return v;\r\n        }\r\n        static read8BitChars(input, length) {\r\n            let b = new Uint8Array(length);\r\n            input.read(b, 0, b.length);\r\n            return IOHelper.toString(b, 'utf-8');\r\n        }\r\n        static read8BitString(input) {\r\n            let s = '';\r\n            let c = input.readByte();\r\n            while (c !== 0) {\r\n                s += String.fromCharCode(c);\r\n                c = input.readByte();\r\n            }\r\n            return s;\r\n        }\r\n        static read8BitStringLength(input, length) {\r\n            let s = '';\r\n            let z = -1;\r\n            for (let i = 0; i < length; i++) {\r\n                let c = input.readByte();\r\n                if (c === 0 && z === -1) {\r\n                    z = i;\r\n                }\r\n                s += String.fromCharCode(c);\r\n            }\r\n            let t = s;\r\n            if (z >= 0) {\r\n                return t.substr(0, z);\r\n            }\r\n            return t;\r\n        }\r\n        static readSInt8(input) {\r\n            let v = input.readByte();\r\n            return ((v & 255) >> 7) * -256 + (v & 255);\r\n        }\r\n        static readInt24(input, index) {\r\n            let i = input[index] | (input[index + 1] << 8) | (input[index + 2] << 16);\r\n            if ((i & 0x800000) === 0x800000) {\r\n                i = i | (0xff << 24);\r\n            }\r\n            return i;\r\n        }\r\n        static readInt16(input, index) {\r\n            return TypeConversions.int32ToInt16(input[index] | (input[index + 1] << 8));\r\n        }\r\n        static toString(data, encoding) {\r\n            let detectedEncoding = IOHelper.detectEncoding(data);\r\n            if (detectedEncoding) {\r\n                encoding = detectedEncoding;\r\n            }\r\n            if (!encoding) {\r\n                encoding = 'utf-8';\r\n            }\r\n            let decoder = new TextDecoder(encoding);\r\n            return decoder.decode(data.buffer);\r\n        }\r\n        static detectEncoding(data) {\r\n            if (data.length > 2 && data[0] === 0xfe && data[1] === 0xff) {\r\n                return 'utf-16be';\r\n            }\r\n            if (data.length > 2 && data[0] === 0xff && data[1] === 0xfe) {\r\n                return 'utf-16le';\r\n            }\r\n            if (data.length > 4 && data[0] === 0x00 && data[1] === 0x00 && data[2] === 0xfe && data[3] === 0xff) {\r\n                return 'utf-32be';\r\n            }\r\n            if (data.length > 4 && data[0] === 0xff && data[1] === 0xfe && data[2] === 0x00 && data[3] === 0x00) {\r\n                return 'utf-32le';\r\n            }\r\n            return null;\r\n        }\r\n        static stringToBytes(str) {\r\n            let decoder = new TextEncoder();\r\n            return decoder.encode(str);\r\n        }\r\n        static writeInt32BE(o, v) {\r\n            o.writeByte((v >> 24) & 0xFF);\r\n            o.writeByte((v >> 16) & 0xFF);\r\n            o.writeByte((v >> 8) & 0xFF);\r\n            o.writeByte((v >> 0) & 0xFF);\r\n        }\r\n        static writeInt32LE(o, v) {\r\n            o.writeByte((v >> 0) & 0xFF);\r\n            o.writeByte((v >> 8) & 0xFF);\r\n            o.writeByte((v >> 16) & 0xFF);\r\n            o.writeByte((v >> 24) & 0xFF);\r\n        }\r\n        static writeUInt16LE(o, v) {\r\n            o.writeByte((v >> 0) & 0xFF);\r\n            o.writeByte((v >> 8) & 0xFF);\r\n        }\r\n        static writeInt16LE(o, v) {\r\n            o.writeByte((v >> 0) & 0xFF);\r\n            o.writeByte((v >> 8) & 0xFF);\r\n        }\r\n    }\n\n    class Gp3To5Importer extends ScoreImporter {\r\n        constructor() {\r\n            super();\r\n            this._versionNumber = 0;\r\n            this._globalTripletFeel = TripletFeel.NoTripletFeel;\r\n            this._lyricsTrack = 0;\r\n            this._lyrics = [];\r\n            this._barCount = 0;\r\n            this._trackCount = 0;\r\n            this._playbackInfos = [];\r\n            this._beatTextChunksByTrack = new Map();\r\n        }\r\n        get name() {\r\n            return 'Guitar Pro 3-5';\r\n        }\r\n        readScore() {\r\n            this.readVersion();\r\n            this._score = new Score();\r\n            // basic song info\r\n            this.readScoreInformation();\r\n            // triplet feel before Gp5\r\n            if (this._versionNumber < 500) {\r\n                this._globalTripletFeel = GpBinaryHelpers.gpReadBool(this.data)\r\n                    ? TripletFeel.Triplet8th\r\n                    : TripletFeel.NoTripletFeel;\r\n            }\r\n            // beat lyrics\r\n            if (this._versionNumber >= 400) {\r\n                this.readLyrics();\r\n            }\r\n            // rse master settings since GP5.1\r\n            if (this._versionNumber >= 510) {\r\n                // master volume (4)\r\n                // master effect (4)\r\n                // master equalizer (10)\r\n                // master equalizer preset (1)\r\n                this.data.skip(19);\r\n            }\r\n            // page setup since GP5\r\n            if (this._versionNumber >= 500) {\r\n                this.readPageSetup();\r\n                this._score.tempoLabel = GpBinaryHelpers.gpReadStringIntByte(this.data, this.settings.importer.encoding);\r\n            }\r\n            // tempo stuff\r\n            this._score.tempo = IOHelper.readInt32LE(this.data);\r\n            if (this._versionNumber >= 510) {\r\n                GpBinaryHelpers.gpReadBool(this.data); // hide tempo?\r\n            }\r\n            // keysignature and octave\r\n            IOHelper.readInt32LE(this.data);\r\n            if (this._versionNumber >= 400) {\r\n                this.data.readByte();\r\n            }\r\n            this.readPlaybackInfos();\r\n            // repetition stuff\r\n            if (this._versionNumber >= 500) {\r\n                // \"Coda\" bar index (2)\r\n                // \"Double Coda\" bar index (2)\r\n                // \"Segno\" bar index (2)\r\n                // \"Segno Segno\" bar index (2)\r\n                // \"Fine\" bar index (2)\r\n                // \"Da Capo\" bar index (2)\r\n                // \"Da Capo al Coda\" bar index (2)\r\n                // \"Da Capo al Double Coda\" bar index (2)\r\n                // \"Da Capo al Fine\" bar index (2)\r\n                // \"Da Segno\" bar index (2)\r\n                // \"Da Segno al Coda\" bar index (2)\r\n                // \"Da Segno al Double Coda\" bar index (2)\r\n                // \"Da Segno al Fine \"bar index (2)\r\n                // \"Da Segno Segno\" bar index (2)\r\n                // \"Da Segno Segno al Coda\" bar index (2)\r\n                // \"Da Segno Segno al Double Coda\" bar index (2)\r\n                // \"Da Segno Segno al Fine\" bar index (2)\r\n                // \"Da Coda\" bar index (2)\r\n                // \"Da Double Coda\" bar index (2)\r\n                this.data.skip(38);\r\n                // unknown (4)\r\n                this.data.skip(4);\r\n            }\r\n            // contents\r\n            this._barCount = IOHelper.readInt32LE(this.data);\r\n            this._trackCount = IOHelper.readInt32LE(this.data);\r\n            this.readMasterBars();\r\n            this.readTracks();\r\n            this.readBars();\r\n            // To be more in line with the GP7 structure we create an\r\n            // initial tempo automation on the first masterbar\r\n            if (this._score.masterBars.length > 0) {\r\n                this._score.masterBars[0].tempoAutomation = Automation.buildTempoAutomation(false, 0, this._score.tempo, 2);\r\n                this._score.masterBars[0].tempoAutomation.text = this._score.tempoLabel;\r\n            }\r\n            this._score.finish(this.settings);\r\n            if (this._lyrics && this._lyricsTrack >= 0) {\r\n                this._score.tracks[this._lyricsTrack].applyLyrics(this._lyrics);\r\n            }\r\n            return this._score;\r\n        }\r\n        readVersion() {\r\n            let version = GpBinaryHelpers.gpReadStringByteLength(this.data, 30, this.settings.importer.encoding);\r\n            if (!version.startsWith(Gp3To5Importer.VersionString)) {\r\n                throw new UnsupportedFormatError('Unsupported format');\r\n            }\r\n            version = version.substr(Gp3To5Importer.VersionString.length + 1);\r\n            let dot = version.indexOf(String.fromCharCode(46));\r\n            this._versionNumber = 100 * parseInt(version.substr(0, dot)) + parseInt(version.substr(dot + 1));\r\n            Logger.debug(this.name, 'Guitar Pro version ' + version + ' detected');\r\n        }\r\n        readScoreInformation() {\r\n            var _a;\r\n            this._score.title = GpBinaryHelpers.gpReadStringIntUnused(this.data, this.settings.importer.encoding);\r\n            this._score.subTitle = GpBinaryHelpers.gpReadStringIntUnused(this.data, this.settings.importer.encoding);\r\n            this._score.artist = GpBinaryHelpers.gpReadStringIntUnused(this.data, this.settings.importer.encoding);\r\n            this._score.album = GpBinaryHelpers.gpReadStringIntUnused(this.data, this.settings.importer.encoding);\r\n            this._score.words = GpBinaryHelpers.gpReadStringIntUnused(this.data, this.settings.importer.encoding);\r\n            this._score.music =\r\n                this._versionNumber >= 500\r\n                    ? GpBinaryHelpers.gpReadStringIntUnused(this.data, this.settings.importer.encoding)\r\n                    : this._score.words;\r\n            this._score.copyright = GpBinaryHelpers.gpReadStringIntUnused(this.data, this.settings.importer.encoding);\r\n            this._score.tab = GpBinaryHelpers.gpReadStringIntUnused(this.data, this.settings.importer.encoding);\r\n            this._score.instructions = GpBinaryHelpers.gpReadStringIntUnused(this.data, this.settings.importer.encoding);\r\n            let noticeLines = IOHelper.readInt32LE(this.data);\r\n            let notice = '';\r\n            for (let i = 0; i < noticeLines; i++) {\r\n                if (i > 0) {\r\n                    notice += '\\r\\n';\r\n                }\r\n                notice += (_a = GpBinaryHelpers.gpReadStringIntUnused(this.data, this.settings.importer.encoding)) === null || _a === void 0 ? void 0 : _a.toString();\r\n            }\r\n            this._score.notices = notice;\r\n        }\r\n        readLyrics() {\r\n            this._lyrics = [];\r\n            this._lyricsTrack = IOHelper.readInt32LE(this.data) - 1;\r\n            for (let i = 0; i < 5; i++) {\r\n                let lyrics = new Lyrics();\r\n                lyrics.startBar = IOHelper.readInt32LE(this.data) - 1;\r\n                lyrics.text = GpBinaryHelpers.gpReadStringInt(this.data, this.settings.importer.encoding);\r\n                this._lyrics.push(lyrics);\r\n            }\r\n        }\r\n        readPageSetup() {\r\n            // Page Width (4)\r\n            // Page Heigth (4)\r\n            // Padding Left (4)\r\n            // Padding Right (4)\r\n            // Padding Top (4)\r\n            // Padding Bottom (4)\r\n            // Size Proportion(4)\r\n            // Header and Footer display flags (2)\r\n            this.data.skip(30);\r\n            // title format\r\n            // subtitle format\r\n            // artist format\r\n            // album format\r\n            // words format\r\n            // music format\r\n            // words and music format\r\n            // copyright format\r\n            // pagpublic enumber format\r\n            for (let i = 0; i < 10; i++) {\r\n                GpBinaryHelpers.gpReadStringIntByte(this.data, this.settings.importer.encoding);\r\n            }\r\n        }\r\n        readPlaybackInfos() {\r\n            this._playbackInfos = [];\r\n            for (let i = 0; i < 64; i++) {\r\n                let info = new PlaybackInformation();\r\n                info.primaryChannel = i;\r\n                info.secondaryChannel = i;\r\n                info.program = IOHelper.readInt32LE(this.data);\r\n                info.volume = this.data.readByte();\r\n                info.balance = this.data.readByte();\r\n                this.data.skip(6);\r\n                this._playbackInfos.push(info);\r\n            }\r\n        }\r\n        readMasterBars() {\r\n            for (let i = 0; i < this._barCount; i++) {\r\n                this.readMasterBar();\r\n            }\r\n        }\r\n        readMasterBar() {\r\n            let previousMasterBar = null;\r\n            if (this._score.masterBars.length > 0) {\r\n                previousMasterBar = this._score.masterBars[this._score.masterBars.length - 1];\r\n            }\r\n            let newMasterBar = new MasterBar();\r\n            let flags = this.data.readByte();\r\n            // time signature\r\n            if ((flags & 0x01) !== 0) {\r\n                newMasterBar.timeSignatureNumerator = this.data.readByte();\r\n            }\r\n            else if (previousMasterBar) {\r\n                newMasterBar.timeSignatureNumerator = previousMasterBar.timeSignatureNumerator;\r\n            }\r\n            if ((flags & 0x02) !== 0) {\r\n                newMasterBar.timeSignatureDenominator = this.data.readByte();\r\n            }\r\n            else if (previousMasterBar) {\r\n                newMasterBar.timeSignatureDenominator = previousMasterBar.timeSignatureDenominator;\r\n            }\r\n            // repeatings\r\n            newMasterBar.isRepeatStart = (flags & 0x04) !== 0;\r\n            if ((flags & 0x08) !== 0) {\r\n                newMasterBar.repeatCount = this.data.readByte() + (this._versionNumber >= 500 ? 0 : 1);\r\n            }\r\n            // alternate endings\r\n            if ((flags & 0x10) !== 0) {\r\n                if (this._versionNumber < 500) {\r\n                    let currentMasterBar = previousMasterBar;\r\n                    // get the already existing alternatives to ignore them\r\n                    let existentAlternatives = 0;\r\n                    while (currentMasterBar) {\r\n                        // found another repeat ending?\r\n                        if (currentMasterBar.isRepeatEnd && currentMasterBar !== previousMasterBar) {\r\n                            break;\r\n                        }\r\n                        // found the opening?\r\n                        if (currentMasterBar.isRepeatStart) {\r\n                            break;\r\n                        }\r\n                        existentAlternatives = existentAlternatives | currentMasterBar.alternateEndings;\r\n                        currentMasterBar = currentMasterBar.previousMasterBar;\r\n                    }\r\n                    // now calculate the alternative for this bar\r\n                    let repeatAlternative = 0;\r\n                    let repeatMask = this.data.readByte();\r\n                    for (let i = 0; i < 8; i++) {\r\n                        // only add the repeating if it is not existing\r\n                        let repeating = 1 << i;\r\n                        if (repeatMask > i && (existentAlternatives & repeating) === 0) {\r\n                            repeatAlternative = repeatAlternative | repeating;\r\n                        }\r\n                    }\r\n                    newMasterBar.alternateEndings = repeatAlternative;\r\n                }\r\n                else {\r\n                    newMasterBar.alternateEndings = this.data.readByte();\r\n                }\r\n            }\r\n            // marker\r\n            if ((flags & 0x20) !== 0) {\r\n                let section = new Section();\r\n                section.text = GpBinaryHelpers.gpReadStringIntByte(this.data, this.settings.importer.encoding);\r\n                section.marker = '';\r\n                GpBinaryHelpers.gpReadColor(this.data, false);\r\n                newMasterBar.section = section;\r\n            }\r\n            // keysignature\r\n            if ((flags & 0x40) !== 0) {\r\n                newMasterBar.keySignature = IOHelper.readSInt8(this.data);\r\n                newMasterBar.keySignatureType = this.data.readByte();\r\n            }\r\n            else if (previousMasterBar) {\r\n                newMasterBar.keySignature = previousMasterBar.keySignature;\r\n                newMasterBar.keySignatureType = previousMasterBar.keySignatureType;\r\n            }\r\n            if (this._versionNumber >= 500 && (flags & 0x03) !== 0) {\r\n                this.data.skip(4);\r\n            }\r\n            // better alternate ending mask in GP5\r\n            if (this._versionNumber >= 500 && (flags & 0x10) === 0) {\r\n                newMasterBar.alternateEndings = this.data.readByte();\r\n            }\r\n            // tripletfeel\r\n            if (this._versionNumber >= 500) {\r\n                let tripletFeel = this.data.readByte();\r\n                switch (tripletFeel) {\r\n                    case 1:\r\n                        newMasterBar.tripletFeel = TripletFeel.Triplet8th;\r\n                        break;\r\n                    case 2:\r\n                        newMasterBar.tripletFeel = TripletFeel.Triplet16th;\r\n                        break;\r\n                }\r\n                this.data.readByte();\r\n            }\r\n            else {\r\n                newMasterBar.tripletFeel = this._globalTripletFeel;\r\n            }\r\n            newMasterBar.isDoubleBar = (flags & 0x80) !== 0;\r\n            this._score.addMasterBar(newMasterBar);\r\n        }\r\n        readTracks() {\r\n            for (let i = 0; i < this._trackCount; i++) {\r\n                this.readTrack();\r\n            }\r\n        }\r\n        readTrack() {\r\n            let newTrack = new Track();\r\n            newTrack.ensureStaveCount(1);\r\n            this._score.addTrack(newTrack);\r\n            let mainStaff = newTrack.staves[0];\r\n            let flags = this.data.readByte();\r\n            newTrack.name = GpBinaryHelpers.gpReadStringByteLength(this.data, 40, this.settings.importer.encoding);\r\n            if ((flags & 0x01) !== 0) {\r\n                mainStaff.isPercussion = true;\r\n            }\r\n            let stringCount = IOHelper.readInt32LE(this.data);\r\n            let tuning = [];\r\n            for (let i = 0; i < 7; i++) {\r\n                let stringTuning = IOHelper.readInt32LE(this.data);\r\n                if (stringCount > i) {\r\n                    tuning.push(stringTuning);\r\n                }\r\n            }\r\n            mainStaff.stringTuning.tunings = tuning;\r\n            let port = IOHelper.readInt32LE(this.data);\r\n            let index = IOHelper.readInt32LE(this.data) - 1;\r\n            let effectChannel = IOHelper.readInt32LE(this.data) - 1;\r\n            this.data.skip(4); // Fretcount\r\n            if (index >= 0 && index < this._playbackInfos.length) {\r\n                let info = this._playbackInfos[index];\r\n                info.port = port;\r\n                info.isSolo = (flags & 0x10) !== 0;\r\n                info.isMute = (flags & 0x20) !== 0;\r\n                info.secondaryChannel = effectChannel;\r\n                if (GeneralMidi.isGuitar(info.program)) {\r\n                    mainStaff.displayTranspositionPitch = -12;\r\n                }\r\n                newTrack.playbackInfo = info;\r\n            }\r\n            mainStaff.capo = IOHelper.readInt32LE(this.data);\r\n            newTrack.color = GpBinaryHelpers.gpReadColor(this.data, false);\r\n            if (this._versionNumber >= 500) {\r\n                // flags for\r\n                //  0x01 -> show tablature\r\n                //  0x02 -> show standard notation\r\n                this.data.readByte();\r\n                // flags for\r\n                //  0x02 -> auto let ring\r\n                //  0x04 -> auto brush\r\n                this.data.readByte();\r\n                // unknown\r\n                this.data.skip(43);\r\n            }\r\n            // unknown\r\n            if (this._versionNumber >= 510) {\r\n                this.data.skip(4);\r\n                GpBinaryHelpers.gpReadStringIntByte(this.data, this.settings.importer.encoding);\r\n                GpBinaryHelpers.gpReadStringIntByte(this.data, this.settings.importer.encoding);\r\n            }\r\n        }\r\n        readBars() {\r\n            for (let i = 0; i < this._barCount; i++) {\r\n                for (let t = 0; t < this._trackCount; t++) {\r\n                    this.readBar(this._score.tracks[t]);\r\n                }\r\n            }\r\n        }\r\n        readBar(track) {\r\n            let newBar = new Bar();\r\n            let mainStaff = track.staves[0];\r\n            if (mainStaff.isPercussion) {\r\n                newBar.clef = Clef.Neutral;\r\n            }\r\n            mainStaff.addBar(newBar);\r\n            let voiceCount = 1;\r\n            if (this._versionNumber >= 500) {\r\n                this.data.readByte();\r\n                voiceCount = 2;\r\n            }\r\n            for (let v = 0; v < voiceCount; v++) {\r\n                this.readVoice(track, newBar);\r\n            }\r\n        }\r\n        readVoice(track, bar) {\r\n            let beatCount = IOHelper.readInt32LE(this.data);\r\n            if (beatCount === 0) {\r\n                return;\r\n            }\r\n            let newVoice = new Voice();\r\n            bar.addVoice(newVoice);\r\n            for (let i = 0; i < beatCount; i++) {\r\n                this.readBeat(track, bar, newVoice);\r\n            }\r\n        }\r\n        readBeat(track, bar, voice) {\r\n            let newBeat = new Beat();\r\n            let flags = this.data.readByte();\r\n            if ((flags & 0x01) !== 0) {\r\n                newBeat.dots = 1;\r\n            }\r\n            if ((flags & 0x40) !== 0) {\r\n                let type = this.data.readByte();\r\n                newBeat.isEmpty = (type & 0x02) === 0;\r\n            }\r\n            voice.addBeat(newBeat);\r\n            let duration = IOHelper.readSInt8(this.data);\r\n            switch (duration) {\r\n                case -2:\r\n                    newBeat.duration = Duration.Whole;\r\n                    break;\r\n                case -1:\r\n                    newBeat.duration = Duration.Half;\r\n                    break;\r\n                case 0:\r\n                    newBeat.duration = Duration.Quarter;\r\n                    break;\r\n                case 1:\r\n                    newBeat.duration = Duration.Eighth;\r\n                    break;\r\n                case 2:\r\n                    newBeat.duration = Duration.Sixteenth;\r\n                    break;\r\n                case 3:\r\n                    newBeat.duration = Duration.ThirtySecond;\r\n                    break;\r\n                case 4:\r\n                    newBeat.duration = Duration.SixtyFourth;\r\n                    break;\r\n                default:\r\n                    newBeat.duration = Duration.Quarter;\r\n                    break;\r\n            }\r\n            if ((flags & 0x20) !== 0) {\r\n                newBeat.tupletNumerator = IOHelper.readInt32LE(this.data);\r\n                switch (newBeat.tupletNumerator) {\r\n                    case 1:\r\n                        newBeat.tupletDenominator = 1;\r\n                        break;\r\n                    case 3:\r\n                        newBeat.tupletDenominator = 2;\r\n                        break;\r\n                    case 5:\r\n                    case 6:\r\n                    case 7:\r\n                        newBeat.tupletDenominator = 4;\r\n                        break;\r\n                    case 9:\r\n                    case 10:\r\n                    case 11:\r\n                    case 12:\r\n                    case 13:\r\n                        newBeat.tupletDenominator = 8;\r\n                        break;\r\n                    case 2:\r\n                    case 4:\r\n                    case 8:\r\n                        break;\r\n                    default:\r\n                        newBeat.tupletNumerator = 1;\r\n                        newBeat.tupletDenominator = 1;\r\n                        break;\r\n                }\r\n            }\r\n            if ((flags & 0x02) !== 0) {\r\n                this.readChord(newBeat);\r\n            }\r\n            let beatTextAsLyrics = this.settings.importer.beatTextAsLyrics\r\n                && track.index !== this._lyricsTrack; // detect if not lyrics track\r\n            if ((flags & 0x04) !== 0) {\r\n                const text = GpBinaryHelpers.gpReadStringIntUnused(this.data, this.settings.importer.encoding);\r\n                if (beatTextAsLyrics) {\r\n                    const lyrics = new Lyrics();\r\n                    lyrics.text = text.trim();\r\n                    lyrics.finish(true);\r\n                    // push them in reverse order to the store for applying them \r\n                    // to the next beats being read \r\n                    const beatLyrics = [];\r\n                    for (let i = lyrics.chunks.length - 1; i >= 0; i--) {\r\n                        beatLyrics.push(lyrics.chunks[i]);\r\n                    }\r\n                    this._beatTextChunksByTrack.set(track.index, beatLyrics);\r\n                }\r\n                else {\r\n                    newBeat.text = text;\r\n                }\r\n            }\r\n            let allNoteHarmonicType = HarmonicType.None;\r\n            if ((flags & 0x08) !== 0) {\r\n                allNoteHarmonicType = this.readBeatEffects(newBeat);\r\n            }\r\n            if ((flags & 0x10) !== 0) {\r\n                this.readMixTableChange(newBeat);\r\n            }\r\n            let stringFlags = this.data.readByte();\r\n            for (let i = 6; i >= 0; i--) {\r\n                if ((stringFlags & (1 << i)) !== 0 && 6 - i < bar.staff.tuning.length) {\r\n                    const note = this.readNote(track, bar, voice, newBeat, 6 - i);\r\n                    if (allNoteHarmonicType !== HarmonicType.None) {\r\n                        note.harmonicType = allNoteHarmonicType;\r\n                        if (note.harmonicType === HarmonicType.Natural) {\r\n                            note.harmonicValue = this.deltaFretToHarmonicValue(note.fret);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this._versionNumber >= 500) {\r\n                this.data.readByte();\r\n                let flag = this.data.readByte();\r\n                if ((flag & 0x08) !== 0) {\r\n                    this.data.readByte();\r\n                }\r\n            }\r\n            if (beatTextAsLyrics && !newBeat.isRest &&\r\n                this._beatTextChunksByTrack.has(track.index) &&\r\n                this._beatTextChunksByTrack.get(track.index).length > 0) {\r\n                newBeat.lyrics = [this._beatTextChunksByTrack.get(track.index).pop()];\r\n            }\r\n        }\r\n        readChord(beat) {\r\n            let chord = new Chord();\r\n            let chordId = ModelUtils.newGuid();\r\n            if (this._versionNumber >= 500) {\r\n                this.data.skip(17);\r\n                chord.name = GpBinaryHelpers.gpReadStringByteLength(this.data, 21, this.settings.importer.encoding);\r\n                this.data.skip(4);\r\n                chord.firstFret = IOHelper.readInt32LE(this.data);\r\n                for (let i = 0; i < 7; i++) {\r\n                    let fret = IOHelper.readInt32LE(this.data);\r\n                    if (i < beat.voice.bar.staff.tuning.length) {\r\n                        chord.strings.push(fret);\r\n                    }\r\n                }\r\n                let numberOfBarres = this.data.readByte();\r\n                let barreFrets = new Uint8Array(5);\r\n                this.data.read(barreFrets, 0, barreFrets.length);\r\n                for (let i = 0; i < numberOfBarres; i++) {\r\n                    chord.barreFrets.push(barreFrets[i]);\r\n                }\r\n                this.data.skip(26);\r\n            }\r\n            else {\r\n                if (this.data.readByte() !== 0) {\r\n                    // gp4\r\n                    if (this._versionNumber >= 400) {\r\n                        // Sharp (1)\r\n                        // Unused (3)\r\n                        // Root (1)\r\n                        // Major/Minor (1)\r\n                        // Nin,Eleven or Thirteen (1)\r\n                        // Bass (4)\r\n                        // Diminished/Augmented (4)\r\n                        // Add (1)\r\n                        this.data.skip(16);\r\n                        chord.name = GpBinaryHelpers.gpReadStringByteLength(this.data, 21, this.settings.importer.encoding);\r\n                        // Unused (2)\r\n                        // Fifth (1)\r\n                        // Ninth (1)\r\n                        // Eleventh (1)\r\n                        this.data.skip(4);\r\n                        chord.firstFret = IOHelper.readInt32LE(this.data);\r\n                        for (let i = 0; i < 7; i++) {\r\n                            let fret = IOHelper.readInt32LE(this.data);\r\n                            if (i < beat.voice.bar.staff.tuning.length) {\r\n                                chord.strings.push(fret);\r\n                            }\r\n                        }\r\n                        let numberOfBarres = this.data.readByte();\r\n                        let barreFrets = new Uint8Array(5);\r\n                        this.data.read(barreFrets, 0, barreFrets.length);\r\n                        for (let i = 0; i < numberOfBarres; i++) {\r\n                            chord.barreFrets.push(barreFrets[i]);\r\n                        }\r\n                        // Barree end (5)\r\n                        // Omission1,3,5,7,9,11,13 (7)\r\n                        // Unused (1)\r\n                        // Fingering (7)\r\n                        // Show Diagram Fingering (1)\r\n                        // ??\r\n                        this.data.skip(26);\r\n                    }\r\n                    else {\r\n                        // unknown\r\n                        this.data.skip(25);\r\n                        chord.name = GpBinaryHelpers.gpReadStringByteLength(this.data, 34, this.settings.importer.encoding);\r\n                        chord.firstFret = IOHelper.readInt32LE(this.data);\r\n                        for (let i = 0; i < 6; i++) {\r\n                            let fret = IOHelper.readInt32LE(this.data);\r\n                            if (i < beat.voice.bar.staff.tuning.length) {\r\n                                chord.strings.push(fret);\r\n                            }\r\n                        }\r\n                        // unknown\r\n                        this.data.skip(36);\r\n                    }\r\n                }\r\n                else {\r\n                    let strings = this._versionNumber >= 406 ? 7 : 6;\r\n                    chord.name = GpBinaryHelpers.gpReadStringIntByte(this.data, this.settings.importer.encoding);\r\n                    chord.firstFret = IOHelper.readInt32LE(this.data);\r\n                    if (chord.firstFret > 0) {\r\n                        for (let i = 0; i < strings; i++) {\r\n                            let fret = IOHelper.readInt32LE(this.data);\r\n                            if (i < beat.voice.bar.staff.tuning.length) {\r\n                                chord.strings.push(fret);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (chord.name) {\r\n                beat.chordId = chordId;\r\n                beat.voice.bar.staff.addChord(beat.chordId, chord);\r\n            }\r\n        }\r\n        readBeatEffects(beat) {\r\n            let flags = this.data.readByte();\r\n            let flags2 = 0;\r\n            if (this._versionNumber >= 400) {\r\n                flags2 = this.data.readByte();\r\n            }\r\n            beat.fadeIn = (flags & 0x10) !== 0;\r\n            if ((this._versionNumber < 400 && (flags & 0x01) !== 0) || (flags & 0x02) !== 0) {\r\n                beat.vibrato = VibratoType.Slight;\r\n            }\r\n            beat.hasRasgueado = (flags2 & 0x01) !== 0;\r\n            if ((flags & 0x20) !== 0 && this._versionNumber >= 400) {\r\n                let slapPop = IOHelper.readSInt8(this.data);\r\n                switch (slapPop) {\r\n                    case 1:\r\n                        beat.tap = true;\r\n                        break;\r\n                    case 2:\r\n                        beat.slap = true;\r\n                        break;\r\n                    case 3:\r\n                        beat.pop = true;\r\n                        break;\r\n                }\r\n            }\r\n            else if ((flags & 0x20) !== 0) {\r\n                let slapPop = IOHelper.readSInt8(this.data);\r\n                switch (slapPop) {\r\n                    case 1:\r\n                        beat.tap = true;\r\n                        break;\r\n                    case 2:\r\n                        beat.slap = true;\r\n                        break;\r\n                    case 3:\r\n                        beat.pop = true;\r\n                        break;\r\n                }\r\n                this.data.skip(4);\r\n            }\r\n            if ((flags2 & 0x04) !== 0) {\r\n                this.readTremoloBarEffect(beat);\r\n            }\r\n            if ((flags & 0x40) !== 0) {\r\n                let strokeUp = 0;\r\n                let strokeDown = 0;\r\n                if (this._versionNumber < 500) {\r\n                    strokeDown = this.data.readByte();\r\n                    strokeUp = this.data.readByte();\r\n                }\r\n                else {\r\n                    strokeUp = this.data.readByte();\r\n                    strokeDown = this.data.readByte();\r\n                }\r\n                if (strokeUp > 0) {\r\n                    beat.brushType = BrushType.BrushUp;\r\n                    beat.brushDuration = Gp3To5Importer.toStrokeValue(strokeUp);\r\n                }\r\n                else if (strokeDown > 0) {\r\n                    beat.brushType = BrushType.BrushDown;\r\n                    beat.brushDuration = Gp3To5Importer.toStrokeValue(strokeDown);\r\n                }\r\n            }\r\n            if ((flags2 & 0x02) !== 0) {\r\n                switch (IOHelper.readSInt8(this.data)) {\r\n                    case 0:\r\n                        beat.pickStroke = PickStroke.None;\r\n                        break;\r\n                    case 1:\r\n                        beat.pickStroke = PickStroke.Up;\r\n                        break;\r\n                    case 2:\r\n                        beat.pickStroke = PickStroke.Down;\r\n                        break;\r\n                }\r\n            }\r\n            if (this._versionNumber < 400) {\r\n                if ((flags & 0x04) !== 0) {\r\n                    return HarmonicType.Natural;\r\n                }\r\n                else if ((flags & 0x08) !== 0) {\r\n                    return HarmonicType.Artificial;\r\n                }\r\n            }\r\n            return HarmonicType.None;\r\n        }\r\n        readTremoloBarEffect(beat) {\r\n            this.data.readByte(); // type\r\n            IOHelper.readInt32LE(this.data); // value\r\n            let pointCount = IOHelper.readInt32LE(this.data);\r\n            if (pointCount > 0) {\r\n                for (let i = 0; i < pointCount; i++) {\r\n                    let point = new BendPoint(0, 0);\r\n                    point.offset = IOHelper.readInt32LE(this.data); // 0...60\r\n                    point.value = (IOHelper.readInt32LE(this.data) / Gp3To5Importer.BendStep) | 0; // 0..12 (amount of quarters)\r\n                    GpBinaryHelpers.gpReadBool(this.data); // vibrato\r\n                    beat.addWhammyBarPoint(point);\r\n                }\r\n            }\r\n        }\r\n        static toStrokeValue(value) {\r\n            switch (value) {\r\n                case 1:\r\n                    return 30;\r\n                case 2:\r\n                    return 30;\r\n                case 3:\r\n                    return 60;\r\n                case 4:\r\n                    return 120;\r\n                case 5:\r\n                    return 240;\r\n                case 6:\r\n                    return 480;\r\n                default:\r\n                    return 0;\r\n            }\r\n        }\r\n        readMixTableChange(beat) {\r\n            let tableChange = new MixTableChange();\r\n            tableChange.instrument = IOHelper.readSInt8(this.data);\r\n            if (this._versionNumber >= 500) {\r\n                this.data.skip(16); // Rse Info\r\n            }\r\n            tableChange.volume = IOHelper.readSInt8(this.data);\r\n            tableChange.balance = IOHelper.readSInt8(this.data);\r\n            let chorus = IOHelper.readSInt8(this.data);\r\n            let reverb = IOHelper.readSInt8(this.data);\r\n            let phaser = IOHelper.readSInt8(this.data);\r\n            let tremolo = IOHelper.readSInt8(this.data);\r\n            if (this._versionNumber >= 500) {\r\n                tableChange.tempoName = GpBinaryHelpers.gpReadStringIntByte(this.data, this.settings.importer.encoding);\r\n            }\r\n            tableChange.tempo = IOHelper.readInt32LE(this.data);\r\n            // durations\r\n            if (tableChange.volume >= 0) {\r\n                this.data.readByte();\r\n            }\r\n            if (tableChange.balance >= 0) {\r\n                this.data.readByte();\r\n            }\r\n            if (chorus >= 0) {\r\n                this.data.readByte();\r\n            }\r\n            if (reverb >= 0) {\r\n                this.data.readByte();\r\n            }\r\n            if (phaser >= 0) {\r\n                this.data.readByte();\r\n            }\r\n            if (tremolo >= 0) {\r\n                this.data.readByte();\r\n            }\r\n            if (tableChange.tempo >= 0) {\r\n                tableChange.duration = IOHelper.readSInt8(this.data);\r\n                if (this._versionNumber >= 510) {\r\n                    this.data.readByte(); // hideTempo (bool)\r\n                }\r\n            }\r\n            if (this._versionNumber >= 400) {\r\n                this.data.readByte(); // all tracks flag\r\n            }\r\n            // unknown\r\n            if (this._versionNumber >= 500) {\r\n                this.data.readByte();\r\n            }\r\n            // unknown\r\n            if (this._versionNumber >= 510) {\r\n                GpBinaryHelpers.gpReadStringIntByte(this.data, this.settings.importer.encoding);\r\n                GpBinaryHelpers.gpReadStringIntByte(this.data, this.settings.importer.encoding);\r\n            }\r\n            if (tableChange.volume >= 0) {\r\n                let volumeAutomation = new Automation();\r\n                volumeAutomation.isLinear = true;\r\n                volumeAutomation.type = AutomationType.Volume;\r\n                volumeAutomation.value = tableChange.volume;\r\n                beat.automations.push(volumeAutomation);\r\n            }\r\n            if (tableChange.balance >= 0) {\r\n                let balanceAutomation = new Automation();\r\n                balanceAutomation.isLinear = true;\r\n                balanceAutomation.type = AutomationType.Balance;\r\n                balanceAutomation.value = tableChange.balance;\r\n                beat.automations.push(balanceAutomation);\r\n            }\r\n            if (tableChange.instrument >= 0) {\r\n                let instrumentAutomation = new Automation();\r\n                instrumentAutomation.isLinear = true;\r\n                instrumentAutomation.type = AutomationType.Instrument;\r\n                instrumentAutomation.value = tableChange.instrument;\r\n                beat.automations.push(instrumentAutomation);\r\n            }\r\n            if (tableChange.tempo >= 0) {\r\n                let tempoAutomation = new Automation();\r\n                tempoAutomation.isLinear = true;\r\n                tempoAutomation.type = AutomationType.Tempo;\r\n                tempoAutomation.value = tableChange.tempo;\r\n                beat.automations.push(tempoAutomation);\r\n                beat.voice.bar.masterBar.tempoAutomation = tempoAutomation;\r\n            }\r\n        }\r\n        readNote(track, bar, voice, beat, stringIndex) {\r\n            let newNote = new Note();\r\n            newNote.string = bar.staff.tuning.length - stringIndex;\r\n            let flags = this.data.readByte();\r\n            if ((flags & 0x02) !== 0) {\r\n                newNote.accentuated = AccentuationType.Heavy;\r\n            }\r\n            else if ((flags & 0x40) !== 0) {\r\n                newNote.accentuated = AccentuationType.Normal;\r\n            }\r\n            newNote.isGhost = (flags & 0x04) !== 0;\r\n            if ((flags & 0x20) !== 0) {\r\n                let noteType = this.data.readByte();\r\n                if (noteType === 3) {\r\n                    newNote.isDead = true;\r\n                }\r\n                else if (noteType === 2) {\r\n                    newNote.isTieDestination = true;\r\n                }\r\n            }\r\n            if ((flags & 0x01) !== 0 && this._versionNumber < 500) {\r\n                this.data.readByte(); // duration\r\n                this.data.readByte(); // tuplet\r\n            }\r\n            if ((flags & 0x10) !== 0) {\r\n                let dynamicNumber = IOHelper.readSInt8(this.data);\r\n                newNote.dynamics = this.toDynamicValue(dynamicNumber);\r\n                beat.dynamics = newNote.dynamics;\r\n            }\r\n            if ((flags & 0x20) !== 0) {\r\n                newNote.fret = IOHelper.readSInt8(this.data);\r\n            }\r\n            if ((flags & 0x80) !== 0) {\r\n                newNote.leftHandFinger = IOHelper.readSInt8(this.data);\r\n                newNote.rightHandFinger = IOHelper.readSInt8(this.data);\r\n                newNote.isFingering = true;\r\n            }\r\n            let swapAccidentals = false;\r\n            if (this._versionNumber >= 500) {\r\n                if ((flags & 0x01) !== 0) {\r\n                    newNote.durationPercent = GpBinaryHelpers.gpReadDouble(this.data);\r\n                }\r\n                let flags2 = this.data.readByte();\r\n                swapAccidentals = (flags2 & 0x02) !== 0;\r\n            }\r\n            beat.addNote(newNote);\r\n            if ((flags & 0x08) !== 0) {\r\n                this.readNoteEffects(track, voice, beat, newNote);\r\n            }\r\n            if (bar.staff.isPercussion) {\r\n                newNote.percussionArticulation = newNote.fret;\r\n                newNote.string = -1;\r\n                newNote.fret = -1;\r\n            }\r\n            if (swapAccidentals) {\r\n                const accidental = Tuning.defaultAccidentals[newNote.realValueWithoutHarmonic % 12];\r\n                if (accidental === '#') {\r\n                    newNote.accidentalMode = NoteAccidentalMode.ForceFlat;\r\n                }\r\n                else if (accidental === 'b') {\r\n                    newNote.accidentalMode = NoteAccidentalMode.ForceSharp;\r\n                }\r\n                // Note: forcing no sign to sharp not supported\r\n            }\r\n            return newNote;\r\n        }\r\n        toDynamicValue(value) {\r\n            switch (value) {\r\n                case 1:\r\n                    return DynamicValue.PPP;\r\n                case 2:\r\n                    return DynamicValue.PP;\r\n                case 3:\r\n                    return DynamicValue.P;\r\n                case 4:\r\n                    return DynamicValue.MP;\r\n                case 5:\r\n                    return DynamicValue.MF;\r\n                case 6:\r\n                    return DynamicValue.F;\r\n                case 7:\r\n                    return DynamicValue.FF;\r\n                case 8:\r\n                    return DynamicValue.FFF;\r\n                default:\r\n                    return DynamicValue.F;\r\n            }\r\n        }\r\n        readNoteEffects(track, voice, beat, note) {\r\n            let flags = this.data.readByte();\r\n            let flags2 = 0;\r\n            if (this._versionNumber >= 400) {\r\n                flags2 = this.data.readByte();\r\n            }\r\n            if ((flags & 0x01) !== 0) {\r\n                this.readBend(note);\r\n            }\r\n            if ((flags & 0x10) !== 0) {\r\n                this.readGrace(voice, note);\r\n            }\r\n            if ((flags2 & 0x04) !== 0) {\r\n                this.readTremoloPicking(beat);\r\n            }\r\n            if ((flags2 & 0x08) !== 0) {\r\n                this.readSlide(note);\r\n            }\r\n            else if (this._versionNumber < 400) {\r\n                if ((flags & 0x04) !== 0) {\r\n                    note.slideOutType = SlideOutType.Shift;\r\n                }\r\n            }\r\n            if ((flags2 & 0x10) !== 0) {\r\n                this.readArtificialHarmonic(note);\r\n            }\r\n            if ((flags2 & 0x20) !== 0) {\r\n                this.readTrill(note);\r\n            }\r\n            note.isLetRing = (flags & 0x08) !== 0;\r\n            note.isHammerPullOrigin = (flags & 0x02) !== 0;\r\n            if ((flags2 & 0x40) !== 0) {\r\n                note.vibrato = VibratoType.Slight;\r\n            }\r\n            note.isPalmMute = (flags2 & 0x02) !== 0;\r\n            note.isStaccato = (flags2 & 0x01) !== 0;\r\n        }\r\n        readBend(note) {\r\n            this.data.readByte(); // type\r\n            IOHelper.readInt32LE(this.data); // value\r\n            let pointCount = IOHelper.readInt32LE(this.data);\r\n            if (pointCount > 0) {\r\n                for (let i = 0; i < pointCount; i++) {\r\n                    let point = new BendPoint(0, 0);\r\n                    point.offset = IOHelper.readInt32LE(this.data); // 0...60\r\n                    point.value = (IOHelper.readInt32LE(this.data) / Gp3To5Importer.BendStep) | 0; // 0..12 (amount of quarters)\r\n                    GpBinaryHelpers.gpReadBool(this.data); // vibrato\r\n                    note.addBendPoint(point);\r\n                }\r\n            }\r\n        }\r\n        readGrace(voice, note) {\r\n            let graceBeat = new Beat();\r\n            let graceNote = new Note();\r\n            graceNote.string = note.string;\r\n            graceNote.fret = IOHelper.readSInt8(this.data);\r\n            graceBeat.duration = Duration.ThirtySecond;\r\n            graceBeat.dynamics = this.toDynamicValue(IOHelper.readSInt8(this.data));\r\n            let transition = IOHelper.readSInt8(this.data);\r\n            switch (transition) {\r\n                case 0:\r\n                    break;\r\n                case 1:\r\n                    graceNote.slideOutType = SlideOutType.Legato;\r\n                    graceNote.slideTarget = note;\r\n                    break;\r\n                case 2:\r\n                    break;\r\n                case 3:\r\n                    graceNote.isHammerPullOrigin = true;\r\n                    break;\r\n            }\r\n            graceNote.dynamics = graceBeat.dynamics;\r\n            this.data.skip(1); // duration\r\n            if (this._versionNumber < 500) {\r\n                graceBeat.graceType = GraceType.BeforeBeat;\r\n            }\r\n            else {\r\n                let flags = this.data.readByte();\r\n                graceNote.isDead = (flags & 0x01) !== 0;\r\n                graceBeat.graceType = (flags & 0x02) !== 0 ? GraceType.OnBeat : GraceType.BeforeBeat;\r\n            }\r\n            voice.addGraceBeat(graceBeat);\r\n            graceBeat.addNote(graceNote);\r\n        }\r\n        readTremoloPicking(beat) {\r\n            let speed = this.data.readByte();\r\n            switch (speed) {\r\n                case 1:\r\n                    beat.tremoloSpeed = Duration.Eighth;\r\n                    break;\r\n                case 2:\r\n                    beat.tremoloSpeed = Duration.Sixteenth;\r\n                    break;\r\n                case 3:\r\n                    beat.tremoloSpeed = Duration.ThirtySecond;\r\n                    break;\r\n            }\r\n        }\r\n        readSlide(note) {\r\n            if (this._versionNumber >= 500) {\r\n                let type = IOHelper.readSInt8(this.data);\r\n                if ((type & 1) !== 0) {\r\n                    note.slideOutType = SlideOutType.Shift;\r\n                }\r\n                else if ((type & 2) !== 0) {\r\n                    note.slideOutType = SlideOutType.Legato;\r\n                }\r\n                else if ((type & 4) !== 0) {\r\n                    note.slideOutType = SlideOutType.OutDown;\r\n                }\r\n                else if ((type & 8) !== 0) {\r\n                    note.slideOutType = SlideOutType.OutUp;\r\n                }\r\n                if ((type & 16) !== 0) {\r\n                    note.slideInType = SlideInType.IntoFromBelow;\r\n                }\r\n                else if ((type & 32) !== 0) {\r\n                    note.slideInType = SlideInType.IntoFromAbove;\r\n                }\r\n            }\r\n            else {\r\n                let type = IOHelper.readSInt8(this.data);\r\n                switch (type) {\r\n                    case 1:\r\n                        note.slideOutType = SlideOutType.Shift;\r\n                        break;\r\n                    case 2:\r\n                        note.slideOutType = SlideOutType.Legato;\r\n                        break;\r\n                    case 3:\r\n                        note.slideOutType = SlideOutType.OutDown;\r\n                        break;\r\n                    case 4:\r\n                        note.slideOutType = SlideOutType.OutUp;\r\n                        break;\r\n                    case -1:\r\n                        note.slideInType = SlideInType.IntoFromBelow;\r\n                        break;\r\n                    case -2:\r\n                        note.slideInType = SlideInType.IntoFromAbove;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        readArtificialHarmonic(note) {\r\n            let type = this.data.readByte();\r\n            if (this._versionNumber >= 500) {\r\n                switch (type) {\r\n                    case 1:\r\n                        note.harmonicType = HarmonicType.Natural;\r\n                        note.harmonicValue = this.deltaFretToHarmonicValue(note.fret);\r\n                        break;\r\n                    case 2:\r\n                        /*let _harmonicTone: number = */ this.data.readByte();\r\n                        /*let _harmonicKey: number =  */ this.data.readByte();\r\n                        /*let _harmonicOctaveOffset: number = */ this.data.readByte();\r\n                        note.harmonicType = HarmonicType.Artificial;\r\n                        break;\r\n                    case 3:\r\n                        note.harmonicType = HarmonicType.Tap;\r\n                        note.harmonicValue = this.deltaFretToHarmonicValue(this.data.readByte());\r\n                        break;\r\n                    case 4:\r\n                        note.harmonicType = HarmonicType.Pinch;\r\n                        note.harmonicValue = 12;\r\n                        break;\r\n                    case 5:\r\n                        note.harmonicType = HarmonicType.Semi;\r\n                        note.harmonicValue = 12;\r\n                        break;\r\n                }\r\n            }\r\n            else if (this._versionNumber >= 400) {\r\n                switch (type) {\r\n                    case 1:\r\n                        note.harmonicType = HarmonicType.Natural;\r\n                        break;\r\n                    case 3:\r\n                        note.harmonicType = HarmonicType.Tap;\r\n                        break;\r\n                    case 4:\r\n                        note.harmonicType = HarmonicType.Pinch;\r\n                        break;\r\n                    case 5:\r\n                        note.harmonicType = HarmonicType.Semi;\r\n                        break;\r\n                    case 15:\r\n                        note.harmonicType = HarmonicType.Artificial;\r\n                        break;\r\n                    case 17:\r\n                        note.harmonicType = HarmonicType.Artificial;\r\n                        break;\r\n                    case 22:\r\n                        note.harmonicType = HarmonicType.Artificial;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        deltaFretToHarmonicValue(deltaFret) {\r\n            switch (deltaFret) {\r\n                case 2:\r\n                    return 2.4;\r\n                case 3:\r\n                    return 3.2;\r\n                case 4:\r\n                case 5:\r\n                case 7:\r\n                case 9:\r\n                case 12:\r\n                case 16:\r\n                case 17:\r\n                case 19:\r\n                case 24:\r\n                    return deltaFret;\r\n                case 8:\r\n                    return 8.2;\r\n                case 10:\r\n                    return 9.6;\r\n                case 14:\r\n                case 15:\r\n                    return 14.7;\r\n                case 21:\r\n                case 22:\r\n                    return 21.7;\r\n                default:\r\n                    return 12;\r\n            }\r\n        }\r\n        readTrill(note) {\r\n            note.trillValue = this.data.readByte() + note.stringTuning;\r\n            switch (this.data.readByte()) {\r\n                case 1:\r\n                    note.trillSpeed = Duration.Sixteenth;\r\n                    break;\r\n                case 2:\r\n                    note.trillSpeed = Duration.ThirtySecond;\r\n                    break;\r\n                case 3:\r\n                    note.trillSpeed = Duration.SixtyFourth;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    Gp3To5Importer.VersionString = 'FICHIER GUITAR PRO ';\r\n    Gp3To5Importer.BendStep = 25;\r\n    class GpBinaryHelpers {\r\n        static gpReadDouble(data) {\r\n            let bytes = new Uint8Array(8);\r\n            data.read(bytes, 0, bytes.length);\r\n            let array = new Float64Array(bytes.buffer);\r\n            return array[0];\r\n        }\r\n        static gpReadFloat(data) {\r\n            let bytes = new Uint8Array(4);\r\n            bytes[3] = data.readByte();\r\n            bytes[2] = data.readByte();\r\n            bytes[2] = data.readByte();\r\n            bytes[1] = data.readByte();\r\n            let array = new Float32Array(bytes.buffer);\r\n            return array[0];\r\n        }\r\n        static gpReadColor(data, readAlpha = false) {\r\n            let r = data.readByte();\r\n            let g = data.readByte();\r\n            let b = data.readByte();\r\n            let a = 255;\r\n            if (readAlpha) {\r\n                a = data.readByte();\r\n            }\r\n            else {\r\n                data.skip(1);\r\n            }\r\n            return new Color(r, g, b, a);\r\n        }\r\n        static gpReadBool(data) {\r\n            return data.readByte() !== 0;\r\n        }\r\n        /**\r\n         * Skips an integer (4byte) and reads a string using\r\n         * a bytesize\r\n         */\r\n        static gpReadStringIntUnused(data, encoding) {\r\n            data.skip(4);\r\n            return GpBinaryHelpers.gpReadString(data, data.readByte(), encoding);\r\n        }\r\n        /**\r\n         * Reads an integer as size, and then the string itself\r\n         */\r\n        static gpReadStringInt(data, encoding) {\r\n            return GpBinaryHelpers.gpReadString(data, IOHelper.readInt32LE(data), encoding);\r\n        }\r\n        /**\r\n         * Reads an integer as size, skips a byte and reads the string itself\r\n         */\r\n        static gpReadStringIntByte(data, encoding) {\r\n            let length = IOHelper.readInt32LE(data) - 1;\r\n            data.readByte();\r\n            return GpBinaryHelpers.gpReadString(data, length, encoding);\r\n        }\r\n        static gpReadString(data, length, encoding) {\r\n            let b = new Uint8Array(length);\r\n            data.read(b, 0, b.length);\r\n            return IOHelper.toString(b, encoding);\r\n        }\r\n        static gpWriteString(data, s) {\r\n            const encoded = IOHelper.stringToBytes(s);\r\n            data.writeByte(s.length);\r\n            data.write(encoded, 0, encoded.length);\r\n        }\r\n        /**\r\n         * Reads a byte as size and the string itself.\r\n         * Additionally it is ensured the specified amount of bytes is read.\r\n         * @param data the data to read from.\r\n         * @param length the amount of bytes to read\r\n         * @param encoding The encoding to use to decode the byte into a string\r\n         * @returns\r\n         */\r\n        static gpReadStringByteLength(data, length, encoding) {\r\n            let stringLength = data.readByte();\r\n            let s = GpBinaryHelpers.gpReadString(data, stringLength, encoding);\r\n            if (stringLength < length) {\r\n                data.skip(length - stringLength);\r\n            }\r\n            return s;\r\n        }\r\n    }\r\n    /**\r\n     * A mixtablechange describes several track changes.\r\n     */\r\n    class MixTableChange {\r\n        constructor() {\r\n            this.volume = -1;\r\n            this.balance = -1;\r\n            this.instrument = -1;\r\n            this.tempoName = '';\r\n            this.tempo = -1;\r\n            this.duration = -1;\r\n        }\r\n    }\n\n    class ByteBuffer {\r\n        constructor() {\r\n            this._capacity = 0;\r\n            this.length = 0;\r\n            this.position = 0;\r\n        }\r\n        get bytesWritten() {\r\n            return this.position;\r\n        }\r\n        getBuffer() {\r\n            return this._buffer;\r\n        }\r\n        static empty() {\r\n            return ByteBuffer.withCapacity(0);\r\n        }\r\n        static withCapacity(capacity) {\r\n            let buffer = new ByteBuffer();\r\n            buffer._buffer = new Uint8Array(capacity);\r\n            buffer._capacity = capacity;\r\n            return buffer;\r\n        }\r\n        static fromBuffer(data) {\r\n            let buffer = new ByteBuffer();\r\n            buffer._buffer = data;\r\n            buffer._capacity = buffer.length = data.length;\r\n            return buffer;\r\n        }\r\n        static fromString(contents) {\r\n            let byteArray = new Uint8Array(contents.length);\r\n            for (let i = 0; i < contents.length; i++) {\r\n                byteArray[i] = contents.charCodeAt(i);\r\n            }\r\n            return ByteBuffer.fromBuffer(byteArray);\r\n        }\r\n        reset() {\r\n            this.position = 0;\r\n        }\r\n        skip(offset) {\r\n            this.position += offset;\r\n        }\r\n        setCapacity(value) {\r\n            if (value !== this._capacity) {\r\n                if (value > 0) {\r\n                    let newBuffer = new Uint8Array(value);\r\n                    if (this.length > 0) {\r\n                        newBuffer.set(this._buffer.subarray(0, 0 + this.length), 0);\r\n                    }\r\n                    this._buffer = newBuffer;\r\n                }\r\n                this._capacity = value;\r\n            }\r\n        }\r\n        readByte() {\r\n            let n = this.length - this.position;\r\n            if (n <= 0) {\r\n                return -1;\r\n            }\r\n            return this._buffer[this.position++];\r\n        }\r\n        read(buffer, offset, count) {\r\n            let n = this.length - this.position;\r\n            if (n > count) {\r\n                n = count;\r\n            }\r\n            if (n <= 0) {\r\n                return 0;\r\n            }\r\n            if (n <= 8) {\r\n                let byteCount = n;\r\n                while (--byteCount >= 0) {\r\n                    buffer[offset + byteCount] = this._buffer[this.position + byteCount];\r\n                }\r\n            }\r\n            else {\r\n                buffer.set(this._buffer.subarray(this.position, this.position + n), offset);\r\n            }\r\n            this.position += n;\r\n            return n;\r\n        }\r\n        writeByte(value) {\r\n            let buffer = new Uint8Array(1);\r\n            buffer[0] = value;\r\n            this.write(buffer, 0, 1);\r\n        }\r\n        write(buffer, offset, count) {\r\n            let i = this.position + count;\r\n            if (i > this.length) {\r\n                if (i > this._capacity) {\r\n                    this.ensureCapacity(i);\r\n                }\r\n                this.length = i;\r\n            }\r\n            if (count <= 8 && buffer !== this._buffer) {\r\n                let byteCount = count;\r\n                while (--byteCount >= 0) {\r\n                    this._buffer[this.position + byteCount] = buffer[offset + byteCount];\r\n                }\r\n            }\r\n            else {\r\n                let count1 = Math.min(count, buffer.length - offset);\r\n                this._buffer.set(buffer.subarray(offset, offset + count1), this.position);\r\n            }\r\n            this.position = i;\r\n        }\r\n        ensureCapacity(value) {\r\n            if (value > this._capacity) {\r\n                let newCapacity = value;\r\n                if (newCapacity < 256) {\r\n                    newCapacity = 256;\r\n                }\r\n                if (newCapacity < this._capacity * 2) {\r\n                    newCapacity = this._capacity * 2;\r\n                }\r\n                this.setCapacity(newCapacity);\r\n            }\r\n        }\r\n        readAll() {\r\n            return this.toArray();\r\n        }\r\n        toArray() {\r\n            let copy = new Uint8Array(this.length);\r\n            copy.set(this._buffer.subarray(0, 0 + this.length), 0);\r\n            return copy;\r\n        }\r\n    }\n\n    /**\r\n     * Represents a rectangular area within the renderer music notation.\r\n     */\r\n    class Bounds {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the X-position of the rectangle within the music notation.\r\n             */\r\n            this.x = 0;\r\n            /**\r\n             * Gets or sets the Y-position of the rectangle within the music notation.\r\n             */\r\n            this.y = 0;\r\n            /**\r\n             * Gets or sets the width of the rectangle.\r\n             */\r\n            this.w = 0;\r\n            /**\r\n             * Gets or sets the height of the rectangle.\r\n             */\r\n            this.h = 0;\r\n        }\r\n    }\n\n    var DataType;\r\n    (function (DataType) {\r\n        DataType[DataType[\"Boolean\"] = 0] = \"Boolean\";\r\n        DataType[DataType[\"Integer\"] = 1] = \"Integer\";\r\n        DataType[DataType[\"Float\"] = 2] = \"Float\";\r\n        DataType[DataType[\"String\"] = 3] = \"String\";\r\n        DataType[DataType[\"Point\"] = 4] = \"Point\";\r\n        DataType[DataType[\"Size\"] = 5] = \"Size\";\r\n        DataType[DataType[\"Rectangle\"] = 6] = \"Rectangle\";\r\n        DataType[DataType[\"Color\"] = 7] = \"Color\";\r\n    })(DataType || (DataType = {}));\r\n    /**\r\n     * A BinaryStylesheet from Guitar Pro 6 and 7 files.\r\n     * The BinaryStylesheet is a simple binary key-value store for additional settings\r\n     * related to the display of the music sheet.\r\n     *\r\n     * File:\r\n     *     int32 (big endian) | Number of KeyValuePairs\r\n     *     KeyValuePair[]     | The raw records\r\n     *\r\n     * KeyValuePair:\r\n     *     1 Byte  | length of the key\r\n     *     n Bytes | key as utf8 encoded string\r\n     *     1 Byte  | Data Type\r\n     *     n Bytes | Value\r\n     *\r\n     * Values based on Data Type:\r\n     *     0 = bool\r\n     *         0===false\r\n     *     1 = int32 (big endian)\r\n     *     2 = float (big endian, IEEE)\r\n     *     3 = string\r\n     *       int16 (big endian) | length of string\r\n     *       n bytes            | utf-8 encoded string\r\n     *     4 = point\r\n     *       int32 (big endian) | X-coordinate\r\n     *       int32 (big endian) | Y-coordinate\r\n     *     5 = size\r\n     *       int32 (big endian) | Width\r\n     *       int32 (big endian) | Height\r\n     *     6 = rectangle\r\n     *       int32 (big endian) | X-coordinate\r\n     *       int32 (big endian) | Y-coordinate\r\n     *       int32 (big endian) | Width\r\n     *       int32 (big endian) | Height\r\n     *     7 = color\r\n     *       1 byte | Red\r\n     *       1 byte | Green\r\n     *       1 byte | Blue\r\n     *       1 byte | Alpha\r\n     */\r\n    class BinaryStylesheet {\r\n        constructor(data) {\r\n            this.raw = new Map();\r\n            // BinaryStylesheet apears to be big-endien\r\n            let readable = ByteBuffer.fromBuffer(data);\r\n            let entryCount = IOHelper.readInt32BE(readable);\r\n            for (let i = 0; i < entryCount; i++) {\r\n                let key = GpBinaryHelpers.gpReadString(readable, readable.readByte(), 'utf-8');\r\n                let type = readable.readByte();\r\n                switch (type) {\r\n                    case DataType.Boolean:\r\n                        let flag = readable.readByte() === 1;\r\n                        this.addValue(key, flag);\r\n                        break;\r\n                    case DataType.Integer:\r\n                        let ivalue = IOHelper.readInt32BE(readable);\r\n                        this.addValue(key, ivalue);\r\n                        break;\r\n                    case DataType.Float:\r\n                        let fvalue = GpBinaryHelpers.gpReadFloat(readable);\r\n                        this.addValue(key, fvalue);\r\n                        break;\r\n                    case DataType.String:\r\n                        let s = GpBinaryHelpers.gpReadString(readable, IOHelper.readInt16BE(readable), 'utf-8');\r\n                        this.addValue(key, s);\r\n                        break;\r\n                    case DataType.Point:\r\n                        let x = IOHelper.readInt32BE(readable);\r\n                        let y = IOHelper.readInt32BE(readable);\r\n                        this.addValue(key, new BendPoint(x, y));\r\n                        break;\r\n                    case DataType.Size:\r\n                        let width = IOHelper.readInt32BE(readable);\r\n                        let height = IOHelper.readInt32BE(readable);\r\n                        this.addValue(key, new BendPoint(width, height));\r\n                        break;\r\n                    case DataType.Rectangle:\r\n                        let rect = new Bounds();\r\n                        rect.x = IOHelper.readInt32BE(readable);\r\n                        rect.y = IOHelper.readInt32BE(readable);\r\n                        rect.w = IOHelper.readInt32BE(readable);\r\n                        rect.h = IOHelper.readInt32BE(readable);\r\n                        this.addValue(key, rect);\r\n                        break;\r\n                    case DataType.Color:\r\n                        let color = GpBinaryHelpers.gpReadColor(readable, true);\r\n                        this.addValue(key, color);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        apply(score) {\r\n            for (const [key, value] of this.raw) {\r\n                switch (key) {\r\n                    case 'StandardNotation/hideDynamics':\r\n                        score.stylesheet.hideDynamics = value;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        addValue(key, value) {\r\n            this.raw.set(key, value);\r\n        }\r\n        static writeForScore(score) {\r\n            const writer = ByteBuffer.withCapacity(128);\r\n            IOHelper.writeInt32BE(writer, 1); // entry count\r\n            BinaryStylesheet.writeBooleanEntry(writer, 'StandardNotation/hideDynamics', score.stylesheet.hideDynamics);\r\n            return writer.toArray();\r\n        }\r\n        static writeBooleanEntry(writer, key, value) {\r\n            GpBinaryHelpers.gpWriteString(writer, key);\r\n            writer.writeByte(DataType.Boolean);\r\n            writer.writeByte(value ? 1 : 0);\r\n        }\r\n    }\n\n    /**\r\n     * Lists all types of fermatas\r\n     */\r\n    var FermataType;\r\n    (function (FermataType) {\r\n        /**\r\n         * A short fermata (triangle symbol)\r\n         */\r\n        FermataType[FermataType[\"Short\"] = 0] = \"Short\";\r\n        /**\r\n         * A medium fermata (round symbol)\r\n         */\r\n        FermataType[FermataType[\"Medium\"] = 1] = \"Medium\";\r\n        /**\r\n         * A long fermata (rectangular symbol)\r\n         */\r\n        FermataType[FermataType[\"Long\"] = 2] = \"Long\";\r\n    })(FermataType || (FermataType = {}));\r\n    /**\r\n     * Represents a fermata.\r\n     * @json\r\n     */\r\n    class Fermata {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the type of fermata.\r\n             */\r\n            this.type = FermataType.Short;\r\n            /**\r\n             * Gets or sets the actual lenght of the fermata.\r\n             */\r\n            this.length = 0;\r\n        }\r\n    }\n\n    // This XML parser is based on the XML Parser of the Haxe Standard Library (MIT)\r\n    /*\r\n     * Copyright (C)2005-2019 Haxe Foundation\r\n     *\r\n     * Permission is hereby granted, free of charge, to any person obtaining a\r\n     * copy of this software and associated documentation files (the \"Software\"),\r\n     * to deal in the Software without restriction, including without limitation\r\n     * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n     * and/or sell copies of the Software, and to permit persons to whom the\r\n     * Software is furnished to do so, subject to the following conditions:\r\n     *\r\n     * The above copyright notice and this permission notice shall be included in\r\n     * all copies or substantial portions of the Software.\r\n     *\r\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n     * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n     * DEALINGS IN THE SOFTWARE.\r\n     */\r\n    var XmlNodeType;\r\n    (function (XmlNodeType) {\r\n        XmlNodeType[XmlNodeType[\"None\"] = 0] = \"None\";\r\n        XmlNodeType[XmlNodeType[\"Element\"] = 1] = \"Element\";\r\n        XmlNodeType[XmlNodeType[\"Text\"] = 2] = \"Text\";\r\n        XmlNodeType[XmlNodeType[\"CDATA\"] = 3] = \"CDATA\";\r\n        XmlNodeType[XmlNodeType[\"Document\"] = 4] = \"Document\";\r\n        XmlNodeType[XmlNodeType[\"DocumentType\"] = 5] = \"DocumentType\";\r\n    })(XmlNodeType || (XmlNodeType = {}));\r\n    class XmlNode {\r\n        constructor() {\r\n            this.nodeType = XmlNodeType.None;\r\n            this.localName = null;\r\n            this.value = null;\r\n            this.childNodes = [];\r\n            this.attributes = new Map();\r\n            this.firstChild = null;\r\n            this.firstElement = null;\r\n        }\r\n        addChild(node) {\r\n            this.childNodes.push(node);\r\n            this.firstChild = node;\r\n            if (node.nodeType === XmlNodeType.Element || node.nodeType === XmlNodeType.CDATA) {\r\n                this.firstElement = node;\r\n            }\r\n        }\r\n        getAttribute(name) {\r\n            if (this.attributes.has(name)) {\r\n                return this.attributes.get(name);\r\n            }\r\n            return '';\r\n        }\r\n        getElementsByTagName(name, recursive = false) {\r\n            let tags = [];\r\n            this.searchElementsByTagName(this.childNodes, tags, name, recursive);\r\n            return tags;\r\n        }\r\n        searchElementsByTagName(all, result, name, recursive = false) {\r\n            for (let c of all) {\r\n                if (c && c.nodeType === XmlNodeType.Element && c.localName === name) {\r\n                    result.push(c);\r\n                }\r\n                if (recursive) {\r\n                    this.searchElementsByTagName(c.childNodes, result, name, true);\r\n                }\r\n            }\r\n        }\r\n        findChildElement(name) {\r\n            for (let c of this.childNodes) {\r\n                if (c && c.nodeType === XmlNodeType.Element && c.localName === name) {\r\n                    return c;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        addElement(name) {\r\n            const newNode = new XmlNode();\r\n            newNode.nodeType = XmlNodeType.Element;\r\n            newNode.localName = name;\r\n            this.addChild(newNode);\r\n            return newNode;\r\n        }\r\n        get innerText() {\r\n            var _a, _b;\r\n            if (this.nodeType === XmlNodeType.Element || this.nodeType === XmlNodeType.Document) {\r\n                if (this.firstElement && this.firstElement.nodeType === XmlNodeType.CDATA) {\r\n                    return this.firstElement.innerText;\r\n                }\r\n                let txt = '';\r\n                for (let c of this.childNodes) {\r\n                    txt += (_a = c.innerText) === null || _a === void 0 ? void 0 : _a.toString();\r\n                }\r\n                let s = txt;\r\n                return s.trim();\r\n            }\r\n            return (_b = this.value) !== null && _b !== void 0 ? _b : '';\r\n        }\r\n        set innerText(value) {\r\n            const textNode = new XmlNode();\r\n            textNode.nodeType = XmlNodeType.Text;\r\n            textNode.value = value;\r\n            this.childNodes = [textNode];\r\n        }\r\n        setCData(s) {\r\n            const textNode = new XmlNode();\r\n            textNode.nodeType = XmlNodeType.CDATA;\r\n            textNode.value = s !== null && s !== void 0 ? s : \"\";\r\n            this.childNodes = [textNode];\r\n        }\r\n    }\n\n    // This XML parser is based on the XML Parser of the Haxe Standard Library (MIT)\r\n    class XmlError extends AlphaTabError {\r\n        constructor(message, xml, pos) {\r\n            super(exports.AlphaTabErrorType.Format, message);\r\n            this.pos = 0;\r\n            this.xml = xml;\r\n            this.pos = pos;\r\n            Object.setPrototypeOf(this, XmlError.prototype);\r\n        }\r\n    }\n\n    // This XML parser is based on the XML Parser of the Haxe Standard Library (MIT)\r\n    var XmlState;\r\n    (function (XmlState) {\r\n        XmlState[XmlState[\"IgnoreSpaces\"] = 0] = \"IgnoreSpaces\";\r\n        XmlState[XmlState[\"Begin\"] = 1] = \"Begin\";\r\n        XmlState[XmlState[\"BeginNode\"] = 2] = \"BeginNode\";\r\n        XmlState[XmlState[\"TagName\"] = 3] = \"TagName\";\r\n        XmlState[XmlState[\"Body\"] = 4] = \"Body\";\r\n        XmlState[XmlState[\"AttribName\"] = 5] = \"AttribName\";\r\n        XmlState[XmlState[\"Equals\"] = 6] = \"Equals\";\r\n        XmlState[XmlState[\"AttvalBegin\"] = 7] = \"AttvalBegin\";\r\n        XmlState[XmlState[\"AttribVal\"] = 8] = \"AttribVal\";\r\n        XmlState[XmlState[\"Childs\"] = 9] = \"Childs\";\r\n        XmlState[XmlState[\"Close\"] = 10] = \"Close\";\r\n        XmlState[XmlState[\"WaitEnd\"] = 11] = \"WaitEnd\";\r\n        XmlState[XmlState[\"WaitEndRet\"] = 12] = \"WaitEndRet\";\r\n        XmlState[XmlState[\"Pcdata\"] = 13] = \"Pcdata\";\r\n        XmlState[XmlState[\"Header\"] = 14] = \"Header\";\r\n        XmlState[XmlState[\"Comment\"] = 15] = \"Comment\";\r\n        XmlState[XmlState[\"Doctype\"] = 16] = \"Doctype\";\r\n        XmlState[XmlState[\"Cdata\"] = 17] = \"Cdata\";\r\n        XmlState[XmlState[\"Escape\"] = 18] = \"Escape\";\r\n    })(XmlState || (XmlState = {}));\r\n    class XmlParser {\r\n        static parse(str, p, parent) {\r\n            var _a;\r\n            let c = str.charCodeAt(p);\r\n            let state = XmlState.Begin;\r\n            let next = XmlState.Begin;\r\n            let start = 0;\r\n            let buf = '';\r\n            let escapeNext = XmlState.Begin;\r\n            let xml = null;\r\n            let aname = null;\r\n            let nbrackets = 0;\r\n            let attrValQuote = 0;\r\n            while (p < str.length) {\r\n                c = str.charCodeAt(p);\r\n                switch (state) {\r\n                    case XmlState.IgnoreSpaces:\r\n                        switch (c) {\r\n                            case XmlParser.CharCodeLF:\r\n                            case XmlParser.CharCodeCR:\r\n                            case XmlParser.CharCodeTab:\r\n                            case XmlParser.CharCodeSpace:\r\n                                break;\r\n                            default:\r\n                                state = next;\r\n                                continue;\r\n                        }\r\n                        break;\r\n                    case XmlState.Begin:\r\n                        switch (c) {\r\n                            case XmlParser.CharCodeLowerThan:\r\n                                state = XmlState.IgnoreSpaces;\r\n                                next = XmlState.BeginNode;\r\n                                break;\r\n                            default:\r\n                                start = p;\r\n                                state = XmlState.Pcdata;\r\n                                continue;\r\n                        }\r\n                        break;\r\n                    case XmlState.Pcdata:\r\n                        if (c === XmlParser.CharCodeLowerThan) {\r\n                            buf += str.substr(start, p - start);\r\n                            let child = new XmlNode();\r\n                            child.nodeType = XmlNodeType.Text;\r\n                            child.value = buf;\r\n                            buf = '';\r\n                            parent.addChild(child);\r\n                            state = XmlState.IgnoreSpaces;\r\n                            next = XmlState.BeginNode;\r\n                        }\r\n                        else if (c === XmlParser.CharCodeAmp) {\r\n                            buf += str.substr(start, p - start);\r\n                            state = XmlState.Escape;\r\n                            escapeNext = XmlState.Pcdata;\r\n                            start = p + 1;\r\n                        }\r\n                        break;\r\n                    case XmlState.Cdata:\r\n                        if (c === XmlParser.CharCodeBrackedClose &&\r\n                            str.charCodeAt(p + 1) === XmlParser.CharCodeBrackedClose &&\r\n                            str.charCodeAt(p + 2) === XmlParser.CharCodeGreaterThan) {\r\n                            // ]]>\r\n                            let child = new XmlNode();\r\n                            child.nodeType = XmlNodeType.CDATA;\r\n                            child.value = str.substr(start, p - start);\r\n                            parent.addChild(child);\r\n                            p += 2;\r\n                            state = XmlState.Begin;\r\n                        }\r\n                        break;\r\n                    case XmlState.BeginNode:\r\n                        switch (c) {\r\n                            case XmlParser.CharCodeExclamation:\r\n                                if (str.charCodeAt(p + 1) === XmlParser.CharCodeBrackedOpen) {\r\n                                    p += 2;\r\n                                    if (str.substr(p, 6).toUpperCase() !== 'CDATA[') {\r\n                                        throw new XmlError('Expected <![CDATA[', str, p);\r\n                                    }\r\n                                    p += 5;\r\n                                    state = XmlState.Cdata;\r\n                                    start = p + 1;\r\n                                }\r\n                                else if (str.charCodeAt(p + 1) === XmlParser.CharCodeUpperD ||\r\n                                    str.charCodeAt(p + 1) === XmlParser.CharCodeLowerD) {\r\n                                    if (str.substr(p + 2, 6).toUpperCase() !== 'OCTYPE') {\r\n                                        throw new XmlError('Expected <!DOCTYPE', str, p);\r\n                                    }\r\n                                    p += 8;\r\n                                    state = XmlState.Doctype;\r\n                                    start = p + 1;\r\n                                }\r\n                                else if (str.charCodeAt(p + 1) !== XmlParser.CharCodeMinus ||\r\n                                    str.charCodeAt(p + 2) !== XmlParser.CharCodeMinus) {\r\n                                    throw new XmlError('Expected <!--', str, p);\r\n                                }\r\n                                else {\r\n                                    p += 2;\r\n                                    state = XmlState.Comment;\r\n                                    start = p + 1;\r\n                                }\r\n                                break;\r\n                            case XmlParser.CharCodeQuestion:\r\n                                state = XmlState.Header;\r\n                                start = p;\r\n                                break;\r\n                            case XmlParser.CharCodeSlash:\r\n                                if (!parent) {\r\n                                    throw new XmlError('Expected node name', str, p);\r\n                                }\r\n                                start = p + 1;\r\n                                state = XmlState.IgnoreSpaces;\r\n                                next = XmlState.Close;\r\n                                break;\r\n                            default:\r\n                                state = XmlState.TagName;\r\n                                start = p;\r\n                                continue;\r\n                        }\r\n                        break;\r\n                    case XmlState.TagName:\r\n                        if (!XmlParser.isValidChar(c)) {\r\n                            if (p === start) {\r\n                                throw new XmlError('Expected node name', str, p);\r\n                            }\r\n                            xml = new XmlNode();\r\n                            xml.nodeType = XmlNodeType.Element;\r\n                            xml.localName = str.substr(start, p - start);\r\n                            parent.addChild(xml);\r\n                            state = XmlState.IgnoreSpaces;\r\n                            next = XmlState.Body;\r\n                            continue;\r\n                        }\r\n                        break;\r\n                    case XmlState.Body:\r\n                        switch (c) {\r\n                            case XmlParser.CharCodeSlash:\r\n                                state = XmlState.WaitEnd;\r\n                                break;\r\n                            case XmlParser.CharCodeGreaterThan:\r\n                                state = XmlState.Childs;\r\n                                break;\r\n                            default:\r\n                                state = XmlState.AttribName;\r\n                                start = p;\r\n                                continue;\r\n                        }\r\n                        break;\r\n                    case XmlState.AttribName:\r\n                        if (!XmlParser.isValidChar(c)) {\r\n                            if (start === p) {\r\n                                throw new XmlError('Expected attribute name', str, p);\r\n                            }\r\n                            let tmp = str.substr(start, p - start);\r\n                            aname = tmp;\r\n                            if (xml.attributes.has(aname)) {\r\n                                throw new XmlError(`Duplicate attribute [${aname}]`, str, p);\r\n                            }\r\n                            state = XmlState.IgnoreSpaces;\r\n                            next = XmlState.Equals;\r\n                            continue;\r\n                        }\r\n                        break;\r\n                    case XmlState.Equals:\r\n                        switch (c) {\r\n                            case XmlParser.CharCodeEquals:\r\n                                state = XmlState.IgnoreSpaces;\r\n                                next = XmlState.AttvalBegin;\r\n                                break;\r\n                            default:\r\n                                throw new XmlError('Expected =', str, p);\r\n                        }\r\n                        break;\r\n                    case XmlState.AttvalBegin:\r\n                        switch (c) {\r\n                            case XmlParser.CharCodeDoubleQuote:\r\n                            case XmlParser.CharCodeSingleQuote:\r\n                                buf = '';\r\n                                state = XmlState.AttribVal;\r\n                                start = p + 1;\r\n                                attrValQuote = c;\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case XmlState.AttribVal:\r\n                        switch (c) {\r\n                            case XmlParser.CharCodeAmp:\r\n                                buf += str.substr(start, p - start);\r\n                                state = XmlState.Escape;\r\n                                escapeNext = XmlState.AttribVal;\r\n                                start = p + 1;\r\n                                break;\r\n                            default:\r\n                                if (c === attrValQuote) {\r\n                                    buf += str.substr(start, p - start);\r\n                                    let val = buf;\r\n                                    buf = '';\r\n                                    xml.attributes.set(aname, val);\r\n                                    state = XmlState.IgnoreSpaces;\r\n                                    next = XmlState.Body;\r\n                                }\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case XmlState.Childs:\r\n                        p = XmlParser.parse(str, p, xml);\r\n                        start = p;\r\n                        state = XmlState.Begin;\r\n                        break;\r\n                    case XmlState.WaitEnd:\r\n                        switch (c) {\r\n                            case XmlParser.CharCodeGreaterThan:\r\n                                state = XmlState.Begin;\r\n                                break;\r\n                            default:\r\n                                throw new XmlError('Expected >', str, p);\r\n                        }\r\n                        break;\r\n                    case XmlState.WaitEndRet:\r\n                        switch (c) {\r\n                            case XmlParser.CharCodeGreaterThan:\r\n                                return p;\r\n                            default:\r\n                                throw new XmlError('Expected >', str, p);\r\n                        }\r\n                    case XmlState.Close:\r\n                        if (!XmlParser.isValidChar(c)) {\r\n                            if (start === p) {\r\n                                throw new XmlError('Expected node name', str, p);\r\n                            }\r\n                            let v = str.substr(start, p - start);\r\n                            if (v !== parent.localName) {\r\n                                throw new XmlError('Expected </' + parent.localName + '>', str, p);\r\n                            }\r\n                            state = XmlState.IgnoreSpaces;\r\n                            next = XmlState.WaitEndRet;\r\n                            continue;\r\n                        }\r\n                        break;\r\n                    case XmlState.Comment:\r\n                        if (c === XmlParser.CharCodeMinus &&\r\n                            str.charCodeAt(p + 1) === XmlParser.CharCodeMinus &&\r\n                            str.charCodeAt(p + 2) === XmlParser.CharCodeGreaterThan) {\r\n                            p += 2;\r\n                            state = XmlState.Begin;\r\n                        }\r\n                        break;\r\n                    case XmlState.Doctype:\r\n                        if (c === XmlParser.CharCodeBrackedOpen) {\r\n                            nbrackets++;\r\n                        }\r\n                        else if (c === XmlParser.CharCodeBrackedClose) {\r\n                            nbrackets--;\r\n                        }\r\n                        else if (c === XmlParser.CharCodeGreaterThan && nbrackets === 0) {\r\n                            // >\r\n                            let node = new XmlNode();\r\n                            node.nodeType = XmlNodeType.DocumentType;\r\n                            node.value = str.substr(start, p - start);\r\n                            parent.addChild(node);\r\n                            state = XmlState.Begin;\r\n                        }\r\n                        break;\r\n                    case XmlState.Header:\r\n                        if (c === XmlParser.CharCodeQuestion && str.charCodeAt(p + 1) === XmlParser.CharCodeGreaterThan) {\r\n                            p++;\r\n                            state = XmlState.Begin;\r\n                        }\r\n                        break;\r\n                    case XmlState.Escape:\r\n                        if (c === XmlParser.CharCodeSemi) {\r\n                            let s = str.substr(start, p - start);\r\n                            if (s.charCodeAt(0) === XmlParser.CharCodeSharp) {\r\n                                let code = s.charCodeAt(1) === XmlParser.CharCodeLowerX\r\n                                    ? parseInt('0' + s.substr(1, s.length - 1))\r\n                                    : parseInt(s.substr(1, s.length - 1));\r\n                                buf += String.fromCharCode(code);\r\n                            }\r\n                            else if (XmlParser.Escapes.has(s)) {\r\n                                buf += XmlParser.Escapes.get(s);\r\n                            }\r\n                            else {\r\n                                buf += (_a = ('&' + s + ';')) === null || _a === void 0 ? void 0 : _a.toString();\r\n                            }\r\n                            start = p + 1;\r\n                            state = escapeNext;\r\n                        }\r\n                        else if (!XmlParser.isValidChar(c) && c !== XmlParser.CharCodeSharp) {\r\n                            buf += '&';\r\n                            buf += str.substr(start, p - start);\r\n                            p--;\r\n                            start = p + 1;\r\n                            state = escapeNext;\r\n                        }\r\n                        break;\r\n                }\r\n                p++;\r\n            }\r\n            if (state === XmlState.Begin) {\r\n                start = p;\r\n                state = XmlState.Pcdata;\r\n            }\r\n            if (state === XmlState.Pcdata) {\r\n                if (p !== start) {\r\n                    buf += str.substr(start, p - start);\r\n                    let node = new XmlNode();\r\n                    node.nodeType = XmlNodeType.Text;\r\n                    node.value = buf;\r\n                    parent.addChild(node);\r\n                }\r\n                return p;\r\n            }\r\n            if (state === XmlState.Escape && escapeNext === XmlState.Pcdata) {\r\n                buf += '&';\r\n                buf += str.substr(start, p - start);\r\n                let node = new XmlNode();\r\n                node.nodeType = XmlNodeType.Text;\r\n                node.value = buf;\r\n                parent.addChild(node);\r\n                return p;\r\n            }\r\n            throw new XmlError('Unexpected end', str, p);\r\n        }\r\n        static isValidChar(c) {\r\n            return ((c >= XmlParser.CharCodeLowerA && c <= XmlParser.CharCodeLowerZ) ||\r\n                (c >= XmlParser.CharCodeUpperA && c <= XmlParser.CharCodeUpperZ) ||\r\n                (c >= XmlParser.CharCode0 && c <= XmlParser.CharCode9) ||\r\n                c === XmlParser.CharCodeColon ||\r\n                c === XmlParser.CharCodeDot ||\r\n                c === XmlParser.CharCodeUnderscore ||\r\n                c === XmlParser.CharCodeMinus);\r\n        }\r\n    }\r\n    XmlParser.CharCodeLF = 10;\r\n    XmlParser.CharCodeTab = 9;\r\n    XmlParser.CharCodeCR = 13;\r\n    XmlParser.CharCodeSpace = 32;\r\n    XmlParser.CharCodeLowerThan = 60;\r\n    XmlParser.CharCodeAmp = 38;\r\n    XmlParser.CharCodeBrackedClose = 93;\r\n    XmlParser.CharCodeBrackedOpen = 91;\r\n    XmlParser.CharCodeGreaterThan = 62;\r\n    XmlParser.CharCodeExclamation = 33;\r\n    XmlParser.CharCodeUpperD = 68;\r\n    XmlParser.CharCodeLowerD = 100;\r\n    XmlParser.CharCodeMinus = 45;\r\n    XmlParser.CharCodeQuestion = 63;\r\n    XmlParser.CharCodeSlash = 47;\r\n    XmlParser.CharCodeEquals = 61;\r\n    XmlParser.CharCodeDoubleQuote = 34;\r\n    XmlParser.CharCodeSingleQuote = 39;\r\n    XmlParser.CharCodeSharp = 35;\r\n    XmlParser.CharCodeLowerX = 120;\r\n    XmlParser.CharCodeLowerA = 97;\r\n    XmlParser.CharCodeLowerZ = 122;\r\n    XmlParser.CharCodeUpperA = 65;\r\n    XmlParser.CharCodeUpperZ = 90;\r\n    XmlParser.CharCode0 = 48;\r\n    XmlParser.CharCode9 = 57;\r\n    XmlParser.CharCodeColon = 58;\r\n    XmlParser.CharCodeDot = 46;\r\n    XmlParser.CharCodeUnderscore = 95;\r\n    XmlParser.CharCodeSemi = 59;\r\n    XmlParser.Escapes = new Map([\r\n        ['lt', '<'],\r\n        ['gt', '>'],\r\n        ['amp', '&'],\r\n        ['quot', '\"'],\r\n        ['apos', \"'\"]\r\n    ]);\n\n    class XmlWriter {\r\n        constructor(indention, xmlHeader) {\r\n            // NOTE: we use the string.join variant rather than the\r\n            // string concatenation for IE performnace concerns\r\n            this._result = [];\r\n            this._indention = indention;\r\n            this._xmlHeader = xmlHeader;\r\n            this._currentIndention = '';\r\n            this._isStartOfLine = true;\r\n        }\r\n        static write(xml, indention, xmlHeader) {\r\n            const writer = new XmlWriter(indention, xmlHeader);\r\n            writer.writeNode(xml);\r\n            return writer.toString();\r\n        }\r\n        writeNode(xml) {\r\n            switch (xml.nodeType) {\r\n                case XmlNodeType.None:\r\n                    break;\r\n                case XmlNodeType.Element:\r\n                    if (this._result.length > 0) {\r\n                        this.writeLine();\r\n                    }\r\n                    this.write(`<${xml.localName}`);\r\n                    for (const [name, value] of xml.attributes) {\r\n                        this.write(` ${name}=\"`);\r\n                        this.writeAttributeValue(value);\r\n                        this.write('\"');\r\n                    }\r\n                    if (xml.childNodes.length === 0) {\r\n                        this.write('/>');\r\n                    }\r\n                    else {\r\n                        this.write('>');\r\n                        if (xml.childNodes.length === 1 && !xml.firstElement) {\r\n                            this.writeNode(xml.childNodes[0]);\r\n                        }\r\n                        else {\r\n                            this.indent();\r\n                            for (const child of xml.childNodes) {\r\n                                // skip text nodes in case of multiple children\r\n                                if (child.nodeType === XmlNodeType.Element) {\r\n                                    this.writeNode(child);\r\n                                }\r\n                            }\r\n                            this.unindend();\r\n                            this.writeLine();\r\n                        }\r\n                        this.write(`</${xml.localName}>`);\r\n                    }\r\n                    break;\r\n                case XmlNodeType.Text:\r\n                    if (xml.value) {\r\n                        this.write(xml.value);\r\n                    }\r\n                    break;\r\n                case XmlNodeType.CDATA:\r\n                    if (xml.value !== null) {\r\n                        this.write(`<![CDATA[${xml.value}]]>`);\r\n                    }\r\n                    break;\r\n                case XmlNodeType.Document:\r\n                    if (this._xmlHeader) {\r\n                        this.write('<?xml version=\"1.0\" encoding=\"utf-8\"?>');\r\n                    }\r\n                    for (const child of xml.childNodes) {\r\n                        this.writeNode(child);\r\n                    }\r\n                    break;\r\n                case XmlNodeType.DocumentType:\r\n                    this.write(`<!DOCTYPE ${xml.value}>`);\r\n                    break;\r\n            }\r\n        }\r\n        unindend() {\r\n            this._currentIndention = this._currentIndention.substr(0, this._currentIndention.length - this._indention.length);\r\n        }\r\n        indent() {\r\n            this._currentIndention += this._indention;\r\n        }\r\n        writeAttributeValue(value) {\r\n            for (let i = 0; i < value.length; i++) {\r\n                const c = value.charAt(i);\r\n                switch (c) {\r\n                    case '<':\r\n                        this._result.push('&lt;');\r\n                        break;\r\n                    case '>':\r\n                        this._result.push('&gt;');\r\n                        break;\r\n                    case '&':\r\n                        this._result.push('&amp;');\r\n                        break;\r\n                    case \"'\":\r\n                        this._result.push('&apos;');\r\n                        break;\r\n                    case '\"':\r\n                        this._result.push('&quot;');\r\n                        break;\r\n                    default:\r\n                        this._result.push(c);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        write(s) {\r\n            if (this._isStartOfLine) {\r\n                this._result.push(this._currentIndention);\r\n            }\r\n            this._result.push(s);\r\n            this._isStartOfLine = false;\r\n        }\r\n        writeLine(s = null) {\r\n            if (s) {\r\n                this.write(s);\r\n            }\r\n            if (this._indention.length > 0 && !this._isStartOfLine) {\r\n                this._result.push('\\n');\r\n                this._isStartOfLine = true;\r\n            }\r\n        }\r\n        toString() {\r\n            return this._result.join('').trimRight();\r\n        }\r\n    }\n\n    // This XML parser is based on the XML Parser of the Haxe Standard Library (MIT)\r\n    class XmlDocument extends XmlNode {\r\n        constructor() {\r\n            super();\r\n            this.nodeType = XmlNodeType.Document;\r\n        }\r\n        parse(xml) {\r\n            XmlParser.parse(xml, 0, this);\r\n        }\r\n        toString(indention = '', xmlHeader = false) {\r\n            return XmlWriter.write(this, indention, xmlHeader);\r\n        }\r\n    }\n\n    var BeamDirection;\r\n    (function (BeamDirection) {\r\n        BeamDirection[BeamDirection[\"Up\"] = 0] = \"Up\";\r\n        BeamDirection[BeamDirection[\"Down\"] = 1] = \"Down\";\r\n    })(BeamDirection || (BeamDirection = {}));\n\n    /**\r\n     * This structure represents a duration within a gpif\r\n     */\r\n    class GpifRhythm {\r\n        constructor() {\r\n            this.id = '';\r\n            this.dots = 0;\r\n            this.tupletDenominator = -1;\r\n            this.tupletNumerator = -1;\r\n            this.value = Duration.Quarter;\r\n        }\r\n    }\r\n    class GpifSound {\r\n        constructor() {\r\n            this.name = '';\r\n            this.path = '';\r\n            this.role = '';\r\n            this.program = 0;\r\n        }\r\n        get uniqueId() {\r\n            return this.path + ';' + this.name + ';' + this.role;\r\n        }\r\n    }\r\n    /**\r\n     * This class can parse a score.gpif xml file into the model structure\r\n     */\r\n    class GpifParser {\r\n        constructor() {\r\n            this._hasAnacrusis = false;\r\n            this._skipApplyLyrics = false;\r\n        }\r\n        parseXml(xml, settings) {\r\n            this._masterTrackAutomations = new Map();\r\n            this._automationsPerTrackIdAndBarIndex = new Map();\r\n            this._tracksMapping = [];\r\n            this._tracksById = new Map();\r\n            this._masterBars = [];\r\n            this._barsOfMasterBar = [];\r\n            this._voicesOfBar = new Map();\r\n            this._barsById = new Map();\r\n            this._voiceById = new Map();\r\n            this._beatsOfVoice = new Map();\r\n            this._beatById = new Map();\r\n            this._rhythmOfBeat = new Map();\r\n            this._rhythmById = new Map();\r\n            this._notesOfBeat = new Map();\r\n            this._noteById = new Map();\r\n            this._tappedNotes = new Map();\r\n            this._lyricsByTrack = new Map();\r\n            this._soundsByTrack = new Map();\r\n            this._skipApplyLyrics = false;\r\n            let dom = new XmlDocument();\r\n            try {\r\n                dom.parse(xml);\r\n            }\r\n            catch (e) {\r\n                throw new UnsupportedFormatError('Could not parse XML', e);\r\n            }\r\n            this.parseDom(dom);\r\n            this.buildModel();\r\n            this.score.finish(settings);\r\n            if (!this._skipApplyLyrics && this._lyricsByTrack.size > 0) {\r\n                for (const [t, lyrics] of this._lyricsByTrack) {\r\n                    let track = this._tracksById.get(t);\r\n                    track.applyLyrics(lyrics);\r\n                }\r\n            }\r\n        }\r\n        parseDom(dom) {\r\n            let root = dom.firstElement;\r\n            if (!root) {\r\n                return;\r\n            }\r\n            // the XML uses IDs for referring elements within the\r\n            //  Therefore we do the parsing in 2 steps:\r\n            // - at first we read all model elements and store them by ID in a lookup table\r\n            // - after that we need to join up the information.\r\n            if (root.localName === 'GPIF') {\r\n                this.score = new Score();\r\n                // parse all children\r\n                for (let n of root.childNodes) {\r\n                    if (n.nodeType === XmlNodeType.Element) {\r\n                        switch (n.localName) {\r\n                            case 'Score':\r\n                                this.parseScoreNode(n);\r\n                                break;\r\n                            case 'MasterTrack':\r\n                                this.parseMasterTrackNode(n);\r\n                                break;\r\n                            case 'Tracks':\r\n                                this.parseTracksNode(n);\r\n                                break;\r\n                            case 'MasterBars':\r\n                                this.parseMasterBarsNode(n);\r\n                                break;\r\n                            case 'Bars':\r\n                                this.parseBars(n);\r\n                                break;\r\n                            case 'Voices':\r\n                                this.parseVoices(n);\r\n                                break;\r\n                            case 'Beats':\r\n                                this.parseBeats(n);\r\n                                break;\r\n                            case 'Notes':\r\n                                this.parseNotes(n);\r\n                                break;\r\n                            case 'Rhythms':\r\n                                this.parseRhythms(n);\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                throw new UnsupportedFormatError('Root node of XML was not GPIF');\r\n            }\r\n        }\r\n        //\r\n        // <Score>...</Score>\r\n        //\r\n        parseScoreNode(element) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Title':\r\n                            this.score.title = c.firstChild.innerText;\r\n                            break;\r\n                        case 'SubTitle':\r\n                            this.score.subTitle = c.firstChild.innerText;\r\n                            break;\r\n                        case 'Artist':\r\n                            this.score.artist = c.firstChild.innerText;\r\n                            break;\r\n                        case 'Album':\r\n                            this.score.album = c.firstChild.innerText;\r\n                            break;\r\n                        case 'Words':\r\n                            this.score.words = c.firstChild.innerText;\r\n                            break;\r\n                        case 'Music':\r\n                            this.score.music = c.firstChild.innerText;\r\n                            break;\r\n                        case 'WordsAndMusic':\r\n                            if (c.firstChild && c.firstChild.innerText !== '') {\r\n                                let wordsAndMusic = c.firstChild.innerText;\r\n                                if (wordsAndMusic && !this.score.words) {\r\n                                    this.score.words = wordsAndMusic;\r\n                                }\r\n                                if (wordsAndMusic && !this.score.music) {\r\n                                    this.score.music = wordsAndMusic;\r\n                                }\r\n                            }\r\n                            break;\r\n                        case 'Copyright':\r\n                            this.score.copyright = c.firstChild.innerText;\r\n                            break;\r\n                        case 'Tabber':\r\n                            this.score.tab = c.firstChild.innerText;\r\n                            break;\r\n                        case 'Instructions':\r\n                            this.score.instructions = c.firstChild.innerText;\r\n                            break;\r\n                        case 'Notices':\r\n                            this.score.notices = c.firstChild.innerText;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //\r\n        // <MasterTrack>...</MasterTrack>\r\n        //\r\n        parseMasterTrackNode(node) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Automations':\r\n                            this.parseAutomations(c, this._masterTrackAutomations, null);\r\n                            break;\r\n                        case 'Tracks':\r\n                            this._tracksMapping = c.innerText.split(' ');\r\n                            break;\r\n                        case 'Anacrusis':\r\n                            this._hasAnacrusis = true;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseAutomations(node, automations, sounds) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Automation':\r\n                            this.parseAutomation(c, automations, sounds);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseAutomation(node, automations, sounds) {\r\n            let type = null;\r\n            let isLinear = false;\r\n            let barIndex = -1;\r\n            let ratioPosition = 0;\r\n            let numberValue = 0;\r\n            let textValue = null;\r\n            let reference = 0;\r\n            let text = null;\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Type':\r\n                            type = c.innerText;\r\n                            break;\r\n                        case 'Linear':\r\n                            isLinear = c.innerText.toLowerCase() === 'true';\r\n                            break;\r\n                        case 'Bar':\r\n                            barIndex = parseInt(c.innerText);\r\n                            break;\r\n                        case 'Position':\r\n                            ratioPosition = parseFloat(c.innerText);\r\n                            break;\r\n                        case 'Value':\r\n                            if (c.firstElement && c.firstElement.nodeType === XmlNodeType.CDATA) {\r\n                                textValue = c.innerText;\r\n                            }\r\n                            else {\r\n                                let parts = c.innerText.split(' ');\r\n                                // Issue 391: Some GPX files might have\r\n                                // single floating point value.\r\n                                if (parts.length === 1) {\r\n                                    numberValue = parseFloat(parts[0]);\r\n                                    reference = 1;\r\n                                }\r\n                                else {\r\n                                    numberValue = parseFloat(parts[0]);\r\n                                    reference = parseInt(parts[1]);\r\n                                }\r\n                            }\r\n                            break;\r\n                        case 'Text':\r\n                            text = c.innerText;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (!type) {\r\n                return;\r\n            }\r\n            let automation = null;\r\n            switch (type) {\r\n                case 'Tempo':\r\n                    automation = Automation.buildTempoAutomation(isLinear, ratioPosition, numberValue, reference);\r\n                    break;\r\n                case 'Sound':\r\n                    if (textValue && sounds && sounds.has(textValue)) {\r\n                        automation = Automation.buildInstrumentAutomation(isLinear, ratioPosition, sounds.get(textValue).program);\r\n                    }\r\n                    break;\r\n            }\r\n            if (automation) {\r\n                if (text) {\r\n                    automation.text = text;\r\n                }\r\n                if (barIndex >= 0) {\r\n                    if (!automations.has(barIndex)) {\r\n                        automations.set(barIndex, []);\r\n                    }\r\n                    automations.get(barIndex).push(automation);\r\n                }\r\n            }\r\n        }\r\n        //\r\n        // <Tracks>...</Tracks>\r\n        //\r\n        parseTracksNode(node) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Track':\r\n                            this.parseTrack(c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseTrack(node) {\r\n            this._articulationByName = new Map();\r\n            let track = new Track();\r\n            track.ensureStaveCount(1);\r\n            let staff = track.staves[0];\r\n            staff.showStandardNotation = true;\r\n            let trackId = node.getAttribute('id');\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Name':\r\n                            track.name = c.innerText;\r\n                            break;\r\n                        case 'Color':\r\n                            let parts = c.innerText.split(' ');\r\n                            if (parts.length >= 3) {\r\n                                let r = parseInt(parts[0]);\r\n                                let g = parseInt(parts[1]);\r\n                                let b = parseInt(parts[2]);\r\n                                track.color = new Color(r, g, b, 0xff);\r\n                            }\r\n                            break;\r\n                        case 'Instrument':\r\n                            let instrumentName = c.getAttribute('ref');\r\n                            if (instrumentName.endsWith('-gs') || instrumentName.endsWith('GrandStaff')) {\r\n                                track.ensureStaveCount(2);\r\n                                track.staves[1].showStandardNotation = true;\r\n                            }\r\n                            break;\r\n                        case 'InstrumentSet':\r\n                            this.parseInstrumentSet(track, c);\r\n                            break;\r\n                        case 'NotationPatch':\r\n                            this.parseNotationPatch(track, c);\r\n                            break;\r\n                        case 'ShortName':\r\n                            track.shortName = c.innerText;\r\n                            break;\r\n                        case 'Lyrics':\r\n                            this.parseLyrics(trackId, c);\r\n                            break;\r\n                        case 'Properties':\r\n                            this.parseTrackProperties(track, c);\r\n                            break;\r\n                        case 'GeneralMidi':\r\n                        case 'MidiConnection':\r\n                        case 'MIDISettings':\r\n                            this.parseGeneralMidi(track, c);\r\n                            break;\r\n                        case 'Sounds':\r\n                            this.parseSounds(trackId, track, c);\r\n                            break;\r\n                        case 'PlaybackState':\r\n                            let state = c.innerText;\r\n                            track.playbackInfo.isSolo = state === 'Solo';\r\n                            track.playbackInfo.isMute = state === 'Mute';\r\n                            break;\r\n                        case 'PartSounding':\r\n                            this.parsePartSounding(track, c);\r\n                            break;\r\n                        case 'Staves':\r\n                            this.parseStaves(track, c);\r\n                            break;\r\n                        case 'Transpose':\r\n                            this.parseTranspose(track, c);\r\n                            break;\r\n                        case 'RSE':\r\n                            this.parseRSE(track, c);\r\n                            break;\r\n                        case 'Automations':\r\n                            this.parseTrackAutomations(trackId, c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            this._tracksById.set(trackId, track);\r\n        }\r\n        parseTrackAutomations(trackId, c) {\r\n            const trackAutomations = new Map();\r\n            this._automationsPerTrackIdAndBarIndex.set(trackId, trackAutomations);\r\n            this.parseAutomations(c, trackAutomations, this._soundsByTrack.get(trackId));\r\n        }\r\n        parseNotationPatch(track, node) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'LineCount':\r\n                            const lineCount = parseInt(c.innerText);\r\n                            for (let staff of track.staves) {\r\n                                staff.standardNotationLineCount = lineCount;\r\n                            }\r\n                            break;\r\n                        case 'Elements':\r\n                            this.parseElements(track, c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseInstrumentSet(track, node) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Type':\r\n                            switch (c.innerText) {\r\n                                case 'drumKit':\r\n                                    for (let staff of track.staves) {\r\n                                        staff.isPercussion = true;\r\n                                    }\r\n                                    break;\r\n                            }\r\n                            if (c.innerText === 'drumKit') {\r\n                                for (let staff of track.staves) {\r\n                                    staff.isPercussion = true;\r\n                                }\r\n                            }\r\n                            break;\r\n                        case 'Elements':\r\n                            this.parseElements(track, c);\r\n                            break;\r\n                        case 'LineCount':\r\n                            const lineCount = parseInt(c.innerText);\r\n                            for (let staff of track.staves) {\r\n                                staff.standardNotationLineCount = lineCount;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseElements(track, node) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Element':\r\n                            this.parseElement(track, c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseElement(track, node) {\r\n            const typeElement = node.findChildElement('Type');\r\n            const type = typeElement ? typeElement.innerText : \"\";\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Name':\r\n                        case 'Articulations':\r\n                            this.parseArticulations(track, c, type);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseArticulations(track, node, elementType) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Articulation':\r\n                            this.parseArticulation(track, c, elementType);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseArticulation(track, node, elementType) {\r\n            const articulation = new InstrumentArticulation();\r\n            articulation.outputMidiNumber = -1;\r\n            articulation.elementType = elementType;\r\n            let name = '';\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    const txt = c.innerText;\r\n                    switch (c.localName) {\r\n                        case 'Name':\r\n                            name = c.innerText;\r\n                            break;\r\n                        case 'OutputMidiNumber':\r\n                            if (txt.length > 0) {\r\n                                articulation.outputMidiNumber = parseInt(txt);\r\n                            }\r\n                            break;\r\n                        case 'TechniqueSymbol':\r\n                            articulation.techniqueSymbol = this.parseTechniqueSymbol(txt);\r\n                            break;\r\n                        case 'TechniquePlacement':\r\n                            switch (txt) {\r\n                                case 'outside':\r\n                                    articulation.techniqueSymbolPlacement = TextBaseline.Bottom;\r\n                                    break;\r\n                                case 'inside':\r\n                                    articulation.techniqueSymbolPlacement = TextBaseline.Middle;\r\n                                    break;\r\n                                case 'above':\r\n                                    articulation.techniqueSymbolPlacement = TextBaseline.Bottom;\r\n                                    break;\r\n                                case 'below':\r\n                                    articulation.techniqueSymbolPlacement = TextBaseline.Top;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                        case 'Noteheads':\r\n                            const noteHeadsTxt = txt.split(' ');\r\n                            if (noteHeadsTxt.length >= 1) {\r\n                                articulation.noteHeadDefault = this.parseNoteHead(noteHeadsTxt[0]);\r\n                            }\r\n                            if (noteHeadsTxt.length >= 2) {\r\n                                articulation.noteHeadHalf = this.parseNoteHead(noteHeadsTxt[1]);\r\n                            }\r\n                            if (noteHeadsTxt.length >= 3) {\r\n                                articulation.noteHeadWhole = this.parseNoteHead(noteHeadsTxt[2]);\r\n                            }\r\n                            if (articulation.noteHeadHalf == MusicFontSymbol.None) {\r\n                                articulation.noteHeadHalf = articulation.noteHeadDefault;\r\n                            }\r\n                            if (articulation.noteHeadWhole == MusicFontSymbol.None) {\r\n                                articulation.noteHeadWhole = articulation.noteHeadDefault;\r\n                            }\r\n                            break;\r\n                        case 'StaffLine':\r\n                            if (txt.length > 0) {\r\n                                articulation.staffLine = parseInt(txt);\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (articulation.outputMidiNumber !== -1) {\r\n                track.percussionArticulations.push(articulation);\r\n                if (name.length > 0) {\r\n                    this._articulationByName.set(name, articulation);\r\n                }\r\n            }\r\n            else if (name.length > 0 && this._articulationByName.has(name)) {\r\n                this._articulationByName.get(name).staffLine = articulation.staffLine;\r\n            }\r\n        }\r\n        parseTechniqueSymbol(txt) {\r\n            switch (txt) {\r\n                case 'pictEdgeOfCymbal':\r\n                    return MusicFontSymbol.PictEdgeOfCymbal;\r\n                case 'articStaccatoAbove':\r\n                    return MusicFontSymbol.ArticStaccatoAbove;\r\n                case 'noteheadParenthesis':\r\n                    return MusicFontSymbol.NoteheadParenthesis;\r\n                case 'stringsUpBow':\r\n                    return MusicFontSymbol.StringsUpBow;\r\n                case 'stringsDownBow':\r\n                    return MusicFontSymbol.StringsDownBow;\r\n                case 'guitarGolpe':\r\n                    return MusicFontSymbol.GuitarGolpe;\r\n                default:\r\n                    return MusicFontSymbol.None;\r\n            }\r\n        }\r\n        parseNoteHead(txt) {\r\n            switch (txt) {\r\n                case 'noteheadDoubleWholeSquare':\r\n                    return MusicFontSymbol.NoteheadDoubleWholeSquare;\r\n                case 'noteheadDoubleWhole':\r\n                    return MusicFontSymbol.NoteheadDoubleWhole;\r\n                case 'noteheadWhole':\r\n                    return MusicFontSymbol.NoteheadWhole;\r\n                case 'noteheadHalf':\r\n                    return MusicFontSymbol.NoteheadHalf;\r\n                case 'noteheadBlack':\r\n                    return MusicFontSymbol.NoteheadBlack;\r\n                case 'noteheadNull':\r\n                    return MusicFontSymbol.NoteheadNull;\r\n                case 'noteheadXOrnate':\r\n                    return MusicFontSymbol.NoteheadXOrnate;\r\n                case 'noteheadTriangleUpWhole':\r\n                    return MusicFontSymbol.NoteheadTriangleUpWhole;\r\n                case 'noteheadTriangleUpHalf':\r\n                    return MusicFontSymbol.NoteheadTriangleUpHalf;\r\n                case 'noteheadTriangleUpBlack':\r\n                    return MusicFontSymbol.NoteheadTriangleUpBlack;\r\n                case 'noteheadDiamondBlackWide':\r\n                    return MusicFontSymbol.NoteheadDiamondBlackWide;\r\n                case 'noteheadDiamondWhite':\r\n                    return MusicFontSymbol.NoteheadDiamondWhite;\r\n                case 'noteheadDiamondWhiteWide':\r\n                    return MusicFontSymbol.NoteheadDiamondWhiteWide;\r\n                case 'noteheadCircleX':\r\n                    return MusicFontSymbol.NoteheadCircleX;\r\n                case 'noteheadXWhole':\r\n                    return MusicFontSymbol.NoteheadXWhole;\r\n                case 'noteheadXHalf':\r\n                    return MusicFontSymbol.NoteheadXHalf;\r\n                case 'noteheadXBlack':\r\n                    return MusicFontSymbol.NoteheadXBlack;\r\n                case 'noteheadParenthesis':\r\n                    return MusicFontSymbol.NoteheadParenthesis;\r\n                case 'noteheadSlashedBlack2':\r\n                    return MusicFontSymbol.NoteheadSlashedBlack2;\r\n                case 'noteheadCircleSlash':\r\n                    return MusicFontSymbol.NoteheadCircleSlash;\r\n                case 'noteheadHeavyX':\r\n                    return MusicFontSymbol.NoteheadHeavyX;\r\n                case 'noteheadHeavyXHat':\r\n                    return MusicFontSymbol.NoteheadHeavyXHat;\r\n                default:\r\n                    Logger.warning('GPIF', 'Unknown notehead symbol', txt);\r\n                    return MusicFontSymbol.None;\r\n            }\r\n        }\r\n        parseStaves(track, node) {\r\n            let staffIndex = 0;\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Staff':\r\n                            track.ensureStaveCount(staffIndex + 1);\r\n                            let staff = track.staves[staffIndex];\r\n                            this.parseStaff(staff, c);\r\n                            staffIndex++;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseStaff(staff, node) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Properties':\r\n                            this.parseStaffProperties(staff, c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseStaffProperties(staff, node) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Property':\r\n                            this.parseStaffProperty(staff, c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseStaffProperty(staff, node) {\r\n            let propertyName = node.getAttribute('name');\r\n            switch (propertyName) {\r\n                case 'Tuning':\r\n                    for (let c of node.childNodes) {\r\n                        if (c.nodeType === XmlNodeType.Element) {\r\n                            switch (c.localName) {\r\n                                case 'Pitches':\r\n                                    let tuningParts = node.findChildElement('Pitches').innerText.split(' ');\r\n                                    let tuning = new Array(tuningParts.length);\r\n                                    for (let i = 0; i < tuning.length; i++) {\r\n                                        tuning[tuning.length - 1 - i] = parseInt(tuningParts[i]);\r\n                                    }\r\n                                    staff.stringTuning.tunings = tuning;\r\n                                    break;\r\n                                case 'Label':\r\n                                    staff.stringTuning.name = c.innerText;\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (!staff.isPercussion) {\r\n                        staff.showTablature = true;\r\n                    }\r\n                    break;\r\n                case 'DiagramCollection':\r\n                case 'ChordCollection':\r\n                    this.parseDiagramCollectionForStaff(staff, node);\r\n                    break;\r\n                case 'CapoFret':\r\n                    let capo = parseInt(node.findChildElement('Fret').innerText);\r\n                    staff.capo = capo;\r\n                    break;\r\n            }\r\n        }\r\n        parseLyrics(trackId, node) {\r\n            let tracks = [];\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Line':\r\n                            tracks.push(this.parseLyricsLine(c));\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            this._lyricsByTrack.set(trackId, tracks);\r\n        }\r\n        parseLyricsLine(node) {\r\n            let lyrics = new Lyrics();\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Offset':\r\n                            lyrics.startBar = parseInt(c.innerText);\r\n                            break;\r\n                        case 'Text':\r\n                            lyrics.text = c.innerText;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            return lyrics;\r\n        }\r\n        parseDiagramCollectionForTrack(track, node) {\r\n            let items = node.findChildElement('Items');\r\n            for (let c of items.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Item':\r\n                            this.parseDiagramItemForTrack(track, c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseDiagramCollectionForStaff(staff, node) {\r\n            let items = node.findChildElement('Items');\r\n            for (let c of items.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Item':\r\n                            this.parseDiagramItemForStaff(staff, c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseDiagramItemForTrack(track, node) {\r\n            let chord = new Chord();\r\n            let chordId = node.getAttribute('id');\r\n            for (let staff of track.staves) {\r\n                staff.addChord(chordId, chord);\r\n            }\r\n            this.parseDiagramItemForChord(chord, node);\r\n        }\r\n        parseDiagramItemForStaff(staff, node) {\r\n            let chord = new Chord();\r\n            let chordId = node.getAttribute('id');\r\n            staff.addChord(chordId, chord);\r\n            this.parseDiagramItemForChord(chord, node);\r\n        }\r\n        parseDiagramItemForChord(chord, node) {\r\n            chord.name = node.getAttribute('name');\r\n            let diagram = node.findChildElement('Diagram');\r\n            let stringCount = parseInt(diagram.getAttribute('stringCount'));\r\n            let baseFret = parseInt(diagram.getAttribute('baseFret'));\r\n            chord.firstFret = baseFret + 1;\r\n            for (let i = 0; i < stringCount; i++) {\r\n                chord.strings.push(-1);\r\n            }\r\n            for (let c of diagram.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Fret':\r\n                            let guitarString = parseInt(c.getAttribute('string'));\r\n                            chord.strings[stringCount - guitarString - 1] = baseFret + parseInt(c.getAttribute('fret'));\r\n                            break;\r\n                        case 'Fingering':\r\n                            let existingFingers = new Map();\r\n                            for (let p of c.childNodes) {\r\n                                if (p.nodeType === XmlNodeType.Element) {\r\n                                    switch (p.localName) {\r\n                                        case 'Position':\r\n                                            let finger = Fingers.Unknown;\r\n                                            let fret = baseFret + parseInt(p.getAttribute('fret'));\r\n                                            switch (p.getAttribute('finger')) {\r\n                                                case 'Index':\r\n                                                    finger = Fingers.IndexFinger;\r\n                                                    break;\r\n                                                case 'Middle':\r\n                                                    finger = Fingers.MiddleFinger;\r\n                                                    break;\r\n                                                case 'Rank':\r\n                                                    finger = Fingers.AnnularFinger;\r\n                                                    break;\r\n                                                case 'Pinky':\r\n                                                    finger = Fingers.LittleFinger;\r\n                                                    break;\r\n                                                case 'Thumb':\r\n                                                    finger = Fingers.Thumb;\r\n                                                    break;\r\n                                            }\r\n                                            if (finger !== Fingers.Unknown) {\r\n                                                if (existingFingers.has(finger)) {\r\n                                                    chord.barreFrets.push(fret);\r\n                                                }\r\n                                                else {\r\n                                                    existingFingers.set(finger, true);\r\n                                                }\r\n                                            }\r\n                                            break;\r\n                                    }\r\n                                }\r\n                            }\r\n                            break;\r\n                        case 'Property':\r\n                            switch (c.getAttribute('name')) {\r\n                                case 'ShowName':\r\n                                    chord.showName = c.getAttribute('value') === 'true';\r\n                                    break;\r\n                                case 'ShowDiagram':\r\n                                    chord.showDiagram = c.getAttribute('value') === 'true';\r\n                                    break;\r\n                                case 'ShowFingering':\r\n                                    chord.showFingering = c.getAttribute('value') === 'true';\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseTrackProperties(track, node) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Property':\r\n                            this.parseTrackProperty(track, c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseTrackProperty(track, node) {\r\n            let propertyName = node.getAttribute('name');\r\n            switch (propertyName) {\r\n                case 'Tuning':\r\n                    let tuningParts = node.findChildElement('Pitches').innerText.split(' ');\r\n                    let tuning = new Array(tuningParts.length);\r\n                    for (let i = 0; i < tuning.length; i++) {\r\n                        tuning[tuning.length - 1 - i] = parseInt(tuningParts[i]);\r\n                    }\r\n                    for (let staff of track.staves) {\r\n                        staff.stringTuning.tunings = tuning;\r\n                        staff.showStandardNotation = true;\r\n                        staff.showTablature = true;\r\n                    }\r\n                    break;\r\n                case 'DiagramCollection':\r\n                case 'ChordCollection':\r\n                    this.parseDiagramCollectionForTrack(track, node);\r\n                    break;\r\n                case 'CapoFret':\r\n                    let capo = parseInt(node.findChildElement('Fret').innerText);\r\n                    for (let staff of track.staves) {\r\n                        staff.capo = capo;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        parseGeneralMidi(track, node) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Program':\r\n                            track.playbackInfo.program = parseInt(c.innerText);\r\n                            break;\r\n                        case 'Port':\r\n                            track.playbackInfo.port = parseInt(c.innerText);\r\n                            break;\r\n                        case 'PrimaryChannel':\r\n                            track.playbackInfo.primaryChannel = parseInt(c.innerText);\r\n                            break;\r\n                        case 'SecondaryChannel':\r\n                            track.playbackInfo.secondaryChannel = parseInt(c.innerText);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            let isPercussion = node.getAttribute('table') === 'Percussion';\r\n            if (isPercussion) {\r\n                for (let staff of track.staves) {\r\n                    staff.isPercussion = true;\r\n                }\r\n            }\r\n        }\r\n        parseSounds(trackId, track, node) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Sound':\r\n                            this.parseSound(trackId, track, c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseSound(trackId, track, node) {\r\n            const sound = new GpifSound();\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Name':\r\n                            sound.name = c.innerText;\r\n                            break;\r\n                        case 'Path':\r\n                            sound.path = c.innerText;\r\n                            break;\r\n                        case 'Role':\r\n                            sound.role = c.innerText;\r\n                            break;\r\n                        case 'MIDI':\r\n                            this.parseSoundMidi(sound, c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (sound.role === 'Factory' || track.playbackInfo.program === 0) {\r\n                track.playbackInfo.program = sound.program;\r\n            }\r\n            if (!this._soundsByTrack.has(trackId)) {\r\n                this._soundsByTrack.set(trackId, new Map());\r\n            }\r\n            this._soundsByTrack.get(trackId).set(sound.uniqueId, sound);\r\n        }\r\n        parseSoundMidi(sound, node) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Program':\r\n                            sound.program = parseInt(c.innerText);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parsePartSounding(track, node) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'TranspositionPitch':\r\n                            for (let staff of track.staves) {\r\n                                staff.displayTranspositionPitch = parseInt(c.innerText);\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseTranspose(track, node) {\r\n            let octave = 0;\r\n            let chromatic = 0;\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Chromatic':\r\n                            chromatic = parseInt(c.innerText);\r\n                            break;\r\n                        case 'Octave':\r\n                            octave = parseInt(c.innerText);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            for (let staff of track.staves) {\r\n                staff.displayTranspositionPitch = octave * 12 + chromatic;\r\n            }\r\n        }\r\n        parseRSE(track, node) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'ChannelStrip':\r\n                            this.parseChannelStrip(track, c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseChannelStrip(track, node) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Parameters':\r\n                            this.parseChannelStripParameters(track, c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseChannelStripParameters(track, node) {\r\n            if (node.firstChild && node.firstChild.value) {\r\n                let parameters = node.firstChild.value.split(' ');\r\n                if (parameters.length >= 12) {\r\n                    track.playbackInfo.balance = Math.floor(parseFloat(parameters[11]) * 16);\r\n                    track.playbackInfo.volume = Math.floor(parseFloat(parameters[12]) * 16);\r\n                }\r\n            }\r\n        }\r\n        //\r\n        // <MasterBars>...</MasterBars>\r\n        //\r\n        parseMasterBarsNode(node) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'MasterBar':\r\n                            this.parseMasterBar(c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseMasterBar(node) {\r\n            let masterBar = new MasterBar();\r\n            if (this._masterBars.length === 0 && this._hasAnacrusis) {\r\n                masterBar.isAnacrusis = true;\r\n            }\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Time':\r\n                            let timeParts = c.innerText.split('/');\r\n                            masterBar.timeSignatureNumerator = parseInt(timeParts[0]);\r\n                            masterBar.timeSignatureDenominator = parseInt(timeParts[1]);\r\n                            break;\r\n                        case 'DoubleBar':\r\n                            masterBar.isDoubleBar = true;\r\n                            break;\r\n                        case 'Section':\r\n                            masterBar.section = new Section();\r\n                            masterBar.section.marker = c.findChildElement('Letter').innerText;\r\n                            masterBar.section.text = c.findChildElement('Text').innerText;\r\n                            break;\r\n                        case 'Repeat':\r\n                            if (c.getAttribute('start').toLowerCase() === 'true') {\r\n                                masterBar.isRepeatStart = true;\r\n                            }\r\n                            if (c.getAttribute('end').toLowerCase() === 'true' && c.getAttribute('count')) {\r\n                                masterBar.repeatCount = parseInt(c.getAttribute('count'));\r\n                            }\r\n                            break;\r\n                        case 'AlternateEndings':\r\n                            let alternateEndings = c.innerText.split(' ');\r\n                            let i = 0;\r\n                            for (let k = 0; k < alternateEndings.length; k++) {\r\n                                i = i | (1 << (-1 + parseInt(alternateEndings[k])));\r\n                            }\r\n                            masterBar.alternateEndings = i;\r\n                            break;\r\n                        case 'Bars':\r\n                            this._barsOfMasterBar.push(c.innerText.split(' '));\r\n                            break;\r\n                        case 'TripletFeel':\r\n                            switch (c.innerText) {\r\n                                case 'NoTripletFeel':\r\n                                    masterBar.tripletFeel = TripletFeel.NoTripletFeel;\r\n                                    break;\r\n                                case 'Triplet8th':\r\n                                    masterBar.tripletFeel = TripletFeel.Triplet8th;\r\n                                    break;\r\n                                case 'Triplet16th':\r\n                                    masterBar.tripletFeel = TripletFeel.Triplet16th;\r\n                                    break;\r\n                                case 'Dotted8th':\r\n                                    masterBar.tripletFeel = TripletFeel.Dotted8th;\r\n                                    break;\r\n                                case 'Dotted16th':\r\n                                    masterBar.tripletFeel = TripletFeel.Dotted16th;\r\n                                    break;\r\n                                case 'Scottish8th':\r\n                                    masterBar.tripletFeel = TripletFeel.Scottish8th;\r\n                                    break;\r\n                                case 'Scottish16th':\r\n                                    masterBar.tripletFeel = TripletFeel.Scottish16th;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                        case 'Key':\r\n                            masterBar.keySignature = parseInt(c.findChildElement('AccidentalCount').innerText);\r\n                            let mode = c.findChildElement('Mode');\r\n                            if (mode) {\r\n                                switch (mode.innerText.toLowerCase()) {\r\n                                    case 'major':\r\n                                        masterBar.keySignatureType = KeySignatureType.Major;\r\n                                        break;\r\n                                    case 'minor':\r\n                                        masterBar.keySignatureType = KeySignatureType.Minor;\r\n                                        break;\r\n                                }\r\n                            }\r\n                            break;\r\n                        case 'Fermatas':\r\n                            this.parseFermatas(masterBar, c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            this._masterBars.push(masterBar);\r\n        }\r\n        parseFermatas(masterBar, node) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Fermata':\r\n                            this.parseFermata(masterBar, c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseFermata(masterBar, node) {\r\n            let offset = 0;\r\n            let fermata = new Fermata();\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Type':\r\n                            switch (c.innerText) {\r\n                                case 'Short':\r\n                                    fermata.type = FermataType.Short;\r\n                                    break;\r\n                                case 'Medium':\r\n                                    fermata.type = FermataType.Medium;\r\n                                    break;\r\n                                case 'Long':\r\n                                    fermata.type = FermataType.Long;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                        case 'Length':\r\n                            fermata.length = parseFloat(c.innerText);\r\n                            break;\r\n                        case 'Offset':\r\n                            let parts = c.innerText.split('/');\r\n                            if (parts.length === 2) {\r\n                                let numerator = parseInt(parts[0]);\r\n                                let denominator = parseInt(parts[1]);\r\n                                offset = ((numerator / denominator) * MidiUtils.QuarterTime) | 0;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            masterBar.addFermata(offset, fermata);\r\n        }\r\n        //\r\n        // <Bars>...</Bars>\r\n        //\r\n        parseBars(node) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Bar':\r\n                            this.parseBar(c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseBar(node) {\r\n            let bar = new Bar();\r\n            let barId = node.getAttribute('id');\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Voices':\r\n                            this._voicesOfBar.set(barId, c.innerText.split(' '));\r\n                            break;\r\n                        case 'Clef':\r\n                            switch (c.innerText) {\r\n                                case 'Neutral':\r\n                                    bar.clef = Clef.Neutral;\r\n                                    break;\r\n                                case 'G2':\r\n                                    bar.clef = Clef.G2;\r\n                                    break;\r\n                                case 'F4':\r\n                                    bar.clef = Clef.F4;\r\n                                    break;\r\n                                case 'C4':\r\n                                    bar.clef = Clef.C4;\r\n                                    break;\r\n                                case 'C3':\r\n                                    bar.clef = Clef.C3;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                        case 'Ottavia':\r\n                            switch (c.innerText) {\r\n                                case '8va':\r\n                                    bar.clefOttava = Ottavia._8va;\r\n                                    break;\r\n                                case '15ma':\r\n                                    bar.clefOttava = Ottavia._15ma;\r\n                                    break;\r\n                                case '8vb':\r\n                                    bar.clefOttava = Ottavia._8vb;\r\n                                    break;\r\n                                case '15mb':\r\n                                    bar.clefOttava = Ottavia._15mb;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                        case 'SimileMark':\r\n                            switch (c.innerText) {\r\n                                case 'Simple':\r\n                                    bar.simileMark = SimileMark.Simple;\r\n                                    break;\r\n                                case 'FirstOfDouble':\r\n                                    bar.simileMark = SimileMark.FirstOfDouble;\r\n                                    break;\r\n                                case 'SecondOfDouble':\r\n                                    bar.simileMark = SimileMark.SecondOfDouble;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            this._barsById.set(barId, bar);\r\n        }\r\n        //\r\n        // <Voices>...</Voices>\r\n        //\r\n        parseVoices(node) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Voice':\r\n                            this.parseVoice(c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseVoice(node) {\r\n            let voice = new Voice();\r\n            let voiceId = node.getAttribute('id');\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Beats':\r\n                            this._beatsOfVoice.set(voiceId, c.innerText.split(' '));\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            this._voiceById.set(voiceId, voice);\r\n        }\r\n        //\r\n        // <Beats>...</Beats>\r\n        //\r\n        parseBeats(node) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Beat':\r\n                            this.parseBeat(c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseBeat(node) {\r\n            let beat = new Beat();\r\n            let beatId = node.getAttribute('id');\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Notes':\r\n                            this._notesOfBeat.set(beatId, c.innerText.split(' '));\r\n                            break;\r\n                        case 'Rhythm':\r\n                            this._rhythmOfBeat.set(beatId, c.getAttribute('ref'));\r\n                            break;\r\n                        case 'Fadding':\r\n                            if (c.innerText === 'FadeIn') {\r\n                                beat.fadeIn = true;\r\n                            }\r\n                            break;\r\n                        case 'Tremolo':\r\n                            switch (c.innerText) {\r\n                                case '1/2':\r\n                                    beat.tremoloSpeed = Duration.Eighth;\r\n                                    break;\r\n                                case '1/4':\r\n                                    beat.tremoloSpeed = Duration.Sixteenth;\r\n                                    break;\r\n                                case '1/8':\r\n                                    beat.tremoloSpeed = Duration.ThirtySecond;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                        case 'Chord':\r\n                            beat.chordId = c.innerText;\r\n                            break;\r\n                        case 'Hairpin':\r\n                            switch (c.innerText) {\r\n                                case 'Crescendo':\r\n                                    beat.crescendo = CrescendoType.Crescendo;\r\n                                    break;\r\n                                case 'Decrescendo':\r\n                                    beat.crescendo = CrescendoType.Decrescendo;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                        case 'Arpeggio':\r\n                            if (c.innerText === 'Up') {\r\n                                beat.brushType = BrushType.ArpeggioUp;\r\n                            }\r\n                            else {\r\n                                beat.brushType = BrushType.ArpeggioDown;\r\n                            }\r\n                            break;\r\n                        case 'Properties':\r\n                            this.parseBeatProperties(c, beat);\r\n                            break;\r\n                        case 'XProperties':\r\n                            this.parseBeatXProperties(c, beat);\r\n                            break;\r\n                        case 'FreeText':\r\n                            beat.text = c.innerText;\r\n                            break;\r\n                        case 'TransposedPitchStemOrientation':\r\n                            switch (c.innerText) {\r\n                                case 'Upward':\r\n                                    beat.preferredBeamDirection = BeamDirection.Up;\r\n                                    break;\r\n                                case 'Downward':\r\n                                    beat.preferredBeamDirection = BeamDirection.Down;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                        case 'Dynamic':\r\n                            switch (c.innerText) {\r\n                                case 'PPP':\r\n                                    beat.dynamics = DynamicValue.PPP;\r\n                                    break;\r\n                                case 'PP':\r\n                                    beat.dynamics = DynamicValue.PP;\r\n                                    break;\r\n                                case 'P':\r\n                                    beat.dynamics = DynamicValue.P;\r\n                                    break;\r\n                                case 'MP':\r\n                                    beat.dynamics = DynamicValue.MP;\r\n                                    break;\r\n                                case 'MF':\r\n                                    beat.dynamics = DynamicValue.MF;\r\n                                    break;\r\n                                case 'F':\r\n                                    beat.dynamics = DynamicValue.F;\r\n                                    break;\r\n                                case 'FF':\r\n                                    beat.dynamics = DynamicValue.FF;\r\n                                    break;\r\n                                case 'FFF':\r\n                                    beat.dynamics = DynamicValue.FFF;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                        case 'GraceNotes':\r\n                            switch (c.innerText) {\r\n                                case 'OnBeat':\r\n                                    beat.graceType = GraceType.OnBeat;\r\n                                    break;\r\n                                case 'BeforeBeat':\r\n                                    beat.graceType = GraceType.BeforeBeat;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                        case 'Legato':\r\n                            if (c.getAttribute('origin') === 'true') {\r\n                                beat.isLegatoOrigin = true;\r\n                            }\r\n                            break;\r\n                        case 'Whammy':\r\n                            let whammyOrigin = new BendPoint(0, 0);\r\n                            whammyOrigin.value = this.toBendValue(parseFloat(c.getAttribute('originValue')));\r\n                            whammyOrigin.offset = this.toBendOffset(parseFloat(c.getAttribute('originOffset')));\r\n                            beat.addWhammyBarPoint(whammyOrigin);\r\n                            let whammyMiddle1 = new BendPoint(0, 0);\r\n                            whammyMiddle1.value = this.toBendValue(parseFloat(c.getAttribute('middleValue')));\r\n                            whammyMiddle1.offset = this.toBendOffset(parseFloat(c.getAttribute('middleOffset1')));\r\n                            beat.addWhammyBarPoint(whammyMiddle1);\r\n                            let whammyMiddle2 = new BendPoint(0, 0);\r\n                            whammyMiddle2.value = this.toBendValue(parseFloat(c.getAttribute('middleValue')));\r\n                            whammyMiddle2.offset = this.toBendOffset(parseFloat(c.getAttribute('middleOffset2')));\r\n                            beat.addWhammyBarPoint(whammyMiddle2);\r\n                            let whammyDestination = new BendPoint(0, 0);\r\n                            whammyDestination.value = this.toBendValue(parseFloat(c.getAttribute('destinationValue')));\r\n                            whammyDestination.offset = this.toBendOffset(parseFloat(c.getAttribute('destinationOffset')));\r\n                            beat.addWhammyBarPoint(whammyDestination);\r\n                            break;\r\n                        case 'Ottavia':\r\n                            switch (c.innerText) {\r\n                                case '8va':\r\n                                    beat.ottava = Ottavia._8va;\r\n                                    break;\r\n                                case '8vb':\r\n                                    beat.ottava = Ottavia._8vb;\r\n                                    break;\r\n                                case '15ma':\r\n                                    beat.ottava = Ottavia._15ma;\r\n                                    break;\r\n                                case '15mb':\r\n                                    beat.ottava = Ottavia._15mb;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                        case 'Lyrics':\r\n                            beat.lyrics = this.parseBeatLyrics(c);\r\n                            this._skipApplyLyrics = true;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            this._beatById.set(beatId, beat);\r\n        }\r\n        parseBeatLyrics(node) {\r\n            const lines = [];\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Line':\r\n                            lines.push(c.innerText);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            return lines;\r\n        }\r\n        parseBeatXProperties(node, beat) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'XProperty':\r\n                            let id = c.getAttribute('id');\r\n                            let val = 0;\r\n                            switch (id) {\r\n                                case '1124204545':\r\n                                    val = parseInt(c.findChildElement('Int').innerText);\r\n                                    beat.invertBeamDirection = val === 1;\r\n                                    break;\r\n                                case '687935489':\r\n                                    val = parseInt(c.findChildElement('Int').innerText);\r\n                                    beat.brushDuration = val;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseBeatProperties(node, beat) {\r\n            let isWhammy = false;\r\n            let whammyOrigin = null;\r\n            let whammyMiddleValue = null;\r\n            let whammyMiddleOffset1 = null;\r\n            let whammyMiddleOffset2 = null;\r\n            let whammyDestination = null;\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Property':\r\n                            let name = c.getAttribute('name');\r\n                            switch (name) {\r\n                                case 'Brush':\r\n                                    if (c.findChildElement('Direction').innerText === 'Up') {\r\n                                        beat.brushType = BrushType.BrushUp;\r\n                                    }\r\n                                    else {\r\n                                        beat.brushType = BrushType.BrushDown;\r\n                                    }\r\n                                    break;\r\n                                case 'PickStroke':\r\n                                    if (c.findChildElement('Direction').innerText === 'Up') {\r\n                                        beat.pickStroke = PickStroke.Up;\r\n                                    }\r\n                                    else {\r\n                                        beat.pickStroke = PickStroke.Down;\r\n                                    }\r\n                                    break;\r\n                                case 'Slapped':\r\n                                    if (c.findChildElement('Enable')) {\r\n                                        beat.slap = true;\r\n                                    }\r\n                                    break;\r\n                                case 'Popped':\r\n                                    if (c.findChildElement('Enable')) {\r\n                                        beat.pop = true;\r\n                                    }\r\n                                    break;\r\n                                case 'VibratoWTremBar':\r\n                                    switch (c.findChildElement('Strength').innerText) {\r\n                                        case 'Wide':\r\n                                            beat.vibrato = VibratoType.Wide;\r\n                                            break;\r\n                                        case 'Slight':\r\n                                            beat.vibrato = VibratoType.Slight;\r\n                                            break;\r\n                                    }\r\n                                    break;\r\n                                case 'WhammyBar':\r\n                                    isWhammy = true;\r\n                                    break;\r\n                                case 'WhammyBarExtend':\r\n                                    // not clear what this is used for\r\n                                    break;\r\n                                case 'WhammyBarOriginValue':\r\n                                    if (!whammyOrigin) {\r\n                                        whammyOrigin = new BendPoint(0, 0);\r\n                                    }\r\n                                    whammyOrigin.value = this.toBendValue(parseFloat(c.findChildElement('Float').innerText));\r\n                                    break;\r\n                                case 'WhammyBarOriginOffset':\r\n                                    if (!whammyOrigin) {\r\n                                        whammyOrigin = new BendPoint(0, 0);\r\n                                    }\r\n                                    whammyOrigin.offset = this.toBendOffset(parseFloat(c.findChildElement('Float').innerText));\r\n                                    break;\r\n                                case 'WhammyBarMiddleValue':\r\n                                    whammyMiddleValue = this.toBendValue(parseFloat(c.findChildElement('Float').innerText));\r\n                                    break;\r\n                                case 'WhammyBarMiddleOffset1':\r\n                                    whammyMiddleOffset1 = this.toBendOffset(parseFloat(c.findChildElement('Float').innerText));\r\n                                    break;\r\n                                case 'WhammyBarMiddleOffset2':\r\n                                    whammyMiddleOffset2 = this.toBendOffset(parseFloat(c.findChildElement('Float').innerText));\r\n                                    break;\r\n                                case 'WhammyBarDestinationValue':\r\n                                    if (!whammyDestination) {\r\n                                        whammyDestination = new BendPoint(BendPoint.MaxPosition, 0);\r\n                                    }\r\n                                    whammyDestination.value = this.toBendValue(parseFloat(c.findChildElement('Float').innerText));\r\n                                    break;\r\n                                case 'WhammyBarDestinationOffset':\r\n                                    if (!whammyDestination) {\r\n                                        whammyDestination = new BendPoint(0, 0);\r\n                                    }\r\n                                    whammyDestination.offset = this.toBendOffset(parseFloat(c.findChildElement('Float').innerText));\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (isWhammy) {\r\n                if (!whammyOrigin) {\r\n                    whammyOrigin = new BendPoint(0, 0);\r\n                }\r\n                if (!whammyDestination) {\r\n                    whammyDestination = new BendPoint(BendPoint.MaxPosition, 0);\r\n                }\r\n                beat.addWhammyBarPoint(whammyOrigin);\r\n                if (whammyMiddleOffset1 && whammyMiddleValue) {\r\n                    beat.addWhammyBarPoint(new BendPoint(whammyMiddleOffset1, whammyMiddleValue));\r\n                }\r\n                if (whammyMiddleOffset2 && whammyMiddleValue) {\r\n                    beat.addWhammyBarPoint(new BendPoint(whammyMiddleOffset2, whammyMiddleValue));\r\n                }\r\n                if (!whammyMiddleOffset1 && !whammyMiddleOffset2 && whammyMiddleValue) {\r\n                    beat.addWhammyBarPoint(new BendPoint((BendPoint.MaxPosition / 2) | 0, whammyMiddleValue));\r\n                }\r\n                beat.addWhammyBarPoint(whammyDestination);\r\n            }\r\n        }\r\n        //\r\n        // <Notes>...</Notes>\r\n        //\r\n        parseNotes(node) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Note':\r\n                            this.parseNote(c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseNote(node) {\r\n            let note = new Note();\r\n            let noteId = node.getAttribute('id');\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Properties':\r\n                            this.parseNoteProperties(c, note, noteId);\r\n                            break;\r\n                        case 'AntiAccent':\r\n                            if (c.innerText.toLowerCase() === 'normal') {\r\n                                note.isGhost = true;\r\n                            }\r\n                            break;\r\n                        case 'LetRing':\r\n                            note.isLetRing = true;\r\n                            break;\r\n                        case 'Trill':\r\n                            note.trillValue = parseInt(c.innerText);\r\n                            note.trillSpeed = Duration.Sixteenth;\r\n                            break;\r\n                        case 'Accent':\r\n                            let accentFlags = parseInt(c.innerText);\r\n                            if ((accentFlags & 0x01) !== 0) {\r\n                                note.isStaccato = true;\r\n                            }\r\n                            if ((accentFlags & 0x04) !== 0) {\r\n                                note.accentuated = AccentuationType.Heavy;\r\n                            }\r\n                            if ((accentFlags & 0x08) !== 0) {\r\n                                note.accentuated = AccentuationType.Normal;\r\n                            }\r\n                            break;\r\n                        case 'Tie':\r\n                            if (c.getAttribute('destination').toLowerCase() === 'true') {\r\n                                note.isTieDestination = true;\r\n                            }\r\n                            break;\r\n                        case 'Vibrato':\r\n                            switch (c.innerText) {\r\n                                case 'Slight':\r\n                                    note.vibrato = VibratoType.Slight;\r\n                                    break;\r\n                                case 'Wide':\r\n                                    note.vibrato = VibratoType.Wide;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                        case 'LeftFingering':\r\n                            note.isFingering = true;\r\n                            switch (c.innerText) {\r\n                                case 'P':\r\n                                    note.leftHandFinger = Fingers.Thumb;\r\n                                    break;\r\n                                case 'I':\r\n                                    note.leftHandFinger = Fingers.IndexFinger;\r\n                                    break;\r\n                                case 'M':\r\n                                    note.leftHandFinger = Fingers.MiddleFinger;\r\n                                    break;\r\n                                case 'A':\r\n                                    note.leftHandFinger = Fingers.AnnularFinger;\r\n                                    break;\r\n                                case 'C':\r\n                                    note.leftHandFinger = Fingers.LittleFinger;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                        case 'RightFingering':\r\n                            note.isFingering = true;\r\n                            switch (c.innerText) {\r\n                                case 'P':\r\n                                    note.rightHandFinger = Fingers.Thumb;\r\n                                    break;\r\n                                case 'I':\r\n                                    note.rightHandFinger = Fingers.IndexFinger;\r\n                                    break;\r\n                                case 'M':\r\n                                    note.rightHandFinger = Fingers.MiddleFinger;\r\n                                    break;\r\n                                case 'A':\r\n                                    note.rightHandFinger = Fingers.AnnularFinger;\r\n                                    break;\r\n                                case 'C':\r\n                                    note.rightHandFinger = Fingers.LittleFinger;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                        case 'InstrumentArticulation':\r\n                            note.percussionArticulation = parseInt(c.innerText);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            this._noteById.set(noteId, note);\r\n        }\r\n        parseNoteProperties(node, note, noteId) {\r\n            let isBended = false;\r\n            let bendOrigin = null;\r\n            let bendMiddleValue = null;\r\n            let bendMiddleOffset1 = null;\r\n            let bendMiddleOffset2 = null;\r\n            let bendDestination = null;\r\n            // GP6 had percussion as element+variation\r\n            let element = -1;\r\n            let variation = -1;\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Property':\r\n                            let name = c.getAttribute('name');\r\n                            switch (name) {\r\n                                case 'String':\r\n                                    note.string = parseInt(c.findChildElement('String').innerText) + 1;\r\n                                    break;\r\n                                case 'Fret':\r\n                                    note.fret = parseInt(c.findChildElement('Fret').innerText);\r\n                                    break;\r\n                                case 'Element':\r\n                                    element = parseInt(c.findChildElement('Element').innerText);\r\n                                    break;\r\n                                case 'Variation':\r\n                                    variation = parseInt(c.findChildElement('Variation').innerText);\r\n                                    break;\r\n                                case 'Tapped':\r\n                                    this._tappedNotes.set(noteId, true);\r\n                                    break;\r\n                                case 'HarmonicType':\r\n                                    let htype = c.findChildElement('HType');\r\n                                    if (htype) {\r\n                                        switch (htype.innerText) {\r\n                                            case 'NoHarmonic':\r\n                                                note.harmonicType = HarmonicType.None;\r\n                                                break;\r\n                                            case 'Natural':\r\n                                                note.harmonicType = HarmonicType.Natural;\r\n                                                break;\r\n                                            case 'Artificial':\r\n                                                note.harmonicType = HarmonicType.Artificial;\r\n                                                break;\r\n                                            case 'Pinch':\r\n                                                note.harmonicType = HarmonicType.Pinch;\r\n                                                break;\r\n                                            case 'Tap':\r\n                                                note.harmonicType = HarmonicType.Tap;\r\n                                                break;\r\n                                            case 'Semi':\r\n                                                note.harmonicType = HarmonicType.Semi;\r\n                                                break;\r\n                                            case 'Feedback':\r\n                                                note.harmonicType = HarmonicType.Feedback;\r\n                                                break;\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case 'HarmonicFret':\r\n                                    let hfret = c.findChildElement('HFret');\r\n                                    if (hfret) {\r\n                                        note.harmonicValue = parseFloat(hfret.innerText);\r\n                                    }\r\n                                    break;\r\n                                case 'Muted':\r\n                                    if (c.findChildElement('Enable')) {\r\n                                        note.isDead = true;\r\n                                    }\r\n                                    break;\r\n                                case 'PalmMuted':\r\n                                    if (c.findChildElement('Enable')) {\r\n                                        note.isPalmMute = true;\r\n                                    }\r\n                                    break;\r\n                                case 'Octave':\r\n                                    note.octave = parseInt(c.findChildElement('Number').innerText);\r\n                                    // when exporting GP6 from GP7 the tone might be missing\r\n                                    if (note.tone === -1) {\r\n                                        note.tone = 0;\r\n                                    }\r\n                                    break;\r\n                                case 'Tone':\r\n                                    note.tone = parseInt(c.findChildElement('Step').innerText);\r\n                                    break;\r\n                                case 'ConcertPitch':\r\n                                    this.parseConcertPitch(c, note);\r\n                                    break;\r\n                                case 'Bended':\r\n                                    isBended = true;\r\n                                    break;\r\n                                case 'BendOriginValue':\r\n                                    if (!bendOrigin) {\r\n                                        bendOrigin = new BendPoint(0, 0);\r\n                                    }\r\n                                    bendOrigin.value = this.toBendValue(parseFloat(c.findChildElement('Float').innerText));\r\n                                    break;\r\n                                case 'BendOriginOffset':\r\n                                    if (!bendOrigin) {\r\n                                        bendOrigin = new BendPoint(0, 0);\r\n                                    }\r\n                                    bendOrigin.offset = this.toBendOffset(parseFloat(c.findChildElement('Float').innerText));\r\n                                    break;\r\n                                case 'BendMiddleValue':\r\n                                    bendMiddleValue = this.toBendValue(parseFloat(c.findChildElement('Float').innerText));\r\n                                    break;\r\n                                case 'BendMiddleOffset1':\r\n                                    bendMiddleOffset1 = this.toBendOffset(parseFloat(c.findChildElement('Float').innerText));\r\n                                    break;\r\n                                case 'BendMiddleOffset2':\r\n                                    bendMiddleOffset2 = this.toBendOffset(parseFloat(c.findChildElement('Float').innerText));\r\n                                    break;\r\n                                case 'BendDestinationValue':\r\n                                    if (!bendDestination) {\r\n                                        bendDestination = new BendPoint(BendPoint.MaxPosition, 0);\r\n                                    }\r\n                                    bendDestination.value = this.toBendValue(parseFloat(c.findChildElement('Float').innerText));\r\n                                    break;\r\n                                case 'BendDestinationOffset':\r\n                                    if (!bendDestination) {\r\n                                        bendDestination = new BendPoint(0, 0);\r\n                                    }\r\n                                    bendDestination.offset = this.toBendOffset(parseFloat(c.findChildElement('Float').innerText));\r\n                                    break;\r\n                                case 'HopoOrigin':\r\n                                    if (c.findChildElement('Enable')) {\r\n                                        note.isHammerPullOrigin = true;\r\n                                    }\r\n                                    break;\r\n                                case 'HopoDestination':\r\n                                    // NOTE: gets automatically calculated\r\n                                    // if (FindChildElement(node, \"Enable\"))\r\n                                    //     note.isHammerPullDestination = true;\r\n                                    break;\r\n                                case 'LeftHandTapped':\r\n                                    note.isLeftHandTapped = true;\r\n                                    break;\r\n                                case 'Slide':\r\n                                    let slideFlags = parseInt(c.findChildElement('Flags').innerText);\r\n                                    if ((slideFlags & 1) !== 0) {\r\n                                        note.slideOutType = SlideOutType.Shift;\r\n                                    }\r\n                                    else if ((slideFlags & 2) !== 0) {\r\n                                        note.slideOutType = SlideOutType.Legato;\r\n                                    }\r\n                                    else if ((slideFlags & 4) !== 0) {\r\n                                        note.slideOutType = SlideOutType.OutDown;\r\n                                    }\r\n                                    else if ((slideFlags & 8) !== 0) {\r\n                                        note.slideOutType = SlideOutType.OutUp;\r\n                                    }\r\n                                    if ((slideFlags & 16) !== 0) {\r\n                                        note.slideInType = SlideInType.IntoFromBelow;\r\n                                    }\r\n                                    else if ((slideFlags & 32) !== 0) {\r\n                                        note.slideInType = SlideInType.IntoFromAbove;\r\n                                    }\r\n                                    if ((slideFlags & 64) !== 0) {\r\n                                        note.slideOutType = SlideOutType.PickSlideDown;\r\n                                    }\r\n                                    else if ((slideFlags & 128) !== 0) {\r\n                                        note.slideOutType = SlideOutType.PickSlideUp;\r\n                                    }\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (isBended) {\r\n                if (!bendOrigin) {\r\n                    bendOrigin = new BendPoint(0, 0);\r\n                }\r\n                if (!bendDestination) {\r\n                    bendDestination = new BendPoint(BendPoint.MaxPosition, 0);\r\n                }\r\n                note.addBendPoint(bendOrigin);\r\n                if (bendMiddleOffset1 && bendMiddleValue) {\r\n                    note.addBendPoint(new BendPoint(bendMiddleOffset1, bendMiddleValue));\r\n                }\r\n                if (bendMiddleOffset2 && bendMiddleValue) {\r\n                    note.addBendPoint(new BendPoint(bendMiddleOffset2, bendMiddleValue));\r\n                }\r\n                if (!bendMiddleOffset1 && !bendMiddleOffset2 && bendMiddleValue) {\r\n                    note.addBendPoint(new BendPoint((BendPoint.MaxPosition / 2) | 0, bendMiddleValue));\r\n                }\r\n                note.addBendPoint(bendDestination);\r\n            }\r\n            // map GP6 element and variation combos to midi numbers\r\n            if (element !== -1 && variation !== -1) {\r\n                note.percussionArticulation = PercussionMapper.articulationFromElementVariation(element, variation);\r\n            }\r\n        }\r\n        parseConcertPitch(node, note) {\r\n            const pitch = node.findChildElement('Pitch');\r\n            if (pitch) {\r\n                for (let c of pitch.childNodes) {\r\n                    if (c.nodeType === XmlNodeType.Element) {\r\n                        switch (c.localName) {\r\n                            case 'Accidental':\r\n                                switch (c.innerText) {\r\n                                    case 'x':\r\n                                        note.accidentalMode = NoteAccidentalMode.ForceDoubleSharp;\r\n                                        break;\r\n                                    case '#':\r\n                                        note.accidentalMode = NoteAccidentalMode.ForceSharp;\r\n                                        break;\r\n                                    case 'b':\r\n                                        note.accidentalMode = NoteAccidentalMode.ForceFlat;\r\n                                        break;\r\n                                    case 'bb':\r\n                                        note.accidentalMode = NoteAccidentalMode.ForceDoubleFlat;\r\n                                        break;\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        toBendValue(gpxValue) {\r\n            return (gpxValue * GpifParser.BendPointValueFactor) | 0;\r\n        }\r\n        toBendOffset(gpxOffset) {\r\n            return (gpxOffset * GpifParser.BendPointPositionFactor);\r\n        }\r\n        parseRhythms(node) {\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'Rhythm':\r\n                            this.parseRhythm(c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseRhythm(node) {\r\n            let rhythm = new GpifRhythm();\r\n            let rhythmId = node.getAttribute('id');\r\n            rhythm.id = rhythmId;\r\n            for (let c of node.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'NoteValue':\r\n                            switch (c.innerText) {\r\n                                case 'Long':\r\n                                    rhythm.value = Duration.QuadrupleWhole;\r\n                                    break;\r\n                                case 'DoubleWhole':\r\n                                    rhythm.value = Duration.DoubleWhole;\r\n                                    break;\r\n                                case 'Whole':\r\n                                    rhythm.value = Duration.Whole;\r\n                                    break;\r\n                                case 'Half':\r\n                                    rhythm.value = Duration.Half;\r\n                                    break;\r\n                                case 'Quarter':\r\n                                    rhythm.value = Duration.Quarter;\r\n                                    break;\r\n                                case 'Eighth':\r\n                                    rhythm.value = Duration.Eighth;\r\n                                    break;\r\n                                case '16th':\r\n                                    rhythm.value = Duration.Sixteenth;\r\n                                    break;\r\n                                case '32nd':\r\n                                    rhythm.value = Duration.ThirtySecond;\r\n                                    break;\r\n                                case '64th':\r\n                                    rhythm.value = Duration.SixtyFourth;\r\n                                    break;\r\n                                case '128th':\r\n                                    rhythm.value = Duration.OneHundredTwentyEighth;\r\n                                    break;\r\n                                case '256th':\r\n                                    rhythm.value = Duration.TwoHundredFiftySixth;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                        case 'PrimaryTuplet':\r\n                            rhythm.tupletNumerator = parseInt(c.getAttribute('num'));\r\n                            rhythm.tupletDenominator = parseInt(c.getAttribute('den'));\r\n                            break;\r\n                        case 'AugmentationDot':\r\n                            rhythm.dots = parseInt(c.getAttribute('count'));\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            this._rhythmById.set(rhythmId, rhythm);\r\n        }\r\n        buildModel() {\r\n            // build score\r\n            for (let i = 0, j = this._masterBars.length; i < j; i++) {\r\n                let masterBar = this._masterBars[i];\r\n                this.score.addMasterBar(masterBar);\r\n            }\r\n            // add tracks to score\r\n            for (let trackId of this._tracksMapping) {\r\n                if (!trackId) {\r\n                    continue;\r\n                }\r\n                let track = this._tracksById.get(trackId);\r\n                this.score.addTrack(track);\r\n            }\r\n            // process all masterbars\r\n            for (let barIds of this._barsOfMasterBar) {\r\n                // add all bars of masterbar vertically to all tracks\r\n                let staffIndex = 0;\r\n                for (let barIndex = 0, trackIndex = 0; barIndex < barIds.length && trackIndex < this.score.tracks.length; barIndex++) {\r\n                    let barId = barIds[barIndex];\r\n                    if (barId !== GpifParser.InvalidId) {\r\n                        let bar = this._barsById.get(barId);\r\n                        let track = this.score.tracks[trackIndex];\r\n                        let staff = track.staves[staffIndex];\r\n                        staff.addBar(bar);\r\n                        if (this._voicesOfBar.has(barId)) {\r\n                            // add voices to bars\r\n                            for (let voiceId of this._voicesOfBar.get(barId)) {\r\n                                if (voiceId !== GpifParser.InvalidId) {\r\n                                    let voice = this._voiceById.get(voiceId);\r\n                                    bar.addVoice(voice);\r\n                                    if (this._beatsOfVoice.has(voiceId)) {\r\n                                        // add beats to voices\r\n                                        for (let beatId of this._beatsOfVoice.get(voiceId)) {\r\n                                            if (beatId !== GpifParser.InvalidId) {\r\n                                                // important! we clone the beat because beats get reused\r\n                                                // in gp6, our model needs to have unique beats.\r\n                                                let beat = BeatCloner.clone(this._beatById.get(beatId));\r\n                                                voice.addBeat(beat);\r\n                                                let rhythmId = this._rhythmOfBeat.get(beatId);\r\n                                                let rhythm = this._rhythmById.get(rhythmId);\r\n                                                // set beat duration\r\n                                                beat.duration = rhythm.value;\r\n                                                beat.dots = rhythm.dots;\r\n                                                beat.tupletNumerator = rhythm.tupletNumerator;\r\n                                                beat.tupletDenominator = rhythm.tupletDenominator;\r\n                                                // add notes to beat\r\n                                                if (this._notesOfBeat.has(beatId)) {\r\n                                                    for (let noteId of this._notesOfBeat.get(beatId)) {\r\n                                                        if (noteId !== GpifParser.InvalidId) {\r\n                                                            const note = NoteCloner.clone(this._noteById.get(noteId));\r\n                                                            // reset midi value for non-percussion staves\r\n                                                            if (staff.isPercussion) {\r\n                                                                note.fret = -1;\r\n                                                                note.string = -1;\r\n                                                            }\r\n                                                            else {\r\n                                                                note.percussionArticulation = -1;\r\n                                                            }\r\n                                                            beat.addNote(note);\r\n                                                            if (this._tappedNotes.has(noteId)) {\r\n                                                                beat.tap = true;\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    // invalid voice -> empty voice\r\n                                    let voice = new Voice();\r\n                                    bar.addVoice(voice);\r\n                                    let beat = new Beat();\r\n                                    beat.isEmpty = true;\r\n                                    beat.duration = Duration.Quarter;\r\n                                    voice.addBeat(beat);\r\n                                }\r\n                            }\r\n                        }\r\n                        // stave is full? -> next track\r\n                        if (staffIndex === track.staves.length - 1) {\r\n                            trackIndex++;\r\n                            staffIndex = 0;\r\n                        }\r\n                        else {\r\n                            staffIndex++;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // no bar for track\r\n                        trackIndex++;\r\n                    }\r\n                }\r\n            }\r\n            // clear out percussion articulations where not needed \r\n            // and add automations\r\n            for (let trackId of this._tracksMapping) {\r\n                if (!trackId) {\r\n                    continue;\r\n                }\r\n                let track = this._tracksById.get(trackId);\r\n                let hasPercussion = false;\r\n                for (const staff of track.staves) {\r\n                    if (staff.isPercussion) {\r\n                        hasPercussion = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!hasPercussion) {\r\n                    track.percussionArticulations = [];\r\n                }\r\n                if (this._automationsPerTrackIdAndBarIndex.has(trackId)) {\r\n                    const trackAutomations = this._automationsPerTrackIdAndBarIndex.get(trackId);\r\n                    for (const [barNumber, automations] of trackAutomations) {\r\n                        if (track.staves.length > 0 && barNumber < track.staves[0].bars.length) {\r\n                            const bar = track.staves[0].bars[barNumber];\r\n                            if (bar.voices.length > 0 && bar.voices[0].beats.length > 0) {\r\n                                const beat = bar.voices[0].beats[0];\r\n                                for (const a of automations) {\r\n                                    beat.automations.push(a);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // build masterbar automations\r\n            for (const [barNumber, automations] of this._masterTrackAutomations) {\r\n                let masterBar = this.score.masterBars[barNumber];\r\n                for (let i = 0, j = automations.length; i < j; i++) {\r\n                    let automation = automations[i];\r\n                    if (automation.type === AutomationType.Tempo) {\r\n                        if (barNumber === 0) {\r\n                            this.score.tempo = automation.value | 0;\r\n                            if (automation.text) {\r\n                                this.score.tempoLabel = automation.text;\r\n                            }\r\n                        }\r\n                        masterBar.tempoAutomation = automation;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    GpifParser.InvalidId = '-1';\r\n    /**\r\n     * GPX range: 0-100\r\n     * Internal range: 0 - 60\r\n     */\r\n    GpifParser.BendPointPositionFactor = BendPoint.MaxPosition / 100.0;\r\n    /**\r\n     * GPIF: 25 per quarternote\r\n     * Internal Range: 1 per quarter note\r\n     */\r\n    GpifParser.BendPointValueFactor = 1 / 25.0;\n\n    class TrackConfiguration {\r\n        constructor() {\r\n            this.showSlash = false;\r\n            this.showStandardNotation = false;\r\n            this.showTablature = false;\r\n        }\r\n    }\r\n    class Part {\r\n        constructor() {\r\n            this.isMultiRest = false;\r\n            this.tracks = [];\r\n        }\r\n    }\r\n    class PartConfiguration {\r\n        constructor(partConfigurationData) {\r\n            this.parts = [];\r\n            this.zoomLevel = 0;\r\n            this.layout = 0;\r\n            let readable = ByteBuffer.fromBuffer(partConfigurationData);\r\n            let entryCount = IOHelper.readInt32BE(readable);\r\n            for (let i = 0; i < entryCount; i++) {\r\n                let part = new Part();\r\n                this.parts.push(part);\r\n                part.isMultiRest = GpBinaryHelpers.gpReadBool(readable);\r\n                let groupCount = IOHelper.readInt32BE(readable);\r\n                for (let j = 0; j < groupCount; j++) {\r\n                    let flags = readable.readByte();\r\n                    // enable at least standard notation\r\n                    if (flags === 0) {\r\n                        flags = 1;\r\n                    }\r\n                    let trackConfiguration = new TrackConfiguration();\r\n                    trackConfiguration.showStandardNotation = (flags & 0x01) !== 0;\r\n                    trackConfiguration.showTablature = (flags & 0x02) !== 0;\r\n                    trackConfiguration.showSlash = (flags & 0x04) !== 0;\r\n                    part.tracks.push(trackConfiguration);\r\n                }\r\n            }\r\n        }\r\n        apply(score) {\r\n            let staffIndex = 0;\r\n            let trackIndex = 0;\r\n            // the PartConfiguration is really twisted compared to how the score structure looks like.\r\n            // the first part typically contains the settings for the first staff of all tracks.\r\n            // but then there is 1 part with 1 track for each other staff of the tracks.\r\n            // So the structure in the PartConfig appears to be:\r\n            // Parts[0].Tracks = { Track1-Staff1, Track2-Staff1, Track3-Staff1, Track4-Staff1, .. }\r\n            // Parts[1].Tracks = { Track1-Staff2 }\r\n            // Parts[2].Tracks = { Track2-Staff2 }\r\n            // Parts[3].Tracks = { Track3-Staff2 }\r\n            // Parts[4].Tracks = { Track4-Staff2 }\r\n            //\r\n            // even if a track has only 1 staff, there are 2 staff configurations stored.\r\n            // I hope Arobas never changes this in the format as the PartConfiguration is not versionized.\r\n            for (let part of this.parts) {\r\n                for (let trackConfig of part.tracks) {\r\n                    if (trackIndex < score.tracks.length) {\r\n                        let track = score.tracks[trackIndex];\r\n                        if (staffIndex < track.staves.length) {\r\n                            let staff = track.staves[staffIndex];\r\n                            staff.showTablature = trackConfig.showTablature;\r\n                            staff.showStandardNotation = trackConfig.showStandardNotation;\r\n                        }\r\n                    }\r\n                    trackIndex++;\r\n                    if (trackIndex >= score.tracks.length) {\r\n                        staffIndex++;\r\n                        trackIndex = 0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        static writeForScore(score) {\r\n            const writer = ByteBuffer.withCapacity(128);\r\n            const parts = [\r\n                new Part() // default part always exists\r\n            ];\r\n            for (const track of score.tracks) {\r\n                for (const staff of track.staves) {\r\n                    const trackConfiguration = new TrackConfiguration();\r\n                    trackConfiguration.showStandardNotation = staff.showStandardNotation;\r\n                    trackConfiguration.showTablature = staff.showTablature;\r\n                    if (staff.index === 0) {\r\n                        parts[0].tracks.push(trackConfiguration);\r\n                    }\r\n                    else {\r\n                        let part = new Part();\r\n                        part.tracks.push(trackConfiguration);\r\n                        parts.push(part);\r\n                    }\r\n                }\r\n            }\r\n            IOHelper.writeInt32BE(writer, parts.length);\r\n            for (const part of parts) {\r\n                writer.writeByte(part.isMultiRest ? 1 : 0);\r\n                IOHelper.writeInt32BE(writer, part.tracks.length);\r\n                for (const track of part.tracks) {\r\n                    let flags = 0;\r\n                    if (track.showStandardNotation) {\r\n                        flags |= 0x01;\r\n                    }\r\n                    if (track.showTablature) {\r\n                        flags |= 0x02;\r\n                    }\r\n                    if (track.showSlash) {\r\n                        flags |= 0x04;\r\n                    }\r\n                    writer.writeByte(flags);\r\n                }\r\n            }\r\n            return writer.toArray();\r\n        }\r\n    }\n\n    // This Inflate algorithm is based on the Inflate class of the Haxe Standard Library (MIT)\r\n    /*\r\n     * Copyright (C)2005-2019 Haxe Foundation\r\n     *\r\n     * Permission is hereby granted, free of charge, to any person obtaining a\r\n     * copy of this software and associated documentation files (the \"Software\"),\r\n     * to deal in the Software without restriction, including without limitation\r\n     * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n     * and/or sell copies of the Software, and to permit persons to whom the\r\n     * Software is furnished to do so, subject to the following conditions:\r\n     *\r\n     * The above copyright notice and this permission notice shall be included in\r\n     * all copies or substantial portions of the Software.\r\n     *\r\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n     * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n     * DEALINGS IN THE SOFTWARE.\r\n     */\r\n    class Huffman {\r\n    }\r\n    class Found extends Huffman {\r\n        constructor(n) {\r\n            super();\r\n            this.n = n;\r\n        }\r\n    }\r\n    class NeedBit extends Huffman {\r\n        constructor(left, right) {\r\n            super();\r\n            this.left = left;\r\n            this.right = right;\r\n        }\r\n    }\r\n    class NeedBits extends Huffman {\r\n        constructor(n, table) {\r\n            super();\r\n            this.n = n;\r\n            this.table = table;\r\n        }\r\n    }\n\n    // This Inflate algorithm is based on the Inflate class of the Haxe Standard Library (MIT)\r\n    // This Inflater is based on the Zip Reader of the Haxe Standard Library (MIT)\r\n    class HuffTools {\r\n        static make(lengths, pos, nlengths, maxbits) {\r\n            let counts = [];\r\n            let tmp = [];\r\n            if (maxbits > 32) {\r\n                throw new FormatError('Invalid huffman');\r\n            }\r\n            for (let i = 0; i < maxbits; i++) {\r\n                counts.push(0);\r\n                tmp.push(0);\r\n            }\r\n            for (let i = 0; i < nlengths; i++) {\r\n                let p = lengths[i + pos];\r\n                if (p >= maxbits) {\r\n                    throw new FormatError('Invalid huffman');\r\n                }\r\n                counts[p]++;\r\n            }\r\n            let code = 0;\r\n            for (let i = 1; i < maxbits - 1; i++) {\r\n                code = (code + counts[i]) << 1;\r\n                tmp[i] = code;\r\n            }\r\n            let bits = new Map();\r\n            for (let i = 0; i < nlengths; i++) {\r\n                let l = lengths[i + pos];\r\n                if (l !== 0) {\r\n                    let n = tmp[l - 1];\r\n                    tmp[l - 1] = n + 1;\r\n                    bits.set((n << 5) | l, i);\r\n                }\r\n            }\r\n            return HuffTools.treeCompress(new NeedBit(HuffTools.treeMake(bits, maxbits, 0, 1), HuffTools.treeMake(bits, maxbits, 1, 1)));\r\n        }\r\n        static treeMake(bits, maxbits, v, len) {\r\n            if (len > maxbits) {\r\n                throw new FormatError('Invalid huffman');\r\n            }\r\n            let idx = (v << 5) | len;\r\n            if (bits.has(idx)) {\r\n                return new Found(bits.get(idx));\r\n            }\r\n            v = v << 1;\r\n            len += 1;\r\n            return new NeedBit(HuffTools.treeMake(bits, maxbits, v, len), HuffTools.treeMake(bits, maxbits, v | 1, len));\r\n        }\r\n        static treeCompress(t) {\r\n            let d = HuffTools.treeDepth(t);\r\n            if (d === 0) {\r\n                return t;\r\n            }\r\n            if (d === 1) {\r\n                if (t instanceof NeedBit) {\r\n                    return new NeedBit(HuffTools.treeCompress(t.left), HuffTools.treeCompress(t.right));\r\n                }\r\n                else {\r\n                    throw new FormatError('assert');\r\n                }\r\n            }\r\n            let size = 1 << d;\r\n            let table = [];\r\n            for (let i = 0; i < size; i++) {\r\n                table.push(new Found(-1));\r\n            }\r\n            HuffTools.treeWalk(table, 0, 0, d, t);\r\n            return new NeedBits(d, table);\r\n        }\r\n        static treeWalk(table, p, cd, d, t) {\r\n            if (t instanceof NeedBit) {\r\n                if (d > 0) {\r\n                    HuffTools.treeWalk(table, p, cd + 1, d - 1, t.left);\r\n                    HuffTools.treeWalk(table, p | (1 << cd), cd + 1, d - 1, t.right);\r\n                }\r\n                else {\r\n                    table[p] = HuffTools.treeCompress(t);\r\n                }\r\n            }\r\n            else {\r\n                table[p] = HuffTools.treeCompress(t);\r\n            }\r\n        }\r\n        static treeDepth(t) {\r\n            if (t instanceof Found) {\r\n                return 0;\r\n            }\r\n            if (t instanceof NeedBits) {\r\n                throw new FormatError('assert');\r\n            }\r\n            if (t instanceof NeedBit) {\r\n                let da = HuffTools.treeDepth(t.left);\r\n                let db = HuffTools.treeDepth(t.right);\r\n                return 1 + (da < db ? da : db);\r\n            }\r\n            return 0;\r\n        }\r\n    }\n\n    // This Inflate algorithm is based on the Inflate class of the Haxe Standard Library (MIT)\r\n    var InflateState;\r\n    (function (InflateState) {\r\n        InflateState[InflateState[\"Head\"] = 0] = \"Head\";\r\n        InflateState[InflateState[\"Block\"] = 1] = \"Block\";\r\n        InflateState[InflateState[\"CData\"] = 2] = \"CData\";\r\n        InflateState[InflateState[\"Flat\"] = 3] = \"Flat\";\r\n        InflateState[InflateState[\"Crc\"] = 4] = \"Crc\";\r\n        InflateState[InflateState[\"Dist\"] = 5] = \"Dist\";\r\n        InflateState[InflateState[\"DistOne\"] = 6] = \"DistOne\";\r\n        InflateState[InflateState[\"Done\"] = 7] = \"Done\";\r\n    })(InflateState || (InflateState = {}));\r\n    class InflateWindow {\r\n        constructor() {\r\n            this.buffer = new Uint8Array(InflateWindow.BufferSize);\r\n            this.pos = 0;\r\n        }\r\n        slide() {\r\n            let b = new Uint8Array(InflateWindow.BufferSize);\r\n            this.pos -= InflateWindow.Size;\r\n            b.set(this.buffer.subarray(InflateWindow.Size, InflateWindow.Size + this.pos), 0);\r\n            this.buffer = b;\r\n        }\r\n        addBytes(b, p, len) {\r\n            if (this.pos + len > InflateWindow.BufferSize) {\r\n                this.slide();\r\n            }\r\n            this.buffer.set(b.subarray(p, p + len), this.pos);\r\n            this.pos += len;\r\n        }\r\n        addByte(c) {\r\n            if (this.pos === InflateWindow.BufferSize) {\r\n                this.slide();\r\n            }\r\n            this.buffer[this.pos] = c;\r\n            this.pos++;\r\n        }\r\n        getLastChar() {\r\n            return this.buffer[this.pos - 1];\r\n        }\r\n        available() {\r\n            return this.pos;\r\n        }\r\n    }\r\n    InflateWindow.Size = 1 << 15;\r\n    InflateWindow.BufferSize = 1 << 16;\r\n    class Inflate {\r\n        constructor(readable) {\r\n            this._nbits = 0;\r\n            this._bits = 0;\r\n            this._state = InflateState.Block;\r\n            this._isFinal = false;\r\n            this._huffman = Inflate._fixedHuffman;\r\n            this._huffdist = null;\r\n            this._len = 0;\r\n            this._dist = 0;\r\n            this._needed = 0;\r\n            this._output = null;\r\n            this._outpos = 0;\r\n            this._lengths = [];\r\n            this._window = new InflateWindow();\r\n            this._input = readable;\r\n            for (let i = 0; i < 19; i++) {\r\n                this._lengths.push(-1);\r\n            }\r\n        }\r\n        static buildFixedHuffman() {\r\n            let a = [];\r\n            for (let n = 0; n < 288; n++) {\r\n                a.push(n <= 143 ? 8 : n <= 255 ? 9 : n <= 279 ? 7 : 8);\r\n            }\r\n            return HuffTools.make(a, 0, 288, 10);\r\n        }\r\n        readBytes(b, pos, len) {\r\n            this._needed = len;\r\n            this._outpos = pos;\r\n            this._output = b;\r\n            if (len > 0) {\r\n                while (this.inflateLoop()) {\r\n                    // inflating...\r\n                }\r\n            }\r\n            return len - this._needed;\r\n        }\r\n        inflateLoop() {\r\n            switch (this._state) {\r\n                case InflateState.Head:\r\n                    let cmf = this._input.readByte();\r\n                    let cm = cmf & 15;\r\n                    if (cm !== 8) {\r\n                        throw new FormatError('Invalid data');\r\n                    }\r\n                    let flg = this._input.readByte();\r\n                    // var fcheck = flg & 31;\r\n                    let fdict = (flg & 32) !== 0;\r\n                    // var flevel = flg >> 6;\r\n                    if (((cmf << 8) + flg) % 31 !== 0) {\r\n                        throw new FormatError('Invalid data');\r\n                    }\r\n                    if (fdict) {\r\n                        throw new FormatError('Unsupported dictionary');\r\n                    }\r\n                    this._state = InflateState.Block;\r\n                    return true;\r\n                case InflateState.Crc:\r\n                    this._state = InflateState.Done;\r\n                    return true;\r\n                case InflateState.Done:\r\n                    // nothing\r\n                    return false;\r\n                case InflateState.Block:\r\n                    this._isFinal = this.getBit();\r\n                    switch (this.getBits(2)) {\r\n                        case 0:\r\n                            this._len = IOHelper.readUInt16LE(this._input);\r\n                            let nlen = IOHelper.readUInt16LE(this._input);\r\n                            if (nlen !== 0xffff - this._len) {\r\n                                throw new FormatError('Invalid data');\r\n                            }\r\n                            this._state = InflateState.Flat;\r\n                            let r = this.inflateLoop();\r\n                            this.resetBits();\r\n                            return r;\r\n                        case 1:\r\n                            this._huffman = Inflate._fixedHuffman;\r\n                            this._huffdist = null;\r\n                            this._state = InflateState.CData;\r\n                            return true;\r\n                        case 2:\r\n                            let hlit = this.getBits(5) + 257;\r\n                            let hdist = this.getBits(5) + 1;\r\n                            let hclen = this.getBits(4) + 4;\r\n                            for (let i = 0; i < hclen; i++) {\r\n                                this._lengths[Inflate.CodeLengthsPos[i]] = this.getBits(3);\r\n                            }\r\n                            for (let i = hclen; i < 19; i++) {\r\n                                this._lengths[Inflate.CodeLengthsPos[i]] = 0;\r\n                            }\r\n                            this._huffman = HuffTools.make(this._lengths, 0, 19, 8);\r\n                            let xlengths = [];\r\n                            for (let i = 0; i < hlit + hdist; i++) {\r\n                                xlengths.push(0);\r\n                            }\r\n                            this.inflateLengths(xlengths, hlit + hdist);\r\n                            this._huffdist = HuffTools.make(xlengths, hlit, hdist, 16);\r\n                            this._huffman = HuffTools.make(xlengths, 0, hlit, 16);\r\n                            this._state = InflateState.CData;\r\n                            return true;\r\n                        default:\r\n                            throw new FormatError('Invalid data');\r\n                    }\r\n                case InflateState.Flat: {\r\n                    let rlen = this._len < this._needed ? this._len : this._needed;\r\n                    let bytes = IOHelper.readByteArray(this._input, rlen);\r\n                    this._len -= rlen;\r\n                    this.addBytes(bytes, 0, rlen);\r\n                    if (this._len === 0)\r\n                        this._state = this._isFinal ? InflateState.Crc : InflateState.Block;\r\n                    return this._needed > 0;\r\n                }\r\n                case InflateState.DistOne: {\r\n                    let rlen = this._len < this._needed ? this._len : this._needed;\r\n                    this.addDistOne(rlen);\r\n                    this._len -= rlen;\r\n                    if (this._len === 0) {\r\n                        this._state = InflateState.CData;\r\n                    }\r\n                    return this._needed > 0;\r\n                }\r\n                case InflateState.Dist:\r\n                    while (this._len > 0 && this._needed > 0) {\r\n                        let rdist = this._len < this._dist ? this._len : this._dist;\r\n                        let rlen = this._needed < rdist ? this._needed : rdist;\r\n                        this.addDist(this._dist, rlen);\r\n                        this._len -= rlen;\r\n                    }\r\n                    if (this._len === 0) {\r\n                        this._state = InflateState.CData;\r\n                    }\r\n                    return this._needed > 0;\r\n                case InflateState.CData:\r\n                    let n = this.applyHuffman(this._huffman);\r\n                    if (n < 256) {\r\n                        this.addByte(n);\r\n                        return this._needed > 0;\r\n                    }\r\n                    else if (n === 256) {\r\n                        this._state = this._isFinal ? InflateState.Crc : InflateState.Block;\r\n                        return true;\r\n                    }\r\n                    else {\r\n                        n = (n - 257) & 0xff;\r\n                        let extraBits = Inflate.LenExtraBitsTbl[n];\r\n                        if (extraBits === -1) {\r\n                            throw new FormatError('Invalid data');\r\n                        }\r\n                        this._len = Inflate.LenBaseValTbl[n] + this.getBits(extraBits);\r\n                        let huffdist = this._huffdist;\r\n                        let distCode = !huffdist ? this.getRevBits(5) : this.applyHuffman(huffdist);\r\n                        extraBits = Inflate.DistExtraBitsTbl[distCode];\r\n                        if (extraBits === -1) {\r\n                            throw new FormatError('Invalid data');\r\n                        }\r\n                        this._dist = Inflate.DistBaseValTbl[distCode] + this.getBits(extraBits);\r\n                        if (this._dist > this._window.available()) {\r\n                            throw new FormatError('Invalid data');\r\n                        }\r\n                        this._state = this._dist === 1 ? InflateState.DistOne : InflateState.Dist;\r\n                        return true;\r\n                    }\r\n            }\r\n            return false;\r\n        }\r\n        addDistOne(n) {\r\n            let c = this._window.getLastChar();\r\n            for (let i = 0; i < n; i++) {\r\n                this.addByte(c);\r\n            }\r\n        }\r\n        addByte(b) {\r\n            this._window.addByte(b);\r\n            this._output[this._outpos] = b;\r\n            this._needed--;\r\n            this._outpos++;\r\n        }\r\n        addDist(d, len) {\r\n            this.addBytes(this._window.buffer, this._window.pos - d, len);\r\n        }\r\n        getBit() {\r\n            if (this._nbits === 0) {\r\n                this._nbits = 8;\r\n                this._bits = this._input.readByte();\r\n            }\r\n            let b = (this._bits & 1) === 1;\r\n            this._nbits--;\r\n            this._bits = this._bits >> 1;\r\n            return b;\r\n        }\r\n        getBits(n) {\r\n            while (this._nbits < n) {\r\n                this._bits = this._bits | (this._input.readByte() << this._nbits);\r\n                this._nbits += 8;\r\n            }\r\n            let b = this._bits & ((1 << n) - 1);\r\n            this._nbits -= n;\r\n            this._bits = this._bits >> n;\r\n            return b;\r\n        }\r\n        getRevBits(n) {\r\n            return n === 0 ? 0 : this.getBit() ? (1 << (n - 1)) | this.getRevBits(n - 1) : this.getRevBits(n - 1);\r\n        }\r\n        resetBits() {\r\n            this._bits = 0;\r\n            this._nbits = 0;\r\n        }\r\n        addBytes(b, p, len) {\r\n            this._window.addBytes(b, p, len);\r\n            this._output.set(b.subarray(p, p + len), this._outpos);\r\n            this._needed -= len;\r\n            this._outpos += len;\r\n        }\r\n        inflateLengths(a, max) {\r\n            let i = 0;\r\n            let prev = 0;\r\n            while (i < max) {\r\n                let n = this.applyHuffman(this._huffman);\r\n                switch (n) {\r\n                    case 0:\r\n                    case 1:\r\n                    case 2:\r\n                    case 3:\r\n                    case 4:\r\n                    case 5:\r\n                    case 6:\r\n                    case 7:\r\n                    case 8:\r\n                    case 9:\r\n                    case 10:\r\n                    case 11:\r\n                    case 12:\r\n                    case 13:\r\n                    case 14:\r\n                    case 15:\r\n                        prev = n;\r\n                        a[i] = n;\r\n                        i++;\r\n                        break;\r\n                    case 16:\r\n                        let end = i + 3 + this.getBits(2);\r\n                        if (end > max) {\r\n                            throw new FormatError('Invalid data');\r\n                        }\r\n                        while (i < end) {\r\n                            a[i] = prev;\r\n                            i++;\r\n                        }\r\n                        break;\r\n                    case 17:\r\n                        i += 3 + this.getBits(3);\r\n                        if (i > max) {\r\n                            throw new FormatError('Invalid data');\r\n                        }\r\n                        break;\r\n                    case 18:\r\n                        i += 11 + this.getBits(7);\r\n                        if (i > max) {\r\n                            throw new FormatError('Invalid data');\r\n                        }\r\n                        break;\r\n                    default: {\r\n                        throw new FormatError('Invalid data');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        applyHuffman(h) {\r\n            if (h instanceof Found) {\r\n                return h.n;\r\n            }\r\n            if (h instanceof NeedBit) {\r\n                return this.applyHuffman(this.getBit() ? h.right : h.left);\r\n            }\r\n            if (h instanceof NeedBits) {\r\n                return this.applyHuffman(h.table[this.getBits(h.n)]);\r\n            }\r\n            throw new FormatError('Invalid data');\r\n        }\r\n    }\r\n    // prettier-ignore\r\n    Inflate.LenExtraBitsTbl = [\r\n        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, -1,\r\n        -1\r\n    ];\r\n    // prettier-ignore\r\n    Inflate.LenBaseValTbl = [\r\n        3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115,\r\n        131, 163, 195, 227, 258\r\n    ];\r\n    // prettier-ignore\r\n    Inflate.DistExtraBitsTbl = [\r\n        0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12,\r\n        13, 13, -1, -1\r\n    ];\r\n    // prettier-ignore\r\n    Inflate.DistBaseValTbl = [\r\n        1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537,\r\n        2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577\r\n    ];\r\n    // prettier-ignore\r\n    Inflate.CodeLengthsPos = [\r\n        16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15\r\n    ];\r\n    Inflate._fixedHuffman = Inflate.buildFixedHuffman();\n\n    class ZipEntry {\r\n        constructor(fullName, data) {\r\n            this.fullName = fullName;\r\n            let i = fullName.lastIndexOf('/');\r\n            this.fileName = i === -1 || i === fullName.length - 1 ? this.fullName : fullName.substr(i + 1);\r\n            this.data = data;\r\n        }\r\n    }\r\n    ZipEntry.OptionalDataDescriptorSignature = 0x08074b50;\r\n    ZipEntry.CompressionMethodDeflate = 8;\r\n    ZipEntry.LocalFileHeaderSignature = 0x04034b50;\r\n    ZipEntry.CentralFileHeaderSignature = 0x02014b50;\r\n    ZipEntry.EndOfCentralDirSignature = 0x06054b50;\n\n    class ZipReader {\r\n        constructor(readable) {\r\n            this._readable = readable;\r\n        }\r\n        read() {\r\n            let entries = [];\r\n            while (true) {\r\n                let e = this.readEntry();\r\n                if (!e) {\r\n                    break;\r\n                }\r\n                entries.push(e);\r\n            }\r\n            return entries;\r\n        }\r\n        readEntry() {\r\n            let readable = this._readable;\r\n            let h = IOHelper.readInt32LE(readable);\r\n            if (h !== ZipEntry.LocalFileHeaderSignature) {\r\n                return null;\r\n            }\r\n            // 4.3.7 local file header\r\n            IOHelper.readUInt16LE(readable); // version\r\n            let flags = IOHelper.readUInt16LE(readable);\r\n            let compressionMethod = IOHelper.readUInt16LE(readable);\r\n            let compressed = compressionMethod !== 0;\r\n            if (compressed && compressionMethod !== ZipEntry.CompressionMethodDeflate) {\r\n                return null;\r\n            }\r\n            IOHelper.readInt16LE(this._readable); // last mod file time\r\n            IOHelper.readInt16LE(this._readable); // last mod file date\r\n            IOHelper.readInt32LE(readable); // crc-32\r\n            IOHelper.readInt32LE(readable); // compressed size\r\n            let uncompressedSize = IOHelper.readInt32LE(readable);\r\n            let fileNameLength = IOHelper.readInt16LE(readable);\r\n            let extraFieldLength = IOHelper.readInt16LE(readable);\r\n            let fname = IOHelper.toString(IOHelper.readByteArray(readable, fileNameLength), 'utf-8');\r\n            readable.skip(extraFieldLength);\r\n            // 4.3.8 File Data\r\n            let data;\r\n            if (compressed) {\r\n                let target = ByteBuffer.empty();\r\n                let z = new Inflate(this._readable);\r\n                let buffer = new Uint8Array(65536);\r\n                while (true) {\r\n                    let bytes = z.readBytes(buffer, 0, buffer.length);\r\n                    target.write(buffer, 0, bytes);\r\n                    if (bytes < buffer.length) {\r\n                        break;\r\n                    }\r\n                }\r\n                data = target.toArray();\r\n            }\r\n            else {\r\n                data = IOHelper.readByteArray(this._readable, uncompressedSize);\r\n            }\r\n            // 4.3.9 Data Descriptor\r\n            // 4.3.9.1\r\n            if ((flags & 8) !== 0) {\r\n                let crc32 = IOHelper.readInt32LE(this._readable);\r\n                // 4.3.9.3\r\n                if (crc32 === ZipEntry.OptionalDataDescriptorSignature) {\r\n                    IOHelper.readInt32LE(this._readable); // real crc\r\n                }\r\n                IOHelper.readInt32LE(this._readable); // compressed size\r\n                IOHelper.readInt32LE(this._readable); // uncompressed size\r\n            }\r\n            return new ZipEntry(fname, data);\r\n        }\r\n    }\n\n    /**\r\n     * This ScoreImporter can read Guitar Pro 7 (gp) files.\r\n     */\r\n    class Gp7Importer extends ScoreImporter {\r\n        get name() {\r\n            return 'Guitar Pro 7';\r\n        }\r\n        constructor() {\r\n            super();\r\n        }\r\n        readScore() {\r\n            // at first we need to load the binary file system\r\n            // from the GPX container\r\n            Logger.debug(this.name, 'Loading ZIP entries');\r\n            let fileSystem = new ZipReader(this.data);\r\n            let entries;\r\n            try {\r\n                entries = fileSystem.read();\r\n            }\r\n            catch (e) {\r\n                throw new UnsupportedFormatError('No Zip archive', e);\r\n            }\r\n            Logger.debug(this.name, 'Zip entries loaded');\r\n            let xml = null;\r\n            let binaryStylesheetData = null;\r\n            let partConfigurationData = null;\r\n            for (let entry of entries) {\r\n                switch (entry.fileName) {\r\n                    case 'score.gpif':\r\n                        xml = IOHelper.toString(entry.data, this.settings.importer.encoding);\r\n                        break;\r\n                    case 'BinaryStylesheet':\r\n                        binaryStylesheetData = entry.data;\r\n                        break;\r\n                    case 'PartConfiguration':\r\n                        partConfigurationData = entry.data;\r\n                        break;\r\n                }\r\n            }\r\n            if (!xml) {\r\n                throw new UnsupportedFormatError('No score.gpif found in zip archive');\r\n            }\r\n            // the score.gpif file within this filesystem stores\r\n            // the score information as XML we need to parse.\r\n            Logger.debug(this.name, 'Start Parsing score.gpif');\r\n            let gpifParser = new GpifParser();\r\n            gpifParser.parseXml(xml, this.settings);\r\n            Logger.debug(this.name, 'score.gpif parsed');\r\n            let score = gpifParser.score;\r\n            if (binaryStylesheetData) {\r\n                Logger.debug(this.name, 'Start Parsing BinaryStylesheet');\r\n                let stylesheet = new BinaryStylesheet(binaryStylesheetData);\r\n                stylesheet.apply(score);\r\n                Logger.debug(this.name, 'BinaryStylesheet parsed');\r\n            }\r\n            if (partConfigurationData) {\r\n                Logger.debug(this.name, 'Start Parsing Part Configuration');\r\n                let partConfigurationParser = new PartConfiguration(partConfigurationData);\r\n                partConfigurationParser.apply(score);\r\n                Logger.debug(this.name, 'Part Configuration parsed');\r\n            }\r\n            return score;\r\n        }\r\n    }\n\n    class EndOfReaderError extends AlphaTabError {\r\n        constructor() {\r\n            super(exports.AlphaTabErrorType.Format, 'Unexpected end of data within reader');\r\n            Object.setPrototypeOf(this, EndOfReaderError.prototype);\r\n        }\r\n    }\r\n    /**\r\n     * This utility public class allows bitwise reading of a stream\r\n     */\r\n    class BitReader {\r\n        constructor(source) {\r\n            this._currentByte = 0;\r\n            this._position = BitReader.ByteSize;\r\n            this._source = source;\r\n        }\r\n        readByte() {\r\n            return this.readBits(8);\r\n        }\r\n        readBytes(count) {\r\n            const bytes = new Uint8Array(count);\r\n            for (let i = 0; i < count; i++) {\r\n                bytes[i] = this.readByte() & 0xff;\r\n            }\r\n            return bytes;\r\n        }\r\n        readBits(count) {\r\n            let bits = 0;\r\n            let i = count - 1;\r\n            while (i >= 0) {\r\n                bits = bits | (this.readBit() << i);\r\n                i--;\r\n            }\r\n            return bits;\r\n        }\r\n        readBitsReversed(count) {\r\n            let bits = 0;\r\n            for (let i = 0; i < count; i++) {\r\n                bits = bits | (this.readBit() << i);\r\n            }\r\n            return bits;\r\n        }\r\n        readBit() {\r\n            // need a new byte?\r\n            if (this._position >= 8) {\r\n                this._currentByte = this._source.readByte();\r\n                if (this._currentByte === -1) {\r\n                    throw new EndOfReaderError();\r\n                }\r\n                this._position = 0;\r\n            }\r\n            // shift the desired byte to the least significant bit and\r\n            // get the value using masking\r\n            const value = (this._currentByte >> (BitReader.ByteSize - this._position - 1)) & 0x01;\r\n            this._position++;\r\n            return value;\r\n        }\r\n        readAll() {\r\n            let all = ByteBuffer.empty();\r\n            try {\r\n                while (true) {\r\n                    all.writeByte(this.readByte() & 0xff);\r\n                }\r\n            }\r\n            catch (e) {\r\n                if (!(e instanceof EndOfReaderError)) {\r\n                    throw e;\r\n                }\r\n            }\r\n            return all.toArray();\r\n        }\r\n    }\r\n    BitReader.ByteSize = 8;\n\n    /**\r\n     * this public class represents a file within the GpxFileSystem\r\n     */\r\n    class GpxFile {\r\n        constructor() {\r\n            this.fileName = '';\r\n            this.fileSize = 0;\r\n            this.data = null;\r\n        }\r\n    }\r\n    /**\r\n     * This public class represents the file system structure\r\n     * stored within a GPX container file.\r\n     */\r\n    class GpxFileSystem {\r\n        /**\r\n         * Creates a new GpxFileSystem instance\r\n         */\r\n        constructor() {\r\n            /**\r\n             * Gets the list of files stored in this FileSystem.\r\n             */\r\n            this.files = [];\r\n            this.files = [];\r\n            this.fileFilter = s => {\r\n                return true;\r\n            };\r\n        }\r\n        /**\r\n         * Load a complete FileSystem to the memory.\r\n         * @param s the binary source to read from.\r\n         * @returns\r\n         */\r\n        load(s) {\r\n            let src = new BitReader(s);\r\n            this.readBlock(src);\r\n        }\r\n        /**\r\n         * Reads the 4 byte header as a string.\r\n         * @param src the BitInput to read from\r\n         * @returns a string with 4 characters representing the header.\r\n         */\r\n        readHeader(src) {\r\n            return this.getString(src.readBytes(4), 0, 4);\r\n        }\r\n        /**\r\n         * Decompresses the given bitinput using the GPX compression format. Only use this method\r\n         * if you are sure the binary data is compressed using the GPX format. Otherwise unexpected\r\n         * behavior can occure.\r\n         * @param src the bitInput to read the data from\r\n         * @param skipHeader true if the header should NOT be included in the result byteset, otherwise false\r\n         * @returns the decompressed byte data. if skipHeader is set to false the BCFS header is included.\r\n         */\r\n        decompress(src, skipHeader = false) {\r\n            let uncompressed = ByteBuffer.empty();\r\n            let buffer;\r\n            let expectedLength = this.getInteger(src.readBytes(4), 0);\r\n            try {\r\n                // as long we reach our expected length we try to decompress, a EOF might occure.\r\n                while (uncompressed.length < expectedLength) {\r\n                    // compression flag\r\n                    let flag = src.readBits(1);\r\n                    if (flag === 1) {\r\n                        // get offset and size of the content we need to read.\r\n                        // compressed does mean we already have read the data and need\r\n                        // to copy it from our uncompressed buffer to the end\r\n                        let wordSize = src.readBits(4);\r\n                        let offset = src.readBitsReversed(wordSize);\r\n                        let size = src.readBitsReversed(wordSize);\r\n                        // the offset is relative to the end\r\n                        let sourcePosition = uncompressed.length - offset;\r\n                        let toRead = Math.min(offset, size);\r\n                        // get the subbuffer storing the data and add it again to the end\r\n                        buffer = uncompressed.getBuffer();\r\n                        uncompressed.write(buffer, sourcePosition, toRead);\r\n                    }\r\n                    else {\r\n                        // on raw content we need to read the data from the source buffer\r\n                        let size = src.readBitsReversed(2);\r\n                        for (let i = 0; i < size; i++) {\r\n                            uncompressed.writeByte(src.readByte());\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                if (!(e instanceof EndOfReaderError)) {\r\n                    throw e;\r\n                }\r\n            }\r\n            buffer = uncompressed.getBuffer();\r\n            let resultOffset = skipHeader ? 4 : 0;\r\n            let resultSize = uncompressed.length - resultOffset;\r\n            let result = new Uint8Array(resultSize);\r\n            let count = resultSize;\r\n            result.set(buffer.subarray(resultOffset, resultOffset + count), 0);\r\n            return result;\r\n        }\r\n        /**\r\n         * Reads a block from the given data source.\r\n         * @param data the data source\r\n         * @returns\r\n         */\r\n        readBlock(data) {\r\n            let header = this.readHeader(data);\r\n            if (header === 'BCFZ') {\r\n                // decompress the data and use this\r\n                // we will skip the header\r\n                this.readUncompressedBlock(this.decompress(data, true));\r\n            }\r\n            else if (header === 'BCFS') {\r\n                this.readUncompressedBlock(data.readAll());\r\n            }\r\n            else {\r\n                throw new UnsupportedFormatError('Unsupported format');\r\n            }\r\n        }\r\n        /**\r\n         * Reads an uncompressed data block into the model.\r\n         * @param data the data store to read from.\r\n         */\r\n        readUncompressedBlock(data) {\r\n            // the uncompressed block contains a list of filesystem entires\r\n            // as long we have data we will try to read more entries\r\n            // the first sector (0x1000 bytes) is empty (filled with 0xFF)\r\n            // so the first sector starts at 0x1000\r\n            // (we already skipped the 4 byte header so we don't have to take care of this)\r\n            let sectorSize = 0x1000;\r\n            let offset = sectorSize;\r\n            // we always need 4 bytes (+3 including offset) to read the type\r\n            while (offset + 3 < data.length) {\r\n                let entryType = this.getInteger(data, offset);\r\n                if (entryType === 2) {\r\n                    // file structure:\r\n                    //   offset |   type   |   size   | what\r\n                    //  --------+----------+----------+------\r\n                    //    0x04  |  string  |  127byte | FileName (zero terminated)\r\n                    //    0x83  |    ?     |    9byte | Unknown\r\n                    //    0x8c  |   int    |    4byte | FileSize\r\n                    //    0x90  |    ?     |    4byte | Unknown\r\n                    //    0x94  |   int[]  |  n*4byte | Indices of the sector containing the data (end is marked with 0)\r\n                    // The sectors marked at 0x94 are absolutely positioned ( 1*0x1000 is sector 1, 2*0x1000 is sector 2,...)\r\n                    let file = new GpxFile();\r\n                    file.fileName = this.getString(data, offset + 0x04, 127);\r\n                    file.fileSize = this.getInteger(data, offset + 0x8c);\r\n                    // store file if needed\r\n                    let storeFile = !this.fileFilter || this.fileFilter(file.fileName);\r\n                    if (storeFile) {\r\n                        this.files.push(file);\r\n                    }\r\n                    // we need to iterate the blocks because we need to move after the last datasector\r\n                    let dataPointerOffset = offset + 0x94;\r\n                    let sector = 0;\r\n                    // this var is storing the sector index\r\n                    let sectorCount = 0;\r\n                    // we're keeping count so we can calculate the offset of the array item\r\n                    // as long we have data blocks we need to iterate them,\r\n                    let fileData = storeFile ? ByteBuffer.withCapacity(file.fileSize) : null;\r\n                    // tslint:disable-next-line: no-conditional-assignment\r\n                    while ((sector = this.getInteger(data, dataPointerOffset + 4 * sectorCount++)) !== 0) {\r\n                        // the next file entry starts after the last data sector so we\r\n                        // move the offset along\r\n                        offset = sector * sectorSize;\r\n                        // write data only if needed\r\n                        if (storeFile) {\r\n                            fileData.write(data, offset, sectorSize);\r\n                        }\r\n                    }\r\n                    if (storeFile) {\r\n                        // trim data to filesize if needed\r\n                        file.data = new Uint8Array(Math.min(file.fileSize, fileData.length));\r\n                        // we can use the getBuffer here because we are intelligent and know not to read the empty data.\r\n                        let raw = fileData.toArray();\r\n                        file.data.set(raw.subarray(0, 0 + file.data.length), 0);\r\n                    }\r\n                }\r\n                // let's move to the next sector\r\n                offset += sectorSize;\r\n            }\r\n        }\r\n        /**\r\n         * Reads a zeroterminated ascii string from the given source\r\n         * @param data the data source to read from\r\n         * @param offset the offset to start reading from\r\n         * @param length the max length to read\r\n         * @returns the ascii string read from the datasource.\r\n         */\r\n        getString(data, offset, length) {\r\n            let buf = '';\r\n            for (let i = 0; i < length; i++) {\r\n                let code = data[offset + i] & 0xff;\r\n                if (code === 0) {\r\n                    break;\r\n                    // zero terminated string\r\n                }\r\n                buf += String.fromCharCode(code);\r\n            }\r\n            return buf;\r\n        }\r\n        /**\r\n         * Reads an 4 byte signed integer from the given source\r\n         * @param data the data source to read from\r\n         * @param offset offset the offset to start reading from\r\n         * @returns\r\n         */\r\n        getInteger(data, offset) {\r\n            return (data[offset + 3] << 24) | (data[offset + 2] << 16) | (data[offset + 1] << 8) | data[offset];\r\n        }\r\n    }\r\n    GpxFileSystem.HeaderBcFs = 'BCFS';\r\n    GpxFileSystem.HeaderBcFz = 'BCFZ';\r\n    GpxFileSystem.ScoreGpif = 'score.gpif';\r\n    GpxFileSystem.BinaryStylesheet = 'BinaryStylesheet';\r\n    GpxFileSystem.PartConfiguration = 'PartConfiguration';\n\n    /**\r\n     * This ScoreImporter can read Guitar Pro 6 (gpx) files.\r\n     */\r\n    class GpxImporter extends ScoreImporter {\r\n        get name() {\r\n            return 'Guitar Pro 6';\r\n        }\r\n        constructor() {\r\n            super();\r\n        }\r\n        readScore() {\r\n            // at first we need to load the binary file system\r\n            // from the GPX container\r\n            Logger.debug(this.name, 'Loading GPX filesystem');\r\n            let fileSystem = new GpxFileSystem();\r\n            fileSystem.fileFilter = s => {\r\n                return s.endsWith('score.gpif') || s.endsWith('BinaryStylesheet') || s.endsWith('PartConfiguration');\r\n            };\r\n            fileSystem.load(this.data);\r\n            Logger.debug(this.name, 'GPX filesystem loaded');\r\n            let xml = null;\r\n            let binaryStylesheetData = null;\r\n            let partConfigurationData = null;\r\n            for (let entry of fileSystem.files) {\r\n                switch (entry.fileName) {\r\n                    case 'score.gpif':\r\n                        xml = IOHelper.toString(entry.data, this.settings.importer.encoding);\r\n                        break;\r\n                    case 'BinaryStylesheet':\r\n                        binaryStylesheetData = entry.data;\r\n                        break;\r\n                    case 'PartConfiguration':\r\n                        partConfigurationData = entry.data;\r\n                        break;\r\n                }\r\n            }\r\n            if (!xml) {\r\n                throw new UnsupportedFormatError('No score.gpif found in GPX');\r\n            }\r\n            // the score.gpif file within this filesystem stores\r\n            // the score information as XML we need to parse.\r\n            Logger.debug(this.name, 'Start Parsing score.gpif');\r\n            let gpifParser = new GpifParser();\r\n            gpifParser.parseXml(xml, this.settings);\r\n            Logger.debug(this.name, 'score.gpif parsed');\r\n            let score = gpifParser.score;\r\n            if (binaryStylesheetData) {\r\n                Logger.debug(this.name, 'Start Parsing BinaryStylesheet');\r\n                let binaryStylesheet = new BinaryStylesheet(binaryStylesheetData);\r\n                binaryStylesheet.apply(score);\r\n                Logger.debug(this.name, 'BinaryStylesheet parsed');\r\n            }\r\n            if (partConfigurationData) {\r\n                Logger.debug(this.name, 'Start Parsing Part Configuration');\r\n                let partConfiguration = new PartConfiguration(partConfigurationData);\r\n                partConfiguration.apply(score);\r\n                Logger.debug(this.name, 'Part Configuration parsed');\r\n            }\r\n            return score;\r\n        }\r\n    }\n\n    class MusicXmlImporter extends ScoreImporter {\r\n        constructor() {\r\n            super();\r\n            this._currentPartGroup = null;\r\n            this._trackFirstMeasureNumber = 0;\r\n            this._maxVoices = 0;\r\n            this._currentDirection = null;\r\n            this._currentChord = null;\r\n            this._divisionsPerQuarterNote = 0;\r\n            this._voiceOfStaff = new Map();\r\n            this._isBeamContinue = false;\r\n            this._previousBeatWasPulled = false;\r\n            this._previousBeat = null;\r\n        }\r\n        get name() {\r\n            return 'MusicXML';\r\n        }\r\n        readScore() {\r\n            this._trackById = new Map();\r\n            this._partGroups = new Map();\r\n            this._tieStarts = [];\r\n            this._tieStartIds = new Map();\r\n            this._slurStarts = new Map();\r\n            let xml = IOHelper.toString(this.data.readAll(), this.settings.importer.encoding);\r\n            let dom = new XmlDocument();\r\n            try {\r\n                dom.parse(xml);\r\n            }\r\n            catch (e) {\r\n                throw new UnsupportedFormatError('Unsupported format');\r\n            }\r\n            this._score = new Score();\r\n            this._score.tempo = 120;\r\n            this.parseDom(dom);\r\n            // merge partgroups into a single track with multiple staves\r\n            if (this.settings.importer.mergePartGroupsInMusicXml) {\r\n                this.mergePartGroups();\r\n            }\r\n            this._score.finish(this.settings);\r\n            // the structure of MusicXML does not allow live creation of the groups,\r\n            this._score.rebuildRepeatGroups();\r\n            return this._score;\r\n        }\r\n        mergePartGroups() {\r\n            let anyMerged = false;\r\n            for (const tracks of this._partGroups.values()) {\r\n                if (tracks.length > 1) {\r\n                    this.mergeGroup(tracks);\r\n                    anyMerged = true;\r\n                }\r\n            }\r\n            // if any groups were merged, we need to rebuild the indexes\r\n            if (anyMerged) {\r\n                for (let i = 0; i < this._score.tracks.length; i++) {\r\n                    this._score.tracks[i].index = i;\r\n                }\r\n            }\r\n        }\r\n        mergeGroup(partGroup) {\r\n            let primaryTrack = partGroup[0];\r\n            for (let i = 1; i < partGroup.length; i++) {\r\n                // merge staves over to primary track\r\n                let secondaryTrack = partGroup[i];\r\n                for (let staff of secondaryTrack.staves) {\r\n                    primaryTrack.addStaff(staff);\r\n                }\r\n                // remove track from score\r\n                let trackIndex = this._score.tracks.indexOf(secondaryTrack);\r\n                this._score.tracks.splice(trackIndex, 1);\r\n            }\r\n        }\r\n        parseDom(dom) {\r\n            let root = dom.firstElement;\r\n            if (!root) {\r\n                throw new UnsupportedFormatError('Unsupported format');\r\n            }\r\n            switch (root.localName) {\r\n                case 'score-partwise':\r\n                    this.parsePartwise(root);\r\n                    break;\r\n                case 'score-timewise':\r\n                    // ParseTimewise(root);\r\n                    break;\r\n                default:\r\n                    throw new UnsupportedFormatError('Unsupported format');\r\n            }\r\n        }\r\n        parsePartwise(element) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'work':\r\n                            this.parseWork(c);\r\n                            break;\r\n                        case 'movement-title':\r\n                            this._score.title = c.innerText;\r\n                            break;\r\n                        case 'identification':\r\n                            this.parseIdentification(c);\r\n                            break;\r\n                        case 'part-list':\r\n                            this.parsePartList(c);\r\n                            break;\r\n                        case 'part':\r\n                            this.parsePart(c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseWork(element) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'work-title':\r\n                            this._score.title = c.innerText;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parsePart(element) {\r\n            let id = element.getAttribute('id');\r\n            if (!this._trackById.has(id)) {\r\n                if (this._trackById.size === 1) {\r\n                    for (const [x, t] of this._trackById) {\r\n                        if (t.staves.length === 0 || t.staves[0].bars.length === 0) {\r\n                            id = x;\r\n                        }\r\n                    }\r\n                    if (!this._trackById.has(id)) {\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let track = this._trackById.get(id);\r\n            let isFirstMeasure = true;\r\n            this._maxVoices = 0;\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'measure':\r\n                            if (this.parseMeasure(c, track, isFirstMeasure)) {\r\n                                isFirstMeasure = false;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            // ensure voices for all bars\r\n            for (let staff of track.staves) {\r\n                for (let bar of staff.bars) {\r\n                    this.ensureVoices(bar);\r\n                }\r\n            }\r\n        }\r\n        parseMeasure(element, track, isFirstMeasure) {\r\n            if (element.getAttribute('implicit') === 'yes' && element.getElementsByTagName('note', false).length === 0) {\r\n                return false;\r\n            }\r\n            let barIndex = 0;\r\n            if (isFirstMeasure) {\r\n                this._divisionsPerQuarterNote = 0;\r\n                this._trackFirstMeasureNumber = parseInt(element.getAttribute('number'));\r\n                if (!this._trackFirstMeasureNumber) {\r\n                    this._trackFirstMeasureNumber = 0;\r\n                }\r\n                barIndex = 0;\r\n            }\r\n            else {\r\n                barIndex = parseInt(element.getAttribute('number'));\r\n                if (!barIndex) {\r\n                    return false;\r\n                }\r\n                barIndex -= this._trackFirstMeasureNumber;\r\n            }\r\n            // try to find out the number of staffs required\r\n            if (isFirstMeasure) {\r\n                let attributes = element.getElementsByTagName('attributes', false);\r\n                if (attributes.length > 0) {\r\n                    let stavesElements = attributes[0].getElementsByTagName('staves', false);\r\n                    if (stavesElements.length > 0) {\r\n                        let staves = parseInt(stavesElements[0].innerText);\r\n                        track.ensureStaveCount(staves);\r\n                    }\r\n                }\r\n            }\r\n            // create empty bars to the current index\r\n            let bars = new Array(track.staves.length);\r\n            let masterBar = null;\r\n            for (let b = track.staves[0].bars.length; b <= barIndex; b++) {\r\n                for (let s = 0; s < track.staves.length; s++) {\r\n                    let bar = (bars[s] = new Bar());\r\n                    if (track.staves[s].bars.length > 0) {\r\n                        let previousBar = track.staves[s].bars[track.staves[s].bars.length - 1];\r\n                        bar.clef = previousBar.clef;\r\n                    }\r\n                    masterBar = this.getOrCreateMasterBar(barIndex);\r\n                    track.staves[s].addBar(bar);\r\n                    this.ensureVoices(bar);\r\n                }\r\n            }\r\n            let attributesParsed = false;\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'note':\r\n                            this.parseNoteBeat(c, bars);\r\n                            break;\r\n                        case 'forward':\r\n                            this.parseForward(c, bars);\r\n                            break;\r\n                        case 'direction':\r\n                            this.parseDirection(c, masterBar);\r\n                            break;\r\n                        case 'attributes':\r\n                            if (!attributesParsed) {\r\n                                this.parseAttributes(c, bars, masterBar, track);\r\n                                attributesParsed = true;\r\n                            }\r\n                            break;\r\n                        case 'harmony':\r\n                            this.parseHarmony(c, track);\r\n                            break;\r\n                        case 'sound':\r\n                            // TODO\r\n                            break;\r\n                        case 'barline':\r\n                            this.parseBarline(c, masterBar);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        ensureVoices(bar) {\r\n            while (bar.voices.length < this._maxVoices) {\r\n                let emptyVoice = new Voice();\r\n                bar.addVoice(emptyVoice);\r\n                let emptyBeat = new Beat();\r\n                emptyBeat.isEmpty = true;\r\n                emptyBeat.chordId = this._currentChord;\r\n                emptyVoice.addBeat(emptyBeat);\r\n            }\r\n        }\r\n        getOrCreateBeat(element, bars, chord) {\r\n            let voiceIndex = 0;\r\n            let voiceNodes = element.getElementsByTagName('voice', false);\r\n            if (voiceNodes.length > 0) {\r\n                voiceIndex = parseInt(voiceNodes[0].innerText) - 1;\r\n            }\r\n            let previousBeatWasPulled = this._previousBeatWasPulled;\r\n            this._previousBeatWasPulled = false;\r\n            let staffElement = element.getElementsByTagName('staff', false);\r\n            let staff = 1;\r\n            if (staffElement.length > 0) {\r\n                staff = parseInt(staffElement[0].innerText);\r\n                // in case we have a beam with a staff-jump we pull the note to the previous staff\r\n                if ((this._isBeamContinue || previousBeatWasPulled) &&\r\n                    this._previousBeat.voice.bar.staff.index !== staff - 1) {\r\n                    staff = this._previousBeat.voice.bar.staff.index + 1;\r\n                    this._previousBeatWasPulled = true;\r\n                }\r\n                let staffId = bars[0].staff.track.index + '-' + staff;\r\n                if (!this._voiceOfStaff.has(staffId)) {\r\n                    this._voiceOfStaff.set(staffId, voiceIndex);\r\n                }\r\n            }\r\n            staff--;\r\n            let bar;\r\n            if (staff < 0) {\r\n                bar = bars[0];\r\n            }\r\n            else if (staff >= bars.length) {\r\n                bar = bars[bars.length - 1];\r\n            }\r\n            else {\r\n                bar = bars[staff];\r\n            }\r\n            let beat;\r\n            let voice = this.getOrCreateVoice(bar, voiceIndex);\r\n            if ((chord && voice.beats.length > 0) || (voice.beats.length === 1 && voice.isEmpty)) {\r\n                beat = voice.beats[voice.beats.length - 1];\r\n            }\r\n            else {\r\n                beat = new Beat();\r\n                beat.isEmpty = false;\r\n                voice.addBeat(beat);\r\n            }\r\n            this._isBeamContinue = false;\r\n            this._previousBeat = beat;\r\n            return beat;\r\n        }\r\n        parseForward(element, bars) {\r\n            let beat = this.getOrCreateBeat(element, bars, false);\r\n            let durationInDivisions = parseInt(element.findChildElement('duration').innerText);\r\n            let duration = (durationInDivisions * Duration.Quarter) / this._divisionsPerQuarterNote;\r\n            let durations = [\r\n                Duration.SixtyFourth,\r\n                Duration.ThirtySecond,\r\n                Duration.Sixteenth,\r\n                Duration.Eighth,\r\n                Duration.Quarter,\r\n                Duration.Half,\r\n                Duration.Whole\r\n            ];\r\n            for (let d of durations) {\r\n                if (duration >= d) {\r\n                    beat.duration = d;\r\n                    duration -= d;\r\n                    break;\r\n                }\r\n            }\r\n            beat.isEmpty = false;\r\n        }\r\n        parseStaffDetails(element, track) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'staff-lines':\r\n                            for (let staff of track.staves) {\r\n                                staff.stringTuning.tunings = new Array(parseInt(c.innerText)).fill(0);\r\n                            }\r\n                            break;\r\n                        case 'staff-tuning':\r\n                            this.parseStaffTuning(c, track);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            for (let staff of track.staves) {\r\n                if (this.isEmptyTuning(staff.tuning)) {\r\n                    staff.stringTuning.tunings = [];\r\n                }\r\n            }\r\n        }\r\n        parseStaffTuning(element, track) {\r\n            let line = parseInt(element.getAttribute('line'));\r\n            let tuningStep = 'C';\r\n            let tuningOctave = '';\r\n            let tuningAlter = 0;\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'tuning-step':\r\n                            tuningStep = c.innerText;\r\n                            break;\r\n                        case 'tuning-alter':\r\n                            tuningAlter = parseInt(c.innerText);\r\n                            break;\r\n                        case 'tuning-octave':\r\n                            tuningOctave = c.innerText;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            let tuning = ModelUtils.getTuningForText(tuningStep + tuningOctave) + tuningAlter;\r\n            for (let staff of track.staves) {\r\n                staff.tuning[staff.tuning.length - line] = tuning;\r\n            }\r\n        }\r\n        parseHarmony(element, track) {\r\n            let rootStep = null;\r\n            let rootAlter = '';\r\n            // let kind: string | null = null;\r\n            // let kindText: string | null = null;\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'root':\r\n                            for (let rootChild of c.childNodes) {\r\n                                if (rootChild.nodeType === XmlNodeType.Element) {\r\n                                    switch (rootChild.localName) {\r\n                                        case 'root-step':\r\n                                            rootStep = rootChild.innerText;\r\n                                            break;\r\n                                        case 'root-alter':\r\n                                            switch (parseInt(c.innerText)) {\r\n                                                case -2:\r\n                                                    rootAlter = ' bb';\r\n                                                    break;\r\n                                                case -1:\r\n                                                    rootAlter = ' b';\r\n                                                    break;\r\n                                                case 0:\r\n                                                    rootAlter = '';\r\n                                                    break;\r\n                                                case 1:\r\n                                                    rootAlter = ' #';\r\n                                                    break;\r\n                                                case 2:\r\n                                                    rootAlter = ' ##';\r\n                                                    break;\r\n                                            }\r\n                                            break;\r\n                                    }\r\n                                }\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            let chord = new Chord();\r\n            chord.name = rootStep + rootAlter;\r\n            // TODO: find proper names for the rest\r\n            // switch (kind)\r\n            // {\r\n            //    // triads\r\n            //    case \"major\":\r\n            //        break;\r\n            //    case \"minor\":\r\n            //        chord.Name += \"m\";\r\n            //        break;\r\n            //    // Sevenths\r\n            //    case \"augmented\":\r\n            //        break;\r\n            //    case \"diminished\":\r\n            //        break;\r\n            //    case \"dominant\":\r\n            //        break;\r\n            //    case \"major-seventh\":\r\n            //        chord.Name += \"7M\";\r\n            //        break;\r\n            //    case \"minor-seventh\":\r\n            //        chord.Name += \"m7\";\r\n            //        break;\r\n            //    case \"diminished-seventh\":\r\n            //        break;\r\n            //    case \"augmented-seventh\":\r\n            //        break;\r\n            //    case \"half-diminished\":\r\n            //        break;\r\n            //    case \"major-minor\":\r\n            //        break;\r\n            //    // Sixths\r\n            //    case \"major-sixth\":\r\n            //        break;\r\n            //    case \"minor-sixth\":\r\n            //        break;\r\n            //    // Ninths\r\n            //    case \"dominant-ninth\":\r\n            //        break;\r\n            //    case \"major-ninth\":\r\n            //        break;\r\n            //    case \"minor-ninth\":\r\n            //        break;\r\n            //    // 11ths\r\n            //    case \"dominant-11th\":\r\n            //        break;\r\n            //    case \"major-11th\":\r\n            //        break;\r\n            //    case \"minor-11th\":\r\n            //        break;\r\n            //    // 13ths\r\n            //    case \"dominant-13th\":\r\n            //        break;\r\n            //    case \"major-13th\":\r\n            //        break;\r\n            //    case \"minor-13th\":\r\n            //        break;\r\n            //    // Suspended\r\n            //    case \"suspended-second\":\r\n            //        break;\r\n            //    case \"suspended-fourth\":\r\n            //        break;\r\n            //    // Functional sixths\r\n            //    case \"Neapolitan\":\r\n            //        break;\r\n            //    case \"Italian\":\r\n            //        break;\r\n            //    case \"French\":\r\n            //        break;\r\n            //    case \"German\":\r\n            //        break;\r\n            //    // Other\r\n            //    case \"pedal\":\r\n            //        break;\r\n            //    case \"power\":\r\n            //        break;\r\n            //    case \"Tristan\":\r\n            //        break;\r\n            // }\r\n            // var degree = element.GetElementsByTagName(\"degree\");\r\n            // if (degree.Length > 0)\r\n            // {\r\n            //    var degreeValue = Platform.GetNodeValue(degree[0].GetElementsByTagName(\"degree-value\")[0]);\r\n            //    var degreeAlter = Platform.GetNodeValue(degree[0].GetElementsByTagName(\"degree-alter\")[0]);\r\n            //    var degreeType = Platform.GetNodeValue(degree[0].GetElementsByTagName(\"degree-type\")[0]);\r\n            //    if (!string.IsNullOrEmpty(degreeType))\r\n            //    {\r\n            //        chord.Name += degreeType;\r\n            //    }\r\n            //    if (!string.IsNullOrEmpty(degreeValue))\r\n            //    {\r\n            //        chord.Name += \"#\" + degreeValue;\r\n            //    }\r\n            // }\r\n            this._currentChord = ModelUtils.newGuid();\r\n            for (let staff of track.staves) {\r\n                staff.addChord(this._currentChord, chord);\r\n            }\r\n        }\r\n        parseBarline(element, masterBar) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'repeat':\r\n                            this.parseRepeat(c, masterBar);\r\n                            break;\r\n                        case 'ending':\r\n                            this.parseEnding(c, masterBar);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseEnding(element, masterBar) {\r\n            let num = parseInt(element.getAttribute('number'));\r\n            if (num > 0) {\r\n                --num;\r\n                masterBar.alternateEndings |= (0x01 << num) & 0xff;\r\n            }\r\n        }\r\n        parseRepeat(element, masterBar) {\r\n            let direction = element.getAttribute('direction');\r\n            let times = parseInt(element.getAttribute('times'));\r\n            if (times < 0 || isNaN(times)) {\r\n                times = 2;\r\n            }\r\n            if (direction === 'backward') {\r\n                masterBar.repeatCount = times;\r\n            }\r\n            else if (direction === 'forward') {\r\n                masterBar.isRepeatStart = true;\r\n            }\r\n        }\r\n        parseNoteBeat(element, bars) {\r\n            let chord = element.getElementsByTagName('chord', false).length > 0;\r\n            let beat = this.getOrCreateBeat(element, bars, chord);\r\n            if (!beat.chordId && this._currentChord) {\r\n                beat.chordId = this._currentChord;\r\n                this._currentChord = null;\r\n            }\r\n            if (this._currentDirection) {\r\n                beat.text = this._currentDirection;\r\n                this._currentDirection = null;\r\n            }\r\n            let note = new Note();\r\n            beat.voice.isEmpty = false;\r\n            beat.isEmpty = false;\r\n            beat.addNote(note);\r\n            beat.dots = 0;\r\n            let isFullBarRest = false;\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'grace':\r\n                            // var slash = e.GetAttribute(\"slash\");\r\n                            // var makeTime = Platform.ParseInt(e.GetAttribute(\"make-time\"));\r\n                            // var stealTimePrevious = Platform.ParseInt(e.GetAttribute(\"steal-time-previous\"));\r\n                            // var stealTimeFollowing = Platform.ParseInt(e.GetAttribute(\"steal-time-following\"));\r\n                            beat.graceType = GraceType.BeforeBeat;\r\n                            beat.duration = Duration.ThirtySecond;\r\n                            break;\r\n                        case 'duration':\r\n                            if (beat.isRest && !isFullBarRest) {\r\n                                // unit: divisions per quarter note\r\n                                let duration = parseInt(c.innerText);\r\n                                switch (duration) {\r\n                                    case 1:\r\n                                        beat.duration = Duration.Whole;\r\n                                        break;\r\n                                    case 2:\r\n                                        beat.duration = Duration.Half;\r\n                                        break;\r\n                                    case 4:\r\n                                        beat.duration = Duration.Quarter;\r\n                                        break;\r\n                                    case 8:\r\n                                        beat.duration = Duration.Eighth;\r\n                                        break;\r\n                                    case 16:\r\n                                        beat.duration = Duration.Sixteenth;\r\n                                        break;\r\n                                    case 32:\r\n                                        beat.duration = Duration.ThirtySecond;\r\n                                        break;\r\n                                    case 64:\r\n                                        beat.duration = Duration.SixtyFourth;\r\n                                        break;\r\n                                    default:\r\n                                        beat.duration = Duration.Quarter;\r\n                                        break;\r\n                                }\r\n                            }\r\n                            break;\r\n                        case 'tie':\r\n                            this.parseTied(c, note);\r\n                            break;\r\n                        case 'cue':\r\n                            // not supported\r\n                            break;\r\n                        case 'instrument':\r\n                            // not supported\r\n                            break;\r\n                        case 'type':\r\n                            beat.duration = this.getDuration(c.innerText);\r\n                            if (beat.graceType !== GraceType.None && beat.duration < Duration.Sixteenth) {\r\n                                beat.duration = Duration.Eighth;\r\n                            }\r\n                            break;\r\n                        case 'dot':\r\n                            beat.dots++;\r\n                            break;\r\n                        case 'accidental':\r\n                            this.parseAccidental(c, note);\r\n                            break;\r\n                        case 'time-modification':\r\n                            this.parseTimeModification(c, beat);\r\n                            break;\r\n                        case 'stem':\r\n                            // not supported\r\n                            break;\r\n                        case 'notehead':\r\n                            if (c.getAttribute('parentheses') === 'yes') {\r\n                                note.isGhost = true;\r\n                            }\r\n                            break;\r\n                        case 'beam':\r\n                            let beamMode = c.innerText;\r\n                            if (beamMode === 'continue') {\r\n                                this._isBeamContinue = true;\r\n                            }\r\n                            break;\r\n                        case 'notations':\r\n                            this.parseNotations(c, beat, note);\r\n                            break;\r\n                        case 'lyric':\r\n                            this.parseLyric(c, beat);\r\n                            break;\r\n                        case 'pitch':\r\n                            this.parsePitch(c, note);\r\n                            break;\r\n                        case 'unpitched':\r\n                            this.parseUnpitched(c, note);\r\n                            break;\r\n                        case 'rest':\r\n                            isFullBarRest = c.getAttribute('measure') === 'yes';\r\n                            beat.isEmpty = false;\r\n                            beat.notes = [];\r\n                            beat.duration = Duration.Whole;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            // check if new note is duplicate on string\r\n            if (note.isStringed) {\r\n                for (let i = 0; i < beat.notes.length; i++) {\r\n                    if (beat.notes[i].string === note.string && beat.notes[i] !== note) {\r\n                        beat.removeNote(note);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        getDuration(text) {\r\n            switch (text) {\r\n                case '256th':\r\n                case '128th':\r\n                case '64th':\r\n                    return Duration.SixtyFourth;\r\n                case '32nd':\r\n                    return Duration.ThirtySecond;\r\n                case '16th':\r\n                    return Duration.Sixteenth;\r\n                case 'eighth':\r\n                    return Duration.Eighth;\r\n                case 'quarter':\r\n                    return Duration.Quarter;\r\n                case 'half':\r\n                    return Duration.Half;\r\n                case 'long':\r\n                case 'breve':\r\n                case 'whole':\r\n                    return Duration.Whole;\r\n            }\r\n            return Duration.Quarter;\r\n        }\r\n        parseLyric(element, beat) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'text':\r\n                            if (beat.text) {\r\n                                beat.text += ' ' + c.innerText;\r\n                            }\r\n                            else {\r\n                                beat.text = c.innerText;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseAccidental(element, note) {\r\n            switch (element.innerText) {\r\n                case 'sharp':\r\n                    note.accidentalMode = NoteAccidentalMode.ForceSharp;\r\n                    break;\r\n                case 'natural':\r\n                    note.accidentalMode = NoteAccidentalMode.ForceNatural;\r\n                    break;\r\n                case 'flat':\r\n                    note.accidentalMode = NoteAccidentalMode.ForceFlat;\r\n                    break;\r\n            }\r\n        }\r\n        parseTied(element, note) {\r\n            if (element.getAttribute('type') === 'start') {\r\n                if (!this._tieStartIds.has(note.id)) {\r\n                    this._tieStartIds.set(note.id, true);\r\n                    this._tieStarts.push(note);\r\n                }\r\n            }\r\n            else if (element.getAttribute('type') === 'stop' && this._tieStarts.length > 0 && !note.isTieDestination) {\r\n                note.isTieDestination = true;\r\n                note.tieOriginNoteId = this._tieStarts[0].id;\r\n                this._tieStarts.splice(0, 1);\r\n                this._tieStartIds.delete(note.id);\r\n            }\r\n        }\r\n        parseNotations(element, beat, note) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'articulations':\r\n                            this.parseArticulations(c, note);\r\n                            break;\r\n                        case 'tied':\r\n                            this.parseTied(c, note);\r\n                            break;\r\n                        case 'slide':\r\n                        case 'glissando':\r\n                            if (c.getAttribute('type') === 'start') {\r\n                                note.slideOutType = SlideOutType.Shift;\r\n                            }\r\n                            break;\r\n                        case 'dynamics':\r\n                            this.parseDynamics(c, beat);\r\n                            break;\r\n                        case 'technical':\r\n                            this.parseTechnical(c, note);\r\n                            break;\r\n                        case 'ornaments':\r\n                            this.parseOrnaments(c, note);\r\n                            break;\r\n                        case 'slur':\r\n                            let slurNumber = c.getAttribute('number');\r\n                            if (!slurNumber) {\r\n                                slurNumber = '1';\r\n                            }\r\n                            switch (c.getAttribute('type')) {\r\n                                case 'start':\r\n                                    this._slurStarts.set(slurNumber, note);\r\n                                    break;\r\n                                case 'stop':\r\n                                    if (this._slurStarts.has(slurNumber)) {\r\n                                        note.isSlurDestination = true;\r\n                                        let slurStart = this._slurStarts.get(slurNumber);\r\n                                        slurStart.slurDestinationNoteId = note.id;\r\n                                        note.slurOriginNoteId = note.id;\r\n                                    }\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseOrnaments(element, note) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'tremolo':\r\n                            let tremoloSpeed = parseInt(c.innerText);\r\n                            switch (tremoloSpeed) {\r\n                                case 1:\r\n                                    note.beat.tremoloSpeed = Duration.Eighth;\r\n                                    break;\r\n                                case 2:\r\n                                    note.beat.tremoloSpeed = Duration.Sixteenth;\r\n                                    break;\r\n                                case 3:\r\n                                    note.beat.tremoloSpeed = Duration.ThirtySecond;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseTechnical(element, note) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'string':\r\n                            note.string = parseInt(c.innerText);\r\n                            if (note.string !== -2147483648) {\r\n                                note.string = note.beat.voice.bar.staff.tuning.length - note.string + 1;\r\n                            }\r\n                            break;\r\n                        case 'fret':\r\n                            note.fret = parseInt(c.innerText);\r\n                            break;\r\n                        case 'down-bow':\r\n                            note.beat.pickStroke = PickStroke.Down;\r\n                            break;\r\n                        case 'up-bow':\r\n                            note.beat.pickStroke = PickStroke.Up;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (note.string === -2147483648 || note.fret === -2147483648) {\r\n                note.string = -1;\r\n                note.fret = -1;\r\n            }\r\n        }\r\n        parseArticulations(element, note) {\r\n            for (let c of element.childNodes) {\r\n                switch (c.localName) {\r\n                    case 'accent':\r\n                        note.accentuated = AccentuationType.Normal;\r\n                        break;\r\n                    case 'strong-accent':\r\n                        note.accentuated = AccentuationType.Heavy;\r\n                        break;\r\n                    case 'staccato':\r\n                    case 'detached-legato':\r\n                        note.isStaccato = true;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        parseDynamics(element, beat) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'p':\r\n                            beat.dynamics = DynamicValue.P;\r\n                            break;\r\n                        case 'pp':\r\n                            beat.dynamics = DynamicValue.PP;\r\n                            break;\r\n                        case 'ppp':\r\n                            beat.dynamics = DynamicValue.PPP;\r\n                            break;\r\n                        case 'f':\r\n                            beat.dynamics = DynamicValue.F;\r\n                            break;\r\n                        case 'ff':\r\n                            beat.dynamics = DynamicValue.FF;\r\n                            break;\r\n                        case 'fff':\r\n                            beat.dynamics = DynamicValue.FFF;\r\n                            break;\r\n                        case 'mp':\r\n                            beat.dynamics = DynamicValue.MP;\r\n                            break;\r\n                        case 'mf':\r\n                            beat.dynamics = DynamicValue.MF;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseTimeModification(element, beat) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'actual-notes':\r\n                            beat.tupletNumerator = parseInt(c.innerText);\r\n                            break;\r\n                        case 'normal-notes':\r\n                            beat.tupletDenominator = parseInt(c.innerText);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseUnpitched(element, note) {\r\n            let step = '';\r\n            let semitones = 0;\r\n            let octave = 0;\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'display-step':\r\n                            step = c.innerText;\r\n                            break;\r\n                        case 'display-alter':\r\n                            semitones = parseInt(c.innerText);\r\n                            break;\r\n                        case 'display-octave':\r\n                            // 0-9, 4 for middle C\r\n                            octave = parseInt(c.innerText);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            let value = octave * 12 + ModelUtils.getToneForText(step) + semitones;\r\n            note.octave = (value / 12) | 0;\r\n            note.tone = value - note.octave * 12;\r\n        }\r\n        parsePitch(element, note) {\r\n            let step = '';\r\n            let semitones = 0;\r\n            let octave = 0;\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'step':\r\n                            step = c.innerText;\r\n                            break;\r\n                        case 'alter':\r\n                            semitones = parseFloat(c.innerText);\r\n                            if (isNaN(semitones)) {\r\n                                semitones = 0;\r\n                            }\r\n                            break;\r\n                        case 'octave':\r\n                            // 0-9, 4 for middle C\r\n                            octave = parseInt(c.innerText) + 1;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            let value = octave * 12 + ModelUtils.getToneForText(step) + (semitones | 0);\r\n            note.octave = (value / 12) | 0;\r\n            note.tone = value - note.octave * 12;\r\n        }\r\n        getOrCreateVoice(bar, index) {\r\n            if (index < bar.voices.length) {\r\n                return bar.voices[index];\r\n            }\r\n            for (let i = bar.voices.length; i <= index; i++) {\r\n                bar.addVoice(new Voice());\r\n            }\r\n            this._maxVoices = Math.max(this._maxVoices, bar.voices.length);\r\n            return bar.voices[index];\r\n        }\r\n        parseDirection(element, masterBar) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'sound':\r\n                            let tempo = c.getAttribute('tempo');\r\n                            if (tempo) {\r\n                                let tempoAutomation = new Automation();\r\n                                tempoAutomation.isLinear = true;\r\n                                tempoAutomation.type = AutomationType.Tempo;\r\n                                tempoAutomation.value = parseInt(tempo);\r\n                                masterBar.tempoAutomation = tempoAutomation;\r\n                            }\r\n                            break;\r\n                        case 'direction-type':\r\n                            let directionType = c.firstElement;\r\n                            switch (directionType.localName) {\r\n                                case 'words':\r\n                                    this._currentDirection = directionType.innerText;\r\n                                    break;\r\n                                case 'metronome':\r\n                                    this.parseMetronome(directionType, masterBar);\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseMetronome(element, masterBar) {\r\n            let unit = Duration.Quarter;\r\n            let perMinute = 120;\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'beat-unit':\r\n                            unit = this.getDuration(c.innerText);\r\n                            break;\r\n                        case 'per-minute':\r\n                            perMinute = parseInt(c.innerText);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            let tempoAutomation = (masterBar.tempoAutomation = new Automation());\r\n            tempoAutomation.type = AutomationType.Tempo;\r\n            tempoAutomation.value = perMinute * ((unit / 4) | 0);\r\n        }\r\n        parseAttributes(element, bars, masterBar, track) {\r\n            let num = 0;\r\n            let hasTime = false;\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'divisions':\r\n                            this._divisionsPerQuarterNote = parseInt(c.innerText);\r\n                            break;\r\n                        case 'key':\r\n                            this.parseKey(c, masterBar);\r\n                            break;\r\n                        case 'time':\r\n                            this.parseTime(c, masterBar);\r\n                            hasTime = true;\r\n                            break;\r\n                        case 'clef':\r\n                            num = parseInt(c.getAttribute('number'));\r\n                            if (isNaN(num)) {\r\n                                num = 1;\r\n                            }\r\n                            this.parseClef(c, bars[num - 1]);\r\n                            break;\r\n                        case 'staff-details':\r\n                            this.parseStaffDetails(c, track);\r\n                            break;\r\n                        case 'transpose':\r\n                            this.parseTranspose(c, track);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (!hasTime) {\r\n                masterBar.timeSignatureCommon = true;\r\n            }\r\n        }\r\n        parseTranspose(element, track) {\r\n            let semitones = 0;\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'chromatic':\r\n                            semitones += parseInt(c.innerText);\r\n                            break;\r\n                        case 'octave-change':\r\n                            semitones += parseInt(c.innerText) * 12;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            for (let staff of track.staves) {\r\n                staff.transpositionPitch = semitones;\r\n            }\r\n        }\r\n        parseClef(element, bar) {\r\n            let sign = 's';\r\n            let line = 0;\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'sign':\r\n                            sign = c.innerText.toLowerCase();\r\n                            break;\r\n                        case 'line':\r\n                            line = parseInt(c.innerText);\r\n                            break;\r\n                        case 'clef-octave-change':\r\n                            switch (parseInt(c.innerText)) {\r\n                                case -2:\r\n                                    bar.clefOttava = Ottavia._15mb;\r\n                                    break;\r\n                                case -1:\r\n                                    bar.clefOttava = Ottavia._8vb;\r\n                                    break;\r\n                                case 1:\r\n                                    bar.clefOttava = Ottavia._8va;\r\n                                    break;\r\n                                case 2:\r\n                                    bar.clefOttava = Ottavia._15mb;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            switch (sign) {\r\n                case 'g':\r\n                    bar.clef = Clef.G2;\r\n                    break;\r\n                case 'f':\r\n                    bar.clef = Clef.F4;\r\n                    break;\r\n                case 'c':\r\n                    if (line === 3) {\r\n                        bar.clef = Clef.C3;\r\n                    }\r\n                    else {\r\n                        bar.clef = Clef.C4;\r\n                    }\r\n                    break;\r\n                case 'percussion':\r\n                    bar.clef = Clef.Neutral;\r\n                    bar.staff.isPercussion = true;\r\n                    break;\r\n                case 'tab':\r\n                    bar.clef = Clef.G2;\r\n                    bar.staff.showTablature = true;\r\n                    break;\r\n                default:\r\n                    bar.clef = Clef.G2;\r\n                    break;\r\n            }\r\n        }\r\n        parseTime(element, masterBar) {\r\n            if (element.getAttribute('symbol') === 'common') {\r\n                masterBar.timeSignatureCommon = true;\r\n            }\r\n            let beatsParsed = false;\r\n            let beatTypeParsed = false;\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    let v = c.innerText;\r\n                    switch (c.localName) {\r\n                        case 'beats':\r\n                            if (!beatsParsed) {\r\n                                if (v.indexOf('+') === -1) {\r\n                                    masterBar.timeSignatureNumerator = parseInt(v);\r\n                                }\r\n                                else {\r\n                                    masterBar.timeSignatureNumerator = 4;\r\n                                }\r\n                                beatsParsed = true;\r\n                            }\r\n                            break;\r\n                        case 'beat-type':\r\n                            if (!beatTypeParsed) {\r\n                                if (v.indexOf('+') === -1) {\r\n                                    masterBar.timeSignatureDenominator = parseInt(v);\r\n                                }\r\n                                else {\r\n                                    masterBar.timeSignatureDenominator = 4;\r\n                                }\r\n                                beatTypeParsed = true;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseKey(element, masterBar) {\r\n            let fifths = -2147483648;\r\n            //let keyStep: number = -2147483648;\r\n            //let keyAlter: number = -2147483648;\r\n            let mode = '';\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'fifths':\r\n                            fifths = parseInt(c.innerText);\r\n                            break;\r\n                        case 'key-step':\r\n                            //keyStep = parseInt(c.innerText);\r\n                            break;\r\n                        case 'key-alter':\r\n                            //keyAlter = parseInt(c.innerText);\r\n                            break;\r\n                        case 'mode':\r\n                            mode = c.innerText;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (-7 <= fifths && fifths <= 7) {\r\n                // TODO: check if this is conrrect\r\n                masterBar.keySignature = fifths;\r\n            }\r\n            else {\r\n                masterBar.keySignature = KeySignature.C;\r\n                // TODO: map keyStep/keyAlter to internal keysignature\r\n            }\r\n            if (mode === 'minor') {\r\n                masterBar.keySignatureType = KeySignatureType.Minor;\r\n            }\r\n            else {\r\n                masterBar.keySignatureType = KeySignatureType.Major;\r\n            }\r\n        }\r\n        getOrCreateMasterBar(index) {\r\n            if (index < this._score.masterBars.length) {\r\n                return this._score.masterBars[index];\r\n            }\r\n            for (let i = this._score.masterBars.length; i <= index; i++) {\r\n                let mb = new MasterBar();\r\n                if (this._score.masterBars.length > 0) {\r\n                    let prev = this._score.masterBars[this._score.masterBars.length - 1];\r\n                    mb.timeSignatureDenominator = prev.timeSignatureDenominator;\r\n                    mb.timeSignatureNumerator = prev.timeSignatureNumerator;\r\n                    mb.keySignature = prev.keySignature;\r\n                    mb.keySignatureType = prev.keySignatureType;\r\n                }\r\n                this._score.addMasterBar(mb);\r\n            }\r\n            return this._score.masterBars[index];\r\n        }\r\n        parseIdentification(element) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'creator':\r\n                            if (c.getAttribute('type') === 'composer') {\r\n                                this._score.music = c.innerText;\r\n                            }\r\n                            break;\r\n                        case 'rights':\r\n                            if (this._score.copyright) {\r\n                                this._score.copyright += '\\n';\r\n                            }\r\n                            this._score.copyright += c.innerText;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parsePartList(element) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'part-group':\r\n                            this.parsePartGroup(c);\r\n                            break;\r\n                        case 'score-part':\r\n                            this.parseScorePart(c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parsePartGroup(element) {\r\n            let type = element.getAttribute('type');\r\n            switch (type) {\r\n                case 'start':\r\n                    this._currentPartGroup = element.getAttribute('number');\r\n                    this._partGroups.set(this._currentPartGroup, []);\r\n                    break;\r\n                case 'stop':\r\n                    this._currentPartGroup = null;\r\n                    break;\r\n            }\r\n        }\r\n        parseScorePart(element) {\r\n            let id = element.getAttribute('id');\r\n            let track = new Track();\r\n            track.ensureStaveCount(1);\r\n            let staff = track.staves[0];\r\n            staff.showStandardNotation = true;\r\n            this._trackById.set(id, track);\r\n            this._score.addTrack(track);\r\n            if (this._currentPartGroup) {\r\n                this._partGroups.get(this._currentPartGroup).push(track);\r\n            }\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'part-name':\r\n                            track.name = c.innerText;\r\n                            break;\r\n                        case 'part-abbreviation':\r\n                            track.shortName = c.innerText;\r\n                            break;\r\n                        case 'midi-instrument':\r\n                            this.parseMidiInstrument(c, track);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (this.isEmptyTuning(track.staves[0].tuning)) {\r\n                track.staves[0].stringTuning.tunings = [];\r\n            }\r\n        }\r\n        isEmptyTuning(tuning) {\r\n            if (!tuning) {\r\n                return true;\r\n            }\r\n            for (let i = 0; i < tuning.length; i++) {\r\n                if (tuning[i] !== 0) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        parseMidiInstrument(element, track) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'midi-channel':\r\n                            track.playbackInfo.primaryChannel = parseInt(c.innerText);\r\n                            break;\r\n                        case 'midi-program':\r\n                            track.playbackInfo.program = parseInt(c.innerText);\r\n                            break;\r\n                        case 'volume':\r\n                            track.playbackInfo.volume = Math.floor((parseInt(c.innerText) / 100) * 16);\r\n                            break;\r\n                        case 'pan':\r\n                            track.playbackInfo.balance = Math.max(0, Math.min(16, Math.floor(((parseInt(c.innerText) + 90) / 180) * 16)));\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\n\n    /**\r\n     * Lists all midi events.\r\n     */\r\n    var MidiEventType;\r\n    (function (MidiEventType) {\r\n        /**\r\n         * A per note pitch bend. (Midi 2.0)\r\n         */\r\n        MidiEventType[MidiEventType[\"PerNotePitchBend\"] = 96] = \"PerNotePitchBend\";\r\n        /**\r\n         * A note is released.\r\n         */\r\n        MidiEventType[MidiEventType[\"NoteOff\"] = 128] = \"NoteOff\";\r\n        /**\r\n         * A note is started.\r\n         */\r\n        MidiEventType[MidiEventType[\"NoteOn\"] = 144] = \"NoteOn\";\r\n        /**\r\n         * The pressure that was used to play the note.\r\n         */\r\n        MidiEventType[MidiEventType[\"NoteAftertouch\"] = 160] = \"NoteAftertouch\";\r\n        /**\r\n         * Change of a midi controller\r\n         */\r\n        MidiEventType[MidiEventType[\"Controller\"] = 176] = \"Controller\";\r\n        /**\r\n         * Change of a midi program\r\n         */\r\n        MidiEventType[MidiEventType[\"ProgramChange\"] = 192] = \"ProgramChange\";\r\n        /**\r\n         * The pressure that should be applied to the whole channel.\r\n         */\r\n        MidiEventType[MidiEventType[\"ChannelAftertouch\"] = 208] = \"ChannelAftertouch\";\r\n        /**\r\n         * A change of the audio pitch.\r\n         */\r\n        MidiEventType[MidiEventType[\"PitchBend\"] = 224] = \"PitchBend\";\r\n        /**\r\n         * A System Exclusive event.\r\n         */\r\n        MidiEventType[MidiEventType[\"SystemExclusive\"] = 240] = \"SystemExclusive\";\r\n        /**\r\n         * A System Exclusive event.\r\n         */\r\n        MidiEventType[MidiEventType[\"SystemExclusive2\"] = 247] = \"SystemExclusive2\";\r\n        /**\r\n         * A meta event. See `MetaEventType` for details.\r\n         */\r\n        MidiEventType[MidiEventType[\"Meta\"] = 255] = \"Meta\";\r\n    })(MidiEventType || (MidiEventType = {}));\r\n    /**\r\n     * Represents a midi event.\r\n     */\r\n    class MidiEvent {\r\n        /**\r\n         * Initializes a new instance of the {@link MidiEvent} class.\r\n         * @param track The track this event belongs to.\r\n         * @param tick The absolute midi ticks of this event.\r\n         * @param status The status information of this event.\r\n         * @param data1 The first data component of this midi event.\r\n         * @param data2 The second data component of this midi event.\r\n         */\r\n        constructor(track, tick, status, data1, data2) {\r\n            this.track = track;\r\n            this.tick = tick;\r\n            this.message = status | (data1 << 8) | (data2 << 16);\r\n        }\r\n        get channel() {\r\n            return this.message & 0x000000f;\r\n        }\r\n        get command() {\r\n            return (this.message & 0x00000f0);\r\n        }\r\n        get data1() {\r\n            return (this.message & 0x000ff00) >> 8;\r\n        }\r\n        set data1(value) {\r\n            this.message &= ~0x000ff00;\r\n            this.message |= value << 8;\r\n        }\r\n        get data2() {\r\n            return (this.message & 0x0ff0000) >> 16;\r\n        }\r\n        set data2(value) {\r\n            this.message &= ~0x0ff0000;\r\n            this.message |= value << 16;\r\n        }\r\n        /**\r\n         * Writes the midi event as binary into the given stream.\r\n         * @param s The stream to write to.\r\n         */\r\n        writeTo(s) {\r\n            let b = new Uint8Array([\r\n                (this.message >> 24) & 0xff,\r\n                (this.message >> 16) & 0xff,\r\n                (this.message >> 8) & 0xff,\r\n                this.message & 0xff\r\n            ]);\r\n            s.write(b, 0, b.length);\r\n        }\r\n    }\n\n    var MetaEventType;\r\n    (function (MetaEventType) {\r\n        MetaEventType[MetaEventType[\"SequenceNumber\"] = 0] = \"SequenceNumber\";\r\n        MetaEventType[MetaEventType[\"TextEvent\"] = 1] = \"TextEvent\";\r\n        MetaEventType[MetaEventType[\"CopyrightNotice\"] = 2] = \"CopyrightNotice\";\r\n        MetaEventType[MetaEventType[\"SequenceOrTrackName\"] = 3] = \"SequenceOrTrackName\";\r\n        MetaEventType[MetaEventType[\"InstrumentName\"] = 4] = \"InstrumentName\";\r\n        MetaEventType[MetaEventType[\"LyricText\"] = 5] = \"LyricText\";\r\n        MetaEventType[MetaEventType[\"MarkerText\"] = 6] = \"MarkerText\";\r\n        MetaEventType[MetaEventType[\"CuePoint\"] = 7] = \"CuePoint\";\r\n        MetaEventType[MetaEventType[\"PatchName\"] = 8] = \"PatchName\";\r\n        MetaEventType[MetaEventType[\"PortName\"] = 9] = \"PortName\";\r\n        MetaEventType[MetaEventType[\"MidiChannel\"] = 32] = \"MidiChannel\";\r\n        MetaEventType[MetaEventType[\"MidiPort\"] = 33] = \"MidiPort\";\r\n        MetaEventType[MetaEventType[\"EndOfTrack\"] = 47] = \"EndOfTrack\";\r\n        MetaEventType[MetaEventType[\"Tempo\"] = 81] = \"Tempo\";\r\n        MetaEventType[MetaEventType[\"SmpteOffset\"] = 84] = \"SmpteOffset\";\r\n        MetaEventType[MetaEventType[\"TimeSignature\"] = 88] = \"TimeSignature\";\r\n        MetaEventType[MetaEventType[\"KeySignature\"] = 89] = \"KeySignature\";\r\n        MetaEventType[MetaEventType[\"SequencerSpecific\"] = 127] = \"SequencerSpecific\";\r\n    })(MetaEventType || (MetaEventType = {}));\r\n    class MetaEvent extends MidiEvent {\r\n        get channel() {\r\n            return -1;\r\n        }\r\n        get command() {\r\n            return (this.message & 0x00000ff);\r\n        }\r\n        get metaStatus() {\r\n            return this.data1;\r\n        }\r\n        constructor(track, delta, status, data1, data2) {\r\n            super(track, delta, status, data1, data2);\r\n        }\r\n    }\n\n    var SystemCommonType;\r\n    (function (SystemCommonType) {\r\n        SystemCommonType[SystemCommonType[\"SystemExclusive\"] = 240] = \"SystemExclusive\";\r\n        SystemCommonType[SystemCommonType[\"MtcQuarterFrame\"] = 241] = \"MtcQuarterFrame\";\r\n        SystemCommonType[SystemCommonType[\"SongPosition\"] = 242] = \"SongPosition\";\r\n        SystemCommonType[SystemCommonType[\"SongSelect\"] = 243] = \"SongSelect\";\r\n        SystemCommonType[SystemCommonType[\"TuneRequest\"] = 246] = \"TuneRequest\";\r\n        SystemCommonType[SystemCommonType[\"SystemExclusive2\"] = 247] = \"SystemExclusive2\";\r\n    })(SystemCommonType || (SystemCommonType = {}));\r\n    class SystemCommonEvent extends MidiEvent {\r\n        get channel() {\r\n            return -1;\r\n        }\r\n        get command() {\r\n            return (this.message & 0x00000ff);\r\n        }\r\n        constructor(track, delta, status, data1, data2) {\r\n            super(track, delta, status, data1, data2);\r\n        }\r\n    }\n\n    var AlphaTabSystemExclusiveEvents;\r\n    (function (AlphaTabSystemExclusiveEvents) {\r\n        AlphaTabSystemExclusiveEvents[AlphaTabSystemExclusiveEvents[\"MetronomeTick\"] = 0] = \"MetronomeTick\";\r\n        AlphaTabSystemExclusiveEvents[AlphaTabSystemExclusiveEvents[\"Rest\"] = 1] = \"Rest\";\r\n    })(AlphaTabSystemExclusiveEvents || (AlphaTabSystemExclusiveEvents = {}));\r\n    class SystemExclusiveEvent extends SystemCommonEvent {\r\n        constructor(track, delta, status, id, data) {\r\n            super(track, delta, status, id & 0x00ff, (id >> 8) & 0xff);\r\n            this.data = data;\r\n        }\r\n        get isMetronome() {\r\n            return this.manufacturerId == SystemExclusiveEvent.AlphaTabManufacturerId &&\r\n                this.data[0] == AlphaTabSystemExclusiveEvents.MetronomeTick;\r\n        }\r\n        get metronomeNumerator() {\r\n            return this.isMetronome ? this.data[1] : -1;\r\n        }\r\n        get metronomeDurationInTicks() {\r\n            if (!this.isMetronome) {\r\n                return -1;\r\n            }\r\n            return IOHelper.decodeUInt32LE(this.data, 2);\r\n        }\r\n        get metronomeDurationInMilliseconds() {\r\n            if (!this.isMetronome) {\r\n                return -1;\r\n            }\r\n            return IOHelper.decodeUInt32LE(this.data, 6);\r\n        }\r\n        get isRest() {\r\n            return this.manufacturerId == SystemExclusiveEvent.AlphaTabManufacturerId &&\r\n                this.data[0] == AlphaTabSystemExclusiveEvents.Rest;\r\n        }\r\n        get manufacturerId() {\r\n            return this.message >> 8;\r\n        }\r\n        writeTo(s) {\r\n            s.writeByte(0xf0);\r\n            let l = this.data.length + 2;\r\n            s.writeByte(this.manufacturerId);\r\n            let b = new Uint8Array([(l >> 24) & 0xff, (l >> 16) & 0xff, (l >> 8) & 0xff, l & 0xff]);\r\n            s.write(b, 0, b.length);\r\n            s.writeByte(0xf7);\r\n        }\r\n        static encodeMetronome(counter, durationInTicks, durationInMillis) {\r\n            // [0] type\r\n            // [1] counter\r\n            // [2-5] durationInTicks\r\n            // [6-9] durationInMillis\r\n            const data = ByteBuffer.withCapacity(2 + 2 * 4);\r\n            data.writeByte(AlphaTabSystemExclusiveEvents.MetronomeTick);\r\n            data.writeByte(counter);\r\n            IOHelper.writeInt32LE(data, durationInTicks);\r\n            IOHelper.writeInt32LE(data, durationInMillis);\r\n            return data.toArray();\r\n        }\r\n    }\r\n    SystemExclusiveEvent.AlphaTabManufacturerId = 0x7D;\n\n    // The SoundFont loading and Audio Synthesis is based on TinySoundFont, licensed under MIT,\r\n    class SynthEvent {\r\n        constructor(eventIndex, e) {\r\n            this.time = 0;\r\n            this.eventIndex = eventIndex;\r\n            this.event = e;\r\n            this.isMetronome = this.event instanceof SystemExclusiveEvent && this.event.isMetronome;\r\n        }\r\n        static newMetronomeEvent(eventIndex, tick, counter, durationInTicks, durationInMillis) {\r\n            const evt = new SystemExclusiveEvent(0, tick, MidiEventType.SystemExclusive2, SystemExclusiveEvent.AlphaTabManufacturerId, SystemExclusiveEvent.encodeMetronome(counter, durationInTicks, durationInMillis));\r\n            const x = new SynthEvent(eventIndex, evt);\r\n            return x;\r\n        }\r\n    }\n\n    // The SoundFont loading and Audio Synthesis is based on TinySoundFont, licensed under MIT,\r\n    // developed by Bernhard Schelling (https://github.com/schellingb/TinySoundFont)\r\n    // TypeScript port for alphaTab: (C) 2020 by Daniel Kuschny\r\n    // Licensed under: MPL-2.0\r\n    class SynthConstants {\r\n    }\r\n    SynthConstants.DefaultChannelCount = 16 + 1;\r\n    SynthConstants.MetronomeChannel = SynthConstants.DefaultChannelCount - 1;\r\n    SynthConstants.AudioChannels = 2;\r\n    SynthConstants.MinVolume = 0;\r\n    SynthConstants.MinProgram = 0;\r\n    SynthConstants.MaxProgram = 127;\r\n    SynthConstants.MinPlaybackSpeed = 0.125;\r\n    SynthConstants.MaxPlaybackSpeed = 8;\r\n    /**\r\n     * The Midi Pitch bend message is a 15-bit value\r\n     */\r\n    SynthConstants.MaxPitchWheel = 0x4000;\r\n    /**\r\n     * The Midi 2.0 Pitch bend message is a 32-bit value\r\n     */\r\n    SynthConstants.MaxPitchWheel20 = 0x100000000;\r\n    /**\r\n     * The pitch wheel value for no pitch change at all.\r\n     */\r\n    SynthConstants.DefaultPitchWheel = SynthConstants.MaxPitchWheel / 2;\r\n    SynthConstants.MicroBufferCount = 32;\r\n    SynthConstants.MicroBufferSize = 64;\n\n    class MidiFileSequencerTempoChange {\r\n        constructor(bpm, ticks, time) {\r\n            this.bpm = bpm;\r\n            this.ticks = ticks;\r\n            this.time = time;\r\n        }\r\n    }\r\n    class MidiSequencerState {\r\n        constructor() {\r\n            this.tempoChanges = [];\r\n            this.firstProgramEventPerChannel = new Map();\r\n            this.firstTimeSignatureNumerator = 0;\r\n            this.firstTimeSignatureDenominator = 0;\r\n            this.synthData = [];\r\n            this.division = 0;\r\n            this.eventIndex = 0;\r\n            this.currentTime = 0;\r\n            this.playbackRange = null;\r\n            this.playbackRangeStartTime = 0;\r\n            this.playbackRangeEndTime = 0;\r\n            this.endTick = 0;\r\n            this.endTime = 0;\r\n        }\r\n    }\r\n    /**\r\n     * This sequencer dispatches midi events to the synthesizer based on the current\r\n     * synthesize position. The sequencer does not consider the playback speed.\r\n     */\r\n    class MidiFileSequencer {\r\n        constructor(synthesizer) {\r\n            this._oneTimeState = null;\r\n            this._countInState = null;\r\n            this.isLooping = false;\r\n            /**\r\n             * Gets or sets the playback speed.\r\n             */\r\n            this.playbackSpeed = 1;\r\n            this._synthesizer = synthesizer;\r\n            this._mainState = new MidiSequencerState();\r\n            this._currentState = this._mainState;\r\n        }\r\n        get isPlayingOneTimeMidi() {\r\n            return this._currentState == this._oneTimeState;\r\n        }\r\n        get isPlayingCountIn() {\r\n            return this._currentState == this._countInState;\r\n        }\r\n        get playbackRange() {\r\n            return this._currentState.playbackRange;\r\n        }\r\n        set playbackRange(value) {\r\n            this._currentState.playbackRange = value;\r\n            if (value) {\r\n                this._currentState.playbackRangeStartTime = this.tickPositionToTimePositionWithSpeed(value.startTick, 1);\r\n                this._currentState.playbackRangeEndTime = this.tickPositionToTimePositionWithSpeed(value.endTick, 1);\r\n            }\r\n        }\r\n        get currentTime() {\r\n            return this._currentState.currentTime;\r\n        }\r\n        /**\r\n         * Gets the duration of the song in ticks.\r\n         */\r\n        get endTick() {\r\n            return this._currentState.endTick;\r\n        }\r\n        get endTime() {\r\n            return this._currentState.endTime / this.playbackSpeed;\r\n        }\r\n        seek(timePosition) {\r\n            // map to speed=1\r\n            timePosition *= this.playbackSpeed;\r\n            // ensure playback range\r\n            if (this.playbackRange) {\r\n                if (timePosition < this._currentState.playbackRangeStartTime) {\r\n                    timePosition = this._currentState.playbackRangeStartTime;\r\n                }\r\n                else if (timePosition > this._currentState.playbackRangeEndTime) {\r\n                    timePosition = this._currentState.playbackRangeEndTime;\r\n                }\r\n            }\r\n            if (timePosition > this._currentState.currentTime) {\r\n                this.silentProcess(timePosition - this._currentState.currentTime);\r\n            }\r\n            else if (timePosition < this._currentState.currentTime) {\r\n                // we have to restart the midi to make sure we get the right state: instruments, volume, pan, etc\r\n                this._currentState.currentTime = 0;\r\n                this._currentState.eventIndex = 0;\r\n                let metronomeVolume = this._synthesizer.metronomeVolume;\r\n                this._synthesizer.noteOffAll(true);\r\n                this._synthesizer.resetSoft();\r\n                this._synthesizer.setupMetronomeChannel(metronomeVolume);\r\n                this.silentProcess(timePosition);\r\n            }\r\n        }\r\n        silentProcess(milliseconds) {\r\n            if (milliseconds <= 0) {\r\n                return;\r\n            }\r\n            let start = Date.now();\r\n            let finalTime = this._currentState.currentTime + milliseconds;\r\n            while (this._currentState.currentTime < finalTime) {\r\n                if (this.fillMidiEventQueueLimited(finalTime - this._currentState.currentTime)) {\r\n                    this._synthesizer.synthesizeSilent(SynthConstants.MicroBufferSize);\r\n                }\r\n            }\r\n            this._currentState.currentTime = finalTime;\r\n            let duration = Date.now() - start;\r\n            Logger.debug('Sequencer', 'Silent seek finished in ' + duration + 'ms');\r\n        }\r\n        loadOneTimeMidi(midiFile) {\r\n            this._oneTimeState = this.createStateFromFile(midiFile);\r\n            this._currentState = this._oneTimeState;\r\n        }\r\n        loadMidi(midiFile) {\r\n            this._mainState = this.createStateFromFile(midiFile);\r\n            this._currentState = this._mainState;\r\n        }\r\n        createStateFromFile(midiFile) {\r\n            const state = new MidiSequencerState();\r\n            state.tempoChanges = [];\r\n            state.division = midiFile.division;\r\n            state.eventIndex = 0;\r\n            state.currentTime = 0;\r\n            // build synth events.\r\n            state.synthData = [];\r\n            // Converts midi to milliseconds for easy sequencing\r\n            let bpm = 120;\r\n            let absTick = 0;\r\n            let absTime = 0.0;\r\n            let metronomeCount = 0;\r\n            let metronomeLengthInTicks = 0;\r\n            let metronomeLengthInMillis = 0;\r\n            let metronomeTick = 0;\r\n            let metronomeTime = 0.0;\r\n            let previousTick = 0;\r\n            for (let mEvent of midiFile.events) {\r\n                let synthData = new SynthEvent(state.synthData.length, mEvent);\r\n                state.synthData.push(synthData);\r\n                let deltaTick = mEvent.tick - previousTick;\r\n                absTick += deltaTick;\r\n                absTime += deltaTick * (60000.0 / (bpm * midiFile.division));\r\n                synthData.time = absTime;\r\n                previousTick = mEvent.tick;\r\n                if (metronomeLengthInTicks > 0) {\r\n                    while (metronomeTick < absTick) {\r\n                        let metronome = SynthEvent.newMetronomeEvent(state.synthData.length, metronomeTick, Math.floor(metronomeTick / metronomeLengthInTicks) % metronomeCount, metronomeLengthInTicks, metronomeLengthInMillis);\r\n                        state.synthData.push(metronome);\r\n                        metronome.time = metronomeTime;\r\n                        metronomeTick += metronomeLengthInTicks;\r\n                        metronomeTime += metronomeLengthInMillis;\r\n                    }\r\n                }\r\n                if (mEvent.command === MidiEventType.Meta && mEvent.data1 === MetaEventType.Tempo) {\r\n                    let meta = mEvent;\r\n                    bpm = 60000000 / meta.value;\r\n                    state.tempoChanges.push(new MidiFileSequencerTempoChange(bpm, absTick, absTime));\r\n                    metronomeLengthInMillis = metronomeLengthInTicks * (60000.0 / (bpm * midiFile.division));\r\n                }\r\n                else if (mEvent.command === MidiEventType.Meta && mEvent.data1 === MetaEventType.TimeSignature) {\r\n                    let meta = mEvent;\r\n                    let timeSignatureDenominator = Math.pow(2, meta.data[1]);\r\n                    metronomeCount = meta.data[0];\r\n                    metronomeLengthInTicks = (state.division * (4.0 / timeSignatureDenominator)) | 0;\r\n                    metronomeLengthInMillis = metronomeLengthInTicks * (60000.0 / (bpm * midiFile.division));\r\n                    if (state.firstTimeSignatureDenominator === 0) {\r\n                        state.firstTimeSignatureNumerator = meta.data[0];\r\n                        state.firstTimeSignatureDenominator = timeSignatureDenominator;\r\n                    }\r\n                }\r\n                else if (mEvent.command === MidiEventType.ProgramChange) {\r\n                    let channel = mEvent.channel;\r\n                    if (!state.firstProgramEventPerChannel.has(channel)) {\r\n                        state.firstProgramEventPerChannel.set(channel, synthData);\r\n                    }\r\n                }\r\n            }\r\n            state.synthData.sort((a, b) => {\r\n                if (a.time > b.time) {\r\n                    return 1;\r\n                }\r\n                if (a.time < b.time) {\r\n                    return -1;\r\n                }\r\n                return a.eventIndex - b.eventIndex;\r\n            });\r\n            state.endTime = absTime;\r\n            state.endTick = absTick;\r\n            return state;\r\n        }\r\n        fillMidiEventQueue() {\r\n            return this.fillMidiEventQueueLimited(-1);\r\n        }\r\n        fillMidiEventQueueLimited(maxMilliseconds) {\r\n            let millisecondsPerBuffer = (SynthConstants.MicroBufferSize / this._synthesizer.outSampleRate) * 1000 * this.playbackSpeed;\r\n            let endTime = this.internalEndTime;\r\n            if (maxMilliseconds > 0) {\r\n                // ensure that first microbuffer does not already exceed max time\r\n                if (maxMilliseconds < millisecondsPerBuffer) {\r\n                    millisecondsPerBuffer = maxMilliseconds;\r\n                }\r\n                endTime = Math.min(this.internalEndTime, this._currentState.currentTime + maxMilliseconds);\r\n            }\r\n            let anyEventsDispatched = false;\r\n            this._currentState.currentTime += millisecondsPerBuffer;\r\n            while (this._currentState.eventIndex < this._currentState.synthData.length &&\r\n                this._currentState.synthData[this._currentState.eventIndex].time < this._currentState.currentTime &&\r\n                this._currentState.currentTime < endTime) {\r\n                this._synthesizer.dispatchEvent(this._currentState.synthData[this._currentState.eventIndex]);\r\n                this._currentState.eventIndex++;\r\n                anyEventsDispatched = true;\r\n            }\r\n            return anyEventsDispatched;\r\n        }\r\n        tickPositionToTimePosition(tickPosition) {\r\n            return this.tickPositionToTimePositionWithSpeed(tickPosition, this.playbackSpeed);\r\n        }\r\n        timePositionToTickPosition(timePosition) {\r\n            return this.timePositionToTickPositionWithSpeed(timePosition, this.playbackSpeed);\r\n        }\r\n        tickPositionToTimePositionWithSpeed(tickPosition, playbackSpeed) {\r\n            let timePosition = 0.0;\r\n            let bpm = 120.0;\r\n            let lastChange = 0;\r\n            // find start and bpm of last tempo change before time\r\n            for (const c of this._currentState.tempoChanges) {\r\n                if (tickPosition < c.ticks) {\r\n                    break;\r\n                }\r\n                timePosition = c.time;\r\n                bpm = c.bpm;\r\n                lastChange = c.ticks;\r\n            }\r\n            // add the missing millis\r\n            tickPosition -= lastChange;\r\n            timePosition += tickPosition * (60000.0 / (bpm * this._currentState.division));\r\n            return timePosition / playbackSpeed;\r\n        }\r\n        timePositionToTickPositionWithSpeed(timePosition, playbackSpeed) {\r\n            timePosition *= playbackSpeed;\r\n            let ticks = 0;\r\n            let bpm = 120.0;\r\n            let lastChange = 0;\r\n            // find start and bpm of last tempo change before time\r\n            for (const c of this._currentState.tempoChanges) {\r\n                if (timePosition < c.time) {\r\n                    break;\r\n                }\r\n                ticks = c.ticks;\r\n                bpm = c.bpm;\r\n                lastChange = c.time;\r\n            }\r\n            // add the missing ticks\r\n            timePosition -= lastChange;\r\n            ticks += (timePosition / (60000.0 / (bpm * this._currentState.division))) | 0;\r\n            // we add 1 for possible rounding errors.(floating point issuses)\r\n            return ticks + 1;\r\n        }\r\n        get internalEndTime() {\r\n            return !this.playbackRange ? this._currentState.endTime : this._currentState.playbackRangeEndTime;\r\n        }\r\n        get isFinished() {\r\n            return this._currentState.currentTime >= this.internalEndTime;\r\n        }\r\n        stop() {\r\n            if (!this.playbackRange) {\r\n                this._currentState.currentTime = 0;\r\n                this._currentState.eventIndex = 0;\r\n            }\r\n            else if (this.playbackRange) {\r\n                this._currentState.currentTime = this.playbackRange.startTick;\r\n                this._currentState.eventIndex = 0;\r\n            }\r\n        }\r\n        resetOneTimeMidi() {\r\n            this._oneTimeState = null;\r\n            this._currentState = this._mainState;\r\n        }\r\n        resetCountIn() {\r\n            this._countInState = null;\r\n            this._currentState = this._mainState;\r\n        }\r\n        startCountIn() {\r\n            this.generateCountInMidi();\r\n            this._currentState = this._countInState;\r\n            this.stop();\r\n            this._synthesizer.noteOffAll(true);\r\n        }\r\n        generateCountInMidi() {\r\n            const state = new MidiSequencerState();\r\n            state.division = this._mainState.division;\r\n            let bpm = 120;\r\n            let timeSignatureNumerator = 4;\r\n            let timeSignatureDenominator = 4;\r\n            if (this._mainState.eventIndex === 0) {\r\n                bpm = this._mainState.tempoChanges[0].bpm;\r\n                timeSignatureNumerator = this._mainState.firstTimeSignatureNumerator;\r\n                timeSignatureDenominator = this._mainState.firstTimeSignatureDenominator;\r\n            }\r\n            else {\r\n                bpm = this._synthesizer.currentTempo;\r\n                timeSignatureNumerator = this._synthesizer.timeSignatureNumerator;\r\n                timeSignatureDenominator = this._synthesizer.timeSignatureDenominator;\r\n            }\r\n            state.tempoChanges.push(new MidiFileSequencerTempoChange(bpm, 0, 0));\r\n            let metronomeLengthInTicks = (state.division * (4.0 / timeSignatureDenominator)) | 0;\r\n            let metronomeLengthInMillis = metronomeLengthInTicks * (60000.0 / (bpm * this._mainState.division));\r\n            let metronomeTick = 0;\r\n            let metronomeTime = 0.0;\r\n            for (let i = 0; i < timeSignatureNumerator; i++) {\r\n                let metronome = SynthEvent.newMetronomeEvent(state.synthData.length, metronomeTick, i, metronomeLengthInTicks, metronomeLengthInMillis);\r\n                state.synthData.push(metronome);\r\n                metronome.time = metronomeTime;\r\n                metronomeTick += metronomeLengthInTicks;\r\n                metronomeTime += metronomeLengthInMillis;\r\n            }\r\n            state.synthData.sort((a, b) => {\r\n                if (a.time > b.time) {\r\n                    return 1;\r\n                }\r\n                if (a.time < b.time) {\r\n                    return -1;\r\n                }\r\n                return a.eventIndex - b.eventIndex;\r\n            });\r\n            state.endTime = metronomeTime;\r\n            state.endTick = metronomeTick;\r\n            this._countInState = state;\r\n        }\r\n    }\n\n    /**\r\n     * Lists the different states of the player\r\n     */\r\n    var PlayerState;\r\n    (function (PlayerState) {\r\n        /**\r\n         * Player is paused\r\n         */\r\n        PlayerState[PlayerState[\"Paused\"] = 0] = \"Paused\";\r\n        /**\r\n         * Player is playing\r\n         */\r\n        PlayerState[PlayerState[\"Playing\"] = 1] = \"Playing\";\r\n    })(PlayerState || (PlayerState = {}));\n\n    /**\r\n     * Represents the info when the player state changes.\r\n     */\r\n    class PlayerStateChangedEventArgs {\r\n        /**\r\n         * Initializes a new instance of the {@link PlayerStateChangedEventArgs} class.\r\n         * @param state The state.\r\n         */\r\n        constructor(state, stopped) {\r\n            this.state = state;\r\n            this.stopped = stopped;\r\n        }\r\n    }\n\n    /**\r\n     * Represents the info when the time in the synthesizer changes.\r\n     */\r\n    class PositionChangedEventArgs {\r\n        /**\r\n         * Initializes a new instance of the {@link PositionChangedEventArgs} class.\r\n         * @param currentTime The current time.\r\n         * @param endTime The end time.\r\n         * @param currentTick The current tick.\r\n         * @param endTick The end tick.\r\n         * @param isSeek Whether the time was seeked.\r\n         */\r\n        constructor(currentTime, endTime, currentTick, endTick, isSeek) {\r\n            this.currentTime = currentTime;\r\n            this.endTime = endTime;\r\n            this.currentTick = currentTick;\r\n            this.endTick = endTick;\r\n            this.isSeek = isSeek;\r\n        }\r\n    }\n\n    // The SoundFont loading and Audio Synthesis is based on TinySoundFont, licensed under MIT,\r\n    class RiffChunk {\r\n        constructor() {\r\n            this.id = '';\r\n            this.size = 0;\r\n        }\r\n        static load(parent, chunk, stream) {\r\n            if (parent && RiffChunk.HeaderSize > parent.size) {\r\n                return false;\r\n            }\r\n            if (stream.position + RiffChunk.HeaderSize >= stream.length) {\r\n                return false;\r\n            }\r\n            chunk.id = IOHelper.read8BitStringLength(stream, 4);\r\n            if (chunk.id.charCodeAt(0) <= 32 || chunk.id.charCodeAt(0) >= 122) {\r\n                return false;\r\n            }\r\n            chunk.size = IOHelper.readUInt32LE(stream);\r\n            if (parent && RiffChunk.HeaderSize + chunk.size > parent.size) {\r\n                return false;\r\n            }\r\n            if (parent) {\r\n                parent.size -= RiffChunk.HeaderSize + chunk.size;\r\n            }\r\n            let isRiff = chunk.id === 'RIFF';\r\n            let isList = chunk.id === 'LIST';\r\n            if (isRiff && parent) {\r\n                // not allowed\r\n                return false;\r\n            }\r\n            if (!isRiff && !isList) {\r\n                // custom type without sub type\r\n                return true;\r\n            }\r\n            // for lists unwrap the list type\r\n            chunk.id = IOHelper.read8BitStringLength(stream, 4);\r\n            if (chunk.id.charCodeAt(0) <= 32 || chunk.id.charCodeAt(0) >= 122) {\r\n                return false;\r\n            }\r\n            chunk.size -= 4;\r\n            return true;\r\n        }\r\n    }\r\n    RiffChunk.HeaderSize = 4 /*FourCC*/ + 4 /*Size*/;\n\n    // The SoundFont loading and Audio Synthesis is based on TinySoundFont, licensed under MIT,\r\n    class Hydra {\r\n        constructor() {\r\n            this.phdrs = [];\r\n            this.pbags = [];\r\n            this.pmods = [];\r\n            this.pgens = [];\r\n            this.insts = [];\r\n            this.ibags = [];\r\n            this.imods = [];\r\n            this.igens = [];\r\n            this.sHdrs = [];\r\n            this.fontSamples = new Float32Array(0);\r\n        }\r\n        load(readable) {\r\n            const chunkHead = new RiffChunk();\r\n            const chunkFastList = new RiffChunk();\r\n            if (!RiffChunk.load(null, chunkHead, readable) || chunkHead.id !== 'sfbk') {\r\n                throw new FormatError(\"Soundfont is not a valid Soundfont2 file\");\r\n            }\r\n            while (RiffChunk.load(chunkHead, chunkFastList, readable)) {\r\n                let chunk = new RiffChunk();\r\n                if (chunkFastList.id === 'pdta') {\r\n                    while (RiffChunk.load(chunkFastList, chunk, readable)) {\r\n                        switch (chunk.id) {\r\n                            case 'phdr':\r\n                                for (let i = 0, count = (chunk.size / HydraPhdr.SizeInFile) | 0; i < count; i++) {\r\n                                    this.phdrs.push(new HydraPhdr(readable));\r\n                                }\r\n                                break;\r\n                            case 'pbag':\r\n                                for (let i = 0, count = (chunk.size / HydraPbag.SizeInFile) | 0; i < count; i++) {\r\n                                    this.pbags.push(new HydraPbag(readable));\r\n                                }\r\n                                break;\r\n                            case 'pmod':\r\n                                for (let i = 0, count = (chunk.size / HydraPmod.SizeInFile) | 0; i < count; i++) {\r\n                                    this.pmods.push(new HydraPmod(readable));\r\n                                }\r\n                                break;\r\n                            case 'pgen':\r\n                                for (let i = 0, count = (chunk.size / HydraPgen.SizeInFile) | 0; i < count; i++) {\r\n                                    this.pgens.push(new HydraPgen(readable));\r\n                                }\r\n                                break;\r\n                            case 'inst':\r\n                                for (let i = 0, count = (chunk.size / HydraInst.SizeInFile) | 0; i < count; i++) {\r\n                                    this.insts.push(new HydraInst(readable));\r\n                                }\r\n                                break;\r\n                            case 'ibag':\r\n                                for (let i = 0, count = (chunk.size / HydraIbag.SizeInFile) | 0; i < count; i++) {\r\n                                    this.ibags.push(new HydraIbag(readable));\r\n                                }\r\n                                break;\r\n                            case 'imod':\r\n                                for (let i = 0, count = (chunk.size / HydraImod.SizeInFile) | 0; i < count; i++) {\r\n                                    this.imods.push(new HydraImod(readable));\r\n                                }\r\n                                break;\r\n                            case 'igen':\r\n                                for (let i = 0, count = (chunk.size / HydraIgen.SizeInFile) | 0; i < count; i++) {\r\n                                    this.igens.push(new HydraIgen(readable));\r\n                                }\r\n                                break;\r\n                            case 'shdr':\r\n                                for (let i = 0, count = (chunk.size / HydraShdr.SizeInFile) | 0; i < count; i++) {\r\n                                    this.sHdrs.push(new HydraShdr(readable));\r\n                                }\r\n                                break;\r\n                            default:\r\n                                readable.position += chunk.size;\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                else if (chunkFastList.id === 'sdta') {\r\n                    while (RiffChunk.load(chunkFastList, chunk, readable)) {\r\n                        switch (chunk.id) {\r\n                            case 'smpl':\r\n                                this.fontSamples = Hydra.loadSamples(chunk, readable);\r\n                                break;\r\n                            default:\r\n                                readable.position += chunk.size;\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    readable.position += chunkFastList.size;\r\n                }\r\n            }\r\n        }\r\n        static loadSamples(chunk, reader) {\r\n            let samplesLeft = (chunk.size / 2) | 0;\r\n            const samples = new Float32Array(samplesLeft);\r\n            let samplesPos = 0;\r\n            const sampleBuffer = new Uint8Array(2048);\r\n            const testBuffer = new Int16Array((sampleBuffer.length / 2) | 0);\r\n            while (samplesLeft > 0) {\r\n                let samplesToRead = Math.min(samplesLeft, (sampleBuffer.length / 2) | 0);\r\n                reader.read(sampleBuffer, 0, samplesToRead * 2);\r\n                for (let i = 0; i < samplesToRead; i++) {\r\n                    testBuffer[i] = (sampleBuffer[i * 2 + 1] << 8) | sampleBuffer[i * 2];\r\n                    samples[samplesPos + i] = testBuffer[i] / 32767;\r\n                }\r\n                samplesLeft -= samplesToRead;\r\n                samplesPos += samplesToRead;\r\n            }\r\n            return samples;\r\n        }\r\n    }\r\n    class HydraIbag {\r\n        constructor(reader) {\r\n            this.instGenNdx = IOHelper.readUInt16LE(reader);\r\n            this.instModNdx = IOHelper.readUInt16LE(reader);\r\n        }\r\n    }\r\n    HydraIbag.SizeInFile = 4;\r\n    class HydraImod {\r\n        constructor(reader) {\r\n            this.modSrcOper = IOHelper.readUInt16LE(reader);\r\n            this.modDestOper = IOHelper.readUInt16LE(reader);\r\n            this.modAmount = IOHelper.readInt16LE(reader);\r\n            this.modAmtSrcOper = IOHelper.readUInt16LE(reader);\r\n            this.modTransOper = IOHelper.readUInt16LE(reader);\r\n        }\r\n    }\r\n    HydraImod.SizeInFile = 10;\r\n    class HydraIgen {\r\n        constructor(reader) {\r\n            this.genOper = IOHelper.readUInt16LE(reader);\r\n            this.genAmount = new HydraGenAmount(reader);\r\n        }\r\n    }\r\n    HydraIgen.SizeInFile = 4;\r\n    class HydraInst {\r\n        constructor(reader) {\r\n            this.instName = IOHelper.read8BitStringLength(reader, 20);\r\n            this.instBagNdx = IOHelper.readUInt16LE(reader);\r\n        }\r\n    }\r\n    HydraInst.SizeInFile = 22;\r\n    class HydraPbag {\r\n        constructor(reader) {\r\n            this.genNdx = IOHelper.readUInt16LE(reader);\r\n            this.modNdx = IOHelper.readUInt16LE(reader);\r\n        }\r\n    }\r\n    HydraPbag.SizeInFile = 4;\r\n    class HydraPgen {\r\n        constructor(reader) {\r\n            this.genOper = IOHelper.readUInt16LE(reader);\r\n            this.genAmount = new HydraGenAmount(reader);\r\n        }\r\n    }\r\n    HydraPgen.SizeInFile = 4;\r\n    HydraPgen.GenInstrument = 41;\r\n    HydraPgen.GenKeyRange = 43;\r\n    HydraPgen.GenVelRange = 44;\r\n    HydraPgen.GenSampleId = 53;\r\n    class HydraPhdr {\r\n        constructor(reader) {\r\n            this.presetName = IOHelper.read8BitStringLength(reader, 20);\r\n            this.preset = IOHelper.readUInt16LE(reader);\r\n            this.bank = IOHelper.readUInt16LE(reader);\r\n            this.presetBagNdx = IOHelper.readUInt16LE(reader);\r\n            this.library = IOHelper.readUInt32LE(reader);\r\n            this.genre = IOHelper.readUInt32LE(reader);\r\n            this.morphology = IOHelper.readUInt32LE(reader);\r\n        }\r\n    }\r\n    HydraPhdr.SizeInFile = 38;\r\n    class HydraPmod {\r\n        constructor(reader) {\r\n            this.modSrcOper = IOHelper.readUInt16LE(reader);\r\n            this.modDestOper = IOHelper.readUInt16LE(reader);\r\n            this.modAmount = IOHelper.readUInt16LE(reader);\r\n            this.modAmtSrcOper = IOHelper.readUInt16LE(reader);\r\n            this.modTransOper = IOHelper.readUInt16LE(reader);\r\n        }\r\n    }\r\n    HydraPmod.SizeInFile = 10;\r\n    class HydraShdr {\r\n        constructor(reader) {\r\n            this.sampleName = IOHelper.read8BitStringLength(reader, 20);\r\n            this.start = IOHelper.readUInt32LE(reader);\r\n            this.end = IOHelper.readUInt32LE(reader);\r\n            this.startLoop = IOHelper.readUInt32LE(reader);\r\n            this.endLoop = IOHelper.readUInt32LE(reader);\r\n            this.sampleRate = IOHelper.readUInt32LE(reader);\r\n            this.originalPitch = reader.readByte();\r\n            this.pitchCorrection = IOHelper.readSInt8(reader);\r\n            this.sampleLink = IOHelper.readUInt16LE(reader);\r\n            this.sampleType = IOHelper.readUInt16LE(reader);\r\n        }\r\n    }\r\n    HydraShdr.SizeInFile = 46;\r\n    class HydraGenAmount {\r\n        constructor(reader) {\r\n            this.wordAmount = IOHelper.readUInt16LE(reader);\r\n        }\r\n        get shortAmount() {\r\n            return TypeConversions.uint16ToInt16(this.wordAmount);\r\n        }\r\n        get lowByteAmount() {\r\n            return this.wordAmount & 0x00ff;\r\n        }\r\n        get highByteAmount() {\r\n            return ((this.wordAmount & 0xff00) >> 8) & 0xff;\r\n        }\r\n    }\n\n    // The SoundFont loading and Audio Synthesis is based on TinySoundFont, licensed under MIT,\r\n    // developed by Bernhard Schelling (https://github.com/schellingb/TinySoundFont)\r\n    // TypeScript port for alphaTab: (C) 2020 by Daniel Kuschny\r\n    // Licensed under: MPL-2.0\r\n    class Channel {\r\n        constructor() {\r\n            this.presetIndex = 0;\r\n            this.bank = 0;\r\n            this.pitchWheel = 0;\r\n            this.perNotePitchWheel = new Map();\r\n            this.midiPan = 0;\r\n            this.midiVolume = 0;\r\n            this.midiExpression = 0;\r\n            this.midiRpn = 0;\r\n            this.midiData = 0;\r\n            this.panOffset = 0;\r\n            this.gainDb = 0;\r\n            this.pitchRange = 0;\r\n            this.tuning = 0;\r\n            this.mixVolume = 0;\r\n            this.mute = false;\r\n            this.solo = false;\r\n        }\r\n    }\n\n    // The SoundFont loading and Audio Synthesis is based on TinySoundFont, licensed under MIT,\r\n    // developed by Bernhard Schelling (https://github.com/schellingb/TinySoundFont)\r\n    // TypeScript port for alphaTab: (C) 2020 by Daniel Kuschny\r\n    // Licensed under: MPL-2.0\r\n    class Channels {\r\n        constructor() {\r\n            this.activeChannel = 0;\r\n            this.channelList = [];\r\n        }\r\n        setupVoice(tinySoundFont, voice) {\r\n            const c = this.channelList[this.activeChannel];\r\n            const newpan = voice.region.pan + c.panOffset;\r\n            voice.playingChannel = this.activeChannel;\r\n            voice.mixVolume = c.mixVolume;\r\n            voice.noteGainDb += c.gainDb;\r\n            voice.updatePitchRatio(c, tinySoundFont.outSampleRate);\r\n            if (newpan <= -0.5) {\r\n                voice.panFactorLeft = 1.0;\r\n                voice.panFactorRight = 0.0;\r\n            }\r\n            else if (newpan >= 0.5) {\r\n                voice.panFactorLeft = 0.0;\r\n                voice.panFactorRight = 1.0;\r\n            }\r\n            else {\r\n                voice.panFactorLeft = Math.sqrt(0.5 - newpan);\r\n                voice.panFactorRight = Math.sqrt(0.5 + newpan);\r\n            }\r\n        }\r\n    }\n\n    // The SoundFont loading and Audio Synthesis is based on TinySoundFont, licensed under MIT,\r\n    // developed by Bernhard Schelling (https://github.com/schellingb/TinySoundFont)\r\n    // TypeScript port for alphaTab: (C) 2020 by Daniel Kuschny\r\n    // Licensed under: MPL-2.0\r\n    var LoopMode;\r\n    (function (LoopMode) {\r\n        LoopMode[LoopMode[\"None\"] = 0] = \"None\";\r\n        LoopMode[LoopMode[\"Continuous\"] = 1] = \"Continuous\";\r\n        LoopMode[LoopMode[\"Sustain\"] = 2] = \"Sustain\";\r\n    })(LoopMode || (LoopMode = {}));\n\n    // The SoundFont loading and Audio Synthesis is based on TinySoundFont, licensed under MIT,\r\n    // developed by Bernhard Schelling (https://github.com/schellingb/TinySoundFont)\r\n    // TypeScript port for alphaTab: (C) 2020 by Daniel Kuschny\r\n    // Licensed under: MPL-2.0\r\n    /**\r\n     * Supported output modes by the render methods\r\n     */\r\n    var OutputMode;\r\n    (function (OutputMode) {\r\n        /**\r\n         * Two channels with single left/right samples one after another\r\n         */\r\n        OutputMode[OutputMode[\"StereoInterleaved\"] = 0] = \"StereoInterleaved\";\r\n        /**\r\n         * Two channels with all samples for the left channel first then right\r\n         */\r\n        OutputMode[OutputMode[\"StereoUnweaved\"] = 1] = \"StereoUnweaved\";\r\n        /**\r\n         * A single channel (stereo instruments are mixed into center)\r\n         */\r\n        OutputMode[OutputMode[\"Mono\"] = 2] = \"Mono\";\r\n    })(OutputMode || (OutputMode = {}));\n\n    class Preset {\r\n        constructor() {\r\n            this.name = \"\";\r\n            this.presetNumber = 0;\r\n            this.bank = 0;\r\n            this.regions = null;\r\n            this.fontSamples = null;\r\n        }\r\n    }\n\n    // The SoundFont loading and Audio Synthesis is based on TinySoundFont, licensed under MIT,\r\n    // developed by Bernhard Schelling (https://github.com/schellingb/TinySoundFont)\r\n    // TypeScript port for alphaTab: (C) 2020 by Daniel Kuschny\r\n    // Licensed under: MPL-2.0\r\n    class SynthHelper {\r\n        static timecents2Secs(timecents) {\r\n            return Math.pow(2, timecents / 1200.0);\r\n        }\r\n        static decibelsToGain(db) {\r\n            return db > -100 ? Math.pow(10.0, db * 0.05) : 0;\r\n        }\r\n        static gainToDecibels(gain) {\r\n            return gain <= 0.00001 ? -100 : 20.0 * Math.log10(gain);\r\n        }\r\n        static cents2Hertz(cents) {\r\n            return 8.176 * Math.pow(2.0, cents / 1200.0);\r\n        }\r\n        static clamp(value, min, max) {\r\n            if (value <= min) {\r\n                return min;\r\n            }\r\n            if (value >= max) {\r\n                return max;\r\n            }\r\n            return value;\r\n        }\r\n    }\n\n    // The SoundFont loading and Audio Synthesis is based on TinySoundFont, licensed under MIT,\r\n    class Envelope {\r\n        constructor(other) {\r\n            this.delay = 0;\r\n            this.attack = 0;\r\n            this.hold = 0;\r\n            this.decay = 0;\r\n            this.sustain = 0;\r\n            this.release = 0;\r\n            this.keynumToHold = 0;\r\n            this.keynumToDecay = 0;\r\n            if (other) {\r\n                this.delay = other.delay;\r\n                this.attack = other.attack;\r\n                this.hold = other.hold;\r\n                this.decay = other.decay;\r\n                this.sustain = other.sustain;\r\n                this.release = other.release;\r\n                this.keynumToHold = other.keynumToHold;\r\n                this.keynumToDecay = other.keynumToDecay;\r\n            }\r\n        }\r\n        clear() {\r\n            this.delay = 0;\r\n            this.attack = 0;\r\n            this.hold = 0;\r\n            this.decay = 0;\r\n            this.sustain = 0;\r\n            this.release = 0;\r\n            this.keynumToHold = 0;\r\n            this.keynumToDecay = 0;\r\n        }\r\n        envToSecs(sustainIsGain) {\r\n            // EG times need to be converted from timecents to seconds.\r\n            // Pin very short EG segments.  Timecents don't get to zero, and our EG is\r\n            // happier with zero values.\r\n            this.delay = this.delay < -11950.0 ? 0.0 : SynthHelper.timecents2Secs(this.delay);\r\n            this.attack = this.attack < -11950.0 ? 0.0 : SynthHelper.timecents2Secs(this.attack);\r\n            this.release = this.release < -11950.0 ? 0.0 : SynthHelper.timecents2Secs(this.release);\r\n            // If we have dynamic hold or decay times depending on key number we need\r\n            // to keep the values in timecents so we can calculate it during startNote\r\n            if (this.keynumToHold === 0) {\r\n                this.hold = this.hold < -11950.0 ? 0.0 : SynthHelper.timecents2Secs(this.hold);\r\n            }\r\n            if (this.keynumToDecay === 0) {\r\n                this.decay = this.decay < -11950.0 ? 0.0 : SynthHelper.timecents2Secs(this.decay);\r\n            }\r\n            if (this.sustain < 0.0) {\r\n                this.sustain = 0.0;\r\n            }\r\n            else if (sustainIsGain) {\r\n                this.sustain = SynthHelper.decibelsToGain(-this.sustain / 10.0);\r\n            }\r\n            else {\r\n                this.sustain = 1.0 - this.sustain / 1000.0;\r\n            }\r\n        }\r\n    }\n\n    var GenOperators;\r\n    (function (GenOperators) {\r\n        GenOperators[GenOperators[\"StartAddrsOffset\"] = 0] = \"StartAddrsOffset\";\r\n        GenOperators[GenOperators[\"EndAddrsOffset\"] = 1] = \"EndAddrsOffset\";\r\n        GenOperators[GenOperators[\"StartloopAddrsOffset\"] = 2] = \"StartloopAddrsOffset\";\r\n        GenOperators[GenOperators[\"EndloopAddrsOffset\"] = 3] = \"EndloopAddrsOffset\";\r\n        GenOperators[GenOperators[\"StartAddrsCoarseOffset\"] = 4] = \"StartAddrsCoarseOffset\";\r\n        GenOperators[GenOperators[\"ModLfoToPitch\"] = 5] = \"ModLfoToPitch\";\r\n        GenOperators[GenOperators[\"VibLfoToPitch\"] = 6] = \"VibLfoToPitch\";\r\n        GenOperators[GenOperators[\"ModEnvToPitch\"] = 7] = \"ModEnvToPitch\";\r\n        GenOperators[GenOperators[\"InitialFilterFc\"] = 8] = \"InitialFilterFc\";\r\n        GenOperators[GenOperators[\"InitialFilterQ\"] = 9] = \"InitialFilterQ\";\r\n        GenOperators[GenOperators[\"ModLfoToFilterFc\"] = 10] = \"ModLfoToFilterFc\";\r\n        GenOperators[GenOperators[\"ModEnvToFilterFc\"] = 11] = \"ModEnvToFilterFc\";\r\n        GenOperators[GenOperators[\"EndAddrsCoarseOffset\"] = 12] = \"EndAddrsCoarseOffset\";\r\n        GenOperators[GenOperators[\"ModLfoToVolume\"] = 13] = \"ModLfoToVolume\";\r\n        GenOperators[GenOperators[\"Unused1\"] = 14] = \"Unused1\";\r\n        GenOperators[GenOperators[\"ChorusEffectsSend\"] = 15] = \"ChorusEffectsSend\";\r\n        GenOperators[GenOperators[\"ReverbEffectsSend\"] = 16] = \"ReverbEffectsSend\";\r\n        GenOperators[GenOperators[\"Pan\"] = 17] = \"Pan\";\r\n        GenOperators[GenOperators[\"Unused2\"] = 18] = \"Unused2\";\r\n        GenOperators[GenOperators[\"Unused3\"] = 19] = \"Unused3\";\r\n        GenOperators[GenOperators[\"Unused4\"] = 20] = \"Unused4\";\r\n        GenOperators[GenOperators[\"DelayModLFO\"] = 21] = \"DelayModLFO\";\r\n        GenOperators[GenOperators[\"FreqModLFO\"] = 22] = \"FreqModLFO\";\r\n        GenOperators[GenOperators[\"DelayVibLFO\"] = 23] = \"DelayVibLFO\";\r\n        GenOperators[GenOperators[\"FreqVibLFO\"] = 24] = \"FreqVibLFO\";\r\n        GenOperators[GenOperators[\"DelayModEnv\"] = 25] = \"DelayModEnv\";\r\n        GenOperators[GenOperators[\"AttackModEnv\"] = 26] = \"AttackModEnv\";\r\n        GenOperators[GenOperators[\"HoldModEnv\"] = 27] = \"HoldModEnv\";\r\n        GenOperators[GenOperators[\"DecayModEnv\"] = 28] = \"DecayModEnv\";\r\n        GenOperators[GenOperators[\"SustainModEnv\"] = 29] = \"SustainModEnv\";\r\n        GenOperators[GenOperators[\"ReleaseModEnv\"] = 30] = \"ReleaseModEnv\";\r\n        GenOperators[GenOperators[\"KeynumToModEnvHold\"] = 31] = \"KeynumToModEnvHold\";\r\n        GenOperators[GenOperators[\"KeynumToModEnvDecay\"] = 32] = \"KeynumToModEnvDecay\";\r\n        GenOperators[GenOperators[\"DelayVolEnv\"] = 33] = \"DelayVolEnv\";\r\n        GenOperators[GenOperators[\"AttackVolEnv\"] = 34] = \"AttackVolEnv\";\r\n        GenOperators[GenOperators[\"HoldVolEnv\"] = 35] = \"HoldVolEnv\";\r\n        GenOperators[GenOperators[\"DecayVolEnv\"] = 36] = \"DecayVolEnv\";\r\n        GenOperators[GenOperators[\"SustainVolEnv\"] = 37] = \"SustainVolEnv\";\r\n        GenOperators[GenOperators[\"ReleaseVolEnv\"] = 38] = \"ReleaseVolEnv\";\r\n        GenOperators[GenOperators[\"KeynumToVolEnvHold\"] = 39] = \"KeynumToVolEnvHold\";\r\n        GenOperators[GenOperators[\"KeynumToVolEnvDecay\"] = 40] = \"KeynumToVolEnvDecay\";\r\n        GenOperators[GenOperators[\"Instrument\"] = 41] = \"Instrument\";\r\n        GenOperators[GenOperators[\"Reserved1\"] = 42] = \"Reserved1\";\r\n        GenOperators[GenOperators[\"KeyRange\"] = 43] = \"KeyRange\";\r\n        GenOperators[GenOperators[\"VelRange\"] = 44] = \"VelRange\";\r\n        GenOperators[GenOperators[\"StartloopAddrsCoarseOffset\"] = 45] = \"StartloopAddrsCoarseOffset\";\r\n        GenOperators[GenOperators[\"Keynum\"] = 46] = \"Keynum\";\r\n        GenOperators[GenOperators[\"Velocity\"] = 47] = \"Velocity\";\r\n        GenOperators[GenOperators[\"InitialAttenuation\"] = 48] = \"InitialAttenuation\";\r\n        GenOperators[GenOperators[\"Reserved2\"] = 49] = \"Reserved2\";\r\n        GenOperators[GenOperators[\"EndloopAddrsCoarseOffset\"] = 50] = \"EndloopAddrsCoarseOffset\";\r\n        GenOperators[GenOperators[\"CoarseTune\"] = 51] = \"CoarseTune\";\r\n        GenOperators[GenOperators[\"FineTune\"] = 52] = \"FineTune\";\r\n        GenOperators[GenOperators[\"SampleID\"] = 53] = \"SampleID\";\r\n        GenOperators[GenOperators[\"SampleModes\"] = 54] = \"SampleModes\";\r\n        GenOperators[GenOperators[\"Reserved3\"] = 55] = \"Reserved3\";\r\n        GenOperators[GenOperators[\"ScaleTuning\"] = 56] = \"ScaleTuning\";\r\n        GenOperators[GenOperators[\"ExclusiveClass\"] = 57] = \"ExclusiveClass\";\r\n        GenOperators[GenOperators[\"OverridingRootKey\"] = 58] = \"OverridingRootKey\";\r\n        GenOperators[GenOperators[\"Unused5\"] = 59] = \"Unused5\";\r\n        GenOperators[GenOperators[\"EndOper\"] = 60] = \"EndOper\";\r\n    })(GenOperators || (GenOperators = {}));\r\n    class Region {\r\n        constructor(other) {\r\n            this.loopMode = LoopMode.None;\r\n            this.sampleRate = 0;\r\n            this.loKey = 0;\r\n            this.hiKey = 0;\r\n            this.loVel = 0;\r\n            this.hiVel = 0;\r\n            this.group = 0;\r\n            this.offset = 0;\r\n            this.end = 0;\r\n            this.loopStart = 0;\r\n            this.loopEnd = 0;\r\n            this.transpose = 0;\r\n            this.tune = 0;\r\n            this.pitchKeyCenter = 0;\r\n            this.pitchKeyTrack = 0;\r\n            this.attenuation = 0;\r\n            this.pan = 0;\r\n            this.ampEnv = new Envelope();\r\n            this.modEnv = new Envelope();\r\n            this.initialFilterQ = 0;\r\n            this.initialFilterFc = 0;\r\n            this.modEnvToPitch = 0;\r\n            this.modEnvToFilterFc = 0;\r\n            this.modLfoToFilterFc = 0;\r\n            this.modLfoToVolume = 0;\r\n            this.delayModLFO = 0;\r\n            this.freqModLFO = 0;\r\n            this.modLfoToPitch = 0;\r\n            this.delayVibLFO = 0;\r\n            this.freqVibLFO = 0;\r\n            this.vibLfoToPitch = 0;\r\n            if (other) {\r\n                this.loopMode = other.loopMode;\r\n                this.sampleRate = other.sampleRate;\r\n                this.loKey = other.loKey;\r\n                this.hiKey = other.hiKey;\r\n                this.loVel = other.loVel;\r\n                this.hiVel = other.hiVel;\r\n                this.group = other.group;\r\n                this.offset = other.offset;\r\n                this.end = other.end;\r\n                this.loopStart = other.loopStart;\r\n                this.loopEnd = other.loopEnd;\r\n                this.transpose = other.transpose;\r\n                this.tune = other.tune;\r\n                this.pitchKeyCenter = other.pitchKeyCenter;\r\n                this.pitchKeyTrack = other.pitchKeyTrack;\r\n                this.attenuation = other.attenuation;\r\n                this.pan = other.pan;\r\n                this.ampEnv = new Envelope(other.ampEnv);\r\n                this.modEnv = new Envelope(other.modEnv);\r\n                this.initialFilterQ = other.initialFilterQ;\r\n                this.initialFilterFc = other.initialFilterFc;\r\n                this.modEnvToPitch = other.modEnvToPitch;\r\n                this.modEnvToFilterFc = other.modEnvToFilterFc;\r\n                this.modLfoToFilterFc = other.modLfoToFilterFc;\r\n                this.modLfoToVolume = other.modLfoToVolume;\r\n                this.delayModLFO = other.delayModLFO;\r\n                this.freqModLFO = other.freqModLFO;\r\n                this.modLfoToPitch = other.modLfoToPitch;\r\n                this.delayVibLFO = other.delayVibLFO;\r\n                this.freqVibLFO = other.freqVibLFO;\r\n                this.vibLfoToPitch = other.vibLfoToPitch;\r\n            }\r\n        }\r\n        clear(forRelative) {\r\n            this.loopMode = 0;\r\n            this.sampleRate = 0;\r\n            this.loKey = 0;\r\n            this.hiKey = 0;\r\n            this.loVel = 0;\r\n            this.hiVel = 0;\r\n            this.group = 0;\r\n            this.offset = 0;\r\n            this.end = 0;\r\n            this.loopStart = 0;\r\n            this.loopEnd = 0;\r\n            this.transpose = 0;\r\n            this.tune = 0;\r\n            this.pitchKeyCenter = 0;\r\n            this.pitchKeyTrack = 0;\r\n            this.attenuation = 0;\r\n            this.pan = 0;\r\n            this.ampEnv.clear();\r\n            this.modEnv.clear();\r\n            this.initialFilterQ = 0;\r\n            this.initialFilterFc = 0;\r\n            this.modEnvToPitch = 0;\r\n            this.modEnvToFilterFc = 0;\r\n            this.modLfoToFilterFc = 0;\r\n            this.modLfoToVolume = 0;\r\n            this.delayModLFO = 0;\r\n            this.freqModLFO = 0;\r\n            this.modLfoToPitch = 0;\r\n            this.delayVibLFO = 0;\r\n            this.freqVibLFO = 0;\r\n            this.vibLfoToPitch = 0;\r\n            this.hiKey = this.hiVel = 127;\r\n            this.pitchKeyCenter = 60; // C4\r\n            if (forRelative) {\r\n                return;\r\n            }\r\n            this.pitchKeyTrack = 100;\r\n            this.pitchKeyCenter = -1;\r\n            // SF2 defaults in timecents.\r\n            this.ampEnv.delay = this.ampEnv.attack = this.ampEnv.hold = this.ampEnv.decay = this.ampEnv.release = -12000.0;\r\n            this.modEnv.delay = this.modEnv.attack = this.modEnv.hold = this.modEnv.decay = this.modEnv.release = -12000.0;\r\n            this.initialFilterFc = 13500;\r\n            this.delayModLFO = -12000.0;\r\n            this.delayVibLFO = -12000.0;\r\n        }\r\n        operator(genOper, amount) {\r\n            switch (genOper) {\r\n                case GenOperators.StartAddrsOffset:\r\n                    this.offset += TypeConversions.int16ToUint32(amount.shortAmount);\r\n                    break;\r\n                case GenOperators.EndAddrsOffset:\r\n                    this.end += TypeConversions.int16ToUint32(amount.shortAmount);\r\n                    break;\r\n                case GenOperators.StartloopAddrsOffset:\r\n                    this.loopStart += TypeConversions.int16ToUint32(amount.shortAmount);\r\n                    break;\r\n                case GenOperators.EndloopAddrsOffset:\r\n                    this.loopEnd += TypeConversions.int16ToUint32(amount.shortAmount);\r\n                    break;\r\n                case GenOperators.StartAddrsCoarseOffset:\r\n                    this.offset += TypeConversions.int16ToUint32(amount.shortAmount) * 32768;\r\n                    break;\r\n                case GenOperators.ModLfoToPitch:\r\n                    this.modLfoToPitch = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.VibLfoToPitch:\r\n                    this.vibLfoToPitch = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.ModEnvToPitch:\r\n                    this.modEnvToPitch = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.InitialFilterFc:\r\n                    this.initialFilterFc = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.InitialFilterQ:\r\n                    this.initialFilterQ = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.ModLfoToFilterFc:\r\n                    this.modLfoToFilterFc = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.ModEnvToFilterFc:\r\n                    this.modEnvToFilterFc = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.EndAddrsCoarseOffset:\r\n                    this.end += TypeConversions.int16ToUint32(amount.shortAmount) * 32768;\r\n                    break;\r\n                case GenOperators.ModLfoToVolume:\r\n                    this.modLfoToVolume = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.Pan:\r\n                    this.pan = amount.shortAmount / 1000.0;\r\n                    break;\r\n                case GenOperators.DelayModLFO:\r\n                    this.delayModLFO = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.FreqModLFO:\r\n                    this.freqModLFO = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.DelayVibLFO:\r\n                    this.delayVibLFO = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.FreqVibLFO:\r\n                    this.freqVibLFO = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.DelayModEnv:\r\n                    this.modEnv.delay = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.AttackModEnv:\r\n                    this.modEnv.attack = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.HoldModEnv:\r\n                    this.modEnv.hold = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.DecayModEnv:\r\n                    this.modEnv.decay = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.SustainModEnv:\r\n                    this.modEnv.sustain = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.ReleaseModEnv:\r\n                    this.modEnv.release = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.KeynumToModEnvHold:\r\n                    this.modEnv.keynumToHold = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.KeynumToModEnvDecay:\r\n                    this.modEnv.keynumToDecay = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.DelayVolEnv:\r\n                    this.ampEnv.delay = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.AttackVolEnv:\r\n                    this.ampEnv.attack = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.HoldVolEnv:\r\n                    this.ampEnv.hold = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.DecayVolEnv:\r\n                    this.ampEnv.decay = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.SustainVolEnv:\r\n                    this.ampEnv.sustain = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.ReleaseVolEnv:\r\n                    this.ampEnv.release = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.KeynumToVolEnvHold:\r\n                    this.ampEnv.keynumToHold = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.KeynumToVolEnvDecay:\r\n                    this.ampEnv.keynumToDecay = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.KeyRange:\r\n                    this.loKey = amount.lowByteAmount;\r\n                    this.hiKey = amount.highByteAmount;\r\n                    break;\r\n                case GenOperators.VelRange:\r\n                    this.loVel = amount.lowByteAmount;\r\n                    this.hiVel = amount.highByteAmount;\r\n                    break;\r\n                case GenOperators.StartloopAddrsCoarseOffset:\r\n                    this.loopStart += TypeConversions.int16ToUint32(amount.shortAmount) * 32768;\r\n                    break;\r\n                case GenOperators.InitialAttenuation:\r\n                    this.attenuation += amount.shortAmount * 0.1;\r\n                    break;\r\n                case GenOperators.EndloopAddrsCoarseOffset:\r\n                    this.loopEnd += TypeConversions.int16ToUint32(amount.shortAmount) * 32768;\r\n                    break;\r\n                case GenOperators.CoarseTune:\r\n                    this.transpose += amount.shortAmount;\r\n                    break;\r\n                case GenOperators.FineTune:\r\n                    this.tune += amount.shortAmount;\r\n                    break;\r\n                case GenOperators.SampleModes:\r\n                    this.loopMode =\r\n                        (amount.wordAmount & 3) === 3\r\n                            ? LoopMode.Sustain\r\n                            : (amount.wordAmount & 3) === 1\r\n                                ? LoopMode.Continuous\r\n                                : LoopMode.None;\r\n                    break;\r\n                case GenOperators.ScaleTuning:\r\n                    this.pitchKeyTrack = amount.shortAmount;\r\n                    break;\r\n                case GenOperators.ExclusiveClass:\r\n                    this.group = amount.wordAmount;\r\n                    break;\r\n                case GenOperators.OverridingRootKey:\r\n                    this.pitchKeyCenter = amount.shortAmount;\r\n                    break;\r\n            }\r\n        }\r\n    }\n\n    // The SoundFont loading and Audio Synthesis is based on TinySoundFont, licensed under MIT,\r\n    var VoiceEnvelopeSegment;\r\n    (function (VoiceEnvelopeSegment) {\r\n        VoiceEnvelopeSegment[VoiceEnvelopeSegment[\"None\"] = 0] = \"None\";\r\n        VoiceEnvelopeSegment[VoiceEnvelopeSegment[\"Delay\"] = 1] = \"Delay\";\r\n        VoiceEnvelopeSegment[VoiceEnvelopeSegment[\"Attack\"] = 2] = \"Attack\";\r\n        VoiceEnvelopeSegment[VoiceEnvelopeSegment[\"Hold\"] = 3] = \"Hold\";\r\n        VoiceEnvelopeSegment[VoiceEnvelopeSegment[\"Decay\"] = 4] = \"Decay\";\r\n        VoiceEnvelopeSegment[VoiceEnvelopeSegment[\"Sustain\"] = 5] = \"Sustain\";\r\n        VoiceEnvelopeSegment[VoiceEnvelopeSegment[\"Release\"] = 6] = \"Release\";\r\n        VoiceEnvelopeSegment[VoiceEnvelopeSegment[\"Done\"] = 7] = \"Done\";\r\n    })(VoiceEnvelopeSegment || (VoiceEnvelopeSegment = {}));\r\n    class VoiceEnvelope {\r\n        constructor() {\r\n            this.level = 0;\r\n            this.slope = 0;\r\n            this.samplesUntilNextSegment = 0;\r\n            this.segment = VoiceEnvelopeSegment.None;\r\n            this.midiVelocity = 0;\r\n            this.parameters = null;\r\n            this.segmentIsExponential = false;\r\n            this.isAmpEnv = false;\r\n        }\r\n        nextSegment(activeSegment, outSampleRate) {\r\n            if (!this.parameters) {\r\n                return;\r\n            }\r\n            while (true) {\r\n                switch (activeSegment) {\r\n                    case VoiceEnvelopeSegment.None:\r\n                        this.samplesUntilNextSegment = (this.parameters.delay * outSampleRate) | 0;\r\n                        if (this.samplesUntilNextSegment > 0) {\r\n                            this.segment = VoiceEnvelopeSegment.Delay;\r\n                            this.segmentIsExponential = false;\r\n                            this.level = 0.0;\r\n                            this.slope = 0.0;\r\n                            return;\r\n                        }\r\n                        activeSegment = VoiceEnvelopeSegment.Delay;\r\n                        break;\r\n                    case VoiceEnvelopeSegment.Delay:\r\n                        this.samplesUntilNextSegment = (this.parameters.attack * outSampleRate) | 0;\r\n                        if (this.samplesUntilNextSegment > 0) {\r\n                            if (!this.isAmpEnv) {\r\n                                // mod env attack duration scales with velocity (velocity of 1 is full duration, max velocity is 0.125 times duration)\r\n                                this.samplesUntilNextSegment =\r\n                                    (this.parameters.attack * ((145 - this.midiVelocity) / 144.0) * outSampleRate) | 0;\r\n                            }\r\n                            this.segment = VoiceEnvelopeSegment.Attack;\r\n                            this.segmentIsExponential = false;\r\n                            this.level = 0.0;\r\n                            this.slope = 1.0 / this.samplesUntilNextSegment;\r\n                            return;\r\n                        }\r\n                        activeSegment = VoiceEnvelopeSegment.Attack;\r\n                        break;\r\n                    case VoiceEnvelopeSegment.Attack:\r\n                        this.samplesUntilNextSegment = (this.parameters.hold * outSampleRate) | 0;\r\n                        if (this.samplesUntilNextSegment > 0) {\r\n                            this.segment = VoiceEnvelopeSegment.Hold;\r\n                            this.segmentIsExponential = false;\r\n                            this.level = 1.0;\r\n                            this.slope = 0.0;\r\n                            return;\r\n                        }\r\n                        activeSegment = VoiceEnvelopeSegment.Hold;\r\n                        break;\r\n                    case VoiceEnvelopeSegment.Hold:\r\n                        this.samplesUntilNextSegment = (this.parameters.decay * outSampleRate) | 0;\r\n                        if (this.samplesUntilNextSegment > 0) {\r\n                            this.segment = VoiceEnvelopeSegment.Decay;\r\n                            this.level = 1.0;\r\n                            if (this.isAmpEnv) {\r\n                                // I don't truly understand this; just following what LinuxSampler does.\r\n                                let mysterySlope = -9.226 / this.samplesUntilNextSegment;\r\n                                this.slope = Math.exp(mysterySlope);\r\n                                this.segmentIsExponential = true;\r\n                                if (this.parameters.sustain > 0.0) {\r\n                                    // Again, this is following LinuxSampler's example, which is similar to\r\n                                    // SF2-style decay, where \"decay\" specifies the time it would take to\r\n                                    // get to zero, not to the sustain level.  The SFZ spec is not that\r\n                                    // specific about what \"decay\" means, so perhaps it's really supposed\r\n                                    // to specify the time to reach the sustain level.\r\n                                    this.samplesUntilNextSegment = (Math.log(this.parameters.sustain) / mysterySlope) | 0;\r\n                                }\r\n                            }\r\n                            else {\r\n                                this.slope = -1.0 / this.samplesUntilNextSegment;\r\n                                this.samplesUntilNextSegment =\r\n                                    (this.parameters.decay * (1.0 - this.parameters.sustain) * outSampleRate) | 0;\r\n                                this.segmentIsExponential = false;\r\n                            }\r\n                            return;\r\n                        }\r\n                        activeSegment = VoiceEnvelopeSegment.Decay;\r\n                        break;\r\n                    case VoiceEnvelopeSegment.Decay:\r\n                        this.segment = VoiceEnvelopeSegment.Sustain;\r\n                        this.level = this.parameters.sustain;\r\n                        this.slope = 0.0;\r\n                        this.samplesUntilNextSegment = 0x7fffffff;\r\n                        this.segmentIsExponential = false;\r\n                        return;\r\n                    case VoiceEnvelopeSegment.Sustain:\r\n                        this.segment = VoiceEnvelopeSegment.Release;\r\n                        this.samplesUntilNextSegment =\r\n                            ((this.parameters.release <= 0 ? VoiceEnvelope.FastReleaseTime : this.parameters.release) *\r\n                                outSampleRate) | 0;\r\n                        if (this.isAmpEnv) {\r\n                            // I don't truly understand this; just following what LinuxSampler does.\r\n                            let mysterySlope = -9.226 / this.samplesUntilNextSegment;\r\n                            this.slope = Math.exp(mysterySlope);\r\n                            this.segmentIsExponential = true;\r\n                        }\r\n                        else {\r\n                            this.slope = -this.level / this.samplesUntilNextSegment;\r\n                            this.segmentIsExponential = false;\r\n                        }\r\n                        return;\r\n                    case VoiceEnvelopeSegment.Release:\r\n                    default:\r\n                        this.segment = VoiceEnvelopeSegment.Done;\r\n                        this.segmentIsExponential = false;\r\n                        this.level = this.slope = 0.0;\r\n                        this.samplesUntilNextSegment = 0x7ffffff;\r\n                        return;\r\n                }\r\n            }\r\n        }\r\n        setup(newParameters, midiNoteNumber, midiVelocity, isAmpEnv, outSampleRate) {\r\n            this.parameters = new Envelope(newParameters);\r\n            if (this.parameters.keynumToHold > 0) {\r\n                this.parameters.hold += this.parameters.keynumToHold * (60.0 - midiNoteNumber);\r\n                this.parameters.hold =\r\n                    this.parameters.hold < -10000.0 ? 0.0 : SynthHelper.timecents2Secs(this.parameters.hold);\r\n            }\r\n            if (this.parameters.keynumToDecay > 0) {\r\n                this.parameters.decay += this.parameters.keynumToDecay * (60.0 - midiNoteNumber);\r\n                this.parameters.decay =\r\n                    this.parameters.decay < -10000.0 ? 0.0 : SynthHelper.timecents2Secs(this.parameters.decay);\r\n            }\r\n            this.midiVelocity = midiVelocity | 0;\r\n            this.isAmpEnv = isAmpEnv;\r\n            this.nextSegment(VoiceEnvelopeSegment.None, outSampleRate);\r\n        }\r\n        process(numSamples, outSampleRate) {\r\n            if (this.slope > 0) {\r\n                if (this.segmentIsExponential) {\r\n                    this.level *= Math.pow(this.slope, numSamples);\r\n                }\r\n                else {\r\n                    this.level += this.slope * numSamples;\r\n                }\r\n            }\r\n            // tslint:disable-next-line: no-conditional-assignment\r\n            if ((this.samplesUntilNextSegment -= numSamples) <= 0) {\r\n                this.nextSegment(this.segment, outSampleRate);\r\n            }\r\n        }\r\n    }\r\n    VoiceEnvelope.FastReleaseTime = 0.01;\n\n    // The SoundFont loading and Audio Synthesis is based on TinySoundFont, licensed under MIT,\r\n    class VoiceLfo {\r\n        constructor() {\r\n            this.samplesUntil = 0;\r\n            this.level = 0;\r\n            this.delta = 0;\r\n        }\r\n        setup(delay, freqCents, outSampleRate) {\r\n            this.samplesUntil = (delay * outSampleRate) | 0;\r\n            this.delta = (4.0 * SynthHelper.cents2Hertz(freqCents)) / outSampleRate;\r\n            this.level = 0;\r\n        }\r\n        process(blockSamples) {\r\n            if (this.samplesUntil > blockSamples) {\r\n                this.samplesUntil -= blockSamples;\r\n                return;\r\n            }\r\n            this.level += this.delta * blockSamples;\r\n            if (this.level > 1.0) {\r\n                this.delta = -this.delta;\r\n                this.level = 2.0 - this.level;\r\n            }\r\n            else if (this.level < -1.0) {\r\n                this.delta = -this.delta;\r\n                this.level = -2.0 - this.level;\r\n            }\r\n        }\r\n    }\n\n    // The SoundFont loading and Audio Synthesis is based on TinySoundFont, licensed under MIT,\r\n    // developed by Bernhard Schelling (https://github.com/schellingb/TinySoundFont)\r\n    // TypeScript port for alphaTab: (C) 2020 by Daniel Kuschny\r\n    // Licensed under: MPL-2.0\r\n    class VoiceLowPass {\r\n        constructor(other) {\r\n            this.qInv = 0;\r\n            this.a0 = 0;\r\n            this.a1 = 0;\r\n            this.b1 = 0;\r\n            this.b2 = 0;\r\n            this.z1 = 0;\r\n            this.z2 = 0;\r\n            this.active = false;\r\n            if (other) {\r\n                this.qInv = other.qInv;\r\n                this.a0 = other.a0;\r\n                this.a1 = other.a1;\r\n                this.b1 = other.b1;\r\n                this.b2 = other.b2;\r\n                this.z1 = other.z1;\r\n                this.z2 = other.z2;\r\n                this.active = other.active;\r\n            }\r\n        }\r\n        setup(fc) {\r\n            // Lowpass filter from http://www.earlevel.com/main/2012/11/26/biquad-c-source-code/\r\n            let k = Math.tan(Math.PI * fc);\r\n            let KK = k * k;\r\n            let norm = 1 / (1 + k * this.qInv + KK);\r\n            this.a0 = KK * norm;\r\n            this.a1 = 2 * this.a0;\r\n            this.b1 = 2 * (KK - 1) * norm;\r\n            this.b2 = (1 - k * this.qInv + KK) * norm;\r\n        }\r\n        process(input) {\r\n            let output = input * this.a0 + this.z1;\r\n            this.z1 = input * this.a1 + this.z2 - this.b1 * output;\r\n            this.z2 = input * this.a0 - this.b2 * output;\r\n            return output;\r\n        }\r\n    }\n\n    // The SoundFont loading and Audio Synthesis is based on TinySoundFont, licensed under MIT,\r\n    class Voice$1 {\r\n        constructor() {\r\n            this.playingPreset = 0;\r\n            this.playingKey = 0;\r\n            this.playingChannel = 0;\r\n            this.region = null;\r\n            this.pitchInputTimecents = 0;\r\n            this.pitchOutputFactor = 0;\r\n            this.sourceSamplePosition = 0;\r\n            this.noteGainDb = 0;\r\n            this.panFactorLeft = 0;\r\n            this.panFactorRight = 0;\r\n            this.playIndex = 0;\r\n            this.loopStart = 0;\r\n            this.loopEnd = 0;\r\n            this.ampEnv = new VoiceEnvelope();\r\n            this.modEnv = new VoiceEnvelope();\r\n            this.lowPass = new VoiceLowPass();\r\n            this.modLfo = new VoiceLfo();\r\n            this.vibLfo = new VoiceLfo();\r\n            this.mixVolume = 0;\r\n            this.mute = false;\r\n        }\r\n        updatePitchRatio(c, outSampleRate) {\r\n            let pitchWheel = c.pitchWheel;\r\n            // add additional note pitch\r\n            if (c.perNotePitchWheel.has(this.playingKey)) {\r\n                pitchWheel += (c.perNotePitchWheel.get(this.playingKey) - 8192);\r\n            }\r\n            const pitchShift = pitchWheel === 8192\r\n                ? c.tuning\r\n                : (pitchWheel / 16383.0 * c.pitchRange * 2) - c.pitchRange + c.tuning;\r\n            this.calcPitchRatio(pitchShift, outSampleRate);\r\n        }\r\n        calcPitchRatio(pitchShift, outSampleRate) {\r\n            if (!this.region) {\r\n                return;\r\n            }\r\n            const note = this.playingKey + this.region.transpose + this.region.tune / 100.0;\r\n            let adjustedPitch = this.region.pitchKeyCenter + (note - this.region.pitchKeyCenter) * (this.region.pitchKeyTrack / 100.0);\r\n            if (pitchShift !== 0)\r\n                adjustedPitch += pitchShift;\r\n            this.pitchInputTimecents = adjustedPitch * 100.0;\r\n            this.pitchOutputFactor =\r\n                this.region.sampleRate / (SynthHelper.timecents2Secs(this.region.pitchKeyCenter * 100.0) * outSampleRate);\r\n        }\r\n        end(outSampleRate) {\r\n            if (!this.region) {\r\n                return;\r\n            }\r\n            this.ampEnv.nextSegment(VoiceEnvelopeSegment.Sustain, outSampleRate);\r\n            this.modEnv.nextSegment(VoiceEnvelopeSegment.Sustain, outSampleRate);\r\n            if (this.region.loopMode === LoopMode.Sustain) {\r\n                // Continue playing, but stop looping.\r\n                this.loopEnd = this.loopStart;\r\n            }\r\n        }\r\n        endQuick(outSampleRate) {\r\n            this.ampEnv.parameters.release = 0.0;\r\n            this.ampEnv.nextSegment(VoiceEnvelopeSegment.Sustain, outSampleRate);\r\n            this.modEnv.parameters.release = 0.0;\r\n            this.modEnv.nextSegment(VoiceEnvelopeSegment.Sustain, outSampleRate);\r\n        }\r\n        render(f, outputBuffer, offset, numSamples, isMuted) {\r\n            if (!this.region) {\r\n                return;\r\n            }\r\n            let region = this.region;\r\n            const preset = f.presets[this.playingPreset];\r\n            let input = preset.fontSamples;\r\n            let outL = 0;\r\n            let outR = f.outputMode === OutputMode.StereoUnweaved ? numSamples : -1;\r\n            // Cache some values, to give them at least some chance of ending up in registers.\r\n            let updateModEnv = region.modEnvToPitch !== 0 || region.modEnvToFilterFc !== 0;\r\n            let updateModLFO = this.modLfo.delta > 0 &&\r\n                (region.modLfoToPitch !== 0 || region.modLfoToFilterFc !== 0 || region.modLfoToVolume !== 0);\r\n            let updateVibLFO = this.vibLfo.delta > 0 && region.vibLfoToPitch !== 0;\r\n            let isLooping = this.loopStart < this.loopEnd;\r\n            let tmpLoopStart = this.loopStart;\r\n            let tmpLoopEnd = this.loopEnd;\r\n            let tmpSampleEndDbl = region.end;\r\n            let tmpLoopEndDbl = tmpLoopEnd + 1.0;\r\n            let tmpSourceSamplePosition = this.sourceSamplePosition;\r\n            let tmpLowpass = new VoiceLowPass(this.lowPass);\r\n            let dynamicLowpass = region.modLfoToFilterFc !== 0 || region.modEnvToFilterFc !== 0;\r\n            let tmpSampleRate = 0;\r\n            let tmpInitialFilterFc = 0;\r\n            let tmpModLfoToFilterFc = 0;\r\n            let tmpModEnvToFilterFc = 0;\r\n            let dynamicPitchRatio = region.modLfoToPitch !== 0 || region.modEnvToPitch !== 0 || region.vibLfoToPitch !== 0;\r\n            let pitchRatio = 0;\r\n            let tmpModLfoToPitch = 0;\r\n            let tmpVibLfoToPitch = 0;\r\n            let tmpModEnvToPitch = 0;\r\n            let dynamicGain = region.modLfoToVolume !== 0;\r\n            let noteGain = 0;\r\n            let tmpModLfoToVolume = 0;\r\n            if (dynamicLowpass) {\r\n                tmpSampleRate = f.outSampleRate;\r\n                tmpInitialFilterFc = region.initialFilterFc;\r\n                tmpModLfoToFilterFc = region.modLfoToFilterFc;\r\n                tmpModEnvToFilterFc = region.modEnvToFilterFc;\r\n            }\r\n            else {\r\n                tmpSampleRate = 0;\r\n                tmpInitialFilterFc = 0;\r\n                tmpModLfoToFilterFc = 0;\r\n                tmpModEnvToFilterFc = 0;\r\n            }\r\n            if (dynamicPitchRatio) {\r\n                pitchRatio = 0;\r\n                tmpModLfoToPitch = region.modLfoToPitch;\r\n                tmpVibLfoToPitch = region.vibLfoToPitch;\r\n                tmpModEnvToPitch = region.modEnvToPitch;\r\n            }\r\n            else {\r\n                pitchRatio = SynthHelper.timecents2Secs(this.pitchInputTimecents) * this.pitchOutputFactor;\r\n                tmpModLfoToPitch = 0;\r\n                tmpVibLfoToPitch = 0;\r\n                tmpModEnvToPitch = 0;\r\n            }\r\n            if (dynamicGain) {\r\n                tmpModLfoToVolume = region.modLfoToVolume * 0.1;\r\n            }\r\n            else {\r\n                noteGain = SynthHelper.decibelsToGain(this.noteGainDb);\r\n                tmpModLfoToVolume = 0;\r\n            }\r\n            while (numSamples > 0) {\r\n                let gainMono;\r\n                let gainLeft;\r\n                let gainRight = 0;\r\n                let blockSamples = numSamples > Voice$1.RenderEffectSampleBlock ? Voice$1.RenderEffectSampleBlock : numSamples;\r\n                numSamples -= blockSamples;\r\n                if (dynamicLowpass) {\r\n                    let fres = tmpInitialFilterFc +\r\n                        this.modLfo.level * tmpModLfoToFilterFc +\r\n                        this.modEnv.level * tmpModEnvToFilterFc;\r\n                    tmpLowpass.active = fres <= 13500.0;\r\n                    if (tmpLowpass.active) {\r\n                        tmpLowpass.setup(SynthHelper.cents2Hertz(fres) / tmpSampleRate);\r\n                    }\r\n                }\r\n                if (dynamicPitchRatio) {\r\n                    pitchRatio =\r\n                        SynthHelper.timecents2Secs(this.pitchInputTimecents +\r\n                            (this.modLfo.level * tmpModLfoToPitch +\r\n                                this.vibLfo.level * tmpVibLfoToPitch +\r\n                                this.modEnv.level * tmpModEnvToPitch)) * this.pitchOutputFactor;\r\n                }\r\n                if (dynamicGain) {\r\n                    noteGain = SynthHelper.decibelsToGain(this.noteGainDb + this.modLfo.level * tmpModLfoToVolume);\r\n                }\r\n                gainMono = noteGain * this.ampEnv.level;\r\n                if (isMuted) {\r\n                    gainMono = 0;\r\n                }\r\n                else {\r\n                    gainMono *= this.mixVolume;\r\n                }\r\n                // Update EG.\r\n                this.ampEnv.process(blockSamples, f.outSampleRate);\r\n                if (updateModEnv) {\r\n                    this.modEnv.process(blockSamples, f.outSampleRate);\r\n                }\r\n                // Update LFOs.\r\n                if (updateModLFO) {\r\n                    this.modLfo.process(blockSamples);\r\n                }\r\n                if (updateVibLFO) {\r\n                    this.vibLfo.process(blockSamples);\r\n                }\r\n                switch (f.outputMode) {\r\n                    case OutputMode.StereoInterleaved:\r\n                        gainLeft = gainMono * this.panFactorLeft;\r\n                        gainRight = gainMono * this.panFactorRight;\r\n                        while (blockSamples-- > 0 && tmpSourceSamplePosition < tmpSampleEndDbl) {\r\n                            let pos = tmpSourceSamplePosition | 0;\r\n                            let nextPos = pos >= tmpLoopEnd && isLooping ? tmpLoopStart : pos + 1;\r\n                            // Simple linear interpolation.\r\n                            // TODO: check for interpolation mode on voice\r\n                            let alpha = tmpSourceSamplePosition - pos;\r\n                            let val = input[pos] * (1.0 - alpha) + input[nextPos] * alpha;\r\n                            // Low-pass filter.\r\n                            if (tmpLowpass.active)\r\n                                val = tmpLowpass.process(val);\r\n                            outputBuffer[offset + outL] += val * gainLeft;\r\n                            outL++;\r\n                            outputBuffer[offset + outL] += val * gainRight;\r\n                            outL++;\r\n                            // Next sample.\r\n                            tmpSourceSamplePosition += pitchRatio;\r\n                            if (tmpSourceSamplePosition >= tmpLoopEndDbl && isLooping) {\r\n                                tmpSourceSamplePosition -= tmpLoopEnd - tmpLoopStart + 1.0;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case OutputMode.StereoUnweaved:\r\n                        gainLeft = gainMono * this.panFactorLeft;\r\n                        gainRight = gainMono * this.panFactorRight;\r\n                        while (blockSamples-- > 0 && tmpSourceSamplePosition < tmpSampleEndDbl) {\r\n                            let pos = tmpSourceSamplePosition | 0;\r\n                            let nextPos = pos >= tmpLoopEnd && isLooping ? tmpLoopStart : pos + 1;\r\n                            // Simple linear interpolation.\r\n                            let alpha = tmpSourceSamplePosition - pos;\r\n                            let val = input[pos] * (1.0 - alpha) + input[nextPos] * alpha;\r\n                            // Low-pass filter.\r\n                            if (tmpLowpass.active)\r\n                                val = tmpLowpass.process(val);\r\n                            outputBuffer[offset + outL] += val * gainLeft;\r\n                            outL++;\r\n                            outputBuffer[offset + outR] += val * gainRight;\r\n                            outR++;\r\n                            // Next sample.\r\n                            tmpSourceSamplePosition += pitchRatio;\r\n                            if (tmpSourceSamplePosition >= tmpLoopEndDbl && isLooping) {\r\n                                tmpSourceSamplePosition -= tmpLoopEnd - tmpLoopStart + 1.0;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case OutputMode.Mono:\r\n                        while (blockSamples-- > 0 && tmpSourceSamplePosition < tmpSampleEndDbl) {\r\n                            let pos = tmpSourceSamplePosition | 0;\r\n                            let nextPos = pos >= tmpLoopEnd && isLooping ? tmpLoopStart : pos + 1;\r\n                            // Simple linear interpolation.\r\n                            let alpha = tmpSourceSamplePosition - pos;\r\n                            let val = input[pos] * (1.0 - alpha) + input[nextPos] * alpha;\r\n                            // Low-pass filter.\r\n                            if (tmpLowpass.active)\r\n                                val = tmpLowpass.process(val);\r\n                            outputBuffer[offset + outL] = val * gainMono;\r\n                            outL++;\r\n                            // Next sample.\r\n                            tmpSourceSamplePosition += pitchRatio;\r\n                            if (tmpSourceSamplePosition >= tmpLoopEndDbl && isLooping) {\r\n                                tmpSourceSamplePosition -= tmpLoopEnd - tmpLoopStart + 1.0;\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n                if (tmpSourceSamplePosition >= tmpSampleEndDbl || this.ampEnv.segment === VoiceEnvelopeSegment.Done) {\r\n                    this.kill();\r\n                    return;\r\n                }\r\n            }\r\n            this.sourceSamplePosition = tmpSourceSamplePosition;\r\n            if (tmpLowpass.active || dynamicLowpass) {\r\n                this.lowPass = tmpLowpass;\r\n            }\r\n        }\r\n        kill() {\r\n            this.playingPreset = -1;\r\n        }\r\n    }\r\n    /**\r\n     * The lower this block size is the more accurate the effects are.\r\n     * Increasing the value significantly lowers the CPU usage of the voice rendering.\r\n     * If LFO affects the low-pass filter it can be hearable even as low as 8.\r\n     */\r\n    Voice$1.RenderEffectSampleBlock = SynthConstants.MicroBufferSize;\n\n    class Queue {\r\n        constructor() {\r\n            this._items = [];\r\n            this._position = 0;\r\n            this.isEmpty = true;\r\n        }\r\n        clear() {\r\n            this._items = [];\r\n            this._position = 0;\r\n            this.isEmpty = true;\r\n        }\r\n        enqueue(item) {\r\n            this.isEmpty = false;\r\n            this._items.push(item);\r\n        }\r\n        peek() {\r\n            return this._items[this._position];\r\n        }\r\n        dequeue() {\r\n            const item = this._items[this._position];\r\n            this._position++;\r\n            if (this._position >= this._items.length / 2) {\r\n                this._items = this._items.slice(this._position);\r\n                this._position = 0;\r\n            }\r\n            this.isEmpty = this._items.length == 0;\r\n            return item;\r\n        }\r\n        toArray() {\r\n            const items = this._items.slice(this._position);\r\n            items.reverse();\r\n            return items;\r\n        }\r\n    }\n\n    // The SoundFont loading and Audio Synthesis is based on TinySoundFont, licensed under MIT,\r\n    /**\r\n     * This is a tiny soundfont based synthesizer.\r\n     * NOT YET IMPLEMENTED\r\n     *   - Support for ChorusEffectsSend and ReverbEffectsSend generators\r\n     *   - Better low-pass filter without lowering performance too much\r\n     *   - Support for modulators\r\n     */\r\n    class TinySoundFont {\r\n        constructor(sampleRate) {\r\n            this._midiEventQueue = new Queue();\r\n            this._mutedChannels = new Map();\r\n            this._soloChannels = new Map();\r\n            this._isAnySolo = false;\r\n            this.currentTempo = 0;\r\n            this.timeSignatureNumerator = 0;\r\n            this.timeSignatureDenominator = 0;\r\n            this.presets = null;\r\n            this._voices = [];\r\n            this._channels = null;\r\n            this._voicePlayIndex = 0;\r\n            /**\r\n             * Gets the currently configured output mode.\r\n             */\r\n            this.outputMode = OutputMode.StereoInterleaved;\r\n            /**\r\n             * Gets the currently configured sample rate.\r\n             */\r\n            this.outSampleRate = 0;\r\n            /**\r\n             * Gets the currently configured global gain in DB.\r\n             */\r\n            this.globalGainDb = 0;\r\n            this.outSampleRate = sampleRate;\r\n        }\r\n        synthesize(buffer, bufferPos, sampleCount) {\r\n            return this.fillWorkingBuffer(buffer, bufferPos, sampleCount);\r\n        }\r\n        synthesizeSilent(sampleCount) {\r\n            this.fillWorkingBuffer(null, 0, sampleCount);\r\n        }\r\n        channelGetMixVolume(channel) {\r\n            return this._channels && channel < this._channels.channelList.length\r\n                ? this._channels.channelList[channel].mixVolume\r\n                : 1.0;\r\n        }\r\n        channelSetMixVolume(channel, volume) {\r\n            let c = this.channelInit(channel);\r\n            for (let v of this._voices) {\r\n                if (v.playingChannel === channel && v.playingPreset !== -1) {\r\n                    v.mixVolume = volume;\r\n                }\r\n            }\r\n            c.mixVolume = volume;\r\n        }\r\n        channelSetMute(channel, mute) {\r\n            if (mute) {\r\n                this._mutedChannels.set(channel, true);\r\n            }\r\n            else {\r\n                this._mutedChannels.delete(channel);\r\n            }\r\n        }\r\n        channelSetSolo(channel, solo) {\r\n            if (solo) {\r\n                this._soloChannels.set(channel, true);\r\n            }\r\n            else {\r\n                this._soloChannels.delete(channel);\r\n            }\r\n            this._isAnySolo = this._soloChannels.size > 0;\r\n        }\r\n        resetChannelStates() {\r\n            this._mutedChannels = new Map();\r\n            this._soloChannels = new Map();\r\n            this._isAnySolo = false;\r\n        }\r\n        dispatchEvent(synthEvent) {\r\n            this._midiEventQueue.enqueue(synthEvent);\r\n        }\r\n        fillWorkingBuffer(buffer, bufferPos, sampleCount) {\r\n            // Break the process loop into sections representing the smallest timeframe before the midi controls need to be updated\r\n            // the bigger the timeframe the more efficent the process is, but playback quality will be reduced.\r\n            const anySolo = this._isAnySolo;\r\n            const processedEvents = [];\r\n            // process in micro-buffers\r\n            // process events for first microbuffer\r\n            while (!this._midiEventQueue.isEmpty) {\r\n                let m = this._midiEventQueue.dequeue();\r\n                if (m.isMetronome && this.metronomeVolume > 0) {\r\n                    this.channelNoteOff(SynthConstants.MetronomeChannel, 33);\r\n                    this.channelNoteOn(SynthConstants.MetronomeChannel, 33, 95 / 127);\r\n                }\r\n                else if (m.event) {\r\n                    this.processMidiMessage(m.event);\r\n                }\r\n                processedEvents.push(m);\r\n            }\r\n            // voice processing loop\r\n            for (const voice of this._voices) {\r\n                if (voice.playingPreset !== -1) {\r\n                    const channel = voice.playingChannel;\r\n                    // channel is muted if it is either explicitley muted, or another channel is set to solo but not this one.\r\n                    // exception. metronome is implicitly added in solo\r\n                    const isChannelMuted = this._mutedChannels.has(channel)\r\n                        || (anySolo && channel != SynthConstants.MetronomeChannel && !this._soloChannels.has(channel));\r\n                    if (!buffer) {\r\n                        voice.kill();\r\n                    }\r\n                    else {\r\n                        voice.render(this, buffer, bufferPos, sampleCount, isChannelMuted);\r\n                    }\r\n                }\r\n            }\r\n            return processedEvents;\r\n        }\r\n        processMidiMessage(e) {\r\n            Logger.debug('Midi', 'Processing midi ' + e.command);\r\n            const command = e.command;\r\n            const channel = e.channel;\r\n            const data1 = e.data1;\r\n            const data2 = e.data2;\r\n            switch (command) {\r\n                case MidiEventType.NoteOff:\r\n                    this.channelNoteOff(channel, data1);\r\n                    break;\r\n                case MidiEventType.NoteOn:\r\n                    this.channelNoteOn(channel, data1, data2 / 127.0);\r\n                    break;\r\n                case MidiEventType.NoteAftertouch:\r\n                    break;\r\n                case MidiEventType.Controller:\r\n                    this.channelMidiControl(channel, data1, data2);\r\n                    break;\r\n                case MidiEventType.ProgramChange:\r\n                    this.channelSetPresetNumber(channel, data1, channel === 9);\r\n                    break;\r\n                case MidiEventType.ChannelAftertouch:\r\n                    break;\r\n                case MidiEventType.PitchBend:\r\n                    this.channelSetPitchWheel(channel, data1 | (data2 << 7));\r\n                    break;\r\n                case MidiEventType.PerNotePitchBend:\r\n                    const midi20 = e;\r\n                    let perNotePitchWheel = midi20.pitch;\r\n                    // midi 2.0 -> midi 1.0\r\n                    perNotePitchWheel = (perNotePitchWheel * SynthConstants.MaxPitchWheel) / SynthConstants.MaxPitchWheel20;\r\n                    this.channelSetPerNotePitchWheel(channel, midi20.noteKey, perNotePitchWheel);\r\n                    break;\r\n                case MidiEventType.Meta:\r\n                    switch (e.data1) {\r\n                        case MetaEventType.Tempo:\r\n                            this.currentTempo = 60000000 / e.value;\r\n                            break;\r\n                        case MetaEventType.TimeSignature:\r\n                            this.timeSignatureNumerator = e.data[0];\r\n                            this.timeSignatureDenominator = Math.pow(2, e.data[1]);\r\n                            break;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        get metronomeVolume() {\r\n            return this.channelGetMixVolume(SynthConstants.MetronomeChannel);\r\n        }\r\n        set metronomeVolume(value) {\r\n            this.setupMetronomeChannel(value);\r\n        }\r\n        setupMetronomeChannel(volume) {\r\n            this.channelSetMixVolume(SynthConstants.MetronomeChannel, volume);\r\n            if (volume > 0) {\r\n                this.channelSetVolume(SynthConstants.MetronomeChannel, 1);\r\n                this.channelSetPresetNumber(SynthConstants.MetronomeChannel, 0, true);\r\n            }\r\n        }\r\n        get masterVolume() {\r\n            return SynthHelper.decibelsToGain(this.globalGainDb);\r\n        }\r\n        set masterVolume(value) {\r\n            var gainDb = SynthHelper.gainToDecibels(value);\r\n            const gainDBChange = gainDb - this.globalGainDb;\r\n            if (gainDBChange === 0) {\r\n                return;\r\n            }\r\n            for (const v of this._voices) {\r\n                if (v.playingPreset !== -1) {\r\n                    v.noteGainDb += gainDBChange;\r\n                }\r\n            }\r\n            this.globalGainDb = gainDb;\r\n        }\r\n        /**\r\n         * Stop all playing notes immediatly and reset all channel parameters but keeps user\r\n         * defined settings\r\n         */\r\n        resetSoft() {\r\n            for (const v of this._voices) {\r\n                if (v.playingPreset !== -1 &&\r\n                    (v.ampEnv.segment < VoiceEnvelopeSegment.Release || v.ampEnv.parameters.release !== 0)) {\r\n                    v.endQuick(this.outSampleRate);\r\n                }\r\n            }\r\n            if (this._channels) {\r\n                for (const c of this._channels.channelList) {\r\n                    c.presetIndex = c.bank = 0;\r\n                    c.pitchWheel = c.midiPan = 8192;\r\n                    c.perNotePitchWheel.clear();\r\n                    c.midiVolume = c.midiExpression = 16383;\r\n                    c.midiRpn = 0xffff;\r\n                    c.midiData = 0;\r\n                    c.panOffset = 0.0;\r\n                    c.gainDb = 0.0;\r\n                    c.pitchRange = 2.0;\r\n                    c.tuning = 0.0;\r\n                }\r\n            }\r\n        }\r\n        get presetCount() {\r\n            var _a, _b;\r\n            return (_b = (_a = this.presets) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;\r\n        }\r\n        /**\r\n         * Stop all playing notes immediatly and reset all channel parameters\r\n         */\r\n        reset() {\r\n            for (let v of this._voices) {\r\n                if (v.playingPreset !== -1 &&\r\n                    (v.ampEnv.segment < VoiceEnvelopeSegment.Release || v.ampEnv.parameters.release !== 0)) {\r\n                    v.endQuick(this.outSampleRate);\r\n                }\r\n            }\r\n            this._channels = null;\r\n        }\r\n        /**\r\n         * Setup the parameters for the voice render methods\r\n         * @param outputMode if mono or stereo and how stereo channel data is ordered\r\n         * @param sampleRate the number of samples per second (output frequency)\r\n         * @param globalGainDb volume gain in decibels (>0 means higher, <0 means lower)\r\n         */\r\n        setOutput(outputMode, sampleRate, globalGainDb) {\r\n            this.outputMode = outputMode;\r\n            this.outSampleRate = sampleRate >= 1 ? sampleRate : 44100.0;\r\n            this.globalGainDb = globalGainDb;\r\n        }\r\n        /**\r\n         * Start playing a note\r\n         * @param presetIndex preset index >= 0 and < {@link presetCount}\r\n         * @param key note value between 0 and 127 (60 being middle C)\r\n         * @param vel velocity as a float between 0.0 (equal to note off) and 1.0 (full)\r\n         */\r\n        noteOn(presetIndex, key, vel) {\r\n            if (!this.presets) {\r\n                return;\r\n            }\r\n            const midiVelocity = (vel * 127) | 0;\r\n            if (presetIndex < 0 || presetIndex >= this.presets.length) {\r\n                return;\r\n            }\r\n            if (vel <= 0.0) {\r\n                this.noteOff(presetIndex, key);\r\n                return;\r\n            }\r\n            // Play all matching regions.\r\n            const voicePlayIndex = this._voicePlayIndex++;\r\n            for (const region of this.presets[presetIndex].regions) {\r\n                if (key < region.loKey ||\r\n                    key > region.hiKey ||\r\n                    midiVelocity < region.loVel ||\r\n                    midiVelocity > region.hiVel) {\r\n                    continue;\r\n                }\r\n                let voice = null;\r\n                if (region.group !== 0) {\r\n                    for (const v of this._voices) {\r\n                        if (v.playingPreset === presetIndex && v.region.group === region.group) {\r\n                            v.endQuick(this.outSampleRate);\r\n                        }\r\n                        else if (v.playingPreset === -1 && !voice) {\r\n                            voice = v;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    for (let v of this._voices) {\r\n                        if (v.playingPreset === -1) {\r\n                            voice = v;\r\n                        }\r\n                    }\r\n                }\r\n                if (!voice) {\r\n                    for (let i = 0; i < 4; i++) {\r\n                        const newVoice = new Voice$1();\r\n                        newVoice.playingPreset = -1;\r\n                        this._voices.push(newVoice);\r\n                    }\r\n                    voice = this._voices[this._voices.length - 4];\r\n                }\r\n                voice.region = region;\r\n                voice.playingPreset = presetIndex;\r\n                voice.playingKey = key;\r\n                voice.playIndex = voicePlayIndex;\r\n                voice.noteGainDb = this.globalGainDb - region.attenuation - SynthHelper.gainToDecibels(1.0 / vel);\r\n                if (this._channels) {\r\n                    this._channels.setupVoice(this, voice);\r\n                }\r\n                else {\r\n                    voice.calcPitchRatio(0, this.outSampleRate);\r\n                    // The SFZ spec is silent about the pan curve, but a 3dB pan law seems common. This sqrt() curve matches what Dimension LE does; Alchemy Free seems closer to sin(adjustedPan * pi/2).\r\n                    voice.panFactorLeft = Math.sqrt(0.5 - region.pan);\r\n                    voice.panFactorRight = Math.sqrt(0.5 + region.pan);\r\n                }\r\n                // Offset/end.\r\n                voice.sourceSamplePosition = region.offset;\r\n                // Loop.\r\n                const doLoop = region.loopMode !== LoopMode.None && region.loopStart < region.loopEnd;\r\n                voice.loopStart = doLoop ? region.loopStart : 0;\r\n                voice.loopEnd = doLoop ? region.loopEnd : 0;\r\n                // Setup envelopes.\r\n                voice.ampEnv.setup(region.ampEnv, key, midiVelocity, true, this.outSampleRate);\r\n                voice.modEnv.setup(region.modEnv, key, midiVelocity, false, this.outSampleRate);\r\n                // Setup lowpass filter.\r\n                const filterQDB = region.initialFilterQ / 10.0;\r\n                voice.lowPass.qInv = 1.0 / Math.pow(10.0, filterQDB / 20.0);\r\n                voice.lowPass.z1 = voice.lowPass.z2 = 0;\r\n                voice.lowPass.active = region.initialFilterFc <= 13500;\r\n                if (voice.lowPass.active) {\r\n                    voice.lowPass.setup(SynthHelper.cents2Hertz(region.initialFilterFc) / this.outSampleRate);\r\n                }\r\n                // Setup LFO filters.\r\n                voice.modLfo.setup(region.delayModLFO, region.freqModLFO, this.outSampleRate);\r\n                voice.vibLfo.setup(region.delayVibLFO, region.freqVibLFO, this.outSampleRate);\r\n            }\r\n        }\r\n        /**\r\n         * Start playing a note\r\n         * @param bank instrument bank number (alternative to preset_index)\r\n         * @param presetNumber preset number (alternative to preset_index)\r\n         * @param key note value between 0 and 127 (60 being middle C)\r\n         * @param vel velocity as a float between 0.0 (equal to note off) and 1.0 (full)\r\n         * @returns returns false if preset does not exist, otherwise true\r\n         */\r\n        bankNoteOn(bank, presetNumber, key, vel) {\r\n            let presetIndex = this.getPresetIndex(bank, presetNumber);\r\n            if (presetIndex === -1) {\r\n                return false;\r\n            }\r\n            this.noteOn(presetIndex, key, vel);\r\n            return true;\r\n        }\r\n        /**\r\n         * Stop playing a note\r\n         */\r\n        noteOff(presetIndex, key) {\r\n            let matchFirst = null;\r\n            let matchLast = null;\r\n            let matches = [];\r\n            for (let v of this._voices) {\r\n                if (v.playingPreset !== presetIndex ||\r\n                    v.playingKey !== key ||\r\n                    v.ampEnv.segment >= VoiceEnvelopeSegment.Release) {\r\n                    continue;\r\n                }\r\n                else if (!matchFirst || v.playIndex < matchFirst.playIndex) {\r\n                    matchFirst = v;\r\n                    matchLast = v;\r\n                    matches.push(v);\r\n                }\r\n                else if (v.playIndex === matchFirst.playIndex) {\r\n                    matchLast = v;\r\n                    matches.push(v);\r\n                }\r\n            }\r\n            if (!matchFirst) {\r\n                return;\r\n            }\r\n            for (const v of matches) {\r\n                if (v !== matchFirst &&\r\n                    v !== matchLast &&\r\n                    (v.playIndex !== matchFirst.playIndex ||\r\n                        v.playingPreset !== presetIndex ||\r\n                        v.playingKey !== key ||\r\n                        v.ampEnv.segment >= VoiceEnvelopeSegment.Release)) {\r\n                    continue;\r\n                }\r\n                v.end(this.outSampleRate);\r\n            }\r\n        }\r\n        /**\r\n         * Stop playing a note\r\n         * @returns returns false if preset does not exist, otherwise true\r\n         */\r\n        bankNoteOff(bank, presetNumber, key) {\r\n            const presetIndex = this.getPresetIndex(bank, presetNumber);\r\n            if (presetIndex === -1) {\r\n                return false;\r\n            }\r\n            this.noteOff(presetIndex, key);\r\n            return true;\r\n        }\r\n        /**\r\n         * Stop playing all notes (end with sustain and release)\r\n         */\r\n        noteOffAll(immediate) {\r\n            for (const voice of this._voices) {\r\n                if (voice.playingPreset !== -1 && voice.ampEnv.segment < VoiceEnvelopeSegment.Release) {\r\n                    if (immediate) {\r\n                        voice.endQuick(this.outSampleRate);\r\n                    }\r\n                    else {\r\n                        voice.end(this.outSampleRate);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        get activeVoiceCount() {\r\n            let count = 0;\r\n            for (const v of this._voices) {\r\n                if (v.playingPreset !== -1) {\r\n                    count++;\r\n                }\r\n            }\r\n            return count;\r\n        }\r\n        channelInit(channel) {\r\n            if (this._channels && channel < this._channels.channelList.length) {\r\n                return this._channels.channelList[channel];\r\n            }\r\n            if (!this._channels) {\r\n                this._channels = new Channels();\r\n            }\r\n            for (let i = this._channels.channelList.length; i <= channel; i++) {\r\n                let c = new Channel();\r\n                c.presetIndex = c.bank = 0;\r\n                c.pitchWheel = c.midiPan = 8192;\r\n                c.midiVolume = c.midiExpression = 16383;\r\n                c.midiRpn = 0xffff;\r\n                c.midiData = 0;\r\n                c.panOffset = 0.0;\r\n                c.gainDb = 0.0;\r\n                c.pitchRange = 2.0;\r\n                c.tuning = 0.0;\r\n                c.mixVolume = 1;\r\n                this._channels.channelList.push(c);\r\n            }\r\n            return this._channels.channelList[channel];\r\n        }\r\n        /**\r\n         * Returns the preset index from a bank and preset number, or -1 if it does not exist in the loaded SoundFont\r\n         */\r\n        getPresetIndex(bank, presetNumber) {\r\n            if (!this.presets) {\r\n                return -1;\r\n            }\r\n            // search reverse (last import wins)\r\n            for (let i = this.presets.length - 1; i >= 0; i--) {\r\n                let preset = this.presets[i];\r\n                if (preset.presetNumber === presetNumber && preset.bank === bank) {\r\n                    return i;\r\n                }\r\n            }\r\n            return -1;\r\n        }\r\n        /**\r\n         * Returns the name of a preset index >= 0 and < GetPresetName()\r\n         * @param presetIndex\r\n         */\r\n        getPresetName(presetIndex) {\r\n            if (!this.presets) {\r\n                return null;\r\n            }\r\n            return presetIndex < 0 || presetIndex >= this.presets.length ? null : this.presets[presetIndex].name;\r\n        }\r\n        /**\r\n         * Returns the name of a preset by bank and preset number\r\n         */\r\n        bankGetPresetName(bank, presetNumber) {\r\n            return this.getPresetName(this.getPresetIndex(bank, presetNumber));\r\n        }\r\n        /**\r\n         * Start playing a note on a channel\r\n         * @param channel channel number\r\n         * @param key note value between 0 and 127 (60 being middle C)\r\n         * @param vel velocity as a float between 0.0 (equal to note off) and 1.0 (full)\r\n         */\r\n        channelNoteOn(channel, key, vel) {\r\n            if (!this._channels || channel > this._channels.channelList.length) {\r\n                return;\r\n            }\r\n            this._channels.activeChannel = channel;\r\n            this.noteOn(this._channels.channelList[channel].presetIndex, key, vel);\r\n        }\r\n        /**\r\n         * Stop playing notes on a channel\r\n         * @param channel channel number\r\n         * @param key note value between 0 and 127 (60 being middle C)\r\n         */\r\n        channelNoteOff(channel, key) {\r\n            const matches = [];\r\n            let matchFirst = null;\r\n            let matchLast = null;\r\n            for (const v of this._voices) {\r\n                // Find the first and last entry in the voices list with matching channel, key and look up the smallest play index\r\n                if (v.playingPreset === -1 ||\r\n                    v.playingChannel !== channel ||\r\n                    v.playingKey !== key ||\r\n                    v.ampEnv.segment >= VoiceEnvelopeSegment.Release) {\r\n                    continue;\r\n                }\r\n                if (!matchFirst || v.playIndex < matchFirst.playIndex) {\r\n                    matchFirst = matchLast = v;\r\n                    matches.push(v);\r\n                }\r\n                else if (v.playIndex === matchFirst.playIndex) {\r\n                    matchLast = v;\r\n                    matches.push(v);\r\n                }\r\n            }\r\n            let c = this.channelInit(channel);\r\n            c.perNotePitchWheel.delete(key);\r\n            if (!matchFirst) {\r\n                return;\r\n            }\r\n            for (const v of matches) {\r\n                // Stop all voices with matching channel, key and the smallest play index which was enumerated above\r\n                if (v !== matchFirst &&\r\n                    v !== matchLast &&\r\n                    (v.playIndex !== matchFirst.playIndex ||\r\n                        v.playingPreset === -1 ||\r\n                        v.playingChannel !== channel ||\r\n                        v.playingKey !== key ||\r\n                        v.ampEnv.segment >= VoiceEnvelopeSegment.Release)) {\r\n                    continue;\r\n                }\r\n                v.end(this.outSampleRate);\r\n            }\r\n        }\r\n        /**\r\n         * Stop playing all notes on a channel with sustain and release.\r\n         * @param channel channel number\r\n         */\r\n        channelNoteOffAll(channel) {\r\n            let c = this.channelInit(channel);\r\n            c.perNotePitchWheel.clear();\r\n            for (const v of this._voices) {\r\n                if (v.playingPreset !== -1 &&\r\n                    v.playingChannel === channel &&\r\n                    v.ampEnv.segment < VoiceEnvelopeSegment.Release) {\r\n                    v.end(this.outSampleRate);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Stop playing all notes on a channel immediately\r\n         * @param channel channel number\r\n         */\r\n        channelSoundsOffAll(channel) {\r\n            let c = this.channelInit(channel);\r\n            c.perNotePitchWheel.clear();\r\n            for (let v of this._voices) {\r\n                if (v.playingPreset !== -1 &&\r\n                    v.playingChannel === channel &&\r\n                    (v.ampEnv.segment < VoiceEnvelopeSegment.Release || v.ampEnv.parameters.release === 0)) {\r\n                    v.endQuick(this.outSampleRate);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         *\r\n         * @param channel channel number\r\n         * @param presetIndex preset index <= 0 and > {@link presetCount}\r\n         */\r\n        channelSetPresetIndex(channel, presetIndex) {\r\n            this.channelInit(channel).presetIndex = TypeConversions.int32ToUint16(presetIndex);\r\n        }\r\n        /**\r\n         * @param channel channel number\r\n         * @param presetNumber preset number (alternative to preset_index)\r\n         * @param midiDrums false for normal channels, otherwise apply MIDI drum channel rules\r\n         * @returns return false if preset does not exist, otherwise true\r\n         */\r\n        channelSetPresetNumber(channel, presetNumber, midiDrums = false) {\r\n            const c = this.channelInit(channel);\r\n            let presetIndex = 0;\r\n            if (midiDrums) {\r\n                presetIndex = this.getPresetIndex(128 | (c.bank & 0x7fff), presetNumber);\r\n                if (presetIndex === -1) {\r\n                    presetIndex = this.getPresetIndex(128, presetNumber);\r\n                }\r\n                if (presetIndex === -1) {\r\n                    presetIndex = this.getPresetIndex(128, 0);\r\n                }\r\n                if (presetIndex === -1) {\r\n                    presetIndex = this.getPresetIndex(c.bank & 0x7ff, presetNumber);\r\n                }\r\n            }\r\n            else {\r\n                presetIndex = this.getPresetIndex(c.bank & 0x7ff, presetNumber);\r\n            }\r\n            c.presetIndex = presetIndex;\r\n            return (presetIndex !== -1);\r\n        }\r\n        /**\r\n         * @param channel channel number\r\n         * @param bank instrument bank number (alternative to preset_index)\r\n         */\r\n        channelSetBank(channel, bank) {\r\n            this.channelInit(channel).bank = TypeConversions.int32ToUint16(bank);\r\n        }\r\n        /**\r\n         * @param channel channel number\r\n         * @param bank instrument bank number (alternative to preset_index)\r\n         * @param presetNumber preset number (alternative to preset_index)\r\n         * @returns return false if preset does not exist, otherwise true\r\n         */\r\n        channelSetBankPreset(channel, bank, presetNumber) {\r\n            const c = this.channelInit(channel);\r\n            const presetIndex = this.getPresetIndex(bank, presetNumber);\r\n            if (presetIndex === -1) {\r\n                return false;\r\n            }\r\n            c.presetIndex = TypeConversions.int32ToUint16(presetIndex);\r\n            c.bank = TypeConversions.int32ToUint16(bank);\r\n            return true;\r\n        }\r\n        /**\r\n         * @param channel channel number\r\n         * @param pan stereo panning value from 0.0 (left) to 1.0 (right) (default 0.5 center)\r\n         */\r\n        channelSetPan(channel, pan) {\r\n            for (const v of this._voices) {\r\n                if (v.playingChannel === channel && v.playingPreset !== -1) {\r\n                    let newPan = v.region.pan + pan - 0.5;\r\n                    if (newPan <= -0.5) {\r\n                        v.panFactorLeft = 1;\r\n                        v.panFactorRight = 0;\r\n                    }\r\n                    else if (newPan >= 0.5) {\r\n                        v.panFactorLeft = 0;\r\n                        v.panFactorRight = 1;\r\n                    }\r\n                    else {\r\n                        v.panFactorLeft = Math.sqrt(0.5 - newPan);\r\n                        v.panFactorRight = Math.sqrt(0.5 + newPan);\r\n                    }\r\n                }\r\n            }\r\n            this.channelInit(channel).panOffset = pan - 0.5;\r\n        }\r\n        /**\r\n         * @param channel channel number\r\n         * @param volume linear volume scale factor (default 1.0 full)\r\n         */\r\n        channelSetVolume(channel, volume) {\r\n            const c = this.channelInit(channel);\r\n            const gainDb = SynthHelper.gainToDecibels(volume);\r\n            const gainDBChange = gainDb - c.gainDb;\r\n            if (gainDBChange === 0) {\r\n                return;\r\n            }\r\n            for (const v of this._voices) {\r\n                if (v.playingChannel === channel && v.playingPreset !== -1) {\r\n                    v.noteGainDb += gainDBChange;\r\n                }\r\n            }\r\n            c.gainDb = gainDb;\r\n        }\r\n        /**\r\n         * @param channel channel number\r\n         * @param pitchWheel pitch wheel position 0 to 16383 (default 8192 unpitched)\r\n         */\r\n        channelSetPitchWheel(channel, pitchWheel) {\r\n            const c = this.channelInit(channel);\r\n            if (c.pitchWheel === pitchWheel) {\r\n                return;\r\n            }\r\n            c.pitchWheel = TypeConversions.int32ToUint16(pitchWheel);\r\n            this.channelApplyPitch(channel, c);\r\n        }\r\n        /**\r\n         * @param channel channel number\r\n         * @param key note value between 0 and 127\r\n         * @param pitchWheel pitch wheel position 0 to 16383 (default 8192 unpitched)\r\n         */\r\n        channelSetPerNotePitchWheel(channel, key, pitchWheel) {\r\n            const c = this.channelInit(channel);\r\n            if (c.perNotePitchWheel.has(key) && c.perNotePitchWheel.get(key) === pitchWheel) {\r\n                return;\r\n            }\r\n            c.perNotePitchWheel.set(key, pitchWheel);\r\n            this.channelApplyPitch(channel, c, key);\r\n        }\r\n        channelApplyPitch(channel, c, key = -1) {\r\n            for (const v of this._voices) {\r\n                if (v.playingChannel === channel && v.playingPreset !== -1 && (key == -1 || v.playingKey === key)) {\r\n                    v.updatePitchRatio(c, this.outSampleRate);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * @param channel channel number\r\n         * @param pitchRange range of the pitch wheel in semitones (default 2.0, total +/- 2 semitones)\r\n         */\r\n        channelSetPitchRange(channel, pitchRange) {\r\n            const c = this.channelInit(channel);\r\n            if (c.pitchRange === pitchRange) {\r\n                return;\r\n            }\r\n            c.pitchRange = pitchRange;\r\n            if (c.pitchWheel !== 8192) {\r\n                this.channelApplyPitch(channel, c);\r\n            }\r\n        }\r\n        /**\r\n         * @param channel channel number\r\n         * @param tuning tuning of all playing voices in semitones (default 0.0, standard (A440) tuning)\r\n         */\r\n        channelSetTuning(channel, tuning) {\r\n            const c = this.channelInit(channel);\r\n            if (c.tuning === tuning) {\r\n                return;\r\n            }\r\n            c.tuning = tuning;\r\n            this.channelApplyPitch(channel, c);\r\n        }\r\n        /**\r\n         * Apply a MIDI control change to the channel (not all controllers are supported!)\r\n         */\r\n        channelMidiControl(channel, controller, controlValue) {\r\n            let c = this.channelInit(channel);\r\n            switch (controller) {\r\n                case 5: /*Portamento_Time_MSB*/\r\n                case 96: /*DATA_BUTTON_INCREMENT*/\r\n                case 97: /*DATA_BUTTON_DECREMENT*/\r\n                case 64: /*HOLD_PEDAL*/\r\n                case 65: /*Portamento*/\r\n                case 66: /*SostenutoPedal */\r\n                case 122: /*LocalKeyboard */\r\n                case 124: /*OmniModeOff */\r\n                case 125: /*OmniModeon */\r\n                case 126: /*MonoMode */\r\n                case 127 /*PolyMode*/:\r\n                    return;\r\n                case 38 /*DATA_ENTRY_LSB*/:\r\n                    c.midiData = TypeConversions.int32ToUint16((c.midiData & 0x3f80) | controlValue);\r\n                    if (c.midiRpn === 0) {\r\n                        this.channelSetPitchRange(channel, (c.midiData >> 7) + 0.01 * (c.midiData & 0x7f));\r\n                    }\r\n                    else if (c.midiRpn === 1) {\r\n                        this.channelSetTuning(channel, (c.tuning | 0) + (c.midiData - 8192.0) / 8192.0); // fine tune\r\n                    }\r\n                    else if (c.midiRpn === 2) {\r\n                        this.channelSetTuning(channel, controlValue - 64.0 + (c.tuning - (c.tuning | 0))); // coarse tune\r\n                    }\r\n                    return;\r\n                case 7 /*VOLUME_MSB*/:\r\n                    c.midiVolume = TypeConversions.int32ToUint16((c.midiVolume & 0x7f) | (controlValue << 7));\r\n                    // Raising to the power of 3 seems to result in a decent sounding volume curve for MIDI\r\n                    this.channelSetVolume(channel, Math.pow((c.midiVolume / 16383.0) * (c.midiExpression / 16383.0), 3.0));\r\n                    return;\r\n                case 39 /*VOLUME_LSB*/:\r\n                    c.midiVolume = TypeConversions.int32ToUint16((c.midiVolume & 0x3f80) | controlValue);\r\n                    // Raising to the power of 3 seems to result in a decent sounding volume curve for MIDI\r\n                    this.channelSetVolume(channel, Math.pow((c.midiVolume / 16383.0) * (c.midiExpression / 16383.0), 3.0));\r\n                    return;\r\n                case 11 /*EXPRESSION_MSB*/:\r\n                    c.midiExpression = TypeConversions.int32ToUint16((c.midiExpression & 0x7f) | (controlValue << 7));\r\n                    // Raising to the power of 3 seems to result in a decent sounding volume curve for MIDI\r\n                    this.channelSetVolume(channel, Math.pow((c.midiVolume / 16383.0) * (c.midiExpression / 16383.0), 3.0));\r\n                    return;\r\n                case 43 /*EXPRESSION_LSB*/:\r\n                    c.midiExpression = TypeConversions.int32ToUint16((c.midiExpression & 0x3f80) | controlValue);\r\n                    // Raising to the power of 3 seems to result in a decent sounding volume curve for MIDI\r\n                    this.channelSetVolume(channel, Math.pow((c.midiVolume / 16383.0) * (c.midiExpression / 16383.0), 3.0));\r\n                    return;\r\n                case 10 /*PAN_MSB*/:\r\n                    c.midiPan = TypeConversions.int32ToUint16((c.midiPan & 0x7f) | (controlValue << 7));\r\n                    this.channelSetPan(channel, c.midiPan / 16383.0);\r\n                    return;\r\n                case 42 /*PAN_LSB*/:\r\n                    c.midiPan = TypeConversions.int32ToUint16((c.midiPan & 0x3f80) | controlValue);\r\n                    this.channelSetPan(channel, c.midiPan / 16383.0);\r\n                    return;\r\n                case 6 /*DATA_ENTRY_MSB*/:\r\n                    c.midiData = TypeConversions.int32ToUint16((c.midiData & 0x7f) | (controlValue << 7));\r\n                    if (c.midiRpn === 0) {\r\n                        this.channelSetPitchRange(channel, (c.midiData >> 7) + 0.01 * (c.midiData & 0x7f));\r\n                    }\r\n                    else if (c.midiRpn === 1) {\r\n                        this.channelSetTuning(channel, (c.tuning | 0) + (c.midiData - 8192.0) / 8192.0); // fine tune\r\n                    }\r\n                    else if (c.midiRpn === 2 && controller === 6) {\r\n                        this.channelSetTuning(channel, controlValue - 64.0 + (c.tuning - (c.tuning | 0))); // coarse tune\r\n                    }\r\n                    return;\r\n                case 0 /*BANK_SELECT_MSB*/:\r\n                    c.bank = TypeConversions.int32ToUint16(0x8000 | controlValue);\r\n                    return;\r\n                // bank select MSB alone acts like LSB\r\n                case 32 /*BANK_SELECT_LSB*/:\r\n                    c.bank = TypeConversions.int32ToUint16(((c.bank & 0x8000) !== 0 ? (c.bank & 0x7f) << 7 : 0) | controlValue);\r\n                    return;\r\n                case 101 /*RPN_MSB*/:\r\n                    c.midiRpn = TypeConversions.int32ToUint16(((c.midiRpn === 0xffff ? 0 : c.midiRpn) & 0x7f) | (controlValue << 7));\r\n                    // TODO\r\n                    return;\r\n                case 100 /*RPN_LSB*/:\r\n                    c.midiRpn = TypeConversions.int32ToUint16(((c.midiRpn === 0xffff ? 0 : c.midiRpn) & 0x3f80) | controlValue);\r\n                    // TODO\r\n                    return;\r\n                case 98 /*NRPN_LSB*/:\r\n                    c.midiRpn = 0xffff;\r\n                    // TODO\r\n                    return;\r\n                case 99 /*NRPN_MSB*/:\r\n                    c.midiRpn = 0xffff;\r\n                    // TODO\r\n                    return;\r\n                case 120 /*ALL_SOUND_OFF*/:\r\n                    this.channelSoundsOffAll(channel);\r\n                    return;\r\n                case 123 /*ALL_NOTES_OFF*/:\r\n                    this.channelNoteOffAll(channel);\r\n                    return;\r\n                case 121 /*ALL_CTRL_OFF*/:\r\n                    c.midiVolume = c.midiExpression = 16383;\r\n                    c.midiPan = 8192;\r\n                    c.bank = 0;\r\n                    this.channelSetVolume(channel, 1);\r\n                    this.channelSetPan(channel, 0.5);\r\n                    this.channelSetPitchRange(channel, 2);\r\n                    // TODO\r\n                    return;\r\n            }\r\n        }\r\n        /**\r\n         * Gets the current preset index of the given channel.\r\n         * @param channel The channel index\r\n         * @returns The current preset index of the given channel.\r\n         */\r\n        channelGetPresetIndex(channel) {\r\n            return this._channels && channel < this._channels.channelList.length\r\n                ? this._channels.channelList[channel].presetIndex\r\n                : 0;\r\n        }\r\n        /**\r\n         * Gets the current bank of the given channel.\r\n         * @param channel The channel index\r\n         * @returns The current bank of the given channel.\r\n         */\r\n        channelGetPresetBank(channel) {\r\n            return this._channels && channel < this._channels.channelList.length\r\n                ? this._channels.channelList[channel].bank & 0x7fff\r\n                : 0;\r\n        }\r\n        /**\r\n         * Gets the current pan of the given channel.\r\n         * @param channel The channel index\r\n         * @returns The current pan of the given channel.\r\n         */\r\n        channelGetPan(channel) {\r\n            return this._channels && channel < this._channels.channelList.length\r\n                ? this._channels.channelList[channel].panOffset - 0.5\r\n                : 0.5;\r\n        }\r\n        /**\r\n         * Gets the current volume of the given channel.\r\n         * @param channel The channel index\r\n         * @returns The current volune of the given channel.\r\n         */\r\n        channelGetVolume(channel) {\r\n            return this._channels && channel < this._channels.channelList.length\r\n                ? SynthHelper.decibelsToGain(this._channels.channelList[channel].gainDb)\r\n                : 1.0;\r\n        }\r\n        /**\r\n         * Gets the current pitch wheel of the given channel.\r\n         * @param channel The channel index\r\n         * @returns The current pitch wheel of the given channel.\r\n         */\r\n        channelGetPitchWheel(channel) {\r\n            return this._channels && channel < this._channels.channelList.length\r\n                ? this._channels.channelList[channel].pitchWheel\r\n                : 8192;\r\n        }\r\n        /**\r\n         * Gets the current pitch range of the given channel.\r\n         * @param channel The channel index\r\n         * @returns The current pitch range of the given channel.\r\n         */\r\n        channelGetPitchRange(channel) {\r\n            return this._channels && channel < this._channels.channelList.length\r\n                ? this._channels.channelList[channel].pitchRange\r\n                : 2.0;\r\n        }\r\n        /**\r\n         * Gets the current tuning of the given channel.\r\n         * @param channel The channel index\r\n         * @returns The current tuning of the given channel.\r\n         */\r\n        channelGetTuning(channel) {\r\n            return this._channels && channel < this._channels.channelList.length\r\n                ? this._channels.channelList[channel].tuning\r\n                : 0.0;\r\n        }\r\n        resetPresets() {\r\n            this.presets = [];\r\n        }\r\n        loadPresets(hydra, append) {\r\n            const newPresets = new Array(hydra.phdrs.length - 1);\r\n            for (let phdrIndex = 0; phdrIndex < hydra.phdrs.length - 1; phdrIndex++) {\r\n                const phdr = hydra.phdrs[phdrIndex];\r\n                let regionIndex = 0;\r\n                const preset = (newPresets[phdrIndex] = new Preset());\r\n                preset.name = phdr.presetName;\r\n                preset.bank = phdr.bank;\r\n                preset.presetNumber = phdr.preset;\r\n                preset.fontSamples = hydra.fontSamples;\r\n                let regionNum = 0;\r\n                for (let pbagIndex = phdr.presetBagNdx; pbagIndex < hydra.phdrs[phdrIndex + 1].presetBagNdx; pbagIndex++) {\r\n                    const pbag = hydra.pbags[pbagIndex];\r\n                    let plokey = 0;\r\n                    let phikey = 127;\r\n                    let plovel = 0;\r\n                    let phivel = 127;\r\n                    for (let pgenIndex = pbag.genNdx; pgenIndex < hydra.pbags[pbagIndex + 1].genNdx; pgenIndex++) {\r\n                        let pgen = hydra.pgens[pgenIndex];\r\n                        if (pgen.genOper === HydraPgen.GenKeyRange) {\r\n                            plokey = pgen.genAmount.lowByteAmount;\r\n                            phikey = pgen.genAmount.highByteAmount;\r\n                            continue;\r\n                        }\r\n                        if (pgen.genOper === HydraPgen.GenVelRange) {\r\n                            plovel = pgen.genAmount.lowByteAmount;\r\n                            phivel = pgen.genAmount.highByteAmount;\r\n                            continue;\r\n                        }\r\n                        if (pgen.genOper !== HydraPgen.GenInstrument) {\r\n                            continue;\r\n                        }\r\n                        if (pgen.genAmount.wordAmount >= hydra.insts.length) {\r\n                            continue;\r\n                        }\r\n                        let pinst = hydra.insts[pgen.genAmount.wordAmount];\r\n                        for (let ibagIndex = pinst.instBagNdx; ibagIndex < hydra.insts[pgen.genAmount.wordAmount + 1].instBagNdx; ibagIndex++) {\r\n                            let ibag = hydra.ibags[ibagIndex];\r\n                            let ilokey = 0;\r\n                            let ihikey = 127;\r\n                            let ilovel = 0;\r\n                            let ihivel = 127;\r\n                            for (let igenIndex = ibag.instGenNdx; igenIndex < hydra.ibags[ibagIndex + 1].instGenNdx; igenIndex++) {\r\n                                let igen = hydra.igens[igenIndex];\r\n                                if (igen.genOper === HydraPgen.GenKeyRange) {\r\n                                    ilokey = igen.genAmount.lowByteAmount;\r\n                                    ihikey = igen.genAmount.highByteAmount;\r\n                                    continue;\r\n                                }\r\n                                if (igen.genOper === HydraPgen.GenVelRange) {\r\n                                    ilovel = igen.genAmount.lowByteAmount;\r\n                                    ihivel = igen.genAmount.highByteAmount;\r\n                                    continue;\r\n                                }\r\n                                if (igen.genOper === 53 &&\r\n                                    ihikey >= plokey &&\r\n                                    ilokey <= phikey &&\r\n                                    ihivel >= plovel &&\r\n                                    ilovel <= phivel) {\r\n                                    regionNum++;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                preset.regions = new Array(regionNum);\r\n                let globalRegion = new Region();\r\n                globalRegion.clear(true);\r\n                // Zones.\r\n                for (let pbagIndex = phdr.presetBagNdx; pbagIndex < hydra.phdrs[phdrIndex + 1].presetBagNdx; pbagIndex++) {\r\n                    const pbag = hydra.pbags[pbagIndex];\r\n                    const presetRegion = new Region(globalRegion);\r\n                    let hadGenInstrument = false;\r\n                    // Generators.\r\n                    for (let pgenIndex = pbag.genNdx; pgenIndex < hydra.pbags[pbagIndex + 1].genNdx; pgenIndex++) {\r\n                        const pgen = hydra.pgens[pgenIndex];\r\n                        // Instrument.\r\n                        if (pgen.genOper === HydraPgen.GenInstrument) {\r\n                            let whichInst = pgen.genAmount.wordAmount;\r\n                            if (whichInst >= hydra.insts.length) {\r\n                                continue;\r\n                            }\r\n                            let instRegion = new Region();\r\n                            instRegion.clear(false);\r\n                            // Generators\r\n                            let inst = hydra.insts[whichInst];\r\n                            for (let ibagIndex = inst.instBagNdx; ibagIndex < hydra.insts[whichInst + 1].instBagNdx; ibagIndex++) {\r\n                                let ibag = hydra.ibags[ibagIndex];\r\n                                let zoneRegion = new Region(instRegion);\r\n                                let hadSampleId = false;\r\n                                for (let igenIndex = ibag.instGenNdx; igenIndex < hydra.ibags[ibagIndex + 1].instGenNdx; igenIndex++) {\r\n                                    let igen = hydra.igens[igenIndex];\r\n                                    if (igen.genOper === HydraPgen.GenSampleId) {\r\n                                        // preset region key and vel ranges are a filter for the zone regions\r\n                                        if (zoneRegion.hiKey < presetRegion.loKey ||\r\n                                            zoneRegion.loKey > presetRegion.hiKey) {\r\n                                            continue;\r\n                                        }\r\n                                        if (zoneRegion.hiVel < presetRegion.loVel ||\r\n                                            zoneRegion.loVel > presetRegion.hiVel) {\r\n                                            continue;\r\n                                        }\r\n                                        if (presetRegion.loKey > zoneRegion.loKey) {\r\n                                            zoneRegion.loKey = presetRegion.loKey;\r\n                                        }\r\n                                        if (presetRegion.hiKey < zoneRegion.hiKey) {\r\n                                            zoneRegion.hiKey = presetRegion.hiKey;\r\n                                        }\r\n                                        if (presetRegion.loVel > zoneRegion.loVel) {\r\n                                            zoneRegion.loVel = presetRegion.loVel;\r\n                                        }\r\n                                        if (presetRegion.hiVel < zoneRegion.hiVel) {\r\n                                            zoneRegion.hiVel = presetRegion.hiVel;\r\n                                        }\r\n                                        // sum regions\r\n                                        zoneRegion.offset += presetRegion.offset;\r\n                                        zoneRegion.end += presetRegion.end;\r\n                                        zoneRegion.loopStart += presetRegion.loopStart;\r\n                                        zoneRegion.loopEnd += presetRegion.loopEnd;\r\n                                        zoneRegion.transpose += presetRegion.transpose;\r\n                                        zoneRegion.tune += presetRegion.tune;\r\n                                        zoneRegion.pitchKeyTrack += presetRegion.pitchKeyTrack;\r\n                                        zoneRegion.attenuation += presetRegion.attenuation;\r\n                                        zoneRegion.pan += presetRegion.pan;\r\n                                        zoneRegion.ampEnv.delay += presetRegion.ampEnv.delay;\r\n                                        zoneRegion.ampEnv.attack += presetRegion.ampEnv.attack;\r\n                                        zoneRegion.ampEnv.hold += presetRegion.ampEnv.hold;\r\n                                        zoneRegion.ampEnv.decay += presetRegion.ampEnv.decay;\r\n                                        zoneRegion.ampEnv.sustain += presetRegion.ampEnv.sustain;\r\n                                        zoneRegion.ampEnv.release += presetRegion.ampEnv.release;\r\n                                        zoneRegion.modEnv.delay += presetRegion.modEnv.delay;\r\n                                        zoneRegion.modEnv.attack += presetRegion.modEnv.attack;\r\n                                        zoneRegion.modEnv.hold += presetRegion.modEnv.hold;\r\n                                        zoneRegion.modEnv.decay += presetRegion.modEnv.decay;\r\n                                        zoneRegion.modEnv.sustain += presetRegion.modEnv.sustain;\r\n                                        zoneRegion.modEnv.release += presetRegion.modEnv.release;\r\n                                        zoneRegion.initialFilterQ += presetRegion.initialFilterQ;\r\n                                        zoneRegion.initialFilterFc += presetRegion.initialFilterFc;\r\n                                        zoneRegion.modEnvToPitch += presetRegion.modEnvToPitch;\r\n                                        zoneRegion.modEnvToFilterFc += presetRegion.modEnvToFilterFc;\r\n                                        zoneRegion.delayModLFO += presetRegion.delayModLFO;\r\n                                        zoneRegion.freqModLFO += presetRegion.freqModLFO;\r\n                                        zoneRegion.modLfoToPitch += presetRegion.modLfoToPitch;\r\n                                        zoneRegion.modLfoToFilterFc += presetRegion.modLfoToFilterFc;\r\n                                        zoneRegion.modLfoToVolume += presetRegion.modLfoToVolume;\r\n                                        zoneRegion.delayVibLFO += presetRegion.delayVibLFO;\r\n                                        zoneRegion.freqVibLFO += presetRegion.freqVibLFO;\r\n                                        zoneRegion.vibLfoToPitch += presetRegion.vibLfoToPitch;\r\n                                        // EG times need to be converted from timecents to seconds.\r\n                                        zoneRegion.ampEnv.envToSecs(true);\r\n                                        zoneRegion.modEnv.envToSecs(false);\r\n                                        // LFO times need to be converted from timecents to seconds.\r\n                                        zoneRegion.delayModLFO =\r\n                                            zoneRegion.delayModLFO < -11950.0\r\n                                                ? 0.0\r\n                                                : SynthHelper.timecents2Secs(zoneRegion.delayModLFO);\r\n                                        zoneRegion.delayVibLFO =\r\n                                            zoneRegion.delayVibLFO < -11950.0\r\n                                                ? 0.0\r\n                                                : SynthHelper.timecents2Secs(zoneRegion.delayVibLFO);\r\n                                        // Pin values to their ranges.\r\n                                        if (zoneRegion.pan < -0.5) {\r\n                                            zoneRegion.pan = -0.5;\r\n                                        }\r\n                                        else if (zoneRegion.pan > 0.5) {\r\n                                            zoneRegion.pan = 0.5;\r\n                                        }\r\n                                        if (zoneRegion.initialFilterQ < 1500 || zoneRegion.initialFilterQ > 13500) {\r\n                                            zoneRegion.initialFilterQ = 0;\r\n                                        }\r\n                                        let shdr = hydra.sHdrs[igen.genAmount.wordAmount];\r\n                                        zoneRegion.offset += shdr.start;\r\n                                        zoneRegion.end += shdr.end;\r\n                                        zoneRegion.loopStart += shdr.startLoop;\r\n                                        zoneRegion.loopEnd += shdr.endLoop;\r\n                                        if (shdr.endLoop > 0) {\r\n                                            zoneRegion.loopEnd -= 1;\r\n                                        }\r\n                                        if (zoneRegion.pitchKeyCenter === -1) {\r\n                                            zoneRegion.pitchKeyCenter = shdr.originalPitch;\r\n                                        }\r\n                                        zoneRegion.tune += shdr.pitchCorrection;\r\n                                        zoneRegion.sampleRate = shdr.sampleRate;\r\n                                        if (zoneRegion.end !== 0 && zoneRegion.end < preset.fontSamples.length) {\r\n                                            zoneRegion.end++;\r\n                                        }\r\n                                        else {\r\n                                            zoneRegion.end = preset.fontSamples.length;\r\n                                        }\r\n                                        preset.regions[regionIndex] = new Region(zoneRegion);\r\n                                        regionIndex++;\r\n                                        hadSampleId = true;\r\n                                    }\r\n                                    else {\r\n                                        zoneRegion.operator(igen.genOper, igen.genAmount);\r\n                                    }\r\n                                }\r\n                                // Handle instrument's global zone.\r\n                                if (ibag === hydra.ibags[inst.instBagNdx] && !hadSampleId) {\r\n                                    instRegion = new Region(zoneRegion);\r\n                                }\r\n                                // Modulators (TODO)\r\n                                //if (ibag->instModNdx < ibag[1].instModNdx) addUnsupportedOpcode(\"any modulator\");\r\n                            }\r\n                            hadGenInstrument = true;\r\n                        }\r\n                        else {\r\n                            presetRegion.operator(pgen.genOper, pgen.genAmount);\r\n                        }\r\n                    }\r\n                    // Modulators (TODO)\r\n                    // if (pbag->modNdx < pbag[1].modNdx) addUnsupportedOpcode(\"any modulator\");\r\n                    // Handle preset's global zone.\r\n                    if (pbag === hydra.pbags[phdr.presetBagNdx] && !hadGenInstrument) {\r\n                        globalRegion = presetRegion;\r\n                    }\r\n                }\r\n            }\r\n            if (!append || !this.presets) {\r\n                this.presets = newPresets;\r\n            }\r\n            else {\r\n                for (const preset of newPresets) {\r\n                    this.presets.push(preset);\r\n                }\r\n            }\r\n        }\r\n    }\n\n    class EventEmitter {\r\n        constructor() {\r\n            this._listeners = [];\r\n        }\r\n        on(value) {\r\n            this._listeners.push(value);\r\n        }\r\n        off(value) {\r\n            this._listeners = this._listeners.filter(l => l !== value);\r\n        }\r\n        trigger() {\r\n            for (const l of this._listeners) {\r\n                l();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @partial\r\n     */\r\n    class EventEmitterOfT {\r\n        constructor() {\r\n            this._listeners = [];\r\n        }\r\n        on(value) {\r\n            this._listeners.push(value);\r\n        }\r\n        off(value) {\r\n            this._listeners = this._listeners.filter(l => l !== value);\r\n        }\r\n        trigger(arg) {\r\n            for (const l of this._listeners) {\r\n                l(arg);\r\n            }\r\n        }\r\n    }\n\n    /**\r\n     * Represents the info when the synthesizer played certain midi events.\r\n     */\r\n    class MidiEventsPlayedEventArgs {\r\n        /**\r\n         * Initializes a new instance of the {@link MidiEventsPlayedEventArgs} class.\r\n         * @param events The events which were played.\r\n         */\r\n        constructor(events) {\r\n            this.events = events;\r\n        }\r\n    }\n\n    /**\r\n     * This is the main synthesizer component which can be used to\r\n     * play a {@link MidiFile} via a {@link ISynthOutput}.\r\n     */\r\n    class AlphaSynth {\r\n        /**\r\n         * Initializes a new instance of the {@link AlphaSynth} class.\r\n         * @param output The output to use for playing the generated samples.\r\n         */\r\n        constructor(output) {\r\n            this._isSoundFontLoaded = false;\r\n            this._isMidiLoaded = false;\r\n            this._tickPosition = 0;\r\n            this._timePosition = 0;\r\n            this._metronomeVolume = 0;\r\n            this._countInVolume = 0;\r\n            this._playedEventsQueue = new Queue();\r\n            this._midiEventsPlayedFilter = new Set();\r\n            this.isReady = false;\r\n            this.state = PlayerState.Paused;\r\n            this.ready = new EventEmitter();\r\n            this.readyForPlayback = new EventEmitter();\r\n            this.finished = new EventEmitter();\r\n            this.soundFontLoaded = new EventEmitter();\r\n            this.soundFontLoadFailed = new EventEmitterOfT();\r\n            this.midiLoaded = new EventEmitterOfT();\r\n            this.midiLoadFailed = new EventEmitterOfT();\r\n            this.stateChanged = new EventEmitterOfT();\r\n            this.positionChanged = new EventEmitterOfT();\r\n            this.midiEventsPlayed = new EventEmitterOfT();\r\n            Logger.debug('AlphaSynth', 'Initializing player');\r\n            this.state = PlayerState.Paused;\r\n            Logger.debug('AlphaSynth', 'Creating output');\r\n            this.output = output;\r\n            this.output.ready.on(() => {\r\n                this.isReady = true;\r\n                this.ready.trigger();\r\n                this.checkReadyForPlayback();\r\n            });\r\n            this.output.sampleRequest.on(() => {\r\n                let samples = new Float32Array(SynthConstants.MicroBufferSize * SynthConstants.MicroBufferCount * SynthConstants.AudioChannels);\r\n                let bufferPos = 0;\r\n                for (let i = 0; i < SynthConstants.MicroBufferCount; i++) {\r\n                    // synthesize buffer\r\n                    this._sequencer.fillMidiEventQueue();\r\n                    const synthesizedEvents = this._synthesizer.synthesize(samples, bufferPos, SynthConstants.MicroBufferSize);\r\n                    bufferPos += SynthConstants.MicroBufferSize * SynthConstants.AudioChannels;\r\n                    // push all processed events into the queue\r\n                    // for informing users about played events\r\n                    for (const e of synthesizedEvents) {\r\n                        if (this._midiEventsPlayedFilter.has(e.event.command)) {\r\n                            this._playedEventsQueue.enqueue(e);\r\n                        }\r\n                    }\r\n                    // tell sequencer to check whether its work is done\r\n                    if (this._sequencer.isFinished) {\r\n                        break;\r\n                    }\r\n                }\r\n                // send it to output\r\n                if (bufferPos < samples.length) {\r\n                    samples = samples.subarray(0, bufferPos);\r\n                }\r\n                this.output.addSamples(samples);\r\n            });\r\n            this.output.samplesPlayed.on(this.onSamplesPlayed.bind(this));\r\n            Logger.debug('AlphaSynth', 'Creating synthesizer');\r\n            this._synthesizer = new TinySoundFont(this.output.sampleRate);\r\n            this._sequencer = new MidiFileSequencer(this._synthesizer);\r\n            Logger.debug('AlphaSynth', 'Opening output');\r\n            this.output.open();\r\n        }\r\n        get isReadyForPlayback() {\r\n            return this.isReady && this._isSoundFontLoaded && this._isMidiLoaded;\r\n        }\r\n        get logLevel() {\r\n            return Logger.logLevel;\r\n        }\r\n        set logLevel(value) {\r\n            Logger.logLevel = value;\r\n        }\r\n        get masterVolume() {\r\n            return this._synthesizer.masterVolume;\r\n        }\r\n        set masterVolume(value) {\r\n            value = Math.max(value, SynthConstants.MinVolume);\r\n            this._synthesizer.masterVolume = value;\r\n        }\r\n        get metronomeVolume() {\r\n            return this._metronomeVolume;\r\n        }\r\n        set metronomeVolume(value) {\r\n            value = Math.max(value, SynthConstants.MinVolume);\r\n            this._metronomeVolume = value;\r\n            this._synthesizer.metronomeVolume = value;\r\n        }\r\n        get countInVolume() {\r\n            return this._countInVolume;\r\n        }\r\n        set countInVolume(value) {\r\n            value = Math.max(value, SynthConstants.MinVolume);\r\n            this._countInVolume = value;\r\n        }\r\n        get midiEventsPlayedFilter() {\r\n            return Array.from(this._midiEventsPlayedFilter);\r\n        }\r\n        set midiEventsPlayedFilter(value) {\r\n            this._midiEventsPlayedFilter = new Set(value);\r\n        }\r\n        get playbackSpeed() {\r\n            return this._sequencer.playbackSpeed;\r\n        }\r\n        set playbackSpeed(value) {\r\n            value = SynthHelper.clamp(value, SynthConstants.MinPlaybackSpeed, SynthConstants.MaxPlaybackSpeed);\r\n            let oldSpeed = this._sequencer.playbackSpeed;\r\n            this._sequencer.playbackSpeed = value;\r\n            this.updateTimePosition(this._timePosition * (oldSpeed / value), true);\r\n        }\r\n        get tickPosition() {\r\n            return this._tickPosition;\r\n        }\r\n        set tickPosition(value) {\r\n            this.timePosition = this._sequencer.tickPositionToTimePosition(value);\r\n        }\r\n        get timePosition() {\r\n            return this._timePosition;\r\n        }\r\n        set timePosition(value) {\r\n            Logger.debug('AlphaSynth', `Seeking to position ${value}ms`);\r\n            // tell the sequencer to jump to the given position\r\n            this._sequencer.seek(value);\r\n            // update the internal position\r\n            this.updateTimePosition(value, true);\r\n            // tell the output to reset the already synthesized buffers and request data again\r\n            this.output.resetSamples();\r\n        }\r\n        get playbackRange() {\r\n            return this._sequencer.playbackRange;\r\n        }\r\n        set playbackRange(value) {\r\n            this._sequencer.playbackRange = value;\r\n            if (value) {\r\n                this.tickPosition = value.startTick;\r\n            }\r\n        }\r\n        get isLooping() {\r\n            return this._sequencer.isLooping;\r\n        }\r\n        set isLooping(value) {\r\n            this._sequencer.isLooping = value;\r\n        }\r\n        destroy() {\r\n            Logger.debug('AlphaSynth', 'Destroying player');\r\n            this.stop();\r\n        }\r\n        play() {\r\n            if (this.state !== PlayerState.Paused || !this._isMidiLoaded) {\r\n                return false;\r\n            }\r\n            this.output.activate();\r\n            this.playInternal();\r\n            if (this._countInVolume > 0) {\r\n                Logger.debug('AlphaSynth', 'Starting countin');\r\n                this._sequencer.startCountIn();\r\n                this._synthesizer.setupMetronomeChannel(this._countInVolume);\r\n                this.tickPosition = 0;\r\n            }\r\n            this.output.play();\r\n            return true;\r\n        }\r\n        playInternal() {\r\n            Logger.debug('AlphaSynth', 'Starting playback');\r\n            this._synthesizer.setupMetronomeChannel(this.metronomeVolume);\r\n            this.state = PlayerState.Playing;\r\n            this.stateChanged.trigger(new PlayerStateChangedEventArgs(this.state, false));\r\n        }\r\n        pause() {\r\n            if (this.state === PlayerState.Paused || !this._isMidiLoaded) {\r\n                return;\r\n            }\r\n            Logger.debug('AlphaSynth', 'Pausing playback');\r\n            this.state = PlayerState.Paused;\r\n            this.stateChanged.trigger(new PlayerStateChangedEventArgs(this.state, false));\r\n            this.output.pause();\r\n            this._synthesizer.noteOffAll(false);\r\n        }\r\n        playPause() {\r\n            if (this.state !== PlayerState.Paused || !this._isMidiLoaded) {\r\n                this.pause();\r\n            }\r\n            else {\r\n                this.play();\r\n            }\r\n        }\r\n        stop() {\r\n            if (!this._isMidiLoaded) {\r\n                return;\r\n            }\r\n            Logger.debug('AlphaSynth', 'Stopping playback');\r\n            this.state = PlayerState.Paused;\r\n            this.output.pause();\r\n            this._sequencer.stop();\r\n            this._synthesizer.noteOffAll(true);\r\n            this.tickPosition = this._sequencer.playbackRange ? this._sequencer.playbackRange.startTick : 0;\r\n            this.stateChanged.trigger(new PlayerStateChangedEventArgs(this.state, true));\r\n        }\r\n        playOneTimeMidiFile(midi) {\r\n            // pause current playback.\r\n            this.pause();\r\n            this._sequencer.loadOneTimeMidi(midi);\r\n            this._sequencer.stop();\r\n            this._synthesizer.noteOffAll(true);\r\n            this.tickPosition = 0;\r\n            this.output.play();\r\n        }\r\n        resetSoundFonts() {\r\n            this.stop();\r\n            this._synthesizer.resetPresets();\r\n            this._isSoundFontLoaded = false;\r\n            this.soundFontLoaded.trigger();\r\n        }\r\n        loadSoundFont(data, append) {\r\n            this.pause();\r\n            let input = ByteBuffer.fromBuffer(data);\r\n            try {\r\n                Logger.debug('AlphaSynth', 'Loading soundfont from bytes');\r\n                let soundFont = new Hydra();\r\n                soundFont.load(input);\r\n                this._synthesizer.loadPresets(soundFont, append);\r\n                this._isSoundFontLoaded = true;\r\n                this.soundFontLoaded.trigger();\r\n                Logger.debug('AlphaSynth', 'soundFont successfully loaded');\r\n                this.checkReadyForPlayback();\r\n            }\r\n            catch (e) {\r\n                Logger.error('AlphaSynth', 'Could not load soundfont from bytes ' + e);\r\n                this.soundFontLoadFailed.trigger(e);\r\n            }\r\n        }\r\n        checkReadyForPlayback() {\r\n            if (this.isReadyForPlayback) {\r\n                this._synthesizer.setupMetronomeChannel(this.metronomeVolume);\r\n                this.readyForPlayback.trigger();\r\n            }\r\n        }\r\n        /**\r\n         * Loads the given midi file for playback.\r\n         * @param midiFile The midi file to load\r\n         */\r\n        loadMidiFile(midiFile) {\r\n            this.stop();\r\n            try {\r\n                Logger.debug('AlphaSynth', 'Loading midi from model');\r\n                this._sequencer.loadMidi(midiFile);\r\n                this._isMidiLoaded = true;\r\n                this.midiLoaded.trigger(new PositionChangedEventArgs(0, this._sequencer.endTime, 0, this._sequencer.endTick, false));\r\n                Logger.debug('AlphaSynth', 'Midi successfully loaded');\r\n                this.checkReadyForPlayback();\r\n                this.tickPosition = 0;\r\n            }\r\n            catch (e) {\r\n                Logger.error('AlphaSynth', 'Could not load midi from model ' + e);\r\n                this.midiLoadFailed.trigger(e);\r\n            }\r\n        }\r\n        setChannelMute(channel, mute) {\r\n            this._synthesizer.channelSetMute(channel, mute);\r\n        }\r\n        resetChannelStates() {\r\n            this._synthesizer.resetChannelStates();\r\n        }\r\n        setChannelSolo(channel, solo) {\r\n            this._synthesizer.channelSetSolo(channel, solo);\r\n        }\r\n        setChannelVolume(channel, volume) {\r\n            volume = Math.max(volume, SynthConstants.MinVolume);\r\n            this._synthesizer.channelSetMixVolume(channel, volume);\r\n        }\r\n        onSamplesPlayed(sampleCount) {\r\n            let playedMillis = (sampleCount / this._synthesizer.outSampleRate) * 1000;\r\n            this.updateTimePosition(this._timePosition + playedMillis, false);\r\n            this.checkForFinish();\r\n        }\r\n        checkForFinish() {\r\n            let startTick = 0;\r\n            let endTick = 0;\r\n            if (this.playbackRange) {\r\n                startTick = this.playbackRange.startTick;\r\n                endTick = this.playbackRange.endTick;\r\n            }\r\n            else {\r\n                endTick = this._sequencer.endTick;\r\n            }\r\n            if (this._tickPosition >= endTick) {\r\n                Logger.debug('AlphaSynth', 'Finished playback');\r\n                if (this._sequencer.isPlayingCountIn) {\r\n                    this._sequencer.resetCountIn();\r\n                    this.timePosition = this._sequencer.currentTime;\r\n                    this.playInternal();\r\n                }\r\n                else if (this._sequencer.isPlayingOneTimeMidi) {\r\n                    this._sequencer.resetOneTimeMidi();\r\n                    this.state = PlayerState.Paused;\r\n                    this.output.pause();\r\n                    this._synthesizer.noteOffAll(false);\r\n                }\r\n                else {\r\n                    this.finished.trigger();\r\n                    if (this.isLooping) {\r\n                        this.tickPosition = startTick;\r\n                    }\r\n                    else {\r\n                        this.stop();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        updateTimePosition(timePosition, isSeek) {\r\n            // update the real positions\r\n            const currentTime = (this._timePosition = timePosition);\r\n            const currentTick = (this._tickPosition = this._sequencer.timePositionToTickPosition(currentTime));\r\n            const endTime = this._sequencer.endTime;\r\n            const endTick = this._sequencer.endTick;\r\n            if (!this._sequencer.isPlayingOneTimeMidi && !this._sequencer.isPlayingCountIn) {\r\n                Logger.debug('AlphaSynth', `Position changed: (time: ${currentTime}/${endTime}, tick: ${currentTick}/${endTick}, Active Voices: ${this._synthesizer.activeVoiceCount}`);\r\n                this.positionChanged.trigger(new PositionChangedEventArgs(currentTime, endTime, currentTick, endTick, isSeek));\r\n            }\r\n            // build events which were actually played\r\n            if (isSeek) {\r\n                this._playedEventsQueue.clear();\r\n            }\r\n            else {\r\n                const playedEvents = new Queue();\r\n                while (!this._playedEventsQueue.isEmpty && this._playedEventsQueue.peek().time < currentTime) {\r\n                    const synthEvent = this._playedEventsQueue.dequeue();\r\n                    playedEvents.enqueue(synthEvent.event);\r\n                }\r\n                if (!playedEvents.isEmpty) {\r\n                    this.midiEventsPlayed.trigger(new MidiEventsPlayedEventArgs(playedEvents.toArray()));\r\n                }\r\n            }\r\n        }\r\n    }\n\n    /**\r\n     * Represents a midi file with a single track that can be played via {@link AlphaSynth}\r\n     */\r\n    class MidiFile {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the division per quarter notes.\r\n             */\r\n            this.division = MidiUtils.QuarterTime;\r\n            /**\r\n             * Gets a list of midi events sorted by time.\r\n             */\r\n            this.events = [];\r\n        }\r\n        /**\r\n         * Adds the given midi event a the correct time position into the file.\r\n         */\r\n        addEvent(e) {\r\n            if (this.events.length === 0) {\r\n                this.events.push(e);\r\n            }\r\n            else {\r\n                let insertPos = this.events.length;\r\n                while (insertPos > 0) {\r\n                    const prevItem = this.events[insertPos - 1];\r\n                    if (prevItem.tick > e.tick) {\r\n                        insertPos--;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n                this.events.splice(insertPos, 0, e);\r\n            }\r\n        }\r\n        /**\r\n         * Writes the midi file into a binary format.\r\n         * @returns The binary midi file.\r\n         */\r\n        toBinary() {\r\n            let data = ByteBuffer.empty();\r\n            this.writeTo(data);\r\n            return data.toArray();\r\n        }\r\n        /**\r\n         * Writes the midi file as binary into the given stream.\r\n         * @returns The stream to write to.\r\n         */\r\n        writeTo(s) {\r\n            // magic number \"MThd\" (0x4D546864)\r\n            let b = new Uint8Array([0x4d, 0x54, 0x68, 0x64]);\r\n            s.write(b, 0, b.length);\r\n            // Header Length 6 (0x00000006)\r\n            b = new Uint8Array([0x00, 0x00, 0x00, 0x06]);\r\n            s.write(b, 0, b.length);\r\n            // format\r\n            b = new Uint8Array([0x00, 0x00]);\r\n            s.write(b, 0, b.length);\r\n            // number of tracks\r\n            let v = 1;\r\n            b = new Uint8Array([(v >> 8) & 0xff, v & 0xff]);\r\n            s.write(b, 0, b.length);\r\n            v = this.division;\r\n            b = new Uint8Array([(v >> 8) & 0xff, v & 0xff]);\r\n            s.write(b, 0, b.length);\r\n            // build track data first\r\n            let trackData = ByteBuffer.empty();\r\n            let previousTick = 0;\r\n            for (let midiEvent of this.events) {\r\n                let delta = midiEvent.tick - previousTick;\r\n                MidiFile.writeVariableInt(trackData, delta);\r\n                midiEvent.writeTo(trackData);\r\n                previousTick = midiEvent.tick;\r\n            }\r\n            // end of track\r\n            // magic number \"MTrk\" (0x4D54726B)\r\n            b = new Uint8Array([0x4d, 0x54, 0x72, 0x6b]);\r\n            s.write(b, 0, b.length);\r\n            // size as integer\r\n            let data = trackData.toArray();\r\n            let l = data.length;\r\n            b = new Uint8Array([(l >> 24) & 0xff, (l >> 16) & 0xff, (l >> 8) & 0xff, l & 0xff]);\r\n            s.write(b, 0, b.length);\r\n            s.write(data, 0, data.length);\r\n        }\r\n        static writeVariableInt(s, value) {\r\n            let array = new Uint8Array(4);\r\n            let n = 0;\r\n            do {\r\n                array[n++] = value & 0x7f;\r\n                value >>= 7;\r\n            } while (value > 0);\r\n            while (n > 0) {\r\n                n--;\r\n                if (n > 0) {\r\n                    s.writeByte(array[n] | 0x80);\r\n                }\r\n                else {\r\n                    s.writeByte(array[n]);\r\n                }\r\n            }\r\n        }\r\n    }\n\n    class MetaDataEvent extends MetaEvent {\r\n        constructor(track, delta, status, metaId, data) {\r\n            super(track, delta, status, metaId, 0);\r\n            this.data = data;\r\n        }\r\n        writeTo(s) {\r\n            s.writeByte(0xff);\r\n            s.writeByte(this.metaStatus);\r\n            let l = this.data.length;\r\n            MidiFile.writeVariableInt(s, l);\r\n            s.write(this.data, 0, this.data.length);\r\n        }\r\n    }\n\n    class MetaNumberEvent extends MetaEvent {\r\n        constructor(track, delta, status, metaId, value) {\r\n            super(track, delta, status, metaId, 0);\r\n            this.value = value;\r\n        }\r\n        writeTo(s) {\r\n            s.writeByte(0xff);\r\n            s.writeByte(this.metaStatus);\r\n            MidiFile.writeVariableInt(s, 3);\r\n            let b = new Uint8Array([(this.value >> 16) & 0xff, (this.value >> 8) & 0xff, this.value & 0xff]);\r\n            s.write(b, 0, b.length);\r\n        }\r\n    }\n\n    /**\r\n     * All settings related to importers that decode file formats.\r\n     * @json\r\n     */\r\n    class ImporterSettings {\r\n        constructor() {\r\n            /**\r\n             * The text encoding to use when decoding strings. By default UTF-8 is used.\r\n             */\r\n            this.encoding = 'utf-8';\r\n            /**\r\n             * If part-groups should be merged into a single track.\r\n             */\r\n            this.mergePartGroupsInMusicXml = false;\r\n            /**\r\n             * If set to true, text annotations on beats are attempted to be parsed as\r\n             * lyrics considering spaces as separators and removing underscores.\r\n             * If a track/staff has explicit lyrics the beat texts will not be detected as lyrics.\r\n             */\r\n            this.beatTextAsLyrics = false;\r\n        }\r\n    }\n\n    /**\r\n     * Lists all modes how alphaTab can scroll the container during playback.\r\n     */\r\n    (function (ScrollMode) {\r\n        /**\r\n         * Do not scroll automatically\r\n         */\r\n        ScrollMode[ScrollMode[\"Off\"] = 0] = \"Off\";\r\n        /**\r\n         * Scrolling happens as soon the offsets of the cursors change.\r\n         */\r\n        ScrollMode[ScrollMode[\"Continuous\"] = 1] = \"Continuous\";\r\n        /**\r\n         * Scrolling happens as soon the cursors exceed the displayed range.\r\n         */\r\n        ScrollMode[ScrollMode[\"OffScreen\"] = 2] = \"OffScreen\";\r\n    })(exports.ScrollMode || (exports.ScrollMode = {}));\r\n    /**\r\n     * This object defines the details on how to generate the vibrato effects.\r\n     * @json\r\n     */\r\n    class VibratoPlaybackSettings {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the wavelength of the note-wide vibrato in midi ticks.\r\n             */\r\n            this.noteWideLength = 480;\r\n            /**\r\n             * Gets or sets the amplitude for the note-wide vibrato in semitones.\r\n             */\r\n            this.noteWideAmplitude = 2;\r\n            /**\r\n             * Gets or sets the wavelength of the note-slight vibrato in midi ticks.\r\n             */\r\n            this.noteSlightLength = 480;\r\n            /**\r\n             * Gets or sets the amplitude for the note-slight vibrato in semitones.\r\n             */\r\n            this.noteSlightAmplitude = 2;\r\n            /**\r\n             * Gets or sets the wavelength of the beat-wide vibrato in midi ticks.\r\n             */\r\n            this.beatWideLength = 240;\r\n            /**\r\n             * Gets or sets the amplitude for the beat-wide vibrato in semitones.\r\n             */\r\n            this.beatWideAmplitude = 3;\r\n            /**\r\n             * Gets or sets the wavelength of the beat-slight vibrato in midi ticks.\r\n             */\r\n            this.beatSlightLength = 240;\r\n            /**\r\n             * Gets or sets the amplitude for the beat-slight vibrato in semitones.\r\n             */\r\n            this.beatSlightAmplitude = 3;\r\n        }\r\n    }\r\n    /**\r\n     * This object defines the details on how to generate the slide effects.\r\n     * @json\r\n     */\r\n    class SlidePlaybackSettings {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets 1/4 tones (bend value) offset that\r\n             * simple slides like slide-out-below or slide-in-above use.\r\n             */\r\n            this.simpleSlidePitchOffset = 6;\r\n            /**\r\n             * Gets or sets the percentage which the simple slides should take up\r\n             * from the whole note. for \"slide into\" effects the slide will take place\r\n             * from time 0 where the note is plucked to 25% of the overall note duration.\r\n             * For \"slide out\" effects the slide will start 75% and finish at 100% of the overall\r\n             * note duration.\r\n             */\r\n            this.simpleSlideDurationRatio = 0.25;\r\n            /**\r\n             * Gets or sets the percentage which the legato and shift slides should take up\r\n             * from the whole note. For a value 0.5 the sliding will start at 50% of the overall note duration\r\n             * and finish at 100%\r\n             */\r\n            this.shiftSlideDurationRatio = 0.5;\r\n        }\r\n    }\r\n    /**\r\n     * The player settings control how the audio playback and UI is behaving.\r\n     * @json\r\n     */\r\n    class PlayerSettings {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the URL of the sound font to be loaded.\r\n             */\r\n            this.soundFont = null;\r\n            /**\r\n             * Gets or sets the element that should be used for scrolling.\r\n             */\r\n            this.scrollElement = 'html,body';\r\n            /**\r\n             * Gets or sets whether the player should be enabled.\r\n             */\r\n            this.enablePlayer = false;\r\n            /**\r\n             * Gets or sets whether playback cursors should be displayed.\r\n             */\r\n            this.enableCursor = true;\r\n            /**\r\n             * Gets or sets alphaTab should provide user interaction features to\r\n             * select playback ranges and jump to the playback position by click (aka. seeking).\r\n             */\r\n            this.enableUserInteraction = true;\r\n            /**\r\n             * Gets or sets the X-offset to add when scrolling.\r\n             */\r\n            this.scrollOffsetX = 0;\r\n            /**\r\n             * Gets or sets the Y-offset to add when scrolling\r\n             */\r\n            this.scrollOffsetY = 0;\r\n            /**\r\n             * Gets or sets the mode how to scroll.\r\n             */\r\n            this.scrollMode = exports.ScrollMode.Continuous;\r\n            /**\r\n             * Gets or sets how fast the scrolling to the new position should happen (in milliseconds)\r\n             */\r\n            this.scrollSpeed = 300;\r\n            /**\r\n             * Gets or sets the bend duration in milliseconds for songbook bends.\r\n             */\r\n            this.songBookBendDuration = 75;\r\n            /**\r\n             * Gets or sets the duration of whammy dips in milliseconds for songbook whammys.\r\n             */\r\n            this.songBookDipDuration = 150;\r\n            /**\r\n             * Gets or sets the settings on how the vibrato audio is generated.\r\n             * @json_partial_names\r\n             */\r\n            this.vibrato = new VibratoPlaybackSettings();\r\n            /**\r\n             * Gets or sets the setitngs on how the slide audio is generated.\r\n             * @json_partial_names\r\n             */\r\n            this.slide = new SlidePlaybackSettings();\r\n            /**\r\n             * Gets or sets whether the triplet feel should be applied/played during audio playback.\r\n             */\r\n            this.playTripletFeel = true;\r\n        }\r\n    }\n\n    /**\r\n     * This public class contains instance specific settings for alphaTab\r\n     * @json\r\n     */\r\n    class Settings {\r\n        constructor() {\r\n            /**\r\n             * The core settings control the general behavior of alphatab like\r\n             * what modules are active.\r\n             * @json_on_parent\r\n             * @json_partial_names\r\n             */\r\n            this.core = new CoreSettings();\r\n            /**\r\n             * The display settings control how the general layout and display of alphaTab is done.\r\n             * @json_on_parent\r\n             * @json_partial_names\r\n             */\r\n            this.display = new DisplaySettings();\r\n            /**\r\n             * The notation settings control how various music notation elements are shown and behaving.\r\n             * @json_partial_names\r\n             */\r\n            this.notation = new NotationSettings();\r\n            /**\r\n             * All settings related to importers that decode file formats.\r\n             * @json_partial_names\r\n             */\r\n            this.importer = new ImporterSettings();\r\n            /**\r\n             * Contains all player related settings\r\n             * @json_partial_names\r\n             */\r\n            this.player = new PlayerSettings();\r\n        }\r\n        setSongBookModeSettings() {\r\n            this.notation.notationMode = exports.NotationMode.SongBook;\r\n            this.notation.smallGraceTabNotes = false;\r\n            this.notation.fingeringMode = exports.FingeringMode.SingleNoteEffectBand;\r\n            this.notation.extendBendArrowsOnTiedNotes = false;\r\n            this.notation.elements.set(NotationElement.ParenthesisOnTiedBends, false);\r\n            this.notation.elements.set(NotationElement.TabNotesOnTiedBends, false);\r\n            this.notation.elements.set(NotationElement.ZerosOnDiveWhammys, true);\r\n        }\r\n        static get songBook() {\r\n            let settings = new Settings();\r\n            settings.setSongBookModeSettings();\r\n            return settings;\r\n        }\r\n    }\n\n    /*\r\n     * Represents a MIDI 2.0 Channel Voice Message.\r\n     */\r\n    class Midi20PerNotePitchBendEvent extends MidiEvent {\r\n        constructor(track, tick, status, noteKey, pitch) {\r\n            super(track, tick, status, 0, 0);\r\n            this.noteKey = noteKey;\r\n            this.pitch = pitch;\r\n        }\r\n        /**\r\n         * Writes the midi event as binary into the given stream.\r\n         * @param s The stream to write to.\r\n         */\r\n        writeTo(s) {\r\n            let b = new Uint8Array([\r\n                0x40,\r\n                this.message & 0xff,\r\n                this.noteKey & 0xff,\r\n                0x00 /* reserved */,\r\n                /* 32bit pitch integer */\r\n                (this.pitch >> 24) & 0xff,\r\n                (this.pitch >> 16) & 0xff,\r\n                (this.pitch >> 8) & 0xff,\r\n                this.pitch & 0xff\r\n            ]);\r\n            s.write(b, 0, b.length);\r\n        }\r\n    }\n\n    class SectionSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"marker\", obj.marker);\r\n            o.set(\"text\", obj.text);\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"marker\":\r\n                    obj.marker = v;\r\n                    return true;\r\n                case \"text\":\r\n                    obj.text = v;\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class AutomationSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"isLinear\", obj.isLinear);\r\n            o.set(\"type\", obj.type);\r\n            o.set(\"value\", obj.value);\r\n            o.set(\"ratioPosition\", obj.ratioPosition);\r\n            o.set(\"text\", obj.text);\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"islinear\":\r\n                    obj.isLinear = v;\r\n                    return true;\r\n                case \"type\":\r\n                    obj.type = (JsonHelper.parseEnum(v, AutomationType));\r\n                    return true;\r\n                case \"value\":\r\n                    obj.value = v;\r\n                    return true;\r\n                case \"ratioposition\":\r\n                    obj.ratioPosition = v;\r\n                    return true;\r\n                case \"text\":\r\n                    obj.text = v;\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class FermataSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"type\", obj.type);\r\n            o.set(\"length\", obj.length);\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"type\":\r\n                    obj.type = (JsonHelper.parseEnum(v, FermataType));\r\n                    return true;\r\n                case \"length\":\r\n                    obj.length = v;\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class MasterBarSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"alternateEndings\", obj.alternateEndings);\r\n            o.set(\"keySignature\", obj.keySignature);\r\n            o.set(\"keySignatureType\", obj.keySignatureType);\r\n            o.set(\"isDoubleBar\", obj.isDoubleBar);\r\n            o.set(\"isRepeatStart\", obj.isRepeatStart);\r\n            o.set(\"repeatCount\", obj.repeatCount);\r\n            o.set(\"timeSignatureNumerator\", obj.timeSignatureNumerator);\r\n            o.set(\"timeSignatureDenominator\", obj.timeSignatureDenominator);\r\n            o.set(\"timeSignatureCommon\", obj.timeSignatureCommon);\r\n            o.set(\"tripletFeel\", obj.tripletFeel);\r\n            o.set(\"section\", SectionSerializer.toJson(obj.section));\r\n            o.set(\"tempoAutomation\", AutomationSerializer.toJson(obj.tempoAutomation));\r\n            {\r\n                const m = new Map();\r\n                o.set(\"fermata\", m);\r\n                for (const [k, v] of obj.fermata) {\r\n                    m.set(k.toString(), FermataSerializer.toJson(v));\r\n                }\r\n            }\r\n            o.set(\"start\", obj.start);\r\n            o.set(\"isAnacrusis\", obj.isAnacrusis);\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"alternateendings\":\r\n                    obj.alternateEndings = v;\r\n                    return true;\r\n                case \"keysignature\":\r\n                    obj.keySignature = (JsonHelper.parseEnum(v, KeySignature));\r\n                    return true;\r\n                case \"keysignaturetype\":\r\n                    obj.keySignatureType = (JsonHelper.parseEnum(v, KeySignatureType));\r\n                    return true;\r\n                case \"isdoublebar\":\r\n                    obj.isDoubleBar = v;\r\n                    return true;\r\n                case \"isrepeatstart\":\r\n                    obj.isRepeatStart = v;\r\n                    return true;\r\n                case \"repeatcount\":\r\n                    obj.repeatCount = v;\r\n                    return true;\r\n                case \"timesignaturenumerator\":\r\n                    obj.timeSignatureNumerator = v;\r\n                    return true;\r\n                case \"timesignaturedenominator\":\r\n                    obj.timeSignatureDenominator = v;\r\n                    return true;\r\n                case \"timesignaturecommon\":\r\n                    obj.timeSignatureCommon = v;\r\n                    return true;\r\n                case \"tripletfeel\":\r\n                    obj.tripletFeel = (JsonHelper.parseEnum(v, TripletFeel));\r\n                    return true;\r\n                case \"fermata\":\r\n                    obj.fermata = new Map();\r\n                    JsonHelper.forEach(v, (v, k) => {\r\n                        const i = new Fermata();\r\n                        FermataSerializer.fromJson(i, v);\r\n                        obj.fermata.set(parseInt(k), i);\r\n                    });\r\n                    return true;\r\n                case \"start\":\r\n                    obj.start = v;\r\n                    return true;\r\n                case \"isanacrusis\":\r\n                    obj.isAnacrusis = v;\r\n                    return true;\r\n            }\r\n            if ([\"section\"].indexOf(property) >= 0) {\r\n                if (v) {\r\n                    obj.section = new Section();\r\n                    SectionSerializer.fromJson(obj.section, v);\r\n                }\r\n                else {\r\n                    obj.section = null;\r\n                }\r\n                return true;\r\n            }\r\n            if ([\"tempoautomation\"].indexOf(property) >= 0) {\r\n                if (v) {\r\n                    obj.tempoAutomation = new Automation();\r\n                    AutomationSerializer.fromJson(obj.tempoAutomation, v);\r\n                }\r\n                else {\r\n                    obj.tempoAutomation = null;\r\n                }\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class BendPointSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"offset\", obj.offset);\r\n            o.set(\"value\", obj.value);\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"offset\":\r\n                    obj.offset = v;\r\n                    return true;\r\n                case \"value\":\r\n                    obj.value = v;\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class NoteSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"id\", obj.id);\r\n            o.set(\"accentuated\", obj.accentuated);\r\n            o.set(\"bendType\", obj.bendType);\r\n            o.set(\"bendStyle\", obj.bendStyle);\r\n            o.set(\"isContinuedBend\", obj.isContinuedBend);\r\n            o.set(\"bendPoints\", obj.bendPoints.map(i => BendPointSerializer.toJson(i)));\r\n            o.set(\"fret\", obj.fret);\r\n            o.set(\"string\", obj.string);\r\n            o.set(\"octave\", obj.octave);\r\n            o.set(\"tone\", obj.tone);\r\n            o.set(\"percussionArticulation\", obj.percussionArticulation);\r\n            o.set(\"isVisible\", obj.isVisible);\r\n            o.set(\"isLeftHandTapped\", obj.isLeftHandTapped);\r\n            o.set(\"isHammerPullOrigin\", obj.isHammerPullOrigin);\r\n            o.set(\"hammerPullOriginNoteId\", obj.hammerPullOriginNoteId);\r\n            o.set(\"hammerPullDestinationNoteId\", obj.hammerPullDestinationNoteId);\r\n            o.set(\"isSlurDestination\", obj.isSlurDestination);\r\n            o.set(\"slurOriginNoteId\", obj.slurOriginNoteId);\r\n            o.set(\"slurDestinationNoteId\", obj.slurDestinationNoteId);\r\n            o.set(\"harmonicType\", obj.harmonicType);\r\n            o.set(\"harmonicValue\", obj.harmonicValue);\r\n            o.set(\"isGhost\", obj.isGhost);\r\n            o.set(\"isLetRing\", obj.isLetRing);\r\n            o.set(\"isPalmMute\", obj.isPalmMute);\r\n            o.set(\"isDead\", obj.isDead);\r\n            o.set(\"isStaccato\", obj.isStaccato);\r\n            o.set(\"slideInType\", obj.slideInType);\r\n            o.set(\"slideOutType\", obj.slideOutType);\r\n            o.set(\"vibrato\", obj.vibrato);\r\n            o.set(\"tieOriginNoteId\", obj.tieOriginNoteId);\r\n            o.set(\"tieDestinationNoteId\", obj.tieDestinationNoteId);\r\n            o.set(\"isTieDestination\", obj.isTieDestination);\r\n            o.set(\"leftHandFinger\", obj.leftHandFinger);\r\n            o.set(\"rightHandFinger\", obj.rightHandFinger);\r\n            o.set(\"isFingering\", obj.isFingering);\r\n            o.set(\"trillValue\", obj.trillValue);\r\n            o.set(\"trillSpeed\", obj.trillSpeed);\r\n            o.set(\"durationPercent\", obj.durationPercent);\r\n            o.set(\"accidentalMode\", obj.accidentalMode);\r\n            o.set(\"dynamics\", obj.dynamics);\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"id\":\r\n                    obj.id = v;\r\n                    return true;\r\n                case \"accentuated\":\r\n                    obj.accentuated = (JsonHelper.parseEnum(v, AccentuationType));\r\n                    return true;\r\n                case \"bendtype\":\r\n                    obj.bendType = (JsonHelper.parseEnum(v, BendType));\r\n                    return true;\r\n                case \"bendstyle\":\r\n                    obj.bendStyle = (JsonHelper.parseEnum(v, BendStyle));\r\n                    return true;\r\n                case \"iscontinuedbend\":\r\n                    obj.isContinuedBend = v;\r\n                    return true;\r\n                case \"bendpoints\":\r\n                    obj.bendPoints = [];\r\n                    for (const o of v) {\r\n                        const i = new BendPoint();\r\n                        BendPointSerializer.fromJson(i, o);\r\n                        obj.addBendPoint(i);\r\n                    }\r\n                    return true;\r\n                case \"fret\":\r\n                    obj.fret = v;\r\n                    return true;\r\n                case \"string\":\r\n                    obj.string = v;\r\n                    return true;\r\n                case \"octave\":\r\n                    obj.octave = v;\r\n                    return true;\r\n                case \"tone\":\r\n                    obj.tone = v;\r\n                    return true;\r\n                case \"percussionarticulation\":\r\n                    obj.percussionArticulation = v;\r\n                    return true;\r\n                case \"isvisible\":\r\n                    obj.isVisible = v;\r\n                    return true;\r\n                case \"islefthandtapped\":\r\n                    obj.isLeftHandTapped = v;\r\n                    return true;\r\n                case \"ishammerpullorigin\":\r\n                    obj.isHammerPullOrigin = v;\r\n                    return true;\r\n                case \"hammerpulloriginnoteid\":\r\n                    obj.hammerPullOriginNoteId = v;\r\n                    return true;\r\n                case \"hammerpulldestinationnoteid\":\r\n                    obj.hammerPullDestinationNoteId = v;\r\n                    return true;\r\n                case \"isslurdestination\":\r\n                    obj.isSlurDestination = v;\r\n                    return true;\r\n                case \"sluroriginnoteid\":\r\n                    obj.slurOriginNoteId = v;\r\n                    return true;\r\n                case \"slurdestinationnoteid\":\r\n                    obj.slurDestinationNoteId = v;\r\n                    return true;\r\n                case \"harmonictype\":\r\n                    obj.harmonicType = (JsonHelper.parseEnum(v, HarmonicType));\r\n                    return true;\r\n                case \"harmonicvalue\":\r\n                    obj.harmonicValue = v;\r\n                    return true;\r\n                case \"isghost\":\r\n                    obj.isGhost = v;\r\n                    return true;\r\n                case \"isletring\":\r\n                    obj.isLetRing = v;\r\n                    return true;\r\n                case \"ispalmmute\":\r\n                    obj.isPalmMute = v;\r\n                    return true;\r\n                case \"isdead\":\r\n                    obj.isDead = v;\r\n                    return true;\r\n                case \"isstaccato\":\r\n                    obj.isStaccato = v;\r\n                    return true;\r\n                case \"slideintype\":\r\n                    obj.slideInType = (JsonHelper.parseEnum(v, SlideInType));\r\n                    return true;\r\n                case \"slideouttype\":\r\n                    obj.slideOutType = (JsonHelper.parseEnum(v, SlideOutType));\r\n                    return true;\r\n                case \"vibrato\":\r\n                    obj.vibrato = (JsonHelper.parseEnum(v, VibratoType));\r\n                    return true;\r\n                case \"tieoriginnoteid\":\r\n                    obj.tieOriginNoteId = v;\r\n                    return true;\r\n                case \"tiedestinationnoteid\":\r\n                    obj.tieDestinationNoteId = v;\r\n                    return true;\r\n                case \"istiedestination\":\r\n                    obj.isTieDestination = v;\r\n                    return true;\r\n                case \"lefthandfinger\":\r\n                    obj.leftHandFinger = (JsonHelper.parseEnum(v, Fingers));\r\n                    return true;\r\n                case \"righthandfinger\":\r\n                    obj.rightHandFinger = (JsonHelper.parseEnum(v, Fingers));\r\n                    return true;\r\n                case \"isfingering\":\r\n                    obj.isFingering = v;\r\n                    return true;\r\n                case \"trillvalue\":\r\n                    obj.trillValue = v;\r\n                    return true;\r\n                case \"trillspeed\":\r\n                    obj.trillSpeed = (JsonHelper.parseEnum(v, Duration));\r\n                    return true;\r\n                case \"durationpercent\":\r\n                    obj.durationPercent = v;\r\n                    return true;\r\n                case \"accidentalmode\":\r\n                    obj.accidentalMode = (JsonHelper.parseEnum(v, NoteAccidentalMode));\r\n                    return true;\r\n                case \"dynamics\":\r\n                    obj.dynamics = (JsonHelper.parseEnum(v, DynamicValue));\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class BeatSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"id\", obj.id);\r\n            o.set(\"notes\", obj.notes.map(i => NoteSerializer.toJson(i)));\r\n            o.set(\"isEmpty\", obj.isEmpty);\r\n            o.set(\"whammyStyle\", obj.whammyStyle);\r\n            o.set(\"ottava\", obj.ottava);\r\n            o.set(\"isLegatoOrigin\", obj.isLegatoOrigin);\r\n            o.set(\"duration\", obj.duration);\r\n            o.set(\"automations\", obj.automations.map(i => AutomationSerializer.toJson(i)));\r\n            o.set(\"dots\", obj.dots);\r\n            o.set(\"fadeIn\", obj.fadeIn);\r\n            o.set(\"lyrics\", obj.lyrics);\r\n            o.set(\"hasRasgueado\", obj.hasRasgueado);\r\n            o.set(\"pop\", obj.pop);\r\n            o.set(\"slap\", obj.slap);\r\n            o.set(\"tap\", obj.tap);\r\n            o.set(\"text\", obj.text);\r\n            o.set(\"brushType\", obj.brushType);\r\n            o.set(\"brushDuration\", obj.brushDuration);\r\n            o.set(\"tupletDenominator\", obj.tupletDenominator);\r\n            o.set(\"tupletNumerator\", obj.tupletNumerator);\r\n            o.set(\"isContinuedWhammy\", obj.isContinuedWhammy);\r\n            o.set(\"whammyBarType\", obj.whammyBarType);\r\n            o.set(\"whammyBarPoints\", obj.whammyBarPoints.map(i => BendPointSerializer.toJson(i)));\r\n            o.set(\"vibrato\", obj.vibrato);\r\n            o.set(\"chordId\", obj.chordId);\r\n            o.set(\"graceType\", obj.graceType);\r\n            o.set(\"pickStroke\", obj.pickStroke);\r\n            o.set(\"tremoloSpeed\", obj.tremoloSpeed);\r\n            o.set(\"crescendo\", obj.crescendo);\r\n            o.set(\"displayStart\", obj.displayStart);\r\n            o.set(\"playbackStart\", obj.playbackStart);\r\n            o.set(\"displayDuration\", obj.displayDuration);\r\n            o.set(\"playbackDuration\", obj.playbackDuration);\r\n            o.set(\"dynamics\", obj.dynamics);\r\n            o.set(\"invertBeamDirection\", obj.invertBeamDirection);\r\n            o.set(\"preferredBeamDirection\", obj.preferredBeamDirection);\r\n            o.set(\"beamingMode\", obj.beamingMode);\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"id\":\r\n                    obj.id = v;\r\n                    return true;\r\n                case \"notes\":\r\n                    obj.notes = [];\r\n                    for (const o of v) {\r\n                        const i = new Note();\r\n                        NoteSerializer.fromJson(i, o);\r\n                        obj.addNote(i);\r\n                    }\r\n                    return true;\r\n                case \"isempty\":\r\n                    obj.isEmpty = v;\r\n                    return true;\r\n                case \"whammystyle\":\r\n                    obj.whammyStyle = (JsonHelper.parseEnum(v, BendStyle));\r\n                    return true;\r\n                case \"ottava\":\r\n                    obj.ottava = (JsonHelper.parseEnum(v, Ottavia));\r\n                    return true;\r\n                case \"islegatoorigin\":\r\n                    obj.isLegatoOrigin = v;\r\n                    return true;\r\n                case \"duration\":\r\n                    obj.duration = (JsonHelper.parseEnum(v, Duration));\r\n                    return true;\r\n                case \"automations\":\r\n                    obj.automations = [];\r\n                    for (const o of v) {\r\n                        const i = new Automation();\r\n                        AutomationSerializer.fromJson(i, o);\r\n                        obj.automations.push(i);\r\n                    }\r\n                    return true;\r\n                case \"dots\":\r\n                    obj.dots = v;\r\n                    return true;\r\n                case \"fadein\":\r\n                    obj.fadeIn = v;\r\n                    return true;\r\n                case \"lyrics\":\r\n                    obj.lyrics = v;\r\n                    return true;\r\n                case \"hasrasgueado\":\r\n                    obj.hasRasgueado = v;\r\n                    return true;\r\n                case \"pop\":\r\n                    obj.pop = v;\r\n                    return true;\r\n                case \"slap\":\r\n                    obj.slap = v;\r\n                    return true;\r\n                case \"tap\":\r\n                    obj.tap = v;\r\n                    return true;\r\n                case \"text\":\r\n                    obj.text = v;\r\n                    return true;\r\n                case \"brushtype\":\r\n                    obj.brushType = (JsonHelper.parseEnum(v, BrushType));\r\n                    return true;\r\n                case \"brushduration\":\r\n                    obj.brushDuration = v;\r\n                    return true;\r\n                case \"tupletdenominator\":\r\n                    obj.tupletDenominator = v;\r\n                    return true;\r\n                case \"tupletnumerator\":\r\n                    obj.tupletNumerator = v;\r\n                    return true;\r\n                case \"iscontinuedwhammy\":\r\n                    obj.isContinuedWhammy = v;\r\n                    return true;\r\n                case \"whammybartype\":\r\n                    obj.whammyBarType = (JsonHelper.parseEnum(v, WhammyType));\r\n                    return true;\r\n                case \"whammybarpoints\":\r\n                    obj.whammyBarPoints = [];\r\n                    for (const o of v) {\r\n                        const i = new BendPoint();\r\n                        BendPointSerializer.fromJson(i, o);\r\n                        obj.addWhammyBarPoint(i);\r\n                    }\r\n                    return true;\r\n                case \"vibrato\":\r\n                    obj.vibrato = (JsonHelper.parseEnum(v, VibratoType));\r\n                    return true;\r\n                case \"chordid\":\r\n                    obj.chordId = v;\r\n                    return true;\r\n                case \"gracetype\":\r\n                    obj.graceType = (JsonHelper.parseEnum(v, GraceType));\r\n                    return true;\r\n                case \"pickstroke\":\r\n                    obj.pickStroke = (JsonHelper.parseEnum(v, PickStroke));\r\n                    return true;\r\n                case \"tremolospeed\":\r\n                    obj.tremoloSpeed = JsonHelper.parseEnum(v, Duration);\r\n                    return true;\r\n                case \"crescendo\":\r\n                    obj.crescendo = (JsonHelper.parseEnum(v, CrescendoType));\r\n                    return true;\r\n                case \"displaystart\":\r\n                    obj.displayStart = v;\r\n                    return true;\r\n                case \"playbackstart\":\r\n                    obj.playbackStart = v;\r\n                    return true;\r\n                case \"displayduration\":\r\n                    obj.displayDuration = v;\r\n                    return true;\r\n                case \"playbackduration\":\r\n                    obj.playbackDuration = v;\r\n                    return true;\r\n                case \"dynamics\":\r\n                    obj.dynamics = (JsonHelper.parseEnum(v, DynamicValue));\r\n                    return true;\r\n                case \"invertbeamdirection\":\r\n                    obj.invertBeamDirection = v;\r\n                    return true;\r\n                case \"preferredbeamdirection\":\r\n                    obj.preferredBeamDirection = JsonHelper.parseEnum(v, BeamDirection);\r\n                    return true;\r\n                case \"beamingmode\":\r\n                    obj.beamingMode = (JsonHelper.parseEnum(v, BeatBeamingMode));\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class VoiceSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"id\", obj.id);\r\n            o.set(\"beats\", obj.beats.map(i => BeatSerializer.toJson(i)));\r\n            o.set(\"isEmpty\", obj.isEmpty);\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"id\":\r\n                    obj.id = v;\r\n                    return true;\r\n                case \"beats\":\r\n                    obj.beats = [];\r\n                    for (const o of v) {\r\n                        const i = new Beat();\r\n                        BeatSerializer.fromJson(i, o);\r\n                        obj.addBeat(i);\r\n                    }\r\n                    return true;\r\n                case \"isempty\":\r\n                    obj.isEmpty = v;\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class BarSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"id\", obj.id);\r\n            o.set(\"clef\", obj.clef);\r\n            o.set(\"clefOttava\", obj.clefOttava);\r\n            o.set(\"voices\", obj.voices.map(i => VoiceSerializer.toJson(i)));\r\n            o.set(\"simileMark\", obj.simileMark);\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"id\":\r\n                    obj.id = v;\r\n                    return true;\r\n                case \"clef\":\r\n                    obj.clef = (JsonHelper.parseEnum(v, Clef));\r\n                    return true;\r\n                case \"clefottava\":\r\n                    obj.clefOttava = (JsonHelper.parseEnum(v, Ottavia));\r\n                    return true;\r\n                case \"voices\":\r\n                    obj.voices = [];\r\n                    for (const o of v) {\r\n                        const i = new Voice();\r\n                        VoiceSerializer.fromJson(i, o);\r\n                        obj.addVoice(i);\r\n                    }\r\n                    return true;\r\n                case \"similemark\":\r\n                    obj.simileMark = (JsonHelper.parseEnum(v, SimileMark));\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class ChordSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"name\", obj.name);\r\n            o.set(\"firstFret\", obj.firstFret);\r\n            o.set(\"strings\", obj.strings);\r\n            o.set(\"barreFrets\", obj.barreFrets);\r\n            o.set(\"showName\", obj.showName);\r\n            o.set(\"showDiagram\", obj.showDiagram);\r\n            o.set(\"showFingering\", obj.showFingering);\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"name\":\r\n                    obj.name = v;\r\n                    return true;\r\n                case \"firstfret\":\r\n                    obj.firstFret = v;\r\n                    return true;\r\n                case \"strings\":\r\n                    obj.strings = v;\r\n                    return true;\r\n                case \"barrefrets\":\r\n                    obj.barreFrets = v;\r\n                    return true;\r\n                case \"showname\":\r\n                    obj.showName = v;\r\n                    return true;\r\n                case \"showdiagram\":\r\n                    obj.showDiagram = v;\r\n                    return true;\r\n                case \"showfingering\":\r\n                    obj.showFingering = v;\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class TuningSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"isStandard\", obj.isStandard);\r\n            o.set(\"name\", obj.name);\r\n            o.set(\"tunings\", obj.tunings);\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"isstandard\":\r\n                    obj.isStandard = v;\r\n                    return true;\r\n                case \"name\":\r\n                    obj.name = v;\r\n                    return true;\r\n                case \"tunings\":\r\n                    obj.tunings = v;\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class StaffSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"bars\", obj.bars.map(i => BarSerializer.toJson(i)));\r\n            {\r\n                const m = new Map();\r\n                o.set(\"chords\", m);\r\n                for (const [k, v] of obj.chords) {\r\n                    m.set(k.toString(), ChordSerializer.toJson(v));\r\n                }\r\n            }\r\n            o.set(\"capo\", obj.capo);\r\n            o.set(\"transpositionPitch\", obj.transpositionPitch);\r\n            o.set(\"displayTranspositionPitch\", obj.displayTranspositionPitch);\r\n            o.set(\"stringTuning\", TuningSerializer.toJson(obj.stringTuning));\r\n            o.set(\"showTablature\", obj.showTablature);\r\n            o.set(\"showStandardNotation\", obj.showStandardNotation);\r\n            o.set(\"isPercussion\", obj.isPercussion);\r\n            o.set(\"standardNotationLineCount\", obj.standardNotationLineCount);\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"bars\":\r\n                    obj.bars = [];\r\n                    for (const o of v) {\r\n                        const i = new Bar();\r\n                        BarSerializer.fromJson(i, o);\r\n                        obj.addBar(i);\r\n                    }\r\n                    return true;\r\n                case \"chords\":\r\n                    obj.chords = new Map();\r\n                    JsonHelper.forEach(v, (v, k) => {\r\n                        const i = new Chord();\r\n                        ChordSerializer.fromJson(i, v);\r\n                        obj.addChord(k, i);\r\n                    });\r\n                    return true;\r\n                case \"capo\":\r\n                    obj.capo = v;\r\n                    return true;\r\n                case \"transpositionpitch\":\r\n                    obj.transpositionPitch = v;\r\n                    return true;\r\n                case \"displaytranspositionpitch\":\r\n                    obj.displayTranspositionPitch = v;\r\n                    return true;\r\n                case \"showtablature\":\r\n                    obj.showTablature = v;\r\n                    return true;\r\n                case \"showstandardnotation\":\r\n                    obj.showStandardNotation = v;\r\n                    return true;\r\n                case \"ispercussion\":\r\n                    obj.isPercussion = v;\r\n                    return true;\r\n                case \"standardnotationlinecount\":\r\n                    obj.standardNotationLineCount = v;\r\n                    return true;\r\n            }\r\n            if ([\"stringtuning\"].indexOf(property) >= 0) {\r\n                TuningSerializer.fromJson(obj.stringTuning, v);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class PlaybackInformationSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"volume\", obj.volume);\r\n            o.set(\"balance\", obj.balance);\r\n            o.set(\"port\", obj.port);\r\n            o.set(\"program\", obj.program);\r\n            o.set(\"primaryChannel\", obj.primaryChannel);\r\n            o.set(\"secondaryChannel\", obj.secondaryChannel);\r\n            o.set(\"isMute\", obj.isMute);\r\n            o.set(\"isSolo\", obj.isSolo);\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"volume\":\r\n                    obj.volume = v;\r\n                    return true;\r\n                case \"balance\":\r\n                    obj.balance = v;\r\n                    return true;\r\n                case \"port\":\r\n                    obj.port = v;\r\n                    return true;\r\n                case \"program\":\r\n                    obj.program = v;\r\n                    return true;\r\n                case \"primarychannel\":\r\n                    obj.primaryChannel = v;\r\n                    return true;\r\n                case \"secondarychannel\":\r\n                    obj.secondaryChannel = v;\r\n                    return true;\r\n                case \"ismute\":\r\n                    obj.isMute = v;\r\n                    return true;\r\n                case \"issolo\":\r\n                    obj.isSolo = v;\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class InstrumentArticulationSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"elementType\", obj.elementType);\r\n            o.set(\"staffLine\", obj.staffLine);\r\n            o.set(\"noteHeadDefault\", obj.noteHeadDefault);\r\n            o.set(\"noteHeadHalf\", obj.noteHeadHalf);\r\n            o.set(\"noteHeadWhole\", obj.noteHeadWhole);\r\n            o.set(\"techniqueSymbol\", obj.techniqueSymbol);\r\n            o.set(\"techniqueSymbolPlacement\", obj.techniqueSymbolPlacement);\r\n            o.set(\"outputMidiNumber\", obj.outputMidiNumber);\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"elementtype\":\r\n                    obj.elementType = v;\r\n                    return true;\r\n                case \"staffline\":\r\n                    obj.staffLine = v;\r\n                    return true;\r\n                case \"noteheaddefault\":\r\n                    obj.noteHeadDefault = (JsonHelper.parseEnum(v, MusicFontSymbol));\r\n                    return true;\r\n                case \"noteheadhalf\":\r\n                    obj.noteHeadHalf = (JsonHelper.parseEnum(v, MusicFontSymbol));\r\n                    return true;\r\n                case \"noteheadwhole\":\r\n                    obj.noteHeadWhole = (JsonHelper.parseEnum(v, MusicFontSymbol));\r\n                    return true;\r\n                case \"techniquesymbol\":\r\n                    obj.techniqueSymbol = (JsonHelper.parseEnum(v, MusicFontSymbol));\r\n                    return true;\r\n                case \"techniquesymbolplacement\":\r\n                    obj.techniqueSymbolPlacement = (JsonHelper.parseEnum(v, TextBaseline));\r\n                    return true;\r\n                case \"outputmidinumber\":\r\n                    obj.outputMidiNumber = v;\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class TrackSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"staves\", obj.staves.map(i => StaffSerializer.toJson(i)));\r\n            o.set(\"playbackInfo\", PlaybackInformationSerializer.toJson(obj.playbackInfo));\r\n            o.set(\"color\", Color.toJson(obj.color));\r\n            o.set(\"name\", obj.name);\r\n            o.set(\"shortName\", obj.shortName);\r\n            o.set(\"percussionArticulations\", obj.percussionArticulations.map(i => InstrumentArticulationSerializer.toJson(i)));\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"staves\":\r\n                    obj.staves = [];\r\n                    for (const o of v) {\r\n                        const i = new Staff();\r\n                        StaffSerializer.fromJson(i, o);\r\n                        obj.addStaff(i);\r\n                    }\r\n                    return true;\r\n                case \"color\":\r\n                    obj.color = (Color.fromJson(v));\r\n                    return true;\r\n                case \"name\":\r\n                    obj.name = v;\r\n                    return true;\r\n                case \"shortname\":\r\n                    obj.shortName = v;\r\n                    return true;\r\n                case \"percussionarticulations\":\r\n                    obj.percussionArticulations = [];\r\n                    for (const o of v) {\r\n                        const i = new InstrumentArticulation();\r\n                        InstrumentArticulationSerializer.fromJson(i, o);\r\n                        obj.percussionArticulations.push(i);\r\n                    }\r\n                    return true;\r\n            }\r\n            if ([\"playbackinfo\"].indexOf(property) >= 0) {\r\n                PlaybackInformationSerializer.fromJson(obj.playbackInfo, v);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class RenderStylesheetSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"hideDynamics\", obj.hideDynamics);\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"hidedynamics\":\r\n                    obj.hideDynamics = v;\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class ScoreSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"album\", obj.album);\r\n            o.set(\"artist\", obj.artist);\r\n            o.set(\"copyright\", obj.copyright);\r\n            o.set(\"instructions\", obj.instructions);\r\n            o.set(\"music\", obj.music);\r\n            o.set(\"notices\", obj.notices);\r\n            o.set(\"subTitle\", obj.subTitle);\r\n            o.set(\"title\", obj.title);\r\n            o.set(\"words\", obj.words);\r\n            o.set(\"tab\", obj.tab);\r\n            o.set(\"tempo\", obj.tempo);\r\n            o.set(\"tempoLabel\", obj.tempoLabel);\r\n            o.set(\"masterBars\", obj.masterBars.map(i => MasterBarSerializer.toJson(i)));\r\n            o.set(\"tracks\", obj.tracks.map(i => TrackSerializer.toJson(i)));\r\n            o.set(\"stylesheet\", RenderStylesheetSerializer.toJson(obj.stylesheet));\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"album\":\r\n                    obj.album = v;\r\n                    return true;\r\n                case \"artist\":\r\n                    obj.artist = v;\r\n                    return true;\r\n                case \"copyright\":\r\n                    obj.copyright = v;\r\n                    return true;\r\n                case \"instructions\":\r\n                    obj.instructions = v;\r\n                    return true;\r\n                case \"music\":\r\n                    obj.music = v;\r\n                    return true;\r\n                case \"notices\":\r\n                    obj.notices = v;\r\n                    return true;\r\n                case \"subtitle\":\r\n                    obj.subTitle = v;\r\n                    return true;\r\n                case \"title\":\r\n                    obj.title = v;\r\n                    return true;\r\n                case \"words\":\r\n                    obj.words = v;\r\n                    return true;\r\n                case \"tab\":\r\n                    obj.tab = v;\r\n                    return true;\r\n                case \"tempo\":\r\n                    obj.tempo = v;\r\n                    return true;\r\n                case \"tempolabel\":\r\n                    obj.tempoLabel = v;\r\n                    return true;\r\n                case \"masterbars\":\r\n                    obj.masterBars = [];\r\n                    for (const o of v) {\r\n                        const i = new MasterBar();\r\n                        MasterBarSerializer.fromJson(i, o);\r\n                        obj.addMasterBar(i);\r\n                    }\r\n                    return true;\r\n                case \"tracks\":\r\n                    obj.tracks = [];\r\n                    for (const o of v) {\r\n                        const i = new Track();\r\n                        TrackSerializer.fromJson(i, o);\r\n                        obj.addTrack(i);\r\n                    }\r\n                    return true;\r\n            }\r\n            if ([\"stylesheet\"].indexOf(property) >= 0) {\r\n                RenderStylesheetSerializer.fromJson(obj.stylesheet, v);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class CoreSettingsSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            /*@target web*/\r\n            o.set(\"scriptFile\", obj.scriptFile);\r\n            /*@target web*/\r\n            o.set(\"fontDirectory\", obj.fontDirectory);\r\n            /*@target web*/\r\n            o.set(\"file\", obj.file);\r\n            /*@target web*/\r\n            o.set(\"tex\", obj.tex);\r\n            /*@target web*/\r\n            o.set(\"tracks\", obj.tracks);\r\n            o.set(\"enableLazyLoading\", obj.enableLazyLoading);\r\n            o.set(\"engine\", obj.engine);\r\n            o.set(\"logLevel\", obj.logLevel);\r\n            o.set(\"useWorkers\", obj.useWorkers);\r\n            o.set(\"includeNoteBounds\", obj.includeNoteBounds);\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                /*@target web*/\r\n                case \"scriptfile\":\r\n                    obj.scriptFile = v;\r\n                    return true;\r\n                /*@target web*/\r\n                case \"fontdirectory\":\r\n                    obj.fontDirectory = v;\r\n                    return true;\r\n                /*@target web*/\r\n                case \"file\":\r\n                    obj.file = v;\r\n                    return true;\r\n                /*@target web*/\r\n                case \"tex\":\r\n                    obj.tex = v;\r\n                    return true;\r\n                /*@target web*/\r\n                case \"tracks\":\r\n                    obj.tracks = v;\r\n                    return true;\r\n                case \"enablelazyloading\":\r\n                    obj.enableLazyLoading = v;\r\n                    return true;\r\n                case \"engine\":\r\n                    obj.engine = v;\r\n                    return true;\r\n                case \"loglevel\":\r\n                    obj.logLevel = (JsonHelper.parseEnum(v, exports.LogLevel));\r\n                    return true;\r\n                case \"useworkers\":\r\n                    obj.useWorkers = v;\r\n                    return true;\r\n                case \"includenotebounds\":\r\n                    obj.includeNoteBounds = v;\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class RenderingResourcesSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"copyrightFont\", Font.toJson(obj.copyrightFont));\r\n            o.set(\"titleFont\", Font.toJson(obj.titleFont));\r\n            o.set(\"subTitleFont\", Font.toJson(obj.subTitleFont));\r\n            o.set(\"wordsFont\", Font.toJson(obj.wordsFont));\r\n            o.set(\"effectFont\", Font.toJson(obj.effectFont));\r\n            o.set(\"fretboardNumberFont\", Font.toJson(obj.fretboardNumberFont));\r\n            o.set(\"tablatureFont\", Font.toJson(obj.tablatureFont));\r\n            o.set(\"graceFont\", Font.toJson(obj.graceFont));\r\n            o.set(\"staffLineColor\", Color.toJson(obj.staffLineColor));\r\n            o.set(\"barSeparatorColor\", Color.toJson(obj.barSeparatorColor));\r\n            o.set(\"barNumberFont\", Font.toJson(obj.barNumberFont));\r\n            o.set(\"barNumberColor\", Color.toJson(obj.barNumberColor));\r\n            o.set(\"fingeringFont\", Font.toJson(obj.fingeringFont));\r\n            o.set(\"markerFont\", Font.toJson(obj.markerFont));\r\n            o.set(\"mainGlyphColor\", Color.toJson(obj.mainGlyphColor));\r\n            o.set(\"secondaryGlyphColor\", Color.toJson(obj.secondaryGlyphColor));\r\n            o.set(\"scoreInfoColor\", Color.toJson(obj.scoreInfoColor));\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"copyrightfont\":\r\n                    obj.copyrightFont = (Font.fromJson(v));\r\n                    return true;\r\n                case \"titlefont\":\r\n                    obj.titleFont = (Font.fromJson(v));\r\n                    return true;\r\n                case \"subtitlefont\":\r\n                    obj.subTitleFont = (Font.fromJson(v));\r\n                    return true;\r\n                case \"wordsfont\":\r\n                    obj.wordsFont = (Font.fromJson(v));\r\n                    return true;\r\n                case \"effectfont\":\r\n                    obj.effectFont = (Font.fromJson(v));\r\n                    return true;\r\n                case \"fretboardnumberfont\":\r\n                    obj.fretboardNumberFont = (Font.fromJson(v));\r\n                    return true;\r\n                case \"tablaturefont\":\r\n                    obj.tablatureFont = (Font.fromJson(v));\r\n                    return true;\r\n                case \"gracefont\":\r\n                    obj.graceFont = (Font.fromJson(v));\r\n                    return true;\r\n                case \"stafflinecolor\":\r\n                    obj.staffLineColor = (Color.fromJson(v));\r\n                    return true;\r\n                case \"barseparatorcolor\":\r\n                    obj.barSeparatorColor = (Color.fromJson(v));\r\n                    return true;\r\n                case \"barnumberfont\":\r\n                    obj.barNumberFont = (Font.fromJson(v));\r\n                    return true;\r\n                case \"barnumbercolor\":\r\n                    obj.barNumberColor = (Color.fromJson(v));\r\n                    return true;\r\n                case \"fingeringfont\":\r\n                    obj.fingeringFont = (Font.fromJson(v));\r\n                    return true;\r\n                case \"markerfont\":\r\n                    obj.markerFont = (Font.fromJson(v));\r\n                    return true;\r\n                case \"mainglyphcolor\":\r\n                    obj.mainGlyphColor = (Color.fromJson(v));\r\n                    return true;\r\n                case \"secondaryglyphcolor\":\r\n                    obj.secondaryGlyphColor = (Color.fromJson(v));\r\n                    return true;\r\n                case \"scoreinfocolor\":\r\n                    obj.scoreInfoColor = (Color.fromJson(v));\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class DisplaySettingsSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"scale\", obj.scale);\r\n            o.set(\"stretchForce\", obj.stretchForce);\r\n            o.set(\"layoutMode\", obj.layoutMode);\r\n            o.set(\"staveProfile\", obj.staveProfile);\r\n            o.set(\"barsPerRow\", obj.barsPerRow);\r\n            o.set(\"startBar\", obj.startBar);\r\n            o.set(\"barCount\", obj.barCount);\r\n            o.set(\"barCountPerPartial\", obj.barCountPerPartial);\r\n            o.set(\"resources\", RenderingResourcesSerializer.toJson(obj.resources));\r\n            o.set(\"padding\", obj.padding);\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"scale\":\r\n                    obj.scale = v;\r\n                    return true;\r\n                case \"stretchforce\":\r\n                    obj.stretchForce = v;\r\n                    return true;\r\n                case \"layoutmode\":\r\n                    obj.layoutMode = (JsonHelper.parseEnum(v, exports.LayoutMode));\r\n                    return true;\r\n                case \"staveprofile\":\r\n                    obj.staveProfile = (JsonHelper.parseEnum(v, exports.StaveProfile));\r\n                    return true;\r\n                case \"barsperrow\":\r\n                    obj.barsPerRow = v;\r\n                    return true;\r\n                case \"startbar\":\r\n                    obj.startBar = v;\r\n                    return true;\r\n                case \"barcount\":\r\n                    obj.barCount = v;\r\n                    return true;\r\n                case \"barcountperpartial\":\r\n                    obj.barCountPerPartial = v;\r\n                    return true;\r\n                case \"padding\":\r\n                    obj.padding = v;\r\n                    return true;\r\n            }\r\n            if ([\"resources\"].indexOf(property) >= 0) {\r\n                RenderingResourcesSerializer.fromJson(obj.resources, v);\r\n                return true;\r\n            }\r\n            else {\r\n                for (const c of [\"resources\"]) {\r\n                    if (property.indexOf(c) === 0) {\r\n                        if (RenderingResourcesSerializer.setProperty(obj.resources, property.substring(c.length), v)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class NotationSettingsSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"notationMode\", obj.notationMode);\r\n            o.set(\"fingeringMode\", obj.fingeringMode);\r\n            {\r\n                const m = new Map();\r\n                o.set(\"elements\", m);\r\n                for (const [k, v] of obj.elements) {\r\n                    m.set(k.toString(), v);\r\n                }\r\n            }\r\n            o.set(\"rhythmMode\", obj.rhythmMode);\r\n            o.set(\"rhythmHeight\", obj.rhythmHeight);\r\n            o.set(\"transpositionPitches\", obj.transpositionPitches);\r\n            o.set(\"displayTranspositionPitches\", obj.displayTranspositionPitches);\r\n            o.set(\"smallGraceTabNotes\", obj.smallGraceTabNotes);\r\n            o.set(\"extendBendArrowsOnTiedNotes\", obj.extendBendArrowsOnTiedNotes);\r\n            o.set(\"extendLineEffectsToBeatEnd\", obj.extendLineEffectsToBeatEnd);\r\n            o.set(\"slurHeight\", obj.slurHeight);\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"notationmode\":\r\n                    obj.notationMode = (JsonHelper.parseEnum(v, exports.NotationMode));\r\n                    return true;\r\n                case \"fingeringmode\":\r\n                    obj.fingeringMode = (JsonHelper.parseEnum(v, exports.FingeringMode));\r\n                    return true;\r\n                case \"elements\":\r\n                    obj.elements = new Map();\r\n                    JsonHelper.forEach(v, (v, k) => {\r\n                        obj.elements.set((JsonHelper.parseEnum(k, NotationElement)), v);\r\n                    });\r\n                    return true;\r\n                case \"rhythmmode\":\r\n                    obj.rhythmMode = (JsonHelper.parseEnum(v, exports.TabRhythmMode));\r\n                    return true;\r\n                case \"rhythmheight\":\r\n                    obj.rhythmHeight = v;\r\n                    return true;\r\n                case \"transpositionpitches\":\r\n                    obj.transpositionPitches = v;\r\n                    return true;\r\n                case \"displaytranspositionpitches\":\r\n                    obj.displayTranspositionPitches = v;\r\n                    return true;\r\n                case \"smallgracetabnotes\":\r\n                    obj.smallGraceTabNotes = v;\r\n                    return true;\r\n                case \"extendbendarrowsontiednotes\":\r\n                    obj.extendBendArrowsOnTiedNotes = v;\r\n                    return true;\r\n                case \"extendlineeffectstobeatend\":\r\n                    obj.extendLineEffectsToBeatEnd = v;\r\n                    return true;\r\n                case \"slurheight\":\r\n                    obj.slurHeight = v;\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class ImporterSettingsSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"encoding\", obj.encoding);\r\n            o.set(\"mergePartGroupsInMusicXml\", obj.mergePartGroupsInMusicXml);\r\n            o.set(\"beatTextAsLyrics\", obj.beatTextAsLyrics);\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"encoding\":\r\n                    obj.encoding = v;\r\n                    return true;\r\n                case \"mergepartgroupsinmusicxml\":\r\n                    obj.mergePartGroupsInMusicXml = v;\r\n                    return true;\r\n                case \"beattextaslyrics\":\r\n                    obj.beatTextAsLyrics = v;\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class VibratoPlaybackSettingsSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"noteWideLength\", obj.noteWideLength);\r\n            o.set(\"noteWideAmplitude\", obj.noteWideAmplitude);\r\n            o.set(\"noteSlightLength\", obj.noteSlightLength);\r\n            o.set(\"noteSlightAmplitude\", obj.noteSlightAmplitude);\r\n            o.set(\"beatWideLength\", obj.beatWideLength);\r\n            o.set(\"beatWideAmplitude\", obj.beatWideAmplitude);\r\n            o.set(\"beatSlightLength\", obj.beatSlightLength);\r\n            o.set(\"beatSlightAmplitude\", obj.beatSlightAmplitude);\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"notewidelength\":\r\n                    obj.noteWideLength = v;\r\n                    return true;\r\n                case \"notewideamplitude\":\r\n                    obj.noteWideAmplitude = v;\r\n                    return true;\r\n                case \"noteslightlength\":\r\n                    obj.noteSlightLength = v;\r\n                    return true;\r\n                case \"noteslightamplitude\":\r\n                    obj.noteSlightAmplitude = v;\r\n                    return true;\r\n                case \"beatwidelength\":\r\n                    obj.beatWideLength = v;\r\n                    return true;\r\n                case \"beatwideamplitude\":\r\n                    obj.beatWideAmplitude = v;\r\n                    return true;\r\n                case \"beatslightlength\":\r\n                    obj.beatSlightLength = v;\r\n                    return true;\r\n                case \"beatslightamplitude\":\r\n                    obj.beatSlightAmplitude = v;\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class SlidePlaybackSettingsSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"simpleSlidePitchOffset\", obj.simpleSlidePitchOffset);\r\n            o.set(\"simpleSlideDurationRatio\", obj.simpleSlideDurationRatio);\r\n            o.set(\"shiftSlideDurationRatio\", obj.shiftSlideDurationRatio);\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"simpleslidepitchoffset\":\r\n                    obj.simpleSlidePitchOffset = v;\r\n                    return true;\r\n                case \"simpleslidedurationratio\":\r\n                    obj.simpleSlideDurationRatio = v;\r\n                    return true;\r\n                case \"shiftslidedurationratio\":\r\n                    obj.shiftSlideDurationRatio = v;\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class PlayerSettingsSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"soundFont\", obj.soundFont);\r\n            o.set(\"scrollElement\", obj.scrollElement);\r\n            o.set(\"enablePlayer\", obj.enablePlayer);\r\n            o.set(\"enableCursor\", obj.enableCursor);\r\n            o.set(\"enableUserInteraction\", obj.enableUserInteraction);\r\n            o.set(\"scrollOffsetX\", obj.scrollOffsetX);\r\n            o.set(\"scrollOffsetY\", obj.scrollOffsetY);\r\n            o.set(\"scrollMode\", obj.scrollMode);\r\n            o.set(\"scrollSpeed\", obj.scrollSpeed);\r\n            o.set(\"songBookBendDuration\", obj.songBookBendDuration);\r\n            o.set(\"songBookDipDuration\", obj.songBookDipDuration);\r\n            o.set(\"vibrato\", VibratoPlaybackSettingsSerializer.toJson(obj.vibrato));\r\n            o.set(\"slide\", SlidePlaybackSettingsSerializer.toJson(obj.slide));\r\n            o.set(\"playTripletFeel\", obj.playTripletFeel);\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            switch (property) {\r\n                case \"soundfont\":\r\n                    obj.soundFont = v;\r\n                    return true;\r\n                case \"scrollelement\":\r\n                    obj.scrollElement = v;\r\n                    return true;\r\n                case \"enableplayer\":\r\n                    obj.enablePlayer = v;\r\n                    return true;\r\n                case \"enablecursor\":\r\n                    obj.enableCursor = v;\r\n                    return true;\r\n                case \"enableuserinteraction\":\r\n                    obj.enableUserInteraction = v;\r\n                    return true;\r\n                case \"scrolloffsetx\":\r\n                    obj.scrollOffsetX = v;\r\n                    return true;\r\n                case \"scrolloffsety\":\r\n                    obj.scrollOffsetY = v;\r\n                    return true;\r\n                case \"scrollmode\":\r\n                    obj.scrollMode = (JsonHelper.parseEnum(v, exports.ScrollMode));\r\n                    return true;\r\n                case \"scrollspeed\":\r\n                    obj.scrollSpeed = v;\r\n                    return true;\r\n                case \"songbookbendduration\":\r\n                    obj.songBookBendDuration = v;\r\n                    return true;\r\n                case \"songbookdipduration\":\r\n                    obj.songBookDipDuration = v;\r\n                    return true;\r\n                case \"playtripletfeel\":\r\n                    obj.playTripletFeel = v;\r\n                    return true;\r\n            }\r\n            if ([\"vibrato\"].indexOf(property) >= 0) {\r\n                VibratoPlaybackSettingsSerializer.fromJson(obj.vibrato, v);\r\n                return true;\r\n            }\r\n            else {\r\n                for (const c of [\"vibrato\"]) {\r\n                    if (property.indexOf(c) === 0) {\r\n                        if (VibratoPlaybackSettingsSerializer.setProperty(obj.vibrato, property.substring(c.length), v)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if ([\"slide\"].indexOf(property) >= 0) {\r\n                SlidePlaybackSettingsSerializer.fromJson(obj.slide, v);\r\n                return true;\r\n            }\r\n            else {\r\n                for (const c of [\"slide\"]) {\r\n                    if (property.indexOf(c) === 0) {\r\n                        if (SlidePlaybackSettingsSerializer.setProperty(obj.slide, property.substring(c.length), v)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    class SettingsSerializer {\r\n        static fromJson(obj, m) {\r\n            if (!m) {\r\n                return;\r\n            }\r\n            JsonHelper.forEach(m, (v, k) => this.setProperty(obj, k.toLowerCase(), v));\r\n        }\r\n        static toJson(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n            const o = new Map();\r\n            o.set(\"core\", CoreSettingsSerializer.toJson(obj.core));\r\n            o.set(\"display\", DisplaySettingsSerializer.toJson(obj.display));\r\n            o.set(\"notation\", NotationSettingsSerializer.toJson(obj.notation));\r\n            o.set(\"importer\", ImporterSettingsSerializer.toJson(obj.importer));\r\n            o.set(\"player\", PlayerSettingsSerializer.toJson(obj.player));\r\n            return o;\r\n        }\r\n        static setProperty(obj, property, v) {\r\n            if ([\"core\", \"\"].indexOf(property) >= 0) {\r\n                CoreSettingsSerializer.fromJson(obj.core, v);\r\n                return true;\r\n            }\r\n            else {\r\n                for (const c of [\"core\", \"\"]) {\r\n                    if (property.indexOf(c) === 0) {\r\n                        if (CoreSettingsSerializer.setProperty(obj.core, property.substring(c.length), v)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if ([\"display\", \"\"].indexOf(property) >= 0) {\r\n                DisplaySettingsSerializer.fromJson(obj.display, v);\r\n                return true;\r\n            }\r\n            else {\r\n                for (const c of [\"display\", \"\"]) {\r\n                    if (property.indexOf(c) === 0) {\r\n                        if (DisplaySettingsSerializer.setProperty(obj.display, property.substring(c.length), v)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if ([\"notation\"].indexOf(property) >= 0) {\r\n                NotationSettingsSerializer.fromJson(obj.notation, v);\r\n                return true;\r\n            }\r\n            else {\r\n                for (const c of [\"notation\"]) {\r\n                    if (property.indexOf(c) === 0) {\r\n                        if (NotationSettingsSerializer.setProperty(obj.notation, property.substring(c.length), v)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if ([\"importer\"].indexOf(property) >= 0) {\r\n                ImporterSettingsSerializer.fromJson(obj.importer, v);\r\n                return true;\r\n            }\r\n            else {\r\n                for (const c of [\"importer\"]) {\r\n                    if (property.indexOf(c) === 0) {\r\n                        if (ImporterSettingsSerializer.setProperty(obj.importer, property.substring(c.length), v)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if ([\"player\"].indexOf(property) >= 0) {\r\n                PlayerSettingsSerializer.fromJson(obj.player, v);\r\n                return true;\r\n            }\r\n            else {\r\n                for (const c of [\"player\"]) {\r\n                    if (property.indexOf(c) === 0) {\r\n                        if (PlayerSettingsSerializer.setProperty(obj.player, property.substring(c.length), v)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\n\n    /**\r\n     * This class can convert a full {@link Score} instance to a simple JavaScript object and back for further\r\n     * JSON serialization.\r\n     */\r\n    class JsonConverter {\r\n        /**\r\n         * @target web\r\n         */\r\n        static jsonReplacer(_, v) {\r\n            if (v instanceof Map) {\r\n                if ('fromEntries' in Object) {\r\n                    return Object.fromEntries(v);\r\n                }\r\n                else {\r\n                    const o = {};\r\n                    for (const [k, mv] of v) {\r\n                        o[k] = mv;\r\n                    }\r\n                    return o;\r\n                }\r\n            }\r\n            else if (ArrayBuffer.isView(v)) {\r\n                return Array.apply([], [v]);\r\n            }\r\n            return v;\r\n        }\r\n        /**\r\n         * Converts the given score into a JSON encoded string.\r\n         * @param score The score to serialize.\r\n         * @returns A JSON encoded string.\r\n         * @target web\r\n         */\r\n        static scoreToJson(score) {\r\n            let obj = JsonConverter.scoreToJsObject(score);\r\n            return JSON.stringify(obj, JsonConverter.jsonReplacer);\r\n        }\r\n        /**\r\n         * Converts the given JSON string back to a {@link Score} object.\r\n         * @param json The JSON string\r\n         * @param settings The settings to use during conversion.\r\n         * @returns The converted score object.\r\n         * @target web\r\n         */\r\n        static jsonToScore(json, settings) {\r\n            return JsonConverter.jsObjectToScore(JSON.parse(json), settings);\r\n        }\r\n        /**\r\n         * Converts the score into a JavaScript object without circular dependencies.\r\n         * @param score The score object to serialize\r\n         * @returns A serialized score object without ciruclar dependencies that can be used for further serializations.\r\n         */\r\n        static scoreToJsObject(score) {\r\n            return ScoreSerializer.toJson(score);\r\n        }\r\n        /**\r\n         * Converts the given JavaScript object into a score object.\r\n         * @param jsObject The javascript object created via {@link Score}\r\n         * @param settings The settings to use during conversion.\r\n         * @returns The converted score object.\r\n         */\r\n        static jsObjectToScore(jsObject, settings) {\r\n            let score = new Score();\r\n            ScoreSerializer.fromJson(score, jsObject);\r\n            score.finish(settings !== null && settings !== void 0 ? settings : new Settings());\r\n            return score;\r\n        }\r\n        /**\r\n         * Converts the given settings into a JSON encoded string.\r\n         * @param settings The settings to serialize.\r\n         * @returns A JSON encoded string.\r\n         * @target web\r\n         */\r\n        static settingsToJson(settings) {\r\n            let obj = JsonConverter.settingsToJsObject(settings);\r\n            return JSON.stringify(obj, JsonConverter.jsonReplacer);\r\n        }\r\n        /**\r\n         * Converts the given JSON string back to a {@link Score} object.\r\n         * @param json The JSON string\r\n         * @returns The converted settings object.\r\n         * @target web\r\n         */\r\n        static jsonToSettings(json) {\r\n            return JsonConverter.jsObjectToSettings(JSON.parse(json));\r\n        }\r\n        /**\r\n         * Converts the settings object into a JavaScript object for transmission between components or saving purposes.\r\n         * @param settings The settings object to serialize\r\n         * @returns A serialized settings object without ciruclar dependencies that can be used for further serializations.\r\n         */\r\n        static settingsToJsObject(settings) {\r\n            return SettingsSerializer.toJson(settings);\r\n        }\r\n        /**\r\n        * Converts the given JavaScript object into a settings object.\r\n        * @param jsObject The javascript object created via {@link Settings}\r\n        * @returns The converted Settings object.\r\n        */\r\n        static jsObjectToSettings(jsObject) {\r\n            let settings = new Settings();\r\n            SettingsSerializer.fromJson(settings, jsObject);\r\n            return settings;\r\n        }\r\n        /**\r\n         * @target web\r\n         */\r\n        static jsObjectToMidiFile(midi) {\r\n            let midi2 = new MidiFile();\r\n            midi2.division = midi.division;\r\n            let midiEvents = midi.events;\r\n            for (let midiEvent of midiEvents) {\r\n                let midiEvent2 = JsonConverter.jsObjectToMidiEvent(midiEvent);\r\n                midi2.events.push(midiEvent2);\r\n            }\r\n            return midi2;\r\n        }\r\n        /**\r\n         * @target web\r\n         */\r\n        static jsObjectToMidiEvent(midiEvent) {\r\n            let track = midiEvent.track;\r\n            let tick = midiEvent.tick;\r\n            let message = midiEvent.message;\r\n            let midiEvent2;\r\n            switch (midiEvent.type) {\r\n                case 'SystemExclusiveEvent':\r\n                    midiEvent2 = new SystemExclusiveEvent(track, tick, 0, 0, midiEvent.data);\r\n                    midiEvent2.message = message;\r\n                    break;\r\n                case 'MetaDataEvent':\r\n                    midiEvent2 = new MetaDataEvent(track, tick, 0, 0, midiEvent.data);\r\n                    midiEvent2.message = message;\r\n                    break;\r\n                case 'MetaNumberEvent':\r\n                    midiEvent2 = new MetaNumberEvent(track, tick, 0, 0, midiEvent.value);\r\n                    midiEvent2.message = message;\r\n                    break;\r\n                case 'Midi20PerNotePitchBendEvent':\r\n                    midiEvent2 = new Midi20PerNotePitchBendEvent(track, tick, 0, midiEvent.noteKey, midiEvent.pitch);\r\n                    midiEvent2.message = message;\r\n                    break;\r\n                default:\r\n                    midiEvent2 = new MidiEvent(track, tick, 0, 0, 0);\r\n                    midiEvent2.message = message;\r\n                    break;\r\n            }\r\n            return midiEvent2;\r\n        }\r\n        /**\r\n         * @target web\r\n         */\r\n        static midiFileToJsObject(midi) {\r\n            let midi2 = {};\r\n            midi2.division = midi.division;\r\n            let midiEvents = [];\r\n            midi2.events = midiEvents;\r\n            for (let midiEvent of midi.events) {\r\n                midiEvents.push(JsonConverter.midiEventToJsObject(midiEvent));\r\n            }\r\n            return midi2;\r\n        }\r\n        /**\r\n         * @target web\r\n         */\r\n        static midiEventToJsObject(midiEvent) {\r\n            let midiEvent2 = {};\r\n            midiEvent2.track = midiEvent.track;\r\n            midiEvent2.tick = midiEvent.tick;\r\n            midiEvent2.message = midiEvent.message;\r\n            if (midiEvent instanceof SystemExclusiveEvent) {\r\n                midiEvent2.type = 'SystemExclusiveEvent';\r\n                midiEvent2.data = midiEvent.data;\r\n            }\r\n            else if (midiEvent instanceof MetaDataEvent) {\r\n                midiEvent2.type = 'MetaDataEvent';\r\n                midiEvent2.data = midiEvent.data;\r\n            }\r\n            else if (midiEvent instanceof MetaNumberEvent) {\r\n                midiEvent2.type = 'MetaNumberEvent';\r\n                midiEvent2.value = midiEvent.value;\r\n            }\r\n            else if (midiEvent instanceof Midi20PerNotePitchBendEvent) {\r\n                midiEvent2.type = 'Midi20PerNotePitchBendEvent';\r\n                midiEvent2.noteKey = midiEvent.noteKey;\r\n                midiEvent2.pitch = midiEvent.pitch;\r\n            }\r\n            return midiEvent2;\r\n        }\r\n    }\n\n    /**\r\n     * @target web\r\n     */\r\n    class AlphaSynthWorkerSynthOutput {\r\n        constructor() {\r\n            this.ready = new EventEmitter();\r\n            this.samplesPlayed = new EventEmitterOfT();\r\n            this.sampleRequest = new EventEmitter();\r\n        }\r\n        get sampleRate() {\r\n            return AlphaSynthWorkerSynthOutput.preferredSampleRate;\r\n        }\r\n        open() {\r\n            Logger.debug('AlphaSynth', 'Initializing webworker worker');\r\n            this._worker = Environment.globalThis;\r\n            this._worker.addEventListener('message', this.handleMessage.bind(this));\r\n            this.ready.trigger();\r\n        }\r\n        handleMessage(e) {\r\n            let data = e.data;\r\n            let cmd = data.cmd;\r\n            switch (cmd) {\r\n                case AlphaSynthWorkerSynthOutput.CmdOutputSampleRequest:\r\n                    this.sampleRequest.trigger();\r\n                    break;\r\n                case AlphaSynthWorkerSynthOutput.CmdOutputSamplesPlayed:\r\n                    this.samplesPlayed.trigger(data.samples);\r\n                    break;\r\n            }\r\n        }\r\n        addSamples(samples) {\r\n            this._worker.postMessage({\r\n                cmd: 'alphaSynth.output.addSamples',\r\n                samples: samples\r\n            });\r\n        }\r\n        play() {\r\n            this._worker.postMessage({\r\n                cmd: 'alphaSynth.output.play'\r\n            });\r\n        }\r\n        pause() {\r\n            this._worker.postMessage({\r\n                cmd: 'alphaSynth.output.pause'\r\n            });\r\n        }\r\n        resetSamples() {\r\n            this._worker.postMessage({\r\n                cmd: 'alphaSynth.output.resetSamples'\r\n            });\r\n        }\r\n        activate() {\r\n            // nothing to do\r\n        }\r\n    }\r\n    AlphaSynthWorkerSynthOutput.CmdOutputPrefix = 'alphaSynth.output.';\r\n    AlphaSynthWorkerSynthOutput.CmdOutputAddSamples = AlphaSynthWorkerSynthOutput.CmdOutputPrefix + 'addSamples';\r\n    AlphaSynthWorkerSynthOutput.CmdOutputPlay = AlphaSynthWorkerSynthOutput.CmdOutputPrefix + 'play';\r\n    AlphaSynthWorkerSynthOutput.CmdOutputPause = AlphaSynthWorkerSynthOutput.CmdOutputPrefix + 'pause';\r\n    AlphaSynthWorkerSynthOutput.CmdOutputResetSamples = AlphaSynthWorkerSynthOutput.CmdOutputPrefix + 'resetSamples';\r\n    AlphaSynthWorkerSynthOutput.CmdOutputSampleRequest = AlphaSynthWorkerSynthOutput.CmdOutputPrefix + 'sampleRequest';\r\n    AlphaSynthWorkerSynthOutput.CmdOutputSamplesPlayed = AlphaSynthWorkerSynthOutput.CmdOutputPrefix + 'samplesPlayed';\r\n    // this value is initialized by the alphaSynth WebWorker wrapper\r\n    // that also includes the alphaSynth library into the worker.\r\n    AlphaSynthWorkerSynthOutput.preferredSampleRate = 0;\n\n    /**\r\n     * This class implements a HTML5 WebWorker based version of alphaSynth\r\n     * which can be controlled via WebWorker messages.\r\n     * @target web\r\n     */\r\n    class AlphaSynthWebWorker {\r\n        constructor(main) {\r\n            this._main = main;\r\n            this._main.addEventListener('message', this.handleMessage.bind(this));\r\n            this._player = new AlphaSynth(new AlphaSynthWorkerSynthOutput());\r\n            this._player.positionChanged.on(this.onPositionChanged.bind(this));\r\n            this._player.stateChanged.on(this.onPlayerStateChanged.bind(this));\r\n            this._player.finished.on(this.onFinished.bind(this));\r\n            this._player.soundFontLoaded.on(this.onSoundFontLoaded.bind(this));\r\n            this._player.soundFontLoadFailed.on(this.onSoundFontLoadFailed.bind(this));\r\n            this._player.soundFontLoadFailed.on(this.onSoundFontLoadFailed.bind(this));\r\n            this._player.midiLoaded.on(this.onMidiLoaded.bind(this));\r\n            this._player.midiLoadFailed.on(this.onMidiLoadFailed.bind(this));\r\n            this._player.readyForPlayback.on(this.onReadyForPlayback.bind(this));\r\n            this._player.midiEventsPlayed.on(this.onMidiEventsPlayed.bind(this));\r\n            this._main.postMessage({\r\n                cmd: 'alphaSynth.ready'\r\n            });\r\n        }\r\n        static init() {\r\n            let main = Environment.globalThis;\r\n            main.addEventListener('message', e => {\r\n                let data = e.data;\r\n                let cmd = data.cmd;\r\n                switch (cmd) {\r\n                    case 'alphaSynth.initialize':\r\n                        AlphaSynthWorkerSynthOutput.preferredSampleRate = data.sampleRate;\r\n                        Logger.logLevel = data.logLevel;\r\n                        Environment.globalThis.alphaSynthWebWorker = new AlphaSynthWebWorker(main);\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n        handleMessage(e) {\r\n            let data = e.data;\r\n            let cmd = data.cmd;\r\n            switch (cmd) {\r\n                case 'alphaSynth.setLogLevel':\r\n                    Logger.logLevel = data.value;\r\n                    break;\r\n                case 'alphaSynth.setMasterVolume':\r\n                    this._player.masterVolume = data.value;\r\n                    break;\r\n                case 'alphaSynth.setMetronomeVolume':\r\n                    this._player.metronomeVolume = data.value;\r\n                    break;\r\n                case 'alphaSynth.setPlaybackSpeed':\r\n                    this._player.playbackSpeed = data.value;\r\n                    break;\r\n                case 'alphaSynth.setTickPosition':\r\n                    this._player.tickPosition = data.value;\r\n                    break;\r\n                case 'alphaSynth.setTimePosition':\r\n                    this._player.timePosition = data.value;\r\n                    break;\r\n                case 'alphaSynth.setPlaybackRange':\r\n                    this._player.playbackRange = data.value;\r\n                    break;\r\n                case 'alphaSynth.setIsLooping':\r\n                    this._player.isLooping = data.value;\r\n                    break;\r\n                case 'alphaSynth.setCountInVolume':\r\n                    this._player.countInVolume = data.value;\r\n                    break;\r\n                case 'alphaSynth.setMidiEventsPlayedFilter':\r\n                    this._player.midiEventsPlayedFilter = data.value;\r\n                    break;\r\n                case 'alphaSynth.play':\r\n                    this._player.play();\r\n                    break;\r\n                case 'alphaSynth.pause':\r\n                    this._player.pause();\r\n                    break;\r\n                case 'alphaSynth.playPause':\r\n                    this._player.playPause();\r\n                    break;\r\n                case 'alphaSynth.stop':\r\n                    this._player.stop();\r\n                    break;\r\n                case 'alphaSynth.playOneTimeMidiFile':\r\n                    this._player.playOneTimeMidiFile(JsonConverter.jsObjectToMidiFile(data.midi));\r\n                    break;\r\n                case 'alphaSynth.loadSoundFontBytes':\r\n                    this._player.loadSoundFont(data.data, data.append);\r\n                    break;\r\n                case 'alphaSynth.resetSoundFonts':\r\n                    this._player.resetSoundFonts();\r\n                    break;\r\n                case 'alphaSynth.loadMidi':\r\n                    this._player.loadMidiFile(JsonConverter.jsObjectToMidiFile(data.midi));\r\n                    break;\r\n                case 'alphaSynth.setChannelMute':\r\n                    this._player.setChannelMute(data.channel, data.mute);\r\n                    break;\r\n                case 'alphaSynth.setChannelSolo':\r\n                    this._player.setChannelSolo(data.channel, data.solo);\r\n                    break;\r\n                case 'alphaSynth.setChannelVolume':\r\n                    this._player.setChannelVolume(data.channel, data.volume);\r\n                    break;\r\n                case 'alphaSynth.resetChannelStates':\r\n                    this._player.resetChannelStates();\r\n                    break;\r\n            }\r\n        }\r\n        onPositionChanged(e) {\r\n            this._main.postMessage({\r\n                cmd: 'alphaSynth.positionChanged',\r\n                currentTime: e.currentTime,\r\n                endTime: e.endTime,\r\n                currentTick: e.currentTick,\r\n                endTick: e.endTick,\r\n                isSeek: e.isSeek\r\n            });\r\n        }\r\n        onPlayerStateChanged(e) {\r\n            this._main.postMessage({\r\n                cmd: 'alphaSynth.playerStateChanged',\r\n                state: e.state,\r\n                stopped: e.stopped\r\n            });\r\n        }\r\n        onFinished() {\r\n            this._main.postMessage({\r\n                cmd: 'alphaSynth.finished'\r\n            });\r\n        }\r\n        onSoundFontLoaded() {\r\n            this._main.postMessage({\r\n                cmd: 'alphaSynth.soundFontLoaded'\r\n            });\r\n        }\r\n        onSoundFontLoadFailed(e) {\r\n            this._main.postMessage({\r\n                cmd: 'alphaSynth.soundFontLoadFailed',\r\n                error: this.serializeException(e)\r\n            });\r\n        }\r\n        serializeException(e) {\r\n            let error = JSON.parse(JSON.stringify(e));\r\n            if (e.message) {\r\n                error.message = e.message;\r\n            }\r\n            if (e.stack) {\r\n                error.stack = e.stack;\r\n            }\r\n            if (e.constructor && e.constructor.name) {\r\n                error.type = e.constructor.name;\r\n            }\r\n            return error;\r\n        }\r\n        onMidiLoaded(e) {\r\n            this._main.postMessage({\r\n                cmd: 'alphaSynth.midiLoaded',\r\n                currentTime: e.currentTime,\r\n                endTime: e.endTime,\r\n                currentTick: e.currentTick,\r\n                endTick: e.endTick,\r\n                isSeek: e.isSeek\r\n            });\r\n        }\r\n        onMidiLoadFailed(e) {\r\n            this._main.postMessage({\r\n                cmd: 'alphaSynth.midiLoaded',\r\n                error: this.serializeException(e)\r\n            });\r\n        }\r\n        onReadyForPlayback() {\r\n            this._main.postMessage({\r\n                cmd: 'alphaSynth.readyForPlayback'\r\n            });\r\n        }\r\n        onMidiEventsPlayed(args) {\r\n            this._main.postMessage({\r\n                cmd: 'alphaSynth.midiEventsPlayed',\r\n                events: args.events.map(JsonConverter.midiEventToJsObject)\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * This public class stores text widths for several fonts and allows width calculation\r\n     * @partial\r\n     */\r\n    class FontSizes {\r\n        /**\r\n         * @target web\r\n         */\r\n        static generateFontLookup(family) {\r\n            if (FontSizes.FontSizeLookupTables.has(family)) {\r\n                return;\r\n            }\r\n            if (!Environment.isRunningInWorker) {\r\n                let canvas = document.createElement('canvas');\r\n                let measureContext = canvas.getContext('2d');\r\n                measureContext.font = `11px ${family}`;\r\n                let sizes = [];\r\n                for (let i = 0x20; i < 255; i++) {\r\n                    let s = String.fromCharCode(i);\r\n                    sizes.push(measureContext.measureText(s).width);\r\n                }\r\n                let data = new Uint8Array(sizes);\r\n                FontSizes.FontSizeLookupTables.set(family, data);\r\n            }\r\n            else {\r\n                FontSizes.FontSizeLookupTables.set(family, new Uint8Array([8]));\r\n            }\r\n        }\r\n        static measureString(s, family, size, style) {\r\n            let data;\r\n            let dataSize = 11;\r\n            if (!FontSizes.FontSizeLookupTables.has(family)) {\r\n                FontSizes.generateFontLookup(family);\r\n            }\r\n            data = FontSizes.FontSizeLookupTables.get(family);\r\n            let factor = 1;\r\n            if ((style & FontStyle.Italic) !== 0) {\r\n                factor *= 1.2;\r\n            }\r\n            if ((style & FontStyle.Bold) !== 0) {\r\n                factor *= 1.2;\r\n            }\r\n            let stringSize = 0;\r\n            for (let i = 0; i < s.length; i++) {\r\n                let code = Math.min(data.length - 1, s.charCodeAt(i) - 32);\r\n                if (code >= 0) {\r\n                    stringSize += (data[code] * size) / dataSize;\r\n                }\r\n            }\r\n            return stringSize * factor;\r\n        }\r\n    }\r\n    // prettier-ignore\r\n    FontSizes.Georgia = new Uint8Array([\r\n        3, 4, 5, 7, 7, 9, 8, 2, 4, 4, 5, 7, 3, 4, 3, 5, 7, 5, 6, 6, 6, 6, 6, 6, 7, 6, 3, 3, 7,\r\n        7, 7, 5, 10, 7, 7, 7, 8, 7, 7, 8, 9, 4, 6, 8, 7, 10, 8, 8, 7, 8, 8, 6, 7, 8, 7, 11, 8,\r\n        7, 7, 4, 5, 4, 7, 7, 6, 6, 6, 5, 6, 5, 4, 6, 6, 3, 3, 6, 3, 10, 6, 6, 6, 6, 5, 5, 4, 6,\r\n        5, 8, 6, 5, 5, 5, 4, 5, 7, 6, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\r\n        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 4, 6, 7, 6, 7, 4, 6, 6, 10, 6, 6, 7, 0, 10, 7,\r\n        5, 7, 6, 6, 6, 6, 6, 3, 6, 6, 6, 6, 12, 12, 12, 5, 7, 7, 7, 7, 7, 7, 11, 7, 7, 7, 7, 7,\r\n        4, 4, 4, 4, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 7, 7, 6, 6, 6, 6, 6, 6, 6, 8, 5, 5,\r\n        5, 5, 5, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 6, 5, 6\r\n    ]);\r\n    // prettier-ignore\r\n    FontSizes.Arial = new Uint8Array([\r\n        3, 3, 4, 6, 6, 10, 7, 2, 4, 4, 4, 6, 3, 4, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 6,\r\n        6, 6, 6, 11, 7, 7, 8, 8, 7, 7, 9, 8, 3, 6, 7, 6, 9, 8, 9, 7, 9, 8, 7, 7, 8, 7, 10, 7, 7,\r\n        7, 3, 3, 3, 5, 6, 4, 6, 6, 6, 6, 6, 3, 6, 6, 2, 2, 6, 2, 9, 6, 6, 6, 6, 4, 6, 3, 6, 6,\r\n        8, 6, 6, 6, 4, 3, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 4, 6, 6, 6, 6, 3, 6, 4, 8, 4, 6, 6, 0, 8, 6, 4,\r\n        6, 4, 4, 4, 6, 6, 4, 4, 4, 4, 6, 9, 9, 9, 7, 7, 7, 7, 7, 7, 7, 11, 8, 7, 7, 7, 7, 3, 3,\r\n        3, 3, 8, 8, 9, 9, 9, 9, 9, 6, 9, 8, 8, 8, 8, 7, 7, 7, 6, 6, 6, 6, 6, 6, 10, 6, 6, 6, 6,\r\n        6, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 6, 6\r\n    ]);\r\n    FontSizes.FontSizeLookupTables = new Map([\r\n        ['Arial', FontSizes.Arial],\r\n        [\"'Arial'\", FontSizes.Arial],\r\n        ['\"Arial\"', FontSizes.Arial],\r\n        ['Georgia', FontSizes.Georgia],\r\n        [\"'Georgia'\", FontSizes.Georgia],\r\n        ['\"Georgia\"', FontSizes.Georgia]\r\n    ]);\r\n    FontSizes.ControlChars = 0x20;\n\n    /**\r\n     * This eventargs define the details about the rendering and layouting process and are\r\n     * provided whenever a part of of the music sheet is rendered.\r\n     */\r\n    class RenderFinishedEventArgs {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the width of the current rendering result.\r\n             */\r\n            this.width = 0;\r\n            /**\r\n             * Gets or sets the height of the current rendering result.\r\n             */\r\n            this.height = 0;\r\n            /**\r\n             * Gets or sets the currently known total width of the final music sheet.\r\n             */\r\n            this.totalWidth = 0;\r\n            /**\r\n             * Gets or sets the currently known total height of the final music sheet.\r\n             */\r\n            this.totalHeight = 0;\r\n            /**\r\n             * Gets or sets the index of the first masterbar that was rendered in this result.\r\n             */\r\n            this.firstMasterBarIndex = 0;\r\n            /**\r\n             * Gets or sets the index of the last masterbar that was rendered in this result.\r\n             */\r\n            this.lastMasterBarIndex = 0;\r\n            /**\r\n             * Gets or sets the render engine specific result object which contains the rendered music sheet.\r\n             */\r\n            this.renderResult = null;\r\n        }\r\n    }\n\n    /**\r\n     * Represents the boundaries of a single bar.\r\n     */\r\n    class BarBounds {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets a list of the beats contained in this lookup.\r\n             */\r\n            this.beats = [];\r\n        }\r\n        /**\r\n         * Adds a new beat to this lookup.\r\n         * @param bounds The beat bounds to add.\r\n         */\r\n        addBeat(bounds) {\r\n            bounds.barBounds = this;\r\n            this.beats.push(bounds);\r\n            this.masterBarBounds.addBeat(bounds);\r\n        }\r\n        /**\r\n         * Tries to find the beat at the given X-position.\r\n         * @param x The X-position of the beat to find.\r\n         * @returns The beat at the given X-position or null if none was found.\r\n         */\r\n        findBeatAtPos(x) {\r\n            let beat = null;\r\n            for (let t of this.beats) {\r\n                if (!beat || t.realBounds.x < x) {\r\n                    beat = t;\r\n                }\r\n                else if (t.realBounds.x > x) {\r\n                    break;\r\n                }\r\n            }\r\n            return beat;\r\n        }\r\n    }\n\n    /**\r\n     * Represents the bounds of a single beat.\r\n     */\r\n    class BeatBounds {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the individual note positions of this beat (if {@link CoreSettings.includeNoteBounds} was set to true).\r\n             */\r\n            this.notes = null;\r\n        }\r\n        /**\r\n         * Adds a new note to this bounds.\r\n         * @param bounds The note bounds to add.\r\n         */\r\n        addNote(bounds) {\r\n            if (!this.notes) {\r\n                this.notes = [];\r\n            }\r\n            bounds.beatBounds = this;\r\n            this.notes.push(bounds);\r\n        }\r\n        /**\r\n         * Tries to find a note at the given position.\r\n         * @param x The X-position of the note to find.\r\n         * @param y The Y-position of the note to find.\r\n         * @returns The note at the given position or null if no note was found, or the note lookup was not enabled before rendering.\r\n         */\r\n        findNoteAtPos(x, y) {\r\n            if (!this.notes) {\r\n                return null;\r\n            }\r\n            // TODO: can be likely optimized\r\n            // a beat is mostly vertically aligned, we could sort the note bounds by Y\r\n            // and then do a binary search on the Y-axis.\r\n            for (let note of this.notes) {\r\n                let bottom = note.noteHeadBounds.y + note.noteHeadBounds.h;\r\n                let right = note.noteHeadBounds.x + note.noteHeadBounds.w;\r\n                if (note.noteHeadBounds.x >= x && note.noteHeadBounds.y >= y && x <= right && y <= bottom) {\r\n                    return note.note;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    }\n\n    /**\r\n     * Represents the boundaries of a list of bars related to a single master bar.\r\n     */\r\n    class MasterBarBounds {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the index of this bounds relative within the parent lookup.\r\n             */\r\n            this.index = 0;\r\n            /**\r\n             * Gets or sets a value indicating whether this bounds are the first of the line.\r\n             */\r\n            this.isFirstOfLine = false;\r\n            /**\r\n             * Gets or sets the list of individual bars within this lookup.\r\n             */\r\n            this.bars = [];\r\n        }\r\n        /**\r\n         * Adds a new bar to this lookup.\r\n         * @param bounds The bar bounds to add to this lookup.\r\n         */\r\n        addBar(bounds) {\r\n            bounds.masterBarBounds = this;\r\n            this.bars.push(bounds);\r\n        }\r\n        /**\r\n         * Tries to find a beat at the given location.\r\n         * @param x The absolute X position where the beat spans across.\r\n         * @param y The absolute Y position where the beat spans across.\r\n         * @returns The beat that spans across the given point, or null if none of the contained bars had a beat at this position.\r\n         */\r\n        findBeatAtPos(x, y) {\r\n            let beat = null;\r\n            for (let bar of this.bars) {\r\n                let b = bar.findBeatAtPos(x);\r\n                if (b && (!beat || beat.realBounds.x < b.realBounds.x)) {\r\n                    beat = b;\r\n                }\r\n            }\r\n            return !beat ? null : beat.beat;\r\n        }\r\n        /**\r\n         * Finishes the lookup object and optimizes itself for fast access.\r\n         */\r\n        finish() {\r\n            this.bars.sort((a, b) => {\r\n                if (a.realBounds.y < b.realBounds.y) {\r\n                    return -1;\r\n                }\r\n                if (a.realBounds.y > b.realBounds.y) {\r\n                    return 1;\r\n                }\r\n                if (a.realBounds.x < b.realBounds.x) {\r\n                    return -1;\r\n                }\r\n                if (a.realBounds.x > b.realBounds.x) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n        /**\r\n         * Adds a new beat to the lookup.\r\n         * @param bounds The beat bounds to add.\r\n         */\r\n        addBeat(bounds) {\r\n            this.staveGroupBounds.boundsLookup.addBeat(bounds);\r\n        }\r\n    }\n\n    /**\r\n     * Represents the bounds of a single note\r\n     */\r\n    class NoteBounds {\r\n    }\n\n    /**\r\n     * Represents the bounds of a stave group.\r\n     */\r\n    class StaveGroupBounds {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the index of the bounds within the parent lookup.\r\n             * This allows fast access of the next/previous groups.\r\n             */\r\n            this.index = 0;\r\n            /**\r\n             * Gets or sets the list of master bar bounds related to this stave group.\r\n             */\r\n            this.bars = [];\r\n        }\r\n        /**\r\n         * Finished the lookup for optimized access.\r\n         */\r\n        finish() {\r\n            for (let t of this.bars) {\r\n                t.finish();\r\n            }\r\n        }\r\n        /**\r\n         * Adds a new master bar to this lookup.\r\n         * @param bounds The master bar bounds to add.\r\n         */\r\n        addBar(bounds) {\r\n            this.boundsLookup.addMasterBar(bounds);\r\n            bounds.staveGroupBounds = this;\r\n            this.bars.push(bounds);\r\n        }\r\n        /**\r\n         * Tries to find the master bar bounds that are located at the given X-position.\r\n         * @param x The X-position to find a master bar.\r\n         * @returns The master bounds at the given X-position.\r\n         */\r\n        findBarAtPos(x) {\r\n            let b = null;\r\n            // move from left to right as long we find bars that start before the clicked position\r\n            for (let bar of this.bars) {\r\n                if (!b || bar.realBounds.x < x) {\r\n                    b = bar;\r\n                }\r\n                else if (x > bar.realBounds.x + bar.realBounds.w) {\r\n                    break;\r\n                }\r\n            }\r\n            return b;\r\n        }\r\n    }\n\n    class BoundsLookup {\r\n        constructor() {\r\n            this._beatLookup = new Map();\r\n            this._masterBarLookup = new Map();\r\n            this._currentStaveGroup = null;\r\n            /**\r\n             * Gets a list of all individual stave groups contained in the rendered music notation.\r\n             */\r\n            this.staveGroups = [];\r\n            /**\r\n             * Gets or sets a value indicating whether this lookup was finished already.\r\n             */\r\n            this.isFinished = false;\r\n        }\r\n        /**\r\n         * @target web\r\n         */\r\n        toJson() {\r\n            let json = {};\r\n            let staveGroups = [];\r\n            json.staveGroups = staveGroups;\r\n            for (let group of this.staveGroups) {\r\n                let g = {};\r\n                g.visualBounds = this.boundsToJson(group.visualBounds);\r\n                g.realBounds = this.boundsToJson(group.realBounds);\r\n                g.bars = [];\r\n                for (let masterBar of group.bars) {\r\n                    let mb = {};\r\n                    mb.lineAlignedBounds = this.boundsToJson(masterBar.lineAlignedBounds);\r\n                    mb.visualBounds = this.boundsToJson(masterBar.visualBounds);\r\n                    mb.realBounds = this.boundsToJson(masterBar.realBounds);\r\n                    mb.index = masterBar.index;\r\n                    mb.bars = [];\r\n                    for (let bar of masterBar.bars) {\r\n                        let b = {};\r\n                        b.visualBounds = this.boundsToJson(bar.visualBounds);\r\n                        b.realBounds = this.boundsToJson(bar.realBounds);\r\n                        b.beats = [];\r\n                        for (let beat of bar.beats) {\r\n                            let bb = {};\r\n                            bb.visualBounds = this.boundsToJson(beat.visualBounds);\r\n                            bb.realBounds = this.boundsToJson(beat.realBounds);\r\n                            let bbd = bb;\r\n                            bbd.beatIndex = beat.beat.index;\r\n                            bbd.voiceIndex = beat.beat.voice.index;\r\n                            bbd.barIndex = beat.beat.voice.bar.index;\r\n                            bbd.staffIndex = beat.beat.voice.bar.staff.index;\r\n                            bbd.trackIndex = beat.beat.voice.bar.staff.track.index;\r\n                            if (beat.notes) {\r\n                                let notes = (bb.notes = []);\r\n                                for (let note of beat.notes) {\r\n                                    let n = {};\r\n                                    let nd = n;\r\n                                    nd.index = note.note.index;\r\n                                    n.noteHeadBounds = this.boundsToJson(note.noteHeadBounds);\r\n                                    notes.push(n);\r\n                                }\r\n                            }\r\n                            b.beats.push(bb);\r\n                        }\r\n                        mb.bars.push(b);\r\n                    }\r\n                    g.bars.push(mb);\r\n                }\r\n                staveGroups.push(g);\r\n            }\r\n            return json;\r\n        }\r\n        /**\r\n         * @target web\r\n         */\r\n        static fromJson(json, score) {\r\n            let lookup = new BoundsLookup();\r\n            let staveGroups = json['staveGroups'];\r\n            for (let staveGroup of staveGroups) {\r\n                let sg = new StaveGroupBounds();\r\n                sg.visualBounds = staveGroup.visualBounds;\r\n                sg.realBounds = staveGroup.realBounds;\r\n                lookup.addStaveGroup(sg);\r\n                for (let masterBar of staveGroup.bars) {\r\n                    let mb = new MasterBarBounds();\r\n                    mb.index = masterBar.index;\r\n                    mb.isFirstOfLine = masterBar.isFirstOfLine;\r\n                    mb.lineAlignedBounds = masterBar.lineAlignedBounds;\r\n                    mb.visualBounds = masterBar.visualBounds;\r\n                    mb.realBounds = masterBar.realBounds;\r\n                    sg.addBar(mb);\r\n                    for (let bar of masterBar.bars) {\r\n                        let b = new BarBounds();\r\n                        b.visualBounds = bar.visualBounds;\r\n                        b.realBounds = bar.realBounds;\r\n                        mb.addBar(b);\r\n                        for (let beat of bar.beats) {\r\n                            let bb = new BeatBounds();\r\n                            bb.visualBounds = beat.visualBounds;\r\n                            bb.realBounds = beat.realBounds;\r\n                            let bd = beat;\r\n                            bb.beat =\r\n                                score.tracks[bd.trackIndex].staves[bd.staffIndex].bars[bd.barIndex].voices[bd.voiceIndex].beats[bd.beatIndex];\r\n                            if (beat.notes) {\r\n                                bb.notes = [];\r\n                                for (let note of beat.notes) {\r\n                                    let n = new NoteBounds();\r\n                                    let nd = note;\r\n                                    n.note = bb.beat.notes[nd.index];\r\n                                    n.noteHeadBounds = note.noteHeadBounds;\r\n                                    bb.addNote(n);\r\n                                }\r\n                            }\r\n                            b.addBeat(bb);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return lookup;\r\n        }\r\n        /**\r\n         * @target web\r\n         */\r\n        boundsToJson(bounds) {\r\n            let json = {};\r\n            json.x = bounds.x;\r\n            json.y = bounds.y;\r\n            json.w = bounds.w;\r\n            json.h = bounds.h;\r\n            return json;\r\n        }\r\n        /**\r\n         * Finishes the lookup for optimized access.\r\n         */\r\n        finish() {\r\n            for (let t of this.staveGroups) {\r\n                t.finish();\r\n            }\r\n            this.isFinished = true;\r\n        }\r\n        /**\r\n         * Adds a new note to the lookup.\r\n         * @param bounds The note bounds to add.\r\n         */\r\n        addNote(bounds) {\r\n            let beat = this.findBeat(bounds.note.beat);\r\n            beat.addNote(bounds);\r\n        }\r\n        /**\r\n         * Adds a new stave group to the lookup.\r\n         * @param bounds The stave group bounds to add.\r\n         */\r\n        addStaveGroup(bounds) {\r\n            bounds.index = this.staveGroups.length;\r\n            bounds.boundsLookup = this;\r\n            this.staveGroups.push(bounds);\r\n            this._currentStaveGroup = bounds;\r\n        }\r\n        /**\r\n         * Adds a new master bar to the lookup.\r\n         * @param bounds The master bar bounds to add.\r\n         */\r\n        addMasterBar(bounds) {\r\n            if (!bounds.staveGroupBounds) {\r\n                bounds.staveGroupBounds = this._currentStaveGroup;\r\n                this._masterBarLookup.set(bounds.index, bounds);\r\n                this._currentStaveGroup.addBar(bounds);\r\n            }\r\n            else {\r\n                this._masterBarLookup.set(bounds.index, bounds);\r\n            }\r\n        }\r\n        /**\r\n         * Adds a new beat to the lookup.\r\n         * @param bounds The beat bounds to add.\r\n         */\r\n        addBeat(bounds) {\r\n            this._beatLookup.set(bounds.beat.id, bounds);\r\n        }\r\n        /**\r\n         * Tries to find the master bar bounds by a given index.\r\n         * @param index The index of the master bar to find.\r\n         * @returns The master bar bounds if it was rendered, or null if no boundary information is available.\r\n         */\r\n        findMasterBarByIndex(index) {\r\n            if (this._masterBarLookup.has(index)) {\r\n                return this._masterBarLookup.get(index);\r\n            }\r\n            return null;\r\n        }\r\n        /**\r\n         * Tries to find the master bar bounds by a given master bar.\r\n         * @param bar The master bar to find.\r\n         * @returns The master bar bounds if it was rendered, or null if no boundary information is available.\r\n         */\r\n        findMasterBar(bar) {\r\n            let id = bar.index;\r\n            if (this._masterBarLookup.has(id)) {\r\n                return this._masterBarLookup.get(id);\r\n            }\r\n            return null;\r\n        }\r\n        /**\r\n         * Tries to find the bounds of a given beat.\r\n         * @param beat The beat to find.\r\n         * @returns The beat bounds if it was rendered, or null if no boundary information is available.\r\n         */\r\n        findBeat(beat) {\r\n            let id = beat.id;\r\n            if (this._beatLookup.has(id)) {\r\n                return this._beatLookup.get(id);\r\n            }\r\n            return null;\r\n        }\r\n        /**\r\n         * Tries to find a beat at the given absolute position.\r\n         * @param x The absolute X-position of the beat to find.\r\n         * @param y The absolute Y-position of the beat to find.\r\n         * @returns The beat found at the given position or null if no beat could be found.\r\n         */\r\n        getBeatAtPos(x, y) {\r\n            //\r\n            // find a bar which matches in y-axis\r\n            let bottom = 0;\r\n            let top = this.staveGroups.length - 1;\r\n            let staveGroupIndex = -1;\r\n            while (bottom <= top) {\r\n                let middle = ((top + bottom) / 2) | 0;\r\n                let group = this.staveGroups[middle];\r\n                // found?\r\n                if (y >= group.realBounds.y && y <= group.realBounds.y + group.realBounds.h) {\r\n                    staveGroupIndex = middle;\r\n                    break;\r\n                }\r\n                // search in lower half\r\n                if (y < group.realBounds.y) {\r\n                    top = middle - 1;\r\n                }\r\n                else {\r\n                    bottom = middle + 1;\r\n                }\r\n            }\r\n            // no bar found\r\n            if (staveGroupIndex === -1) {\r\n                return null;\r\n            }\r\n            //\r\n            // Find the matching bar in the row\r\n            let staveGroup = this.staveGroups[staveGroupIndex];\r\n            let bar = staveGroup.findBarAtPos(x);\r\n            if (bar) {\r\n                return bar.findBeatAtPos(x, y);\r\n            }\r\n            return null;\r\n        }\r\n        /**\r\n         * Tries to find the note at the given position using the given beat for fast access.\r\n         * Use {@link findBeat} to find a beat for a given position first.\r\n         * @param beat The beat containing the note.\r\n         * @param x The X-position of the note.\r\n         * @param y The Y-position of the note.\r\n         * @returns The note at the given position within the beat.\r\n         */\r\n        getNoteAtPos(beat, x, y) {\r\n            let beatBounds = this.findBeat(beat);\r\n            if (!beatBounds) {\r\n                return null;\r\n            }\r\n            return beatBounds.findNoteAtPos(x, y);\r\n        }\r\n    }\n\n    /**\r\n     * This is the main wrapper of the rendering engine which\r\n     * can render a single track of a score object into a notation sheet.\r\n     */\r\n    class ScoreRenderer {\r\n        /**\r\n         * Initializes a new instance of the {@link ScoreRenderer} class.\r\n         * @param settings The settings to use for rendering.\r\n         */\r\n        constructor(settings) {\r\n            this._currentLayoutMode = exports.LayoutMode.Page;\r\n            this._currentRenderEngine = null;\r\n            this._renderedTracks = null;\r\n            this.canvas = null;\r\n            this.score = null;\r\n            this.tracks = null;\r\n            this.layout = null;\r\n            this.boundsLookup = null;\r\n            this.width = 0;\r\n            this.preRender = new EventEmitterOfT();\r\n            this.renderFinished = new EventEmitterOfT();\r\n            this.partialRenderFinished = new EventEmitterOfT();\r\n            this.postRenderFinished = new EventEmitter();\r\n            this.error = new EventEmitterOfT();\r\n            this.settings = settings;\r\n            this.recreateCanvas();\r\n            this.recreateLayout();\r\n        }\r\n        destroy() {\r\n            this.score = null;\r\n            this.canvas = null;\r\n            this.layout = null;\r\n            this.boundsLookup = null;\r\n            this.tracks = null;\r\n        }\r\n        recreateCanvas() {\r\n            if (this._currentRenderEngine !== this.settings.core.engine) {\r\n                this.canvas = Environment.getRenderEngineFactory(this.settings).createCanvas();\r\n                this._currentRenderEngine = this.settings.core.engine;\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        recreateLayout() {\r\n            if (!this.layout || this._currentLayoutMode !== this.settings.display.layoutMode) {\r\n                this.layout = Environment.getLayoutEngineFactory(this.settings).createLayout(this);\r\n                this._currentLayoutMode = this.settings.display.layoutMode;\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        renderScore(score, trackIndexes) {\r\n            try {\r\n                this.score = score;\r\n                let tracks;\r\n                if (!trackIndexes) {\r\n                    tracks = score.tracks.slice(0);\r\n                }\r\n                else {\r\n                    tracks = [];\r\n                    for (let track of trackIndexes) {\r\n                        if (track >= 0 && track < score.tracks.length) {\r\n                            tracks.push(score.tracks[track]);\r\n                        }\r\n                    }\r\n                }\r\n                if (tracks.length === 0 && score.tracks.length > 0) {\r\n                    tracks.push(score.tracks[0]);\r\n                }\r\n                this.tracks = tracks;\r\n                this.render();\r\n            }\r\n            catch (e) {\r\n                this.error.trigger(e);\r\n            }\r\n        }\r\n        /**\r\n         * Initiates rendering fof the given tracks.\r\n         * @param tracks The tracks to render.\r\n         */\r\n        renderTracks(tracks) {\r\n            if (tracks.length === 0) {\r\n                this.score = null;\r\n            }\r\n            else {\r\n                this.score = tracks[0].score;\r\n            }\r\n            this.tracks = tracks;\r\n            this.render();\r\n        }\r\n        updateSettings(settings) {\r\n            this.settings = settings;\r\n        }\r\n        render() {\r\n            if (this.width === 0) {\r\n                Logger.warning('Rendering', 'AlphaTab skipped rendering because of width=0 (element invisible)', null);\r\n                return;\r\n            }\r\n            this.boundsLookup = new BoundsLookup();\r\n            if (!this.tracks || this.tracks.length === 0) {\r\n                return;\r\n            }\r\n            this.recreateCanvas();\r\n            this.canvas.lineWidth = this.settings.display.scale;\r\n            this.canvas.settings = this.settings;\r\n            Logger.debug('Rendering', 'Rendering ' + this.tracks.length + ' tracks');\r\n            for (let i = 0; i < this.tracks.length; i++) {\r\n                let track = this.tracks[i];\r\n                Logger.debug('Rendering', 'Track ' + i + ': ' + track.name);\r\n            }\r\n            this.preRender.trigger(false);\r\n            this.recreateLayout();\r\n            this.layoutAndRender();\r\n            this._renderedTracks = this.tracks;\r\n            Logger.debug('Rendering', 'Rendering finished');\r\n        }\r\n        resizeRender() {\r\n            if (this.recreateLayout() || this.recreateCanvas() || this._renderedTracks !== this.tracks || !this.tracks) {\r\n                Logger.debug('Rendering', 'Starting full rerendering due to layout or canvas change', null);\r\n                this.render();\r\n            }\r\n            else if (this.layout.supportsResize) {\r\n                Logger.debug('Rendering', 'Starting optimized rerendering for resize');\r\n                this.boundsLookup = new BoundsLookup();\r\n                this.preRender.trigger(true);\r\n                this.canvas.settings = this.settings;\r\n                this.layout.resize();\r\n                this.layout.renderAnnotation();\r\n                this.onRenderFinished();\r\n                this.postRenderFinished.trigger();\r\n            }\r\n            else {\r\n                Logger.warning('Rendering', 'Current layout does not support dynamic resizing, nothing was done', null);\r\n            }\r\n            Logger.debug('Rendering', 'Resize finished');\r\n        }\r\n        layoutAndRender() {\r\n            Logger.debug('Rendering', 'Rendering at scale ' + this.settings.display.scale + ' with layout ' + this.layout.name, null);\r\n            this.layout.layoutAndRender();\r\n            this.layout.renderAnnotation();\r\n            this.onRenderFinished();\r\n            this.postRenderFinished.trigger();\r\n        }\r\n        onRenderFinished() {\r\n            const e = new RenderFinishedEventArgs();\r\n            e.totalHeight = this.layout.height;\r\n            e.totalWidth = this.layout.width;\r\n            e.renderResult = this.canvas.onRenderFinished();\r\n            this.renderFinished.trigger(e);\r\n        }\r\n    }\n\n    /**\r\n     * @target web\r\n     */\r\n    class AlphaTabWebWorker {\r\n        constructor(main) {\r\n            this._main = main;\r\n            this._main.addEventListener('message', this.handleMessage.bind(this), false);\r\n        }\r\n        static init() {\r\n            Environment.globalThis.alphaTabWebWorker = new AlphaTabWebWorker(Environment.globalThis);\r\n        }\r\n        handleMessage(e) {\r\n            let data = e.data;\r\n            let cmd = data ? data.cmd : '';\r\n            switch (cmd) {\r\n                case 'alphaTab.initialize':\r\n                    let settings = JsonConverter.jsObjectToSettings(data.settings);\r\n                    Logger.logLevel = settings.core.logLevel;\r\n                    this._renderer = new ScoreRenderer(settings);\r\n                    this._renderer.partialRenderFinished.on(result => {\r\n                        this._main.postMessage({\r\n                            cmd: 'alphaTab.partialRenderFinished',\r\n                            result: result\r\n                        });\r\n                    });\r\n                    this._renderer.renderFinished.on(result => {\r\n                        this._main.postMessage({\r\n                            cmd: 'alphaTab.renderFinished',\r\n                            result: result\r\n                        });\r\n                    });\r\n                    this._renderer.postRenderFinished.on(() => {\r\n                        var _a, _b;\r\n                        this._main.postMessage({\r\n                            cmd: 'alphaTab.postRenderFinished',\r\n                            boundsLookup: (_b = (_a = this._renderer.boundsLookup) === null || _a === void 0 ? void 0 : _a.toJson()) !== null && _b !== void 0 ? _b : null\r\n                        });\r\n                    });\r\n                    this._renderer.preRender.on(resize => {\r\n                        this._main.postMessage({\r\n                            cmd: 'alphaTab.preRender',\r\n                            resize: resize\r\n                        });\r\n                    });\r\n                    this._renderer.error.on(this.error.bind(this));\r\n                    break;\r\n                case 'alphaTab.invalidate':\r\n                    this._renderer.render();\r\n                    break;\r\n                case 'alphaTab.resizeRender':\r\n                    this._renderer.resizeRender();\r\n                    break;\r\n                case 'alphaTab.setWidth':\r\n                    this._renderer.width = data.width;\r\n                    break;\r\n                case 'alphaTab.renderScore':\r\n                    this.updateFontSizes(data.fontSizes);\r\n                    let score = JsonConverter.jsObjectToScore(data.score, this._renderer.settings);\r\n                    this.renderMultiple(score, data.trackIndexes);\r\n                    break;\r\n                case 'alphaTab.updateSettings':\r\n                    this.updateSettings(data.settings);\r\n                    break;\r\n            }\r\n        }\r\n        updateFontSizes(fontSizes) {\r\n            if (fontSizes) {\r\n                if (!FontSizes.FontSizeLookupTables) {\r\n                    FontSizes.FontSizeLookupTables = new Map();\r\n                }\r\n                for (let font in fontSizes) {\r\n                    FontSizes.FontSizeLookupTables.set(font, fontSizes[font]);\r\n                }\r\n            }\r\n        }\r\n        updateSettings(json) {\r\n            SettingsSerializer.fromJson(this._renderer.settings, json);\r\n        }\r\n        renderMultiple(score, trackIndexes) {\r\n            try {\r\n                this._renderer.renderScore(score, trackIndexes);\r\n            }\r\n            catch (e) {\r\n                this.error(e);\r\n            }\r\n        }\r\n        error(error) {\r\n            Logger.error('Worker', 'An unexpected error occurred in worker', error);\r\n            this._main.postMessage({\r\n                cmd: 'alphaTab.error',\r\n                error: error\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * A canvas implementation for HTML5 canvas\r\n     * @target web\r\n     */\r\n    class Html5Canvas {\r\n        constructor() {\r\n            this._canvas = null;\r\n            this._color = new Color(0, 0, 0, 0xff);\r\n            this._font = new Font('Arial', 10, FontStyle.Plain);\r\n            this._lineWidth = 0;\r\n            let fontElement = document.createElement('span');\r\n            fontElement.classList.add('at');\r\n            document.body.appendChild(fontElement);\r\n            let style = window.getComputedStyle(fontElement);\r\n            let family = style.fontFamily;\r\n            if (family.startsWith('\"') || family.startsWith(\"'\")) {\r\n                family = family.substr(1, family.length - 2);\r\n            }\r\n            this._musicFont = new Font(family, parseFloat(style.fontSize), FontStyle.Plain);\r\n            this._measureCanvas = document.createElement('canvas');\r\n            this._measureCanvas.width = 10;\r\n            this._measureCanvas.height = 10;\r\n            this._measureCanvas.style.width = '10px';\r\n            this._measureCanvas.style.height = '10px';\r\n            this._measureContext = this._measureCanvas.getContext('2d');\r\n            this._measureContext.textBaseline = 'hanging';\r\n        }\r\n        onRenderFinished() {\r\n            return null;\r\n        }\r\n        beginRender(width, height) {\r\n            this._canvas = document.createElement('canvas');\r\n            this._canvas.width = (width * Environment.HighDpiFactor) | 0;\r\n            this._canvas.height = (height * Environment.HighDpiFactor) | 0;\r\n            this._canvas.style.width = width + 'px';\r\n            this._canvas.style.height = height + 'px';\r\n            this._context = this._canvas.getContext('2d');\r\n            this._context.textBaseline = 'hanging';\r\n            this._context.scale(Environment.HighDpiFactor, Environment.HighDpiFactor);\r\n            this._context.lineWidth = this._lineWidth;\r\n        }\r\n        endRender() {\r\n            let result = this._canvas;\r\n            this._canvas = null;\r\n            return result;\r\n        }\r\n        get color() {\r\n            return this._color;\r\n        }\r\n        set color(value) {\r\n            if (this._color.rgba === value.rgba) {\r\n                return;\r\n            }\r\n            this._color = value;\r\n            this._context.strokeStyle = value.rgba;\r\n            this._context.fillStyle = value.rgba;\r\n        }\r\n        get lineWidth() {\r\n            return this._lineWidth;\r\n        }\r\n        set lineWidth(value) {\r\n            this._lineWidth = value;\r\n            if (this._context) {\r\n                this._context.lineWidth = value;\r\n            }\r\n        }\r\n        fillRect(x, y, w, h) {\r\n            if (w > 0) {\r\n                this._context.fillRect((x | 0), (y | 0), w, h);\r\n            }\r\n        }\r\n        strokeRect(x, y, w, h) {\r\n            this._context.strokeRect((x | 0), (y | 0), w, h);\r\n        }\r\n        beginPath() {\r\n            this._context.beginPath();\r\n        }\r\n        closePath() {\r\n            this._context.closePath();\r\n        }\r\n        moveTo(x, y) {\r\n            this._context.moveTo(x, y);\r\n        }\r\n        lineTo(x, y) {\r\n            this._context.lineTo(x, y);\r\n        }\r\n        quadraticCurveTo(cpx, cpy, x, y) {\r\n            this._context.quadraticCurveTo(cpx, cpy, x, y);\r\n        }\r\n        bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\r\n            this._context.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\r\n        }\r\n        fillCircle(x, y, radius) {\r\n            this._context.beginPath();\r\n            this._context.arc(x, y, radius, 0, Math.PI * 2, true);\r\n            this.fill();\r\n        }\r\n        strokeCircle(x, y, radius) {\r\n            this._context.beginPath();\r\n            this._context.arc(x, y, radius, 0, Math.PI * 2, true);\r\n            this.stroke();\r\n        }\r\n        fill() {\r\n            this._context.fill();\r\n        }\r\n        stroke() {\r\n            this._context.stroke();\r\n        }\r\n        get font() {\r\n            return this._font;\r\n        }\r\n        set font(value) {\r\n            this._font = value;\r\n            if (this._context) {\r\n                this._context.font = value.toCssString(this.settings.display.scale);\r\n            }\r\n            this._measureContext.font = value.toCssString(this.settings.display.scale);\r\n        }\r\n        get textAlign() {\r\n            switch (this._context.textAlign) {\r\n                case 'left':\r\n                    return TextAlign.Left;\r\n                case 'center':\r\n                    return TextAlign.Center;\r\n                case 'right':\r\n                    return TextAlign.Right;\r\n                default:\r\n                    return TextAlign.Left;\r\n            }\r\n        }\r\n        set textAlign(value) {\r\n            switch (value) {\r\n                case TextAlign.Left:\r\n                    this._context.textAlign = 'left';\r\n                    break;\r\n                case TextAlign.Center:\r\n                    this._context.textAlign = 'center';\r\n                    break;\r\n                case TextAlign.Right:\r\n                    this._context.textAlign = 'right';\r\n                    break;\r\n            }\r\n        }\r\n        get textBaseline() {\r\n            switch (this._context.textBaseline) {\r\n                case 'hanging':\r\n                    return TextBaseline.Top;\r\n                case 'middle':\r\n                    return TextBaseline.Middle;\r\n                case 'bottom':\r\n                    return TextBaseline.Bottom;\r\n                default:\r\n                    return TextBaseline.Top;\r\n            }\r\n        }\r\n        set textBaseline(value) {\r\n            switch (value) {\r\n                case TextBaseline.Top:\r\n                    this._context.textBaseline = 'hanging';\r\n                    break;\r\n                case TextBaseline.Middle:\r\n                    this._context.textBaseline = 'middle';\r\n                    break;\r\n                case TextBaseline.Bottom:\r\n                    this._context.textBaseline = 'bottom';\r\n                    break;\r\n            }\r\n        }\r\n        beginGroup(_) {\r\n            // not supported\r\n        }\r\n        endGroup() {\r\n            // not supported\r\n        }\r\n        fillText(text, x, y) {\r\n            this._context.fillText(text, x, y);\r\n        }\r\n        measureText(text) {\r\n            return this._measureContext.measureText(text).width;\r\n        }\r\n        fillMusicFontSymbol(x, y, scale, symbol, centerAtPosition = false) {\r\n            if (symbol === MusicFontSymbol.None) {\r\n                return;\r\n            }\r\n            this.fillMusicFontSymbolText(x, y, scale, String.fromCharCode(symbol), centerAtPosition);\r\n        }\r\n        fillMusicFontSymbols(x, y, scale, symbols, centerAtPosition = false) {\r\n            let s = '';\r\n            for (let symbol of symbols) {\r\n                if (symbol !== MusicFontSymbol.None) {\r\n                    s += String.fromCharCode(symbol);\r\n                }\r\n            }\r\n            this.fillMusicFontSymbolText(x, y, scale, s, centerAtPosition);\r\n        }\r\n        fillMusicFontSymbolText(x, y, scale, symbols, centerAtPosition = false) {\r\n            let textAlign = this._context.textAlign;\r\n            let baseLine = this._context.textBaseline;\r\n            let font = this._context.font;\r\n            this._context.font = this._musicFont.toCssString(scale);\r\n            this._context.textBaseline = 'middle';\r\n            if (centerAtPosition) {\r\n                this._context.textAlign = 'center';\r\n            }\r\n            else {\r\n                this._context.textAlign = 'left';\r\n            }\r\n            this._context.fillText(symbols, x, y);\r\n            this._context.textBaseline = baseLine;\r\n            this._context.font = font;\r\n            this._context.textAlign = textAlign;\r\n        }\r\n        beginRotate(centerX, centerY, angle) {\r\n            this._context.save();\r\n            this._context.translate(centerX, centerY);\r\n            this._context.rotate((angle * Math.PI) / 180.0);\r\n        }\r\n        endRotate() {\r\n            this._context.restore();\r\n        }\r\n    }\n\n    /**\r\n     * This implementation of the {@link IMidiFileHandler}\r\n     * generates a {@link MidiFile} object which can be used in AlphaSynth for playback.\r\n     */\r\n    class AlphaSynthMidiFileHandler {\r\n        /**\r\n         * Initializes a new instance of the {@link AlphaSynthMidiFileHandler} class.\r\n         * @param midiFile The midi file.\r\n         */\r\n        constructor(midiFile) {\r\n            this._midiFile = midiFile;\r\n        }\r\n        addTimeSignature(tick, timeSignatureNumerator, timeSignatureDenominator) {\r\n            let denominatorIndex = 0;\r\n            // tslint:disable-next-line: no-conditional-assignment\r\n            while ((timeSignatureDenominator = timeSignatureDenominator >> 1) > 0) {\r\n                denominatorIndex++;\r\n            }\r\n            const message = new MetaDataEvent(0, tick, 0xff, MetaEventType.TimeSignature, new Uint8Array([timeSignatureNumerator & 0xff, denominatorIndex & 0xff, 48, 8]));\r\n            this._midiFile.addEvent(message);\r\n        }\r\n        addRest(track, tick, channel) {\r\n            const message = new SystemExclusiveEvent(track, tick, SystemCommonType.SystemExclusive, SystemExclusiveEvent.AlphaTabManufacturerId, new Uint8Array([AlphaTabSystemExclusiveEvents.Rest]));\r\n            this._midiFile.addEvent(message);\r\n        }\r\n        addNote(track, start, length, key, dynamicValue, channel) {\r\n            const velocity = MidiUtils.dynamicToVelocity(dynamicValue);\r\n            const noteOn = new MidiEvent(track, start, this.makeCommand(MidiEventType.NoteOn, channel), AlphaSynthMidiFileHandler.fixValue(key), AlphaSynthMidiFileHandler.fixValue(velocity));\r\n            this._midiFile.addEvent(noteOn);\r\n            const noteOff = new MidiEvent(track, start + length, this.makeCommand(MidiEventType.NoteOff, channel), AlphaSynthMidiFileHandler.fixValue(key), AlphaSynthMidiFileHandler.fixValue(velocity));\r\n            this._midiFile.addEvent(noteOff);\r\n        }\r\n        makeCommand(command, channel) {\r\n            return (command & 0xf0) | (channel & 0x0f);\r\n        }\r\n        static fixValue(value) {\r\n            if (value > 127) {\r\n                return 127;\r\n            }\r\n            if (value < 0) {\r\n                return 0;\r\n            }\r\n            return value;\r\n        }\r\n        addControlChange(track, tick, channel, controller, value) {\r\n            const message = new MidiEvent(track, tick, this.makeCommand(MidiEventType.Controller, channel), AlphaSynthMidiFileHandler.fixValue(controller), AlphaSynthMidiFileHandler.fixValue(value));\r\n            this._midiFile.addEvent(message);\r\n        }\r\n        addProgramChange(track, tick, channel, program) {\r\n            const message = new MidiEvent(track, tick, this.makeCommand(MidiEventType.ProgramChange, channel), AlphaSynthMidiFileHandler.fixValue(program), 0);\r\n            this._midiFile.addEvent(message);\r\n        }\r\n        addTempo(tick, tempo) {\r\n            // bpm -> microsecond per quarter note\r\n            const tempoInUsq = (60000000 / tempo) | 0;\r\n            const message = new MetaNumberEvent(0, tick, 0xff, MetaEventType.Tempo, tempoInUsq);\r\n            this._midiFile.addEvent(message);\r\n        }\r\n        addBend(track, tick, channel, value) {\r\n            if (value >= SynthConstants.MaxPitchWheel) {\r\n                value = SynthConstants.MaxPitchWheel;\r\n            }\r\n            else {\r\n                value = Math.floor(value);\r\n            }\r\n            const message = new MidiEvent(track, tick, this.makeCommand(MidiEventType.PitchBend, channel), value & 0x7F, (value >> 7) & 0x7F);\r\n            this._midiFile.addEvent(message);\r\n        }\r\n        addNoteBend(track, tick, channel, key, value) {\r\n            if (value >= SynthConstants.MaxPitchWheel) {\r\n                value = SynthConstants.MaxPitchWheel;\r\n            }\r\n            else {\r\n                value = Math.floor(value);\r\n            }\r\n            // map midi 1.0 range of 0-16384     (0x4000)\r\n            // to midi 2.0 range of 0-4294967296 (0x100000000)\r\n            value = value * SynthConstants.MaxPitchWheel20 / SynthConstants.MaxPitchWheel;\r\n            const message = new Midi20PerNotePitchBendEvent(track, tick, this.makeCommand(MidiEventType.PerNotePitchBend, channel), key, value);\r\n            this._midiFile.addEvent(message);\r\n        }\r\n        finishTrack(track, tick) {\r\n            const message = new MetaDataEvent(track, tick, 0xff, MetaEventType.EndOfTrack, new Uint8Array(0));\r\n            this._midiFile.addEvent(message);\r\n        }\r\n    }\n\n    /**\r\n     * Represents the time period, for which a {@link Beat} is played.\r\n     */\r\n    class BeatTickLookup {\r\n        constructor() {\r\n            this._highlightedBeats = new Map();\r\n            /**\r\n             * Gets or sets the start time in midi ticks at which the given beat is played.\r\n             */\r\n            this.start = 0;\r\n            /**\r\n             * Gets or sets the end time in midi ticks at which the given beat is played.\r\n             */\r\n            this.end = 0;\r\n            /**\r\n             * Gets or sets whether the beat is the placeholder beat for an empty bar.\r\n             */\r\n            this.isEmptyBar = false;\r\n            /**\r\n             * Gets or sets a list of all beats that should be highlighted when\r\n             * the beat of this lookup starts playing.\r\n             */\r\n            this.beatsToHighlight = [];\r\n        }\r\n        highlightBeat(beat) {\r\n            if (!this._highlightedBeats.has(beat.id)) {\r\n                this._highlightedBeats.set(beat.id, true);\r\n                this.beatsToHighlight.push(beat);\r\n            }\r\n        }\r\n    }\n\n    /**\r\n     * Lists all midi controllers.\r\n     */\r\n    var ControllerType;\r\n    (function (ControllerType) {\r\n        /**\r\n         * Bank Select. MSB\r\n         */\r\n        ControllerType[ControllerType[\"BankSelectCoarse\"] = 0] = \"BankSelectCoarse\";\r\n        /**\r\n         * Modulation wheel or lever MSB\r\n         */\r\n        ControllerType[ControllerType[\"ModulationCoarse\"] = 1] = \"ModulationCoarse\";\r\n        //BreathControllerCoarse = 0x02,\r\n        //FootControllerCoarse = 0x04,\r\n        //PortamentoTimeCoarse = 0x05,\r\n        /**\r\n         * Data entry MSB\r\n         */\r\n        ControllerType[ControllerType[\"DataEntryCoarse\"] = 6] = \"DataEntryCoarse\";\r\n        /**\r\n         * Channel Volume MSB\r\n         */\r\n        ControllerType[ControllerType[\"VolumeCoarse\"] = 7] = \"VolumeCoarse\";\r\n        //BalanceCoarse = 0x08,\r\n        /**\r\n         * Pan MSB\r\n         */\r\n        ControllerType[ControllerType[\"PanCoarse\"] = 10] = \"PanCoarse\";\r\n        /**\r\n         * Expression Controller MSB\r\n         */\r\n        ControllerType[ControllerType[\"ExpressionControllerCoarse\"] = 11] = \"ExpressionControllerCoarse\";\r\n        //EffectControl1Coarse = 0x0C,\r\n        //EffectControl2Coarse = 0x0D,\r\n        //GeneralPurposeSlider1 = 0x10,\r\n        //GeneralPurposeSlider2 = 0x11,\r\n        //GeneralPurposeSlider3 = 0x12,\r\n        //GeneralPurposeSlider4 = 0x13,\r\n        //BankSelectFine = 0x20,\r\n        /**\r\n         * Modulation wheel or level LSB\r\n         */\r\n        ControllerType[ControllerType[\"ModulationFine\"] = 33] = \"ModulationFine\";\r\n        //BreathControllerFine = 0x22,\r\n        //FootControllerFine = 0x24,\r\n        //PortamentoTimeFine = 0x25,\r\n        /**\r\n         * Data Entry LSB\r\n         */\r\n        ControllerType[ControllerType[\"DataEntryFine\"] = 38] = \"DataEntryFine\";\r\n        /**\r\n         * Channel Volume LSB\r\n         */\r\n        ControllerType[ControllerType[\"VolumeFine\"] = 39] = \"VolumeFine\";\r\n        //BalanceFine = 0x28,\r\n        /**\r\n         * Pan LSB\r\n         */\r\n        ControllerType[ControllerType[\"PanFine\"] = 42] = \"PanFine\";\r\n        /**\r\n         * Expression controller LSB\r\n         */\r\n        ControllerType[ControllerType[\"ExpressionControllerFine\"] = 43] = \"ExpressionControllerFine\";\r\n        //EffectControl1Fine = 0x2C,\r\n        //EffectControl2Fine = 0x2D,\r\n        /**\r\n         * Damper pedal (sustain)\r\n         */\r\n        ControllerType[ControllerType[\"HoldPedal\"] = 64] = \"HoldPedal\";\r\n        //Portamento = 0x41,\r\n        //SostenutoPedal = 0x42,\r\n        //SoftPedal = 0x43,\r\n        /**\r\n         * Legato Footswitch\r\n         */\r\n        ControllerType[ControllerType[\"LegatoPedal\"] = 68] = \"LegatoPedal\";\r\n        //Hold2Pedal = 0x45,\r\n        //SoundVariation = 0x46,\r\n        //SoundTimbre = 0x47,\r\n        //SoundReleaseTime = 0x48,\r\n        //SoundAttackTime = 0x49,\r\n        //SoundBrightness = 0x4A,\r\n        //SoundControl6 = 0x4B,\r\n        //SoundControl7 = 0x4C,\r\n        //SoundControl8 = 0x4D,\r\n        //SoundControl9 = 0x4E,\r\n        //SoundControl10 = 0x4F,\r\n        //GeneralPurposeButton1 = 0x50,\r\n        //GeneralPurposeButton2 = 0x51,\r\n        //GeneralPurposeButton3 = 0x52,\r\n        //GeneralPurposeButton4 = 0x53,\r\n        //EffectsLevel = 0x5B,\r\n        //TremuloLevel = 0x5C,\r\n        //ChorusLevel = 0x5D,\r\n        //CelesteLevel = 0x5E,\r\n        //PhaseLevel = 0x5F,\r\n        //DataButtonIncrement = 0x60,\r\n        //DataButtonDecrement = 0x61,\r\n        /**\r\n         * Non-Registered Parameter Number LSB\r\n         */\r\n        ControllerType[ControllerType[\"NonRegisteredParameterFine\"] = 98] = \"NonRegisteredParameterFine\";\r\n        /**\r\n         * Non-Registered Parameter Number MSB\r\n         */\r\n        ControllerType[ControllerType[\"NonRegisteredParameterCourse\"] = 99] = \"NonRegisteredParameterCourse\";\r\n        /**\r\n         * Registered Parameter Number LSB\r\n         */\r\n        ControllerType[ControllerType[\"RegisteredParameterFine\"] = 100] = \"RegisteredParameterFine\";\r\n        /**\r\n         * Registered Parameter Number MSB\r\n         */\r\n        ControllerType[ControllerType[\"RegisteredParameterCourse\"] = 101] = \"RegisteredParameterCourse\";\r\n        //AllSoundOff = 0x78,\r\n        /**\r\n         * Reset all controllers\r\n         */\r\n        ControllerType[ControllerType[\"ResetControllers\"] = 121] = \"ResetControllers\";\r\n        //LocalKeyboard = 0x7A,\r\n        /**\r\n         * All notes of.\r\n         */\r\n        ControllerType[ControllerType[\"AllNotesOff\"] = 123] = \"AllNotesOff\";\r\n        //OmniModeOff = 0x7C,\r\n        //OmniModeOn = 0x7D,\r\n        //MonoMode = 0x7E,\r\n        //PolyMode = 0x7F\r\n    })(ControllerType || (ControllerType = {}));\n\n    class MidiPlaybackController {\r\n        constructor(score) {\r\n            this._repeatStartIndex = 0;\r\n            this._repeatNumber = 0;\r\n            this._repeatOpen = false;\r\n            this.shouldPlay = true;\r\n            this.index = 0;\r\n            this.currentTick = 0;\r\n            this._score = score;\r\n        }\r\n        get finished() {\r\n            return this.index >= this._score.masterBars.length;\r\n        }\r\n        processCurrent() {\r\n            const masterBar = this._score.masterBars[this.index];\r\n            const masterBarAlternateEndings = masterBar.alternateEndings;\r\n            // if the repeat group wasn't closed we reset the repeating\r\n            // on the last group opening\r\n            if (!masterBar.repeatGroup.isClosed &&\r\n                masterBar.repeatGroup.openings[masterBar.repeatGroup.openings.length - 1] === masterBar) {\r\n                this._repeatNumber = 0;\r\n                this._repeatOpen = false;\r\n            }\r\n            if ((masterBar.isRepeatStart || masterBar.index === 0) && this._repeatNumber === 0) {\r\n                this._repeatStartIndex = this.index;\r\n                this._repeatOpen = true;\r\n            }\r\n            else if (masterBar.isRepeatStart) {\r\n                this.shouldPlay = true;\r\n            }\r\n            // if we encounter an alternate ending\r\n            if (this._repeatOpen && masterBarAlternateEndings > 0) {\r\n                // do we need to skip this section?\r\n                if ((masterBarAlternateEndings & (1 << this._repeatNumber)) === 0) {\r\n                    this.shouldPlay = false;\r\n                }\r\n                else {\r\n                    this.shouldPlay = true;\r\n                }\r\n            }\r\n            if (this.shouldPlay) {\r\n                this.currentTick += masterBar.calculateDuration();\r\n            }\r\n        }\r\n        moveNext() {\r\n            const masterBar = this._score.masterBars[this.index];\r\n            const masterBarRepeatCount = masterBar.repeatCount - 1;\r\n            // if we encounter a repeat end\r\n            if (this._repeatOpen && masterBarRepeatCount > 0) {\r\n                // more repeats required?\r\n                if (this._repeatNumber < masterBarRepeatCount) {\r\n                    // jump to start\r\n                    this.index = this._repeatStartIndex;\r\n                    this._repeatNumber++;\r\n                }\r\n                else {\r\n                    // no repeats anymore, jump after repeat end\r\n                    this._repeatNumber = 0;\r\n                    this._repeatOpen = false;\r\n                    this.shouldPlay = true;\r\n                    this.index++;\r\n                }\r\n            }\r\n            else {\r\n                this.index++;\r\n            }\r\n        }\r\n    }\n\n    /**\r\n     * Represents the time period, for which all bars of a {@link MasterBar} are played.\r\n     */\r\n    class MasterBarTickLookup {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the start time in midi ticks at which the MasterBar is played.\r\n             */\r\n            this.start = 0;\r\n            /**\r\n             * Gets or sets the end time in midi ticks at which the MasterBar is played.\r\n             */\r\n            this.end = 0;\r\n            /**\r\n             * Gets or sets the current tempo when the MasterBar is played.\r\n             */\r\n            this.tempo = 0;\r\n            /**\r\n             * Gets or sets the list of {@link BeatTickLookup} object which define the durations\r\n             * for all {@link Beats} played within the period of this MasterBar.\r\n             */\r\n            this.beats = [];\r\n            /**\r\n             * Gets or sets the {@link MasterBarTickLookup} of the next masterbar in the {@link Score}\r\n             */\r\n            this.nextMasterBar = null;\r\n        }\r\n        /**\r\n         * Performs the neccessary finalization steps after all information was written.\r\n         */\r\n        finish() {\r\n            this.beats.sort((a, b) => {\r\n                return a.start - b.start;\r\n            });\r\n        }\r\n        /**\r\n         * Adds a new {@link BeatTickLookup} to the list of played beats during this MasterBar period.\r\n         * @param beat\r\n         */\r\n        addBeat(beat) {\r\n            this.beats.push(beat);\r\n        }\r\n    }\n\n    /**\r\n     * Represents the results of searching the currently played beat.\r\n     * @see MidiTickLookup.FindBeat\r\n     */\r\n    class MidiTickLookupFindBeatResult {\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the beat that will be played next.\r\n             */\r\n            this.nextBeat = null;\r\n            /**\r\n             * Gets or sets the duration in milliseconds how long this beat is playing.\r\n             */\r\n            this.duration = 0;\r\n        }\r\n    }\r\n    /**\r\n     * This class holds all information about when {@link MasterBar}s and {@link Beat}s are played.\r\n     */\r\n    class MidiTickLookup {\r\n        constructor() {\r\n            this._currentMasterBar = null;\r\n            /**\r\n             * Gets a dictionary of all master bars played. The index is the index equals to {@link MasterBar.index}.\r\n             * This lookup only contains the first time a MasterBar is played. For a whole sequence of the song refer to {@link MasterBars}.\r\n             */\r\n            this.masterBarLookup = new Map();\r\n            /**\r\n             * Gets a list of all {@link MasterBarTickLookup} sorted by time.\r\n             */\r\n            this.masterBars = [];\r\n        }\r\n        /**\r\n         * Performs the neccessary finalization steps after all information was written.\r\n         */\r\n        finish() {\r\n            let previous = null;\r\n            let activeBeats = [];\r\n            for (let bar of this.masterBars) {\r\n                bar.finish();\r\n                if (previous) {\r\n                    previous.nextMasterBar = bar;\r\n                }\r\n                for (const beat of bar.beats) {\r\n                    // 1. calculate newly which beats are still active\r\n                    const newActiveBeats = [];\r\n                    // TODO: only create new list if current position changed\r\n                    for (let activeBeat of activeBeats) {\r\n                        if (activeBeat.end > beat.start) {\r\n                            newActiveBeats.push(activeBeat);\r\n                            // 2. remember for current beat which active beats to highlight\r\n                            beat.highlightBeat(activeBeat.beat);\r\n                            // 3. ensure that active beat highlights current beat if they match the range\r\n                            if (beat.start <= activeBeat.start) {\r\n                                activeBeat.highlightBeat(beat.beat);\r\n                            }\r\n                        }\r\n                    }\r\n                    newActiveBeats.push(beat);\r\n                    activeBeats = newActiveBeats;\r\n                }\r\n                previous = bar;\r\n            }\r\n        }\r\n        /**\r\n         * Finds the currently played beat given a list of tracks and the current time.\r\n         * @param tracks The tracks in which to search the played beat for.\r\n         * @param tick The current time in midi ticks.\r\n         * @returns The information about the current beat or null if no beat could be found.\r\n         */\r\n        findBeat(tracks, tick) {\r\n            // get all beats within the masterbar\r\n            const masterBar = this.findMasterBar(tick);\r\n            if (!masterBar) {\r\n                return null;\r\n            }\r\n            const trackLookup = new Map();\r\n            for (const track of tracks) {\r\n                trackLookup.set(track.index, true);\r\n            }\r\n            let beat = null;\r\n            let index = 0;\r\n            let beats = masterBar.beats;\r\n            for (let b = 0; b < beats.length; b++) {\r\n                // is the current beat played on the given tick?\r\n                let currentBeat = beats[b];\r\n                // skip non relevant beats\r\n                if (!trackLookup.has(currentBeat.beat.voice.bar.staff.track.index)) {\r\n                    continue;\r\n                }\r\n                if (currentBeat.start <= tick && tick < currentBeat.end) {\r\n                    // take the latest played beat we can find. (most right)\r\n                    if (!beat || beat.start < currentBeat.start) {\r\n                        beat = beats[b];\r\n                        index = b;\r\n                    }\r\n                }\r\n                else if (currentBeat.end > tick) {\r\n                    break;\r\n                }\r\n            }\r\n            if (!beat) {\r\n                return null;\r\n            }\r\n            // search for next relevant beat in masterbar\r\n            let nextBeat = null;\r\n            for (let b = index + 1; b < beats.length; b++) {\r\n                const currentBeat = beats[b];\r\n                if (currentBeat.start > beat.start &&\r\n                    trackLookup.has(currentBeat.beat.voice.bar.staff.track.index)) {\r\n                    nextBeat = currentBeat;\r\n                    break;\r\n                }\r\n            }\r\n            // first relevant beat in next bar\r\n            if (!nextBeat && masterBar.nextMasterBar) {\r\n                beats = masterBar.nextMasterBar.beats;\r\n                for (let b = 0; b < beats.length; b++) {\r\n                    const currentBeat = beats[b];\r\n                    if (trackLookup.has(currentBeat.beat.voice.bar.staff.track.index)) {\r\n                        nextBeat = currentBeat;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            const result = new MidiTickLookupFindBeatResult();\r\n            result.currentBeat = beat.beat;\r\n            result.nextBeat = !nextBeat ? null : nextBeat.beat;\r\n            result.duration = !nextBeat\r\n                ? MidiUtils.ticksToMillis(beat.end - beat.start, masterBar.tempo)\r\n                : MidiUtils.ticksToMillis(nextBeat.start - beat.start, masterBar.tempo);\r\n            result.beatsToHighlight = beat.beatsToHighlight;\r\n            return result;\r\n        }\r\n        findMasterBar(tick) {\r\n            const bars = this.masterBars;\r\n            let bottom = 0;\r\n            let top = bars.length - 1;\r\n            while (bottom <= top) {\r\n                const middle = ((top + bottom) / 2) | 0;\r\n                const bar = bars[middle];\r\n                // found?\r\n                if (tick >= bar.start && tick < bar.end) {\r\n                    return bar;\r\n                }\r\n                // search in lower half\r\n                if (tick < bar.start) {\r\n                    top = middle - 1;\r\n                }\r\n                else {\r\n                    bottom = middle + 1;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        /**\r\n         * Gets the {@link MasterBarTickLookup} for a given masterbar at which the masterbar is played the first time.\r\n         * @param bar The masterbar to find the time period for.\r\n         * @returns A {@link MasterBarTickLookup} containing the details about the first time the {@link MasterBar} is played.\r\n         */\r\n        getMasterBar(bar) {\r\n            if (!this.masterBarLookup.has(bar.index)) {\r\n                const fallback = new MasterBarTickLookup();\r\n                fallback.masterBar = bar;\r\n                return fallback;\r\n            }\r\n            return this.masterBarLookup.get(bar.index);\r\n        }\r\n        /**\r\n         * Gets the start time in midi ticks for a given masterbar at which the masterbar is played the first time.\r\n         * @param bar The masterbar to find the time period for.\r\n         * @returns The time in midi ticks at which the masterbar is played the first time or 0 if the masterbar is not contained\r\n         */\r\n        getMasterBarStart(bar) {\r\n            if (!this.masterBarLookup.has(bar.index)) {\r\n                return 0;\r\n            }\r\n            return this.masterBarLookup.get(bar.index).start;\r\n        }\r\n        /**\r\n         * Adds a new {@link MasterBarTickLookup} to the lookup table.\r\n         * @param masterBar The item to add.\r\n         */\r\n        addMasterBar(masterBar) {\r\n            this.masterBars.push(masterBar);\r\n            this._currentMasterBar = masterBar;\r\n            if (!this.masterBarLookup.has(masterBar.masterBar.index)) {\r\n                this.masterBarLookup.set(masterBar.masterBar.index, masterBar);\r\n            }\r\n        }\r\n        /**\r\n         * Adds the given {@link BeatTickLookup} to the current {@link MidiTickLookup}.\r\n         * @param beat The lookup to add.\r\n         */\r\n        addBeat(beat) {\r\n            var _a;\r\n            (_a = this._currentMasterBar) === null || _a === void 0 ? void 0 : _a.addBeat(beat);\r\n        }\r\n    }\n\n    class MidiNoteDuration {\r\n        constructor() {\r\n            this.noteOnly = 0;\r\n            this.untilTieOrSlideEnd = 0;\r\n            this.letRingEnd = 0;\r\n        }\r\n    }\r\n    class TripletFeelDurations {\r\n        constructor() {\r\n            this.firstBeatDuration = 0;\r\n            this.secondBeatStartOffset = 0;\r\n            this.secondBeatDuration = 0;\r\n        }\r\n    }\r\n    /**\r\n     * This generator creates a midi file using a score.\r\n     */\r\n    class MidiFileGenerator {\r\n        /**\r\n         * Initializes a new instance of the {@link MidiFileGenerator} class.\r\n         * @param score The score for which the midi file should be generated.\r\n         * @param settings The settings ot use for generation.\r\n         * @param handler The handler that should be used for generating midi events.\r\n         */\r\n        constructor(score, settings, handler) {\r\n            this._currentTempo = 0;\r\n            this._currentBarRepeatLookup = null;\r\n            this._programsPerChannel = new Map();\r\n            /**\r\n             * Gets a lookup object which can be used to quickly find beats and bars\r\n             * at a given midi tick position.\r\n             */\r\n            this.tickLookup = new MidiTickLookup();\r\n            this._currentTripletFeel = null;\r\n            this._score = score;\r\n            this._settings = !settings ? new Settings() : settings;\r\n            this._currentTempo = this._score.tempo;\r\n            this._handler = handler;\r\n        }\r\n        /**\r\n         * Starts the generation of the midi file.\r\n         */\r\n        generate() {\r\n            // initialize tracks\r\n            for (const track of this._score.tracks) {\r\n                this.generateTrack(track);\r\n            }\r\n            Logger.debug('Midi', 'Begin midi generation');\r\n            const controller = new MidiPlaybackController(this._score);\r\n            let previousMasterBar = null;\r\n            // store the previous played bar for repeats\r\n            while (!controller.finished) {\r\n                const index = controller.index;\r\n                const bar = this._score.masterBars[index];\r\n                const currentTick = controller.currentTick;\r\n                controller.processCurrent();\r\n                if (controller.shouldPlay) {\r\n                    this.generateMasterBar(bar, previousMasterBar, currentTick);\r\n                    for (const track of this._score.tracks) {\r\n                        for (const staff of track.staves) {\r\n                            if (index < staff.bars.length) {\r\n                                this.generateBar(staff.bars[index], currentTick);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                controller.moveNext();\r\n                previousMasterBar = bar;\r\n            }\r\n            for (const track of this._score.tracks) {\r\n                this._handler.finishTrack(track.index, controller.currentTick);\r\n            }\r\n            this.tickLookup.finish();\r\n            Logger.debug('Midi', 'Midi generation done');\r\n        }\r\n        generateTrack(track) {\r\n            // channel\r\n            this.generateChannel(track, track.playbackInfo.primaryChannel, track.playbackInfo);\r\n            if (track.playbackInfo.primaryChannel !== track.playbackInfo.secondaryChannel) {\r\n                this.generateChannel(track, track.playbackInfo.secondaryChannel, track.playbackInfo);\r\n            }\r\n        }\r\n        addProgramChange(track, tick, channel, program) {\r\n            if (!this._programsPerChannel.has(channel) || this._programsPerChannel.get(channel) !== program) {\r\n                this._handler.addProgramChange(track.index, tick, channel, program);\r\n                this._programsPerChannel.set(channel, program);\r\n            }\r\n        }\r\n        generateChannel(track, channel, playbackInfo) {\r\n            let volume = MidiFileGenerator.toChannelShort(playbackInfo.volume);\r\n            let balance = MidiFileGenerator.toChannelShort(playbackInfo.balance);\r\n            this._handler.addControlChange(track.index, 0, channel, ControllerType.VolumeCoarse, volume);\r\n            this._handler.addControlChange(track.index, 0, channel, ControllerType.PanCoarse, balance);\r\n            this._handler.addControlChange(track.index, 0, channel, ControllerType.ExpressionControllerCoarse, 127);\r\n            // set parameter that is being updated (0) -> PitchBendRangeCoarse\r\n            this._handler.addControlChange(track.index, 0, channel, ControllerType.RegisteredParameterFine, 0);\r\n            this._handler.addControlChange(track.index, 0, channel, ControllerType.RegisteredParameterCourse, 0);\r\n            // Set PitchBendRangeCoarse to 12\r\n            this._handler.addControlChange(track.index, 0, channel, ControllerType.DataEntryFine, 0);\r\n            this._handler.addControlChange(track.index, 0, channel, ControllerType.DataEntryCoarse, MidiFileGenerator.PitchBendRangeInSemitones);\r\n            this.addProgramChange(track, 0, channel, playbackInfo.program);\r\n        }\r\n        static toChannelShort(data) {\r\n            const value = Math.max(-32768, Math.min(32767, data * 8 - 1));\r\n            return Math.max(value, -1) + 1;\r\n        }\r\n        generateMasterBar(masterBar, previousMasterBar, currentTick) {\r\n            // time signature\r\n            if (!previousMasterBar ||\r\n                previousMasterBar.timeSignatureDenominator !== masterBar.timeSignatureDenominator ||\r\n                previousMasterBar.timeSignatureNumerator !== masterBar.timeSignatureNumerator) {\r\n                this._handler.addTimeSignature(currentTick, masterBar.timeSignatureNumerator, masterBar.timeSignatureDenominator);\r\n            }\r\n            // tempo\r\n            if (!previousMasterBar) {\r\n                this._handler.addTempo(currentTick, masterBar.score.tempo);\r\n                this._currentTempo = masterBar.score.tempo;\r\n            }\r\n            else if (masterBar.tempoAutomation) {\r\n                this._handler.addTempo(currentTick, masterBar.tempoAutomation.value);\r\n                this._currentTempo = masterBar.tempoAutomation.value;\r\n            }\r\n            const masterBarLookup = new MasterBarTickLookup();\r\n            masterBarLookup.masterBar = masterBar;\r\n            masterBarLookup.start = currentTick;\r\n            masterBarLookup.tempo = this._currentTempo;\r\n            masterBarLookup.end = masterBarLookup.start + masterBar.calculateDuration();\r\n            this.tickLookup.addMasterBar(masterBarLookup);\r\n        }\r\n        generateBar(bar, barStartTick) {\r\n            let playbackBar = this.getPlaybackBar(bar);\r\n            this._currentBarRepeatLookup = null;\r\n            for (const v of playbackBar.voices) {\r\n                this.generateVoice(v, barStartTick, bar);\r\n            }\r\n        }\r\n        getPlaybackBar(bar) {\r\n            switch (bar.simileMark) {\r\n                case SimileMark.Simple:\r\n                    if (bar.previousBar) {\r\n                        bar = this.getPlaybackBar(bar.previousBar);\r\n                    }\r\n                    break;\r\n                case SimileMark.FirstOfDouble:\r\n                    if (bar.previousBar && bar.previousBar.previousBar) {\r\n                        bar = this.getPlaybackBar(bar.previousBar.previousBar);\r\n                    }\r\n                    break;\r\n                case SimileMark.SecondOfDouble:\r\n                    if (bar.previousBar && bar.previousBar.previousBar) {\r\n                        bar = this.getPlaybackBar(bar.previousBar.previousBar);\r\n                    }\r\n                    break;\r\n            }\r\n            return bar;\r\n        }\r\n        generateVoice(voice, barStartTick, realBar) {\r\n            if (voice.isEmpty && (!voice.bar.isEmpty || voice.index !== 0)) {\r\n                return;\r\n            }\r\n            for (const b of voice.beats) {\r\n                this.generateBeat(b, barStartTick, realBar);\r\n            }\r\n        }\r\n        generateBeat(beat, barStartTick, realBar) {\r\n            let beatStart = beat.playbackStart;\r\n            let audioDuration = beat.playbackDuration;\r\n            if (beat.voice.bar.isEmpty) {\r\n                audioDuration = beat.voice.bar.masterBar.calculateDuration();\r\n            }\r\n            else if (beat.voice.bar.masterBar.tripletFeel !== TripletFeel.NoTripletFeel &&\r\n                this._settings.player.playTripletFeel) {\r\n                if (this._currentTripletFeel) {\r\n                    beatStart -= this._currentTripletFeel.secondBeatStartOffset;\r\n                    audioDuration = this._currentTripletFeel.secondBeatDuration;\r\n                    this._currentTripletFeel = null;\r\n                }\r\n                else {\r\n                    this._currentTripletFeel = MidiFileGenerator.calculateTripletFeelInfo(beatStart, audioDuration, beat);\r\n                    if (this._currentTripletFeel) {\r\n                        audioDuration = this._currentTripletFeel.firstBeatDuration;\r\n                    }\r\n                }\r\n            }\r\n            const beatLookup = new BeatTickLookup();\r\n            beatLookup.start = barStartTick + beatStart;\r\n            const realTickOffset = !beat.nextBeat\r\n                ? audioDuration\r\n                : beat.nextBeat.absolutePlaybackStart - beat.absolutePlaybackStart;\r\n            beatLookup.end = barStartTick + beatStart;\r\n            beatLookup.highlightBeat(beat);\r\n            beatLookup.end += realTickOffset > audioDuration ? realTickOffset : audioDuration;\r\n            // in case of normal playback register playback\r\n            if (realBar === beat.voice.bar) {\r\n                beatLookup.beat = beat;\r\n                this.tickLookup.addBeat(beatLookup);\r\n            }\r\n            else {\r\n                beatLookup.isEmptyBar = true;\r\n                beatLookup.beat = realBar.voices[0].beats[0];\r\n                if (!this._currentBarRepeatLookup) {\r\n                    this._currentBarRepeatLookup = beatLookup;\r\n                    this.tickLookup.addBeat(this._currentBarRepeatLookup);\r\n                }\r\n                else {\r\n                    this._currentBarRepeatLookup.end = beatLookup.end;\r\n                }\r\n            }\r\n            const track = beat.voice.bar.staff.track;\r\n            for (const automation of beat.automations) {\r\n                this.generateAutomation(beat, automation, barStartTick);\r\n            }\r\n            if (beat.isRest) {\r\n                this._handler.addRest(track.index, barStartTick + beatStart, track.playbackInfo.primaryChannel);\r\n            }\r\n            else {\r\n                let brushInfo = this.getBrushInfo(beat);\r\n                for (const n of beat.notes) {\r\n                    this.generateNote(n, barStartTick + beatStart, audioDuration, brushInfo);\r\n                }\r\n            }\r\n            if (beat.vibrato !== VibratoType.None) {\r\n                let phaseLength = 240;\r\n                let bendAmplitude = 3;\r\n                switch (beat.vibrato) {\r\n                    case VibratoType.Slight:\r\n                        phaseLength = this._settings.player.vibrato.beatSlightLength;\r\n                        bendAmplitude = this._settings.player.vibrato.beatSlightAmplitude;\r\n                        break;\r\n                    case VibratoType.Wide:\r\n                        phaseLength = this._settings.player.vibrato.beatWideLength;\r\n                        bendAmplitude = this._settings.player.vibrato.beatWideAmplitude;\r\n                        break;\r\n                }\r\n                this.generateVibratorWithParams(barStartTick + beatStart, beat.playbackDuration, phaseLength, bendAmplitude, (tick, value) => {\r\n                    this._handler.addBend(beat.voice.bar.staff.track.index, tick, track.playbackInfo.secondaryChannel, value);\r\n                });\r\n            }\r\n        }\r\n        static calculateTripletFeelInfo(beatStart, audioDuration, beat) {\r\n            let initialDuration;\r\n            switch (beat.voice.bar.masterBar.tripletFeel) {\r\n                case TripletFeel.Triplet8th:\r\n                case TripletFeel.Dotted8th:\r\n                case TripletFeel.Scottish8th:\r\n                    initialDuration = Duration.Eighth;\r\n                    break;\r\n                case TripletFeel.Triplet16th:\r\n                case TripletFeel.Dotted16th:\r\n                case TripletFeel.Scottish16th:\r\n                    initialDuration = Duration.Sixteenth;\r\n                    break;\r\n                default:\r\n                    // not possible\r\n                    return null;\r\n            }\r\n            const interval = MidiUtils.toTicks(initialDuration);\r\n            // it must be a plain note with the expected duration\r\n            // without dots, triplets, grace notes etc.\r\n            if (audioDuration !== interval) {\r\n                return null;\r\n            }\r\n            // check if the beat is aligned in respect to the duration\r\n            // e.g. the eighth notes on a 4/4 time signature must start exactly on the following\r\n            // times to get a triplet feel applied\r\n            // 0 480 960 1440 1920 2400 2880 3360\r\n            if (beatStart % interval !== 0) {\r\n                return null;\r\n            }\r\n            // ensure next beat matches spec\r\n            if (!beat.nextBeat || beat.nextBeat.voice !== beat.voice || beat.playbackDuration !== interval) {\r\n                return null;\r\n            }\r\n            // looks like we have a triplet feel combination start here!\r\n            const durations = new TripletFeelDurations();\r\n            switch (beat.voice.bar.masterBar.tripletFeel) {\r\n                case TripletFeel.Triplet8th:\r\n                    durations.firstBeatDuration = MidiUtils.applyTuplet(MidiUtils.toTicks(Duration.Quarter), 3, 2);\r\n                    durations.secondBeatDuration = MidiUtils.applyTuplet(MidiUtils.toTicks(Duration.Eighth), 3, 2);\r\n                    break;\r\n                case TripletFeel.Dotted8th:\r\n                    durations.firstBeatDuration = MidiUtils.applyDot(MidiUtils.toTicks(Duration.Eighth), false);\r\n                    durations.secondBeatDuration = MidiUtils.toTicks(Duration.Sixteenth);\r\n                    break;\r\n                case TripletFeel.Scottish8th:\r\n                    durations.firstBeatDuration = MidiUtils.toTicks(Duration.Sixteenth);\r\n                    durations.secondBeatDuration = MidiUtils.applyDot(MidiUtils.toTicks(Duration.Eighth), false);\r\n                    break;\r\n                case TripletFeel.Triplet16th:\r\n                    durations.firstBeatDuration = MidiUtils.applyTuplet(MidiUtils.toTicks(Duration.Eighth), 3, 2);\r\n                    durations.secondBeatDuration = MidiUtils.applyTuplet(MidiUtils.toTicks(Duration.Sixteenth), 3, 2);\r\n                    break;\r\n                case TripletFeel.Dotted16th:\r\n                    durations.firstBeatDuration = MidiUtils.applyDot(MidiUtils.toTicks(Duration.Sixteenth), false);\r\n                    durations.secondBeatDuration = MidiUtils.toTicks(Duration.ThirtySecond);\r\n                    break;\r\n                case TripletFeel.Scottish16th:\r\n                    durations.firstBeatDuration = MidiUtils.toTicks(Duration.ThirtySecond);\r\n                    durations.secondBeatDuration = MidiUtils.applyDot(MidiUtils.toTicks(Duration.Sixteenth), false);\r\n                    break;\r\n            }\r\n            // calculate the number of ticks the second beat can start earlier\r\n            durations.secondBeatStartOffset = audioDuration - durations.firstBeatDuration;\r\n            return durations;\r\n        }\r\n        generateNote(note, beatStart, beatDuration, brushInfo) {\r\n            const track = note.beat.voice.bar.staff.track;\r\n            const staff = note.beat.voice.bar.staff;\r\n            let noteKey = note.realValue;\r\n            if (note.isPercussion) {\r\n                const articulation = PercussionMapper.getArticulation(note);\r\n                if (articulation) {\r\n                    noteKey = articulation.outputMidiNumber;\r\n                }\r\n            }\r\n            const brushOffset = note.isStringed && note.string <= brushInfo.length ? brushInfo[note.string - 1] : 0;\r\n            const noteStart = beatStart + brushOffset;\r\n            const noteDuration = this.getNoteDuration(note, beatDuration);\r\n            noteDuration.untilTieOrSlideEnd -= brushOffset;\r\n            noteDuration.noteOnly -= brushOffset;\r\n            noteDuration.letRingEnd -= brushOffset;\r\n            const dynamicValue = MidiFileGenerator.getDynamicValue(note);\r\n            const channel = note.hasBend || note.beat.hasWhammyBar || note.beat.vibrato !== VibratoType.None\r\n                ? track.playbackInfo.secondaryChannel\r\n                : track.playbackInfo.primaryChannel;\r\n            let initialBend = 0;\r\n            if (note.hasBend) {\r\n                initialBend = MidiFileGenerator.getPitchWheel(note.bendPoints[0].value);\r\n            }\r\n            else if (note.beat.hasWhammyBar) {\r\n                initialBend = MidiFileGenerator.getPitchWheel(note.beat.whammyBarPoints[0].value);\r\n            }\r\n            else if (note.isTieDestination ||\r\n                (note.slideOrigin && note.slideOrigin.slideOutType === SlideOutType.Legato)) {\r\n                initialBend = -1;\r\n            }\r\n            else {\r\n                initialBend = MidiFileGenerator.getPitchWheel(0);\r\n            }\r\n            if (initialBend >= 0) {\r\n                this._handler.addNoteBend(track.index, noteStart, channel, noteKey, initialBend);\r\n            }\r\n            //\r\n            // Fade in\r\n            if (note.beat.fadeIn) {\r\n                this.generateFadeIn(note, noteStart, noteDuration);\r\n            }\r\n            //\r\n            // Trill\r\n            if (note.isTrill && !staff.isPercussion) {\r\n                this.generateTrill(note, noteStart, noteDuration, noteKey, dynamicValue, channel);\r\n                // no further generation needed\r\n                return;\r\n            }\r\n            //\r\n            // Tremolo Picking\r\n            if (note.beat.isTremolo) {\r\n                this.generateTremoloPicking(note, noteStart, noteDuration, noteKey, dynamicValue, channel);\r\n                // no further generation needed\r\n                return;\r\n            }\r\n            //\r\n            // All String Bending/Variation effects\r\n            if (note.hasBend) {\r\n                this.generateBend(note, noteStart, noteDuration, noteKey, channel);\r\n            }\r\n            else if (note.beat.hasWhammyBar && note.index === 0) {\r\n                this.generateWhammy(note.beat, noteStart, noteDuration, channel);\r\n            }\r\n            else if (note.slideInType !== SlideInType.None || note.slideOutType !== SlideOutType.None) {\r\n                this.generateSlide(note, noteStart, noteDuration, noteKey, dynamicValue, channel);\r\n            }\r\n            else if (note.vibrato !== VibratoType.None) {\r\n                this.generateVibrato(note, noteStart, noteDuration, noteKey, channel);\r\n            }\r\n            // for tied notes, and target notes of legato slides we do not pick the note\r\n            // the previous one is extended\r\n            if (!note.isTieDestination && (!note.slideOrigin || note.slideOrigin.slideOutType !== SlideOutType.Legato)) {\r\n                let noteSoundDuration = Math.max(noteDuration.untilTieOrSlideEnd, noteDuration.letRingEnd);\r\n                this._handler.addNote(track.index, noteStart, noteSoundDuration, noteKey, dynamicValue, channel);\r\n            }\r\n        }\r\n        getNoteDuration(note, duration) {\r\n            const durationWithEffects = new MidiNoteDuration();\r\n            durationWithEffects.noteOnly = duration;\r\n            durationWithEffects.untilTieOrSlideEnd = duration;\r\n            durationWithEffects.letRingEnd = duration;\r\n            if (note.isDead) {\r\n                durationWithEffects.noteOnly = this.applyStaticDuration(MidiFileGenerator.DefaultDurationDead, duration);\r\n                durationWithEffects.untilTieOrSlideEnd = durationWithEffects.noteOnly;\r\n                durationWithEffects.letRingEnd = durationWithEffects.noteOnly;\r\n                return durationWithEffects;\r\n            }\r\n            if (note.isPalmMute) {\r\n                durationWithEffects.noteOnly = this.applyStaticDuration(MidiFileGenerator.DefaultDurationPalmMute, duration);\r\n                durationWithEffects.untilTieOrSlideEnd = durationWithEffects.noteOnly;\r\n                durationWithEffects.letRingEnd = durationWithEffects.noteOnly;\r\n                return durationWithEffects;\r\n            }\r\n            if (note.isStaccato) {\r\n                durationWithEffects.noteOnly = (duration / 2) | 0;\r\n                durationWithEffects.untilTieOrSlideEnd = durationWithEffects.noteOnly;\r\n                durationWithEffects.letRingEnd = durationWithEffects.noteOnly;\r\n                return durationWithEffects;\r\n            }\r\n            if (note.isTieOrigin) {\r\n                const endNote = note.tieDestination;\r\n                // for the initial start of the tie calculate absolute duration from start to end note\r\n                if (endNote) {\r\n                    if (!note.isTieDestination) {\r\n                        const startTick = note.beat.absolutePlaybackStart;\r\n                        const tieDestinationDuration = this.getNoteDuration(endNote, endNote.beat.playbackDuration);\r\n                        const endTick = endNote.beat.absolutePlaybackStart + tieDestinationDuration.untilTieOrSlideEnd;\r\n                        durationWithEffects.untilTieOrSlideEnd = endTick - startTick;\r\n                    }\r\n                    else {\r\n                        // for continuing ties, take the current duration + the one from the destination\r\n                        // this branch will be entered as part of the recusion of the if branch\r\n                        const tieDestinationDuration = this.getNoteDuration(endNote, endNote.beat.playbackDuration);\r\n                        durationWithEffects.untilTieOrSlideEnd = duration + tieDestinationDuration.untilTieOrSlideEnd;\r\n                    }\r\n                }\r\n            }\r\n            else if (note.slideOutType === SlideOutType.Legato) {\r\n                const endNote = note.slideTarget;\r\n                if (endNote) {\r\n                    const startTick = note.beat.absolutePlaybackStart;\r\n                    const slideTargetDuration = this.getNoteDuration(endNote, endNote.beat.playbackDuration);\r\n                    const endTick = endNote.beat.absolutePlaybackStart + slideTargetDuration.untilTieOrSlideEnd;\r\n                    durationWithEffects.untilTieOrSlideEnd = endTick - startTick;\r\n                }\r\n            }\r\n            if (note.isLetRing && this._settings.notation.notationMode === exports.NotationMode.GuitarPro) {\r\n                // LetRing ends when:\r\n                // - rest\r\n                let lastLetRingBeat = note.beat;\r\n                let letRingEnd = 0;\r\n                const maxDuration = note.beat.voice.bar.masterBar.calculateDuration();\r\n                while (lastLetRingBeat.nextBeat) {\r\n                    let next = lastLetRingBeat.nextBeat;\r\n                    if (next.isRest) {\r\n                        break;\r\n                    }\r\n                    // note on the same string\r\n                    if (note.isStringed && next.hasNoteOnString(note.string)) {\r\n                        break;\r\n                    }\r\n                    lastLetRingBeat = lastLetRingBeat.nextBeat;\r\n                    letRingEnd =\r\n                        lastLetRingBeat.absolutePlaybackStart -\r\n                            note.beat.absolutePlaybackStart +\r\n                            lastLetRingBeat.playbackDuration;\r\n                    if (letRingEnd > maxDuration) {\r\n                        letRingEnd = maxDuration;\r\n                        break;\r\n                    }\r\n                }\r\n                if (lastLetRingBeat === note.beat) {\r\n                    durationWithEffects.letRingEnd = duration;\r\n                }\r\n                else {\r\n                    durationWithEffects.letRingEnd = letRingEnd;\r\n                }\r\n            }\r\n            else {\r\n                durationWithEffects.letRingEnd = durationWithEffects.untilTieOrSlideEnd;\r\n            }\r\n            return durationWithEffects;\r\n        }\r\n        applyStaticDuration(duration, maximum) {\r\n            const value = ((this._currentTempo * duration) / BendPoint.MaxPosition) | 0;\r\n            return Math.min(value, maximum);\r\n        }\r\n        static getDynamicValue(note) {\r\n            let dynamicValue = note.dynamics;\r\n            // more silent on hammer destination\r\n            if (!note.beat.voice.bar.staff.isPercussion && note.hammerPullOrigin) {\r\n                dynamicValue--;\r\n            }\r\n            // more silent on ghost notes\r\n            if (note.isGhost) {\r\n                dynamicValue--;\r\n            }\r\n            // louder on accent\r\n            switch (note.accentuated) {\r\n                case AccentuationType.Normal:\r\n                    dynamicValue++;\r\n                    break;\r\n                case AccentuationType.Heavy:\r\n                    dynamicValue += 2;\r\n                    break;\r\n            }\r\n            return dynamicValue;\r\n        }\r\n        generateFadeIn(note, noteStart, noteDuration) {\r\n            const track = note.beat.voice.bar.staff.track;\r\n            const endVolume = MidiFileGenerator.toChannelShort(track.playbackInfo.volume);\r\n            const volumeFactor = endVolume / noteDuration.noteOnly;\r\n            const tickStep = 120;\r\n            const steps = (noteDuration.noteOnly / tickStep) | 0;\r\n            const endTick = noteStart + noteDuration.noteOnly;\r\n            for (let i = steps - 1; i >= 0; i--) {\r\n                const tick = endTick - i * tickStep;\r\n                const volume = (tick - noteStart) * volumeFactor;\r\n                if (i === steps - 1) {\r\n                    this._handler.addControlChange(track.index, noteStart, track.playbackInfo.primaryChannel, ControllerType.VolumeCoarse, volume);\r\n                    this._handler.addControlChange(track.index, noteStart, track.playbackInfo.secondaryChannel, ControllerType.VolumeCoarse, volume);\r\n                }\r\n                this._handler.addControlChange(track.index, tick, track.playbackInfo.primaryChannel, ControllerType.VolumeCoarse, volume);\r\n                this._handler.addControlChange(track.index, tick, track.playbackInfo.secondaryChannel, ControllerType.VolumeCoarse, volume);\r\n            }\r\n        }\r\n        generateVibrato(note, noteStart, noteDuration, noteKey, channel) {\r\n            let phaseLength = 0;\r\n            let bendAmplitude = 0;\r\n            switch (note.vibrato) {\r\n                case VibratoType.Slight:\r\n                    phaseLength = this._settings.player.vibrato.noteSlightLength;\r\n                    bendAmplitude = this._settings.player.vibrato.noteSlightAmplitude;\r\n                    break;\r\n                case VibratoType.Wide:\r\n                    phaseLength = this._settings.player.vibrato.noteWideLength;\r\n                    bendAmplitude = this._settings.player.vibrato.noteWideAmplitude;\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            const track = note.beat.voice.bar.staff.track;\r\n            this.generateVibratorWithParams(noteStart, noteDuration.noteOnly, phaseLength, bendAmplitude, (tick, value) => {\r\n                this._handler.addNoteBend(track.index, tick, channel, noteKey, value);\r\n            });\r\n        }\r\n        generateVibratorWithParams(noteStart, noteDuration, phaseLength, bendAmplitude, addBend) {\r\n            const resolution = 16;\r\n            const phaseHalf = (phaseLength / 2) | 0;\r\n            // 1st Phase stays at bend 0,\r\n            // then we have a sine wave with the given amplitude and phase length\r\n            noteStart += phaseLength;\r\n            const noteEnd = noteStart + noteDuration;\r\n            while (noteStart < noteEnd) {\r\n                let phase = 0;\r\n                const phaseDuration = noteStart + phaseLength < noteEnd ? phaseLength : noteEnd - noteStart;\r\n                while (phase < phaseDuration) {\r\n                    let bend = bendAmplitude * Math.sin((phase * Math.PI) / phaseHalf);\r\n                    addBend((noteStart + phase) | 0, MidiFileGenerator.getPitchWheel(bend));\r\n                    phase += resolution;\r\n                }\r\n                noteStart += phaseLength;\r\n            }\r\n        }\r\n        /**\r\n         * Calculates the midi pitch wheel value for the give bend value.\r\n         */\r\n        static getPitchWheel(bendValue) {\r\n            // bend values are 1/4 notes therefore we only take half a semitone value per bend value\r\n            return SynthConstants.DefaultPitchWheel + (bendValue / 2) * MidiFileGenerator.PitchValuePerSemitone;\r\n        }\r\n        generateSlide(note, noteStart, noteDuration, noteKey, dynamicValue, channel) {\r\n            let duration = note.slideOutType === SlideOutType.Legato ? noteDuration.noteOnly : noteDuration.untilTieOrSlideEnd;\r\n            let playedBendPoints = [];\r\n            let track = note.beat.voice.bar.staff.track;\r\n            const simpleSlidePitchOffset = this._settings.player.slide.simpleSlidePitchOffset;\r\n            const simpleSlideDurationOffset = Math.floor(BendPoint.MaxPosition * this._settings.player.slide.simpleSlideDurationRatio);\r\n            const shiftSlideDurationOffset = Math.floor(BendPoint.MaxPosition * this._settings.player.slide.shiftSlideDurationRatio);\r\n            // Shift Slide: Play note, move up to target note, play end note\r\n            // Legato Slide: Play note, move up to target note, no pick on end note, just keep it ringing\r\n            // 2 bend points: one on 0/0, dy/MaxPos.\r\n            // Slide into from above/below: Play note on lower pitch, slide into it quickly at start\r\n            // Slide out above/blow: Play note on normal pitch, slide out quickly at end\r\n            switch (note.slideInType) {\r\n                case SlideInType.IntoFromAbove:\r\n                    playedBendPoints.push(new BendPoint(0, simpleSlidePitchOffset));\r\n                    playedBendPoints.push(new BendPoint(simpleSlideDurationOffset, 0));\r\n                    break;\r\n                case SlideInType.IntoFromBelow:\r\n                    playedBendPoints.push(new BendPoint(0, -simpleSlidePitchOffset));\r\n                    playedBendPoints.push(new BendPoint(simpleSlideDurationOffset, 0));\r\n                    break;\r\n            }\r\n            switch (note.slideOutType) {\r\n                case SlideOutType.Legato:\r\n                case SlideOutType.Shift:\r\n                    playedBendPoints.push(new BendPoint(shiftSlideDurationOffset, 0));\r\n                    // normal note values are in 1/2 tones, bends are in 1/4 tones\r\n                    const dy = (note.slideTarget.realValue - note.realValue) * 2;\r\n                    playedBendPoints.push(new BendPoint(BendPoint.MaxPosition, dy));\r\n                    break;\r\n                case SlideOutType.OutDown:\r\n                    playedBendPoints.push(new BendPoint(BendPoint.MaxPosition - simpleSlideDurationOffset, 0));\r\n                    playedBendPoints.push(new BendPoint(BendPoint.MaxPosition, -simpleSlidePitchOffset));\r\n                    break;\r\n                case SlideOutType.OutUp:\r\n                    playedBendPoints.push(new BendPoint(BendPoint.MaxPosition - simpleSlideDurationOffset, 0));\r\n                    playedBendPoints.push(new BendPoint(BendPoint.MaxPosition, simpleSlidePitchOffset));\r\n                    break;\r\n            }\r\n            this.generateWhammyOrBend(noteStart, duration, playedBendPoints, (tick, value) => {\r\n                this._handler.addNoteBend(track.index, tick, channel, noteKey, value);\r\n            });\r\n        }\r\n        generateBend(note, noteStart, noteDuration, noteKey, channel) {\r\n            let bendPoints = note.bendPoints;\r\n            let track = note.beat.voice.bar.staff.track;\r\n            const addBend = (tick, value) => {\r\n                this._handler.addNoteBend(track.index, tick, channel, noteKey, value);\r\n            };\r\n            // if bend is extended on next tied note, we directly bend to the final bend value\r\n            let finalBendValue = null;\r\n            // Bends are spread across all tied notes unless they have a bend on their own.\r\n            let duration;\r\n            if (note.isTieOrigin && this._settings.notation.extendBendArrowsOnTiedNotes) {\r\n                let endNote = note;\r\n                while (endNote.isTieOrigin && !endNote.tieDestination.hasBend) {\r\n                    endNote = endNote.tieDestination;\r\n                }\r\n                duration =\r\n                    endNote.beat.absolutePlaybackStart -\r\n                        note.beat.absolutePlaybackStart +\r\n                        this.getNoteDuration(endNote, endNote.beat.playbackDuration).noteOnly;\r\n            }\r\n            else if (note.isTieOrigin && note.beat.graceType !== GraceType.None) {\r\n                switch (note.tieDestination.bendType) {\r\n                    case BendType.Bend:\r\n                    case BendType.BendRelease:\r\n                    case BendType.PrebendBend:\r\n                        finalBendValue = note.tieDestination.bendPoints[1].value;\r\n                        break;\r\n                    case BendType.Prebend:\r\n                    case BendType.PrebendRelease:\r\n                        finalBendValue = note.tieDestination.bendPoints[0].value;\r\n                        break;\r\n                }\r\n                duration = Math.max(noteDuration.noteOnly, MidiUtils.millisToTicks(this._settings.player.songBookBendDuration, this._currentTempo));\r\n            }\r\n            else {\r\n                duration = noteDuration.noteOnly;\r\n            }\r\n            // ensure prebends are slightly before the actual note.\r\n            if (bendPoints[0].value > 0 && !note.isContinuedBend && noteStart > 0) {\r\n                noteStart--;\r\n            }\r\n            const bendDuration = Math.min(duration, MidiUtils.millisToTicks(this._settings.player.songBookBendDuration, this._currentTempo));\r\n            let playedBendPoints = [];\r\n            switch (note.bendType) {\r\n                case BendType.Custom:\r\n                    playedBendPoints = bendPoints;\r\n                    break;\r\n                case BendType.Bend:\r\n                case BendType.Release:\r\n                    switch (note.bendStyle) {\r\n                        case BendStyle.Default:\r\n                            playedBendPoints = bendPoints;\r\n                            break;\r\n                        case BendStyle.Gradual:\r\n                            playedBendPoints.push(new BendPoint(0, note.bendPoints[0].value));\r\n                            if (!finalBendValue || finalBendValue < note.bendPoints[1].value) {\r\n                                finalBendValue = note.bendPoints[1].value;\r\n                            }\r\n                            playedBendPoints.push(new BendPoint(BendPoint.MaxPosition, finalBendValue));\r\n                            break;\r\n                        case BendStyle.Fast:\r\n                            if (!finalBendValue || finalBendValue < note.bendPoints[1].value) {\r\n                                finalBendValue = note.bendPoints[1].value;\r\n                            }\r\n                            if (note.beat.graceType === GraceType.BendGrace) {\r\n                                this.generateSongBookWhammyOrBend(noteStart, duration, true, [note.bendPoints[0].value, finalBendValue], bendDuration, addBend);\r\n                            }\r\n                            else {\r\n                                this.generateSongBookWhammyOrBend(noteStart, duration, false, [note.bendPoints[0].value, finalBendValue], bendDuration, addBend);\r\n                            }\r\n                            return;\r\n                    }\r\n                    break;\r\n                case BendType.BendRelease:\r\n                    switch (note.bendStyle) {\r\n                        case BendStyle.Default:\r\n                            playedBendPoints = bendPoints;\r\n                            break;\r\n                        case BendStyle.Gradual:\r\n                            playedBendPoints.push(new BendPoint(0, note.bendPoints[0].value));\r\n                            playedBendPoints.push(new BendPoint((BendPoint.MaxPosition / 2) | 0, note.bendPoints[1].value));\r\n                            playedBendPoints.push(new BendPoint(BendPoint.MaxPosition, note.bendPoints[2].value));\r\n                            break;\r\n                        case BendStyle.Fast:\r\n                            this.generateSongBookWhammyOrBend(noteStart, duration, false, [note.bendPoints[0].value, note.bendPoints[1].value, note.bendPoints[2].value], bendDuration, addBend);\r\n                            return;\r\n                    }\r\n                    break;\r\n                case BendType.Hold:\r\n                    playedBendPoints = bendPoints;\r\n                    break;\r\n                case BendType.Prebend:\r\n                    playedBendPoints = bendPoints;\r\n                    break;\r\n                case BendType.PrebendBend:\r\n                    switch (note.bendStyle) {\r\n                        case BendStyle.Default:\r\n                            playedBendPoints = bendPoints;\r\n                            break;\r\n                        case BendStyle.Gradual:\r\n                            playedBendPoints.push(new BendPoint(0, note.bendPoints[0].value));\r\n                            playedBendPoints.push(new BendPoint(BendPoint.MaxPosition, note.bendPoints[1].value));\r\n                            break;\r\n                        case BendStyle.Fast:\r\n                            const preBendValue = MidiFileGenerator.getPitchWheel(note.bendPoints[0].value);\r\n                            addBend(noteStart, preBendValue | 0);\r\n                            if (!finalBendValue || finalBendValue < note.bendPoints[1].value) {\r\n                                finalBendValue = note.bendPoints[1].value;\r\n                            }\r\n                            this.generateSongBookWhammyOrBend(noteStart, duration, false, [note.bendPoints[0].value, finalBendValue], bendDuration, addBend);\r\n                            return;\r\n                    }\r\n                    break;\r\n                case BendType.PrebendRelease:\r\n                    switch (note.bendStyle) {\r\n                        case BendStyle.Default:\r\n                            playedBendPoints = bendPoints;\r\n                            break;\r\n                        case BendStyle.Gradual:\r\n                            playedBendPoints.push(new BendPoint(0, note.bendPoints[0].value));\r\n                            playedBendPoints.push(new BendPoint(BendPoint.MaxPosition, note.bendPoints[1].value));\r\n                            break;\r\n                        case BendStyle.Fast:\r\n                            const preBendValue = MidiFileGenerator.getPitchWheel(note.bendPoints[0].value);\r\n                            addBend(noteStart, preBendValue | 0);\r\n                            this.generateSongBookWhammyOrBend(noteStart, duration, false, [note.bendPoints[0].value, note.bendPoints[1].value], bendDuration, addBend);\r\n                            return;\r\n                    }\r\n                    break;\r\n            }\r\n            this.generateWhammyOrBend(noteStart, duration, playedBendPoints, addBend);\r\n        }\r\n        generateSongBookWhammyOrBend(noteStart, duration, bendAtBeginning, bendValues, bendDuration, addBend) {\r\n            const startTick = bendAtBeginning ? noteStart : noteStart + duration - bendDuration;\r\n            const ticksBetweenPoints = bendDuration / (bendValues.length - 1);\r\n            for (let i = 0; i < bendValues.length - 1; i++) {\r\n                const currentBendValue = MidiFileGenerator.getPitchWheel(bendValues[i]);\r\n                const nextBendValue = MidiFileGenerator.getPitchWheel(bendValues[i + 1]);\r\n                const tick = startTick + ticksBetweenPoints * i;\r\n                this.generateBendValues(tick, ticksBetweenPoints, currentBendValue, nextBendValue, addBend);\r\n            }\r\n        }\r\n        generateWhammy(beat, noteStart, noteDuration, channel) {\r\n            const bendPoints = beat.whammyBarPoints;\r\n            const track = beat.voice.bar.staff.track;\r\n            const duration = noteDuration.noteOnly;\r\n            // ensure prebends are slightly before the actual note.\r\n            if (bendPoints[0].value > 0 && !beat.isContinuedWhammy) {\r\n                noteStart--;\r\n            }\r\n            const addBend = (tick, value) => {\r\n                this._handler.addBend(track.index, tick, channel, value);\r\n            };\r\n            let playedBendPoints = [];\r\n            switch (beat.whammyBarType) {\r\n                case WhammyType.Custom:\r\n                    playedBendPoints = bendPoints;\r\n                    break;\r\n                case WhammyType.Dive:\r\n                    switch (beat.whammyStyle) {\r\n                        case BendStyle.Default:\r\n                            playedBendPoints = bendPoints;\r\n                            break;\r\n                        case BendStyle.Gradual:\r\n                            playedBendPoints.push(new BendPoint(0, bendPoints[0].value));\r\n                            playedBendPoints.push(new BendPoint(BendPoint.MaxPosition, bendPoints[1].value));\r\n                            break;\r\n                        case BendStyle.Fast:\r\n                            const whammyDuration = Math.min(duration, MidiUtils.millisToTicks(this._settings.player.songBookBendDuration, this._currentTempo));\r\n                            this.generateSongBookWhammyOrBend(noteStart, duration, false, [bendPoints[0].value, bendPoints[1].value], whammyDuration, addBend);\r\n                            return;\r\n                    }\r\n                    break;\r\n                case WhammyType.Dip:\r\n                    switch (beat.whammyStyle) {\r\n                        case BendStyle.Default:\r\n                            playedBendPoints = bendPoints;\r\n                            break;\r\n                        case BendStyle.Gradual:\r\n                            playedBendPoints.push(new BendPoint(0, bendPoints[0].value));\r\n                            playedBendPoints.push(new BendPoint((BendPoint.MaxPosition / 2) | 0, bendPoints[1].value));\r\n                            playedBendPoints.push(new BendPoint(BendPoint.MaxPosition, bendPoints[2].value));\r\n                            break;\r\n                        case BendStyle.Fast:\r\n                            const whammyDuration = Math.min(duration, MidiUtils.millisToTicks(this._settings.player.songBookDipDuration, this._currentTempo));\r\n                            this.generateSongBookWhammyOrBend(noteStart, duration, true, [bendPoints[0].value, bendPoints[1].value, bendPoints[2].value], whammyDuration, addBend);\r\n                            return;\r\n                    }\r\n                    break;\r\n                case WhammyType.Hold:\r\n                    playedBendPoints = bendPoints;\r\n                    break;\r\n                case WhammyType.Predive:\r\n                    playedBendPoints = bendPoints;\r\n                    break;\r\n                case WhammyType.PrediveDive:\r\n                    switch (beat.whammyStyle) {\r\n                        case BendStyle.Default:\r\n                            playedBendPoints = bendPoints;\r\n                            break;\r\n                        case BendStyle.Gradual:\r\n                            playedBendPoints.push(new BendPoint(0, bendPoints[0].value));\r\n                            playedBendPoints.push(new BendPoint((BendPoint.MaxPosition / 2) | 0, bendPoints[0].value));\r\n                            playedBendPoints.push(new BendPoint(BendPoint.MaxPosition, bendPoints[1].value));\r\n                            break;\r\n                        case BendStyle.Fast:\r\n                            const preDiveValue = MidiFileGenerator.getPitchWheel(bendPoints[0].value);\r\n                            this._handler.addBend(track.index, noteStart, channel, preDiveValue | 0);\r\n                            const whammyDuration = Math.min(duration, MidiUtils.millisToTicks(this._settings.player.songBookBendDuration, this._currentTempo));\r\n                            this.generateSongBookWhammyOrBend(noteStart, duration, false, [bendPoints[0].value, bendPoints[1].value], whammyDuration, addBend);\r\n                            return;\r\n                    }\r\n                    break;\r\n            }\r\n            this.generateWhammyOrBend(noteStart, duration, playedBendPoints, addBend);\r\n        }\r\n        generateWhammyOrBend(noteStart, duration, playedBendPoints, addBend) {\r\n            const ticksPerPosition = duration / BendPoint.MaxPosition;\r\n            for (let i = 0; i < playedBendPoints.length - 1; i++) {\r\n                const currentPoint = playedBendPoints[i];\r\n                const nextPoint = playedBendPoints[i + 1];\r\n                // calculate the midi pitchbend values start and end values\r\n                const currentBendValue = MidiFileGenerator.getPitchWheel(currentPoint.value);\r\n                const nextBendValue = MidiFileGenerator.getPitchWheel(nextPoint.value);\r\n                // how many midi ticks do we have to spend between this point and the next one?\r\n                const ticksBetweenPoints = ticksPerPosition * (nextPoint.offset - currentPoint.offset);\r\n                // we will generate one pitchbend message for each value\r\n                // for this we need to calculate how many ticks to offset per value\r\n                const tick = noteStart + ticksPerPosition * currentPoint.offset;\r\n                this.generateBendValues(tick, ticksBetweenPoints, currentBendValue, nextBendValue, addBend);\r\n            }\r\n        }\r\n        generateBendValues(currentTick, ticksBetweenPoints, currentBendValue, nextBendValue, addBend) {\r\n            const millisBetweenPoints = MidiUtils.ticksToMillis(ticksBetweenPoints, this._currentTempo);\r\n            const numberOfSemitones = Math.abs(nextBendValue - currentBendValue) / MidiFileGenerator.PitchValuePerSemitone;\r\n            const numberOfSteps = Math.max(MidiFileGenerator.MinBreakpointsPerSemitone * numberOfSemitones, millisBetweenPoints / MidiFileGenerator.MillisecondsPerBreakpoint);\r\n            const ticksPerBreakpoint = ticksBetweenPoints / numberOfSteps;\r\n            const pitchPerBreakpoint = (nextBendValue - currentBendValue) / numberOfSteps;\r\n            for (let i = 0; i < numberOfSteps; i++) {\r\n                addBend(currentTick | 0, Math.round(currentBendValue));\r\n                currentBendValue += pitchPerBreakpoint;\r\n                currentTick += ticksPerBreakpoint;\r\n            }\r\n            // final bend value if needed\r\n            if (currentBendValue < nextBendValue) {\r\n                addBend(currentTick | 0, nextBendValue);\r\n            }\r\n        }\r\n        generateTrill(note, noteStart, noteDuration, noteKey, dynamicValue, channel) {\r\n            const track = note.beat.voice.bar.staff.track;\r\n            const trillKey = note.stringTuning + note.trillFret;\r\n            let trillLength = MidiUtils.toTicks(note.trillSpeed);\r\n            let realKey = true;\r\n            let tick = noteStart;\r\n            let end = noteStart + noteDuration.untilTieOrSlideEnd;\r\n            while (tick + 10 < end) {\r\n                // only the rest on last trill play\r\n                if (tick + trillLength >= end) {\r\n                    trillLength = end - tick;\r\n                }\r\n                this._handler.addNote(track.index, tick, trillLength, realKey ? trillKey : noteKey, dynamicValue, channel);\r\n                realKey = !realKey;\r\n                tick += trillLength;\r\n            }\r\n        }\r\n        generateTremoloPicking(note, noteStart, noteDuration, noteKey, dynamicValue, channel) {\r\n            const track = note.beat.voice.bar.staff.track;\r\n            let tpLength = MidiUtils.toTicks(note.beat.tremoloSpeed);\r\n            let tick = noteStart;\r\n            const end = noteStart + noteDuration.untilTieOrSlideEnd;\r\n            while (tick + 10 < end) {\r\n                // only the rest on last trill play\r\n                if (tick + tpLength >= end) {\r\n                    tpLength = end - tick;\r\n                }\r\n                this._handler.addNote(track.index, tick, tpLength, noteKey, dynamicValue, channel);\r\n                tick += tpLength;\r\n            }\r\n        }\r\n        getBrushInfo(beat) {\r\n            const brushInfo = new Int32Array(beat.voice.bar.staff.tuning.length);\r\n            if (beat.brushType !== BrushType.None) {\r\n                //\r\n                // calculate the number of\r\n                // a mask where the single bits indicate the strings used\r\n                let stringUsed = 0;\r\n                let stringCount = 0;\r\n                for (const n of beat.notes) {\r\n                    if (n.isTieDestination) {\r\n                        continue;\r\n                    }\r\n                    stringUsed |= 0x01 << (n.string - 1);\r\n                    stringCount++;\r\n                }\r\n                //\r\n                // calculate time offset for all strings\r\n                if (beat.notes.length > 0) {\r\n                    let brushMove = 0;\r\n                    const brushIncrement = (beat.brushDuration / (stringCount - 1)) | 0;\r\n                    for (let i = 0; i < beat.voice.bar.staff.tuning.length; i++) {\r\n                        let index = beat.brushType === BrushType.ArpeggioDown || beat.brushType === BrushType.BrushDown\r\n                            ? i\r\n                            : brushInfo.length - 1 - i;\r\n                        if ((stringUsed & (0x01 << index)) !== 0) {\r\n                            brushInfo[index] = brushMove;\r\n                            brushMove += brushIncrement;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return brushInfo;\r\n        }\r\n        generateAutomation(beat, automation, startMove) {\r\n            switch (automation.type) {\r\n                case AutomationType.Instrument:\r\n                    this.addProgramChange(beat.voice.bar.staff.track, beat.playbackStart + startMove, beat.voice.bar.staff.track.playbackInfo.primaryChannel, (automation.value | 0) & 0xff);\r\n                    this.addProgramChange(beat.voice.bar.staff.track, beat.playbackStart + startMove, beat.voice.bar.staff.track.playbackInfo.secondaryChannel, (automation.value | 0) & 0xff);\r\n                    break;\r\n                case AutomationType.Balance:\r\n                    let balance = MidiFileGenerator.toChannelShort(automation.value);\r\n                    this._handler.addControlChange(beat.voice.bar.staff.track.index, beat.playbackStart + startMove, beat.voice.bar.staff.track.playbackInfo.primaryChannel, ControllerType.PanCoarse, balance);\r\n                    this._handler.addControlChange(beat.voice.bar.staff.track.index, beat.playbackStart + startMove, beat.voice.bar.staff.track.playbackInfo.secondaryChannel, ControllerType.PanCoarse, balance);\r\n                    break;\r\n                case AutomationType.Volume:\r\n                    let volume = MidiFileGenerator.toChannelShort(automation.value);\r\n                    this._handler.addControlChange(beat.voice.bar.staff.track.index, beat.playbackStart + startMove, beat.voice.bar.staff.track.playbackInfo.primaryChannel, ControllerType.VolumeCoarse, volume);\r\n                    this._handler.addControlChange(beat.voice.bar.staff.track.index, beat.playbackStart + startMove, beat.voice.bar.staff.track.playbackInfo.secondaryChannel, ControllerType.VolumeCoarse, volume);\r\n                    break;\r\n            }\r\n        }\r\n        prepareSingleBeat(beat) {\r\n            // collect tempo and program at given beat\r\n            let tempo = -1;\r\n            let program = -1;\r\n            // traverse to previous beats until we maybe hit the automations needed\r\n            let currentBeat = beat;\r\n            while (currentBeat && (tempo === -1 || program === -1)) {\r\n                for (const automation of beat.automations) {\r\n                    switch (automation.type) {\r\n                        case AutomationType.Instrument:\r\n                            program = automation.value;\r\n                            break;\r\n                        case AutomationType.Tempo:\r\n                            tempo = automation.value;\r\n                            break;\r\n                    }\r\n                }\r\n                currentBeat = currentBeat.previousBeat;\r\n            }\r\n            const track = beat.voice.bar.staff.track;\r\n            const masterBar = beat.voice.bar.masterBar;\r\n            if (tempo === -1) {\r\n                tempo = masterBar.score.tempo;\r\n            }\r\n            if (program === -1) {\r\n                program = track.playbackInfo.program;\r\n            }\r\n            const volume = track.playbackInfo.volume;\r\n            // setup channel\r\n            this.generateTrack(track);\r\n            this._handler.addTimeSignature(0, masterBar.timeSignatureNumerator, masterBar.timeSignatureDenominator);\r\n            this._handler.addTempo(0, tempo);\r\n            let volumeCoarse = MidiFileGenerator.toChannelShort(volume);\r\n            this._handler.addControlChange(0, 0, track.playbackInfo.primaryChannel, ControllerType.VolumeCoarse, volumeCoarse);\r\n            this._handler.addControlChange(0, 0, track.playbackInfo.secondaryChannel, ControllerType.VolumeCoarse, volumeCoarse);\r\n        }\r\n        generateSingleBeat(beat) {\r\n            this.prepareSingleBeat(beat);\r\n            this.generateBeat(beat, -beat.playbackStart /* to bring it to 0*/, beat.voice.bar);\r\n        }\r\n        generateSingleNote(note) {\r\n            this.prepareSingleBeat(note.beat);\r\n            this.generateNote(note, -note.beat.playbackStart, note.beat.playbackDuration, new Int32Array(note.beat.voice.bar.staff.tuning.length));\r\n        }\r\n    }\r\n    MidiFileGenerator.DefaultDurationDead = 30;\r\n    MidiFileGenerator.DefaultDurationPalmMute = 80;\r\n    /**\r\n     * Maximum semitones that are supported in bends in one direction (up or down)\r\n     * GP has 8 full tones on whammys.\r\n     */\r\n    MidiFileGenerator.PitchBendRangeInSemitones = 8 * 2;\r\n    /**\r\n     * The value on how many pitch-values are used for one semitone\r\n     */\r\n    MidiFileGenerator.PitchValuePerSemitone = SynthConstants.DefaultPitchWheel / MidiFileGenerator.PitchBendRangeInSemitones;\r\n    /**\r\n     * The minimum number of breakpoints generated per semitone bend.\r\n     */\r\n    MidiFileGenerator.MinBreakpointsPerSemitone = 6;\r\n    /**\r\n     * How long until a new breakpoint is generated for a bend.\r\n     */\r\n    MidiFileGenerator.MillisecondsPerBreakpoint = 150;\n\n    /**\r\n     * Represents a range of the song that should be played.\r\n     */\r\n    class PlaybackRange {\r\n        constructor() {\r\n            /**\r\n             * The position in midi ticks from where the song should start.\r\n             */\r\n            this.startTick = 0;\r\n            /**\r\n             * The position in midi ticks to where the song should be played.\r\n             */\r\n            this.endTick = 0;\r\n        }\r\n    }\n\n    /**\r\n     * A glyph is a single symbol which can be added to a GlyphBarRenderer for automated\r\n     * layouting and drawing of stacked symbols.\r\n     */\r\n    class Glyph {\r\n        constructor(x, y) {\r\n            this.width = 0;\r\n            this.height = 0;\r\n            this.x = x;\r\n            this.y = y;\r\n        }\r\n        get scale() {\r\n            return this.renderer.scale;\r\n        }\r\n        doLayout() {\r\n            // to be implemented in subclass\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            // to be implemented in subclass\r\n        }\r\n    }\n\n    /**\r\n     * Effect-Glyphs implementing this public interface get notified\r\n     * as they are expanded over multiple beats.\r\n     */\r\n    class EffectGlyph extends Glyph {\r\n        constructor(x = 0, y = 0) {\r\n            super(x, y);\r\n            /**\r\n             * Gets or sets the next glyph of the same type in case\r\n             * the effect glyph is expanded when using {@link EffectBarGlyphSizing.groupedOnBeat}.\r\n             */\r\n            this.nextGlyph = null;\r\n            /**\r\n             * Gets or sets the previous glyph of the same type in case\r\n             * the effect glyph is expanded when using {@link EffectBarGlyphSizing.groupedOnBeat}.\r\n             */\r\n            this.previousGlyph = null;\r\n        }\r\n    }\n\n    class MusicFontGlyph extends EffectGlyph {\r\n        constructor(x, y, glyphScale, symbol) {\r\n            super(x, y);\r\n            this.glyphScale = 0;\r\n            this.glyphScale = glyphScale;\r\n            this.symbol = symbol;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            canvas.fillMusicFontSymbol(cx + this.x, cy + this.y, this.glyphScale * this.scale, this.symbol, false);\r\n        }\r\n    }\n\n    class NoteHeadGlyph extends MusicFontGlyph {\r\n        constructor(x, y, duration, isGrace) {\r\n            super(x, y, isGrace ? NoteHeadGlyph.GraceScale : 1, NoteHeadGlyph.getSymbol(duration));\r\n            this._isGrace = isGrace;\r\n            this._duration = duration;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            let offset = this._isGrace ? this.scale : 0;\r\n            canvas.fillMusicFontSymbol(cx + this.x, cy + this.y + offset, this.glyphScale * this.scale, this.symbol, false);\r\n        }\r\n        doLayout() {\r\n            let scale = (this._isGrace ? NoteHeadGlyph.GraceScale : 1) * this.scale;\r\n            switch (this._duration) {\r\n                case Duration.QuadrupleWhole:\r\n                    this.width = 14 * scale;\r\n                    break;\r\n                case Duration.DoubleWhole:\r\n                    this.width = 14 * (this._isGrace ? NoteHeadGlyph.GraceScale : 1) * this.scale;\r\n                    break;\r\n                case Duration.Whole:\r\n                    this.width = 14 * (this._isGrace ? NoteHeadGlyph.GraceScale : 1) * this.scale;\r\n                    break;\r\n                default:\r\n                    this.width = NoteHeadGlyph.QuarterNoteHeadWidth * (this._isGrace ? NoteHeadGlyph.GraceScale : 1) * this.scale;\r\n                    break;\r\n            }\r\n            this.height = NoteHeadGlyph.NoteHeadHeight * scale;\r\n        }\r\n        static getSymbol(duration) {\r\n            switch (duration) {\r\n                case Duration.QuadrupleWhole:\r\n                    return MusicFontSymbol.NoteheadDoubleWholeSquare;\r\n                case Duration.DoubleWhole:\r\n                    return MusicFontSymbol.NoteheadDoubleWhole;\r\n                case Duration.Whole:\r\n                    return MusicFontSymbol.NoteheadWhole;\r\n                case Duration.Half:\r\n                    return MusicFontSymbol.NoteheadHalf;\r\n                default:\r\n                    return MusicFontSymbol.NoteheadBlack;\r\n            }\r\n        }\r\n    }\r\n    NoteHeadGlyph.GraceScale = 0.75;\r\n    NoteHeadGlyph.NoteHeadHeight = 8;\r\n    NoteHeadGlyph.QuarterNoteHeadWidth = 9;\n\n    class FlagGlyph extends MusicFontGlyph {\r\n        constructor(x, y, duration, direction, isGrace) {\r\n            super(x, y, isGrace ? NoteHeadGlyph.GraceScale : 1, FlagGlyph.getSymbol(duration, direction, isGrace));\r\n        }\r\n        doLayout() {\r\n            this.width = 0;\r\n        }\r\n        static getSymbol(duration, direction, isGrace) {\r\n            if (isGrace) {\r\n                duration = Duration.Eighth;\r\n            }\r\n            if (direction === BeamDirection.Up) {\r\n                switch (duration) {\r\n                    case Duration.Eighth:\r\n                        return MusicFontSymbol.FlagEighthUp;\r\n                    case Duration.Sixteenth:\r\n                        return MusicFontSymbol.FlagSixteenthUp;\r\n                    case Duration.ThirtySecond:\r\n                        return MusicFontSymbol.FlagThirtySecondUp;\r\n                    case Duration.SixtyFourth:\r\n                        return MusicFontSymbol.FlagSixtyFourthUp;\r\n                    case Duration.OneHundredTwentyEighth:\r\n                        return MusicFontSymbol.FlagOneHundredTwentyEighthUp;\r\n                    case Duration.TwoHundredFiftySixth:\r\n                        return MusicFontSymbol.FlagTwoHundredFiftySixthUp;\r\n                    default:\r\n                        return MusicFontSymbol.FlagEighthUp;\r\n                }\r\n            }\r\n            switch (duration) {\r\n                case Duration.Eighth:\r\n                    return MusicFontSymbol.FlagEighthDown;\r\n                case Duration.Sixteenth:\r\n                    return MusicFontSymbol.FlagSixteenthDown;\r\n                case Duration.ThirtySecond:\r\n                    return MusicFontSymbol.FlagThirtySecondDown;\r\n                case Duration.SixtyFourth:\r\n                    return MusicFontSymbol.FlagSixtyFourthDown;\r\n                case Duration.OneHundredTwentyEighth:\r\n                    return MusicFontSymbol.FlagOneHundredTwentyEighthDown;\r\n                case Duration.TwoHundredFiftySixth:\r\n                    return MusicFontSymbol.FlagOneHundredTwentyEighthDown;\r\n                default:\r\n                    return MusicFontSymbol.FlagEighthDown;\r\n            }\r\n        }\r\n    }\r\n    FlagGlyph.FlagWidth = 11;\n\n    class BeatContainerGlyph extends Glyph {\r\n        constructor(beat, voiceContainer) {\r\n            super(0, 0);\r\n            this.ties = [];\r\n            this.minWidth = 0;\r\n            this.beat = beat;\r\n            this.ties = [];\r\n            this.voiceContainer = voiceContainer;\r\n        }\r\n        get onTimeX() {\r\n            return this.onNotes.x + this.onNotes.centerX;\r\n        }\r\n        registerLayoutingInfo(layoutings) {\r\n            let preBeatStretch = this.onTimeX;\r\n            if (this.beat.graceGroup && !this.beat.graceGroup.isComplete) {\r\n                preBeatStretch += BeatContainerGlyph.GraceBeatPadding * this.renderer.scale;\r\n            }\r\n            let postBeatStretch = this.onNotes.width - this.onNotes.centerX;\r\n            // make space for flag\r\n            const helper = this.renderer.helpers.getBeamingHelperForBeat(this.beat);\r\n            if (helper && helper.hasFlag || this.beat.graceType !== GraceType.None) {\r\n                postBeatStretch += (FlagGlyph.FlagWidth * this.scale * (this.beat.graceType !== GraceType.None ? NoteHeadGlyph.GraceScale : 1));\r\n            }\r\n            for (const tie of this.ties) {\r\n                postBeatStretch += tie.width;\r\n            }\r\n            // Add some further spacing to grace notes\r\n            if (this.beat.graceType !== GraceType.None) {\r\n                postBeatStretch += BeatContainerGlyph.GraceBeatPadding * this.renderer.scale;\r\n            }\r\n            layoutings.addBeatSpring(this.beat, preBeatStretch, postBeatStretch);\r\n            // store sizes for special renderers like the EffectBarRenderer\r\n            layoutings.setPreBeatSize(this.beat, this.preNotes.width);\r\n            layoutings.setOnBeatSize(this.beat, this.onNotes.width);\r\n            layoutings.setBeatCenterX(this.beat, this.onNotes.centerX);\r\n        }\r\n        applyLayoutingInfo(info) {\r\n            let offset = info.getBeatCenterX(this.beat) - this.onNotes.centerX;\r\n            if (this.beat.graceGroup && !this.beat.graceGroup.isComplete) {\r\n                offset += BeatContainerGlyph.GraceBeatPadding * this.renderer.scale;\r\n            }\r\n            this.preNotes.x = offset;\r\n            this.preNotes.width = info.getPreBeatSize(this.beat);\r\n            this.onNotes.width = info.getOnBeatSize(this.beat);\r\n            this.onNotes.x = this.preNotes.x + this.preNotes.width;\r\n            this.onNotes.updateBeamingHelper();\r\n            this.updateWidth();\r\n        }\r\n        doLayout() {\r\n            this.preNotes.x = 0;\r\n            this.preNotes.renderer = this.renderer;\r\n            this.preNotes.container = this;\r\n            this.preNotes.doLayout();\r\n            this.onNotes.x = this.preNotes.x + this.preNotes.width;\r\n            this.onNotes.renderer = this.renderer;\r\n            this.onNotes.container = this;\r\n            this.onNotes.doLayout();\r\n            let i = this.beat.notes.length - 1;\r\n            while (i >= 0) {\r\n                this.createTies(this.beat.notes[i--]);\r\n            }\r\n            this.updateWidth();\r\n        }\r\n        updateWidth() {\r\n            this.minWidth = this.preNotes.width + this.onNotes.width;\r\n            if (!this.beat.isRest) {\r\n                if (this.onNotes.beamingHelper.beats.length === 1) {\r\n                    // make space for flag\r\n                    if (this.beat.duration >= Duration.Eighth) {\r\n                        this.minWidth += 20 * this.scale;\r\n                    }\r\n                }\r\n                else {\r\n                    // ensure some space for small notes\r\n                    switch (this.beat.duration) {\r\n                        case Duration.OneHundredTwentyEighth:\r\n                        case Duration.TwoHundredFiftySixth:\r\n                            this.minWidth += 10 * this.scale;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            let tieWidth = 0;\r\n            for (let tie of this.ties) {\r\n                if (tie.width > tieWidth) {\r\n                    tieWidth = tie.width;\r\n                }\r\n            }\r\n            this.minWidth += tieWidth;\r\n            this.width = this.minWidth;\r\n        }\r\n        scaleToWidth(beatWidth) {\r\n            for (let tie of this.ties) {\r\n                tie.doLayout();\r\n            }\r\n            this.onNotes.updateBeamingHelper();\r\n            this.width = beatWidth;\r\n        }\r\n        createTies(n) {\r\n            // no default ties\r\n        }\r\n        static getGroupId(beat) {\r\n            return 'b' + beat.id;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            if (this.beat.voice.isEmpty) {\r\n                return;\r\n            }\r\n            let isEmptyGlyph = this.preNotes.isEmpty && this.onNotes.isEmpty && this.ties.length === 0;\r\n            if (isEmptyGlyph) {\r\n                return;\r\n            }\r\n            canvas.beginGroup(BeatContainerGlyph.getGroupId(this.beat));\r\n            // var c = canvas.color;\r\n            // var ta = canvas.textAlign;\r\n            // canvas.color = new Color(255, 0, 0);\r\n            // canvas.textAlign = TextAlign.Left;\r\n            // canvas.fillText(this.beat.playbackStart.toString(), cx + this.x, cy + this.y - 10);\r\n            // canvas.color = c;\r\n            // canvas.textAlign = ta;\r\n            // canvas.color = Color.random();\r\n            // canvas.fillRect(cx + this.x, cy + this.y, this.width, this.renderer.height);\r\n            // var oldColor = canvas.color;\r\n            // canvas.color = Color.random(100);\r\n            // canvas.fillRect(cx + this.x, cy + this.y, this.width, this.renderer.height);\r\n            // canvas.color = oldColor;\r\n            // canvas.color = new Color(200, 0, 0, 100);\r\n            // canvas.strokeRect(cx + this.x, cy + this.y + 15 * this.beat.voice.index, this.width, 10);\r\n            // canvas.font = new Font(\"Arial\", 10);\r\n            // canvas.color = new Color(0, 0, 0);\r\n            // canvas.fillText(this.beat.voice.index + \":\" + this.beat.index, cx + this.x, cy + this.y + 15 * this.beat.voice.index);\r\n            // if (this.beat.voice.index === 0) {\r\n            //     canvas.color = new Color(200, 0, 0, 100);\r\n            //     canvas.strokeRect(cx + this.x, cy + this.y + this.preNotes.y + 30, this.width, 10);\r\n            // }\r\n            this.preNotes.paint(cx + this.x, cy + this.y, canvas);\r\n            // if (this.beat.voice.index === 0) {\r\n            //     canvas.color = new Color(200, 0, 0, 100);\r\n            //     canvas.strokeRect(cx + this.x + this.preNotes.x, cy + this.y + this.preNotes.y, this.preNotes.width, 10);\r\n            // }\r\n            this.onNotes.paint(cx + this.x, cy + this.y, canvas);\r\n            // if (this.beat.voice.index === 0) {\r\n            //     canvas.color = new Color(0, 200, 0, 100);\r\n            //     canvas.strokeRect(cx + this.x + this.onNotes.x, cy + this.y + this.onNotes.y - 10, this.onNotes.width, 10);\r\n            // }\r\n            // paint the ties relative to the whole staff,\r\n            // reason: we have possibly multiple staves involved and need to calculate the correct positions.\r\n            let staffX = cx - this.voiceContainer.x - this.renderer.x;\r\n            let staffY = cy - this.voiceContainer.y - this.renderer.y;\r\n            for (let i = 0, j = this.ties.length; i < j; i++) {\r\n                let t = this.ties[i];\r\n                t.renderer = this.renderer;\r\n                t.paint(staffX, staffY, canvas);\r\n            }\r\n            canvas.endGroup();\r\n        }\r\n        buildBoundingsLookup(barBounds, cx, cy, isEmptyBar) {\r\n            let beatBoundings = new BeatBounds();\r\n            beatBoundings.beat = this.beat;\r\n            beatBoundings.visualBounds = new Bounds();\r\n            beatBoundings.visualBounds.x = cx + this.x + this.onNotes.x;\r\n            beatBoundings.visualBounds.y = barBounds.visualBounds.y;\r\n            beatBoundings.visualBounds.w = this.onNotes.width;\r\n            beatBoundings.visualBounds.h = barBounds.visualBounds.h;\r\n            beatBoundings.realBounds = new Bounds();\r\n            beatBoundings.realBounds.x = cx + this.x;\r\n            beatBoundings.realBounds.y = barBounds.realBounds.y;\r\n            beatBoundings.realBounds.w = this.width;\r\n            beatBoundings.realBounds.h = barBounds.realBounds.h;\r\n            if (isEmptyBar) {\r\n                beatBoundings.visualBounds.x = cx + this.x;\r\n                beatBoundings.realBounds.x = beatBoundings.visualBounds.x;\r\n            }\r\n            barBounds.addBeat(beatBoundings);\r\n            if (this.renderer.settings.core.includeNoteBounds) {\r\n                this.onNotes.buildBoundingsLookup(beatBoundings, cx + this.x, cy + this.y);\r\n            }\r\n        }\r\n    }\r\n    BeatContainerGlyph.GraceBeatPadding = 3;\n\n    /**\r\n     * Represents the information related to a resize event.\r\n     */\r\n    class ResizeEventArgs {\r\n        constructor() {\r\n            /**\r\n             * Gets the size before the resizing happened.\r\n             */\r\n            this.oldWidth = 0;\r\n            /**\r\n             * Gets the size after the resize was complete.\r\n             */\r\n            this.newWidth = 0;\r\n            /**\r\n             * Gets the settings currently used for rendering.\r\n             */\r\n            this.settings = null;\r\n        }\r\n        core() {\r\n            if (this.settings && this.causeIssue()) {\r\n                return this.settings.core;\r\n            }\r\n            return new CoreSettings();\r\n        }\r\n        causeIssue() {\r\n            this.settings = null;\r\n            return true;\r\n        }\r\n    }\n\n    class SelectionInfo {\r\n        constructor(beat) {\r\n            this.bounds = null;\r\n            this.beat = beat;\r\n        }\r\n    }\r\n    /**\r\n     * This class represents the public API of alphaTab and provides all logic to display\r\n     * a music sheet in any UI using the given {@link IUiFacade}\r\n     * @param <TSettings> The UI object holding the settings.\r\n     * @csharp_public\r\n     */\r\n    class AlphaTabApiBase {\r\n        /**\r\n         * Initializes a new instance of the {@link AlphaTabApiBase} class.\r\n         * @param uiFacade The UI facade to use for interacting with the user interface.\r\n         * @param settings The UI settings object to use for loading the settings.\r\n         */\r\n        constructor(uiFacade, settings) {\r\n            this._startTime = 0;\r\n            this._trackIndexes = null;\r\n            /**\r\n             * Gets the score holding all information about the song being rendered.\r\n             */\r\n            this.score = null;\r\n            /**\r\n             * Gets a list of the tracks that are currently rendered;\r\n             */\r\n            this.tracks = [];\r\n            this._tickCache = null;\r\n            /**\r\n             * Gets the alphaSynth player used for playback. This is the low-level API to the Midi synthesizer used for playback.\r\n             */\r\n            this.player = null;\r\n            this._cursorWrapper = null;\r\n            this._barCursor = null;\r\n            this._beatCursor = null;\r\n            this._selectionWrapper = null;\r\n            this._previousTick = 0;\r\n            this._playerState = PlayerState.Paused;\r\n            this._currentBeat = null;\r\n            this._previousStateForCursor = PlayerState.Paused;\r\n            this._previousCursorCache = null;\r\n            this._lastScroll = 0;\r\n            this.playedBeatChanged = new EventEmitterOfT();\r\n            this._beatMouseDown = false;\r\n            this._selectionStart = null;\r\n            this._selectionEnd = null;\r\n            this.beatMouseDown = new EventEmitterOfT();\r\n            this.beatMouseMove = new EventEmitterOfT();\r\n            this.beatMouseUp = new EventEmitterOfT();\r\n            this.scoreLoaded = new EventEmitterOfT();\r\n            this.resize = new EventEmitterOfT();\r\n            this.renderStarted = new EventEmitterOfT();\r\n            this.renderFinished = new EventEmitterOfT();\r\n            this.postRenderFinished = new EventEmitter();\r\n            this.error = new EventEmitterOfT();\r\n            this.playerReady = new EventEmitter();\r\n            this.playerFinished = new EventEmitter();\r\n            this.soundFontLoaded = new EventEmitter();\r\n            this.midiLoad = new EventEmitterOfT();\r\n            this.midiLoaded = new EventEmitterOfT();\r\n            this.playerStateChanged = new EventEmitterOfT();\r\n            this.playerPositionChanged = new EventEmitterOfT();\r\n            this.midiEventsPlayed = new EventEmitterOfT();\r\n            this.uiFacade = uiFacade;\r\n            this.container = uiFacade.rootContainer;\r\n            uiFacade.initialize(this, settings);\r\n            Logger.logLevel = this.settings.core.logLevel;\r\n            this.canvasElement = uiFacade.createCanvasElement();\r\n            this.container.appendChild(this.canvasElement);\r\n            this.container.resize.on(Environment.throttle(() => {\r\n                if (this.container.width !== this.renderer.width) {\r\n                    this.triggerResize();\r\n                }\r\n            }, uiFacade.resizeThrottle));\r\n            if (this.settings.core.useWorkers &&\r\n                this.uiFacade.areWorkersSupported &&\r\n                Environment.getRenderEngineFactory(this.settings).supportsWorkers) {\r\n                this.renderer = this.uiFacade.createWorkerRenderer();\r\n            }\r\n            else {\r\n                this.renderer = new ScoreRenderer(this.settings);\r\n            }\r\n            let initialResizeEventInfo = new ResizeEventArgs();\r\n            initialResizeEventInfo.oldWidth = this.renderer.width;\r\n            initialResizeEventInfo.newWidth = this.container.width | 0;\r\n            initialResizeEventInfo.settings = this.settings;\r\n            this.onResize(initialResizeEventInfo);\r\n            this.renderer.preRender.on(this.onRenderStarted.bind(this));\r\n            this.renderer.renderFinished.on(renderingResult => {\r\n                this.onRenderFinished(renderingResult);\r\n            });\r\n            this.renderer.postRenderFinished.on(() => {\r\n                let duration = Date.now() - this._startTime;\r\n                Logger.debug('rendering', 'Rendering completed in ' + duration + 'ms');\r\n                this.onPostRenderFinished();\r\n            });\r\n            this.renderer.preRender.on(_ => {\r\n                this._startTime = Date.now();\r\n            });\r\n            this.renderer.partialRenderFinished.on(this.appendRenderResult.bind(this));\r\n            this.renderer.renderFinished.on(r => {\r\n                this.appendRenderResult(r);\r\n                this.appendRenderResult(null); // marks last element\r\n            });\r\n            this.renderer.error.on(this.onError.bind(this));\r\n            if (this.settings.player.enablePlayer) {\r\n                this.setupPlayer();\r\n            }\r\n            this.setupClickHandling();\r\n            // delay rendering to allow ui to hook up with events first.\r\n            this.uiFacade.beginInvoke(() => {\r\n                this.uiFacade.initialRender();\r\n            });\r\n        }\r\n        /**\r\n         * Destroys the alphaTab control and restores the initial state of the UI.\r\n         */\r\n        destroy() {\r\n            if (this.player) {\r\n                this.player.destroy();\r\n            }\r\n            this.uiFacade.destroy();\r\n            this.renderer.destroy();\r\n        }\r\n        /**\r\n         * Applies any changes that were done to the settings object and informs the {@link renderer} about any new values to consider.\r\n         */\r\n        updateSettings() {\r\n            this.renderer.updateSettings(this.settings);\r\n            // enable/disable player if needed\r\n            if (this.settings.player.enablePlayer) {\r\n                this.setupPlayer();\r\n            }\r\n            else {\r\n                this.destroyPlayer();\r\n            }\r\n        }\r\n        /**\r\n         * Attempts a load of the score represented by the given data object.\r\n         * @param scoreData The data container supported by {@link IUiFacade}\r\n         * @param trackIndexes The indexes of the tracks from the song that should be rendered. If not provided, the first track of the\r\n         * song will be shown.\r\n         * @returns true if the data object is supported and a load was initiated, otherwise false\r\n         */\r\n        load(scoreData, trackIndexes) {\r\n            try {\r\n                return this.uiFacade.load(scoreData, score => {\r\n                    this.renderScore(score, trackIndexes);\r\n                }, error => {\r\n                    this.onError(error);\r\n                });\r\n            }\r\n            catch (e) {\r\n                this.onError(e);\r\n                return false;\r\n            }\r\n        }\r\n        /**\r\n         * Initiates a rendering of the given score.\r\n         * @param score The score containing the tracks to be rendered.\r\n         * @param trackIndexes The indexes of the tracks from the song that should be rendered. If not provided, the first track of the\r\n         * song will be shown.\r\n         */\r\n        renderScore(score, trackIndexes) {\r\n            let tracks = [];\r\n            if (!trackIndexes) {\r\n                if (score.tracks.length > 0) {\r\n                    tracks.push(score.tracks[0]);\r\n                }\r\n            }\r\n            else {\r\n                if (trackIndexes.length === 0) {\r\n                    if (score.tracks.length > 0) {\r\n                        tracks.push(score.tracks[0]);\r\n                    }\r\n                }\r\n                else if (trackIndexes.length === 1 && trackIndexes[0] === -1) {\r\n                    for (let track of score.tracks) {\r\n                        tracks.push(track);\r\n                    }\r\n                }\r\n                else {\r\n                    for (let index of trackIndexes) {\r\n                        if (index >= 0 && index <= score.tracks.length) {\r\n                            tracks.push(score.tracks[index]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.internalRenderTracks(score, tracks);\r\n        }\r\n        /**\r\n         * Renders the given list of tracks.\r\n         * @param tracks The tracks to render. They must all belong to the same score.\r\n         */\r\n        renderTracks(tracks) {\r\n            if (tracks.length > 0) {\r\n                let score = tracks[0].score;\r\n                for (let track of tracks) {\r\n                    if (track.score !== score) {\r\n                        this.onError(new AlphaTabError(exports.AlphaTabErrorType.General, 'All rendered tracks must belong to the same score.'));\r\n                        return;\r\n                    }\r\n                }\r\n                this.internalRenderTracks(score, tracks);\r\n            }\r\n        }\r\n        internalRenderTracks(score, tracks) {\r\n            if (score !== this.score) {\r\n                ModelUtils.applyPitchOffsets(this.settings, score);\r\n                this.score = score;\r\n                this.tracks = tracks;\r\n                this._trackIndexes = [];\r\n                for (let track of tracks) {\r\n                    this._trackIndexes.push(track.index);\r\n                }\r\n                this.onScoreLoaded(score);\r\n                this.loadMidiForScore();\r\n                this.render();\r\n            }\r\n            else {\r\n                this.tracks = tracks;\r\n                this._trackIndexes = [];\r\n                for (let track of tracks) {\r\n                    this._trackIndexes.push(track.index);\r\n                }\r\n                this.render();\r\n            }\r\n        }\r\n        triggerResize() {\r\n            if (!this.container.isVisible) {\r\n                Logger.warning('Rendering', 'AlphaTab container was invisible while autosizing, waiting for element to become visible', null);\r\n                this.uiFacade.rootContainerBecameVisible.on(() => {\r\n                    Logger.debug('Rendering', 'AlphaTab container became visible, doing autosizing', null);\r\n                    this.triggerResize();\r\n                });\r\n            }\r\n            else {\r\n                let resizeEventInfo = new ResizeEventArgs();\r\n                resizeEventInfo.oldWidth = this.renderer.width;\r\n                resizeEventInfo.newWidth = this.container.width;\r\n                resizeEventInfo.settings = this.settings;\r\n                this.onResize(resizeEventInfo);\r\n                this.renderer.updateSettings(this.settings);\r\n                this.renderer.width = this.container.width;\r\n                this.renderer.resizeRender();\r\n            }\r\n        }\r\n        appendRenderResult(result) {\r\n            if (result) {\r\n                this.canvasElement.width = result.totalWidth;\r\n                this.canvasElement.height = result.totalHeight;\r\n                if (this._cursorWrapper) {\r\n                    this._cursorWrapper.width = result.totalWidth;\r\n                    this._cursorWrapper.height = result.totalHeight;\r\n                }\r\n            }\r\n            if (!result || result.renderResult) {\r\n                this.uiFacade.beginAppendRenderResults(result);\r\n            }\r\n        }\r\n        /**\r\n         * Tells alphaTab to render the given alphaTex.\r\n         * @param tex The alphaTex code to render.\r\n         * @param tracks If set, the given tracks will be rendered, otherwise the first track only will be rendered.\r\n         */\r\n        tex(tex, tracks) {\r\n            try {\r\n                let parser = new AlphaTexImporter();\r\n                let data = ByteBuffer.fromString(tex);\r\n                parser.init(data, this.settings);\r\n                let score = parser.readScore();\r\n                this.renderScore(score, tracks);\r\n            }\r\n            catch (e) {\r\n                this.onError(e);\r\n            }\r\n        }\r\n        /**\r\n         * Attempts a load of the score represented by the given data object.\r\n         * @param data The data object to decode\r\n         * @param append Whether to fully replace or append the data from the given soundfont.\r\n         * @returns true if the data object is supported and a load was initiated, otherwise false\r\n         */\r\n        loadSoundFont(data, append = false) {\r\n            if (!this.player) {\r\n                return false;\r\n            }\r\n            return this.uiFacade.loadSoundFont(data, append);\r\n        }\r\n        /**\r\n         * Resets all loaded soundfonts as if they were not loaded.\r\n         */\r\n        resetSoundFonts() {\r\n            if (!this.player) {\r\n                return;\r\n            }\r\n            this.player.resetSoundFonts();\r\n        }\r\n        /**\r\n         * Initiates a re-rendering of the current setup. If rendering is not yet possible, it will be deferred until the UI changes to be ready for rendering.\r\n         */\r\n        render() {\r\n            if (!this.renderer) {\r\n                return;\r\n            }\r\n            if (this.uiFacade.canRender) {\r\n                // when font is finally loaded, start rendering\r\n                this.renderer.width = this.container.width;\r\n                this.renderer.renderScore(this.score, this._trackIndexes);\r\n            }\r\n            else {\r\n                this.uiFacade.canRenderChanged.on(() => this.render());\r\n            }\r\n        }\r\n        get isReadyForPlayback() {\r\n            if (!this.player) {\r\n                return false;\r\n            }\r\n            return this.player.isReadyForPlayback;\r\n        }\r\n        get playerState() {\r\n            if (!this.player) {\r\n                return PlayerState.Paused;\r\n            }\r\n            return this.player.state;\r\n        }\r\n        get masterVolume() {\r\n            if (!this.player) {\r\n                return 0;\r\n            }\r\n            return this.player.masterVolume;\r\n        }\r\n        set masterVolume(value) {\r\n            if (this.player) {\r\n                this.player.masterVolume = value;\r\n            }\r\n        }\r\n        get metronomeVolume() {\r\n            if (!this.player) {\r\n                return 0;\r\n            }\r\n            return this.player.metronomeVolume;\r\n        }\r\n        set metronomeVolume(value) {\r\n            if (this.player) {\r\n                this.player.metronomeVolume = value;\r\n            }\r\n        }\r\n        get countInVolume() {\r\n            if (!this.player) {\r\n                return 0;\r\n            }\r\n            return this.player.countInVolume;\r\n        }\r\n        set countInVolume(value) {\r\n            if (this.player) {\r\n                this.player.countInVolume = value;\r\n            }\r\n        }\r\n        get midiEventsPlayedFilter() {\r\n            if (!this.player) {\r\n                return [];\r\n            }\r\n            return this.player.midiEventsPlayedFilter;\r\n        }\r\n        set midiEventsPlayedFilter(value) {\r\n            if (this.player) {\r\n                this.player.midiEventsPlayedFilter = value;\r\n            }\r\n        }\r\n        get tickPosition() {\r\n            if (!this.player) {\r\n                return 0;\r\n            }\r\n            return this.player.tickPosition;\r\n        }\r\n        set tickPosition(value) {\r\n            if (this.player) {\r\n                this.player.tickPosition = value;\r\n            }\r\n        }\r\n        get timePosition() {\r\n            if (!this.player) {\r\n                return 0;\r\n            }\r\n            return this.player.timePosition;\r\n        }\r\n        set timePosition(value) {\r\n            if (this.player) {\r\n                this.player.timePosition = value;\r\n            }\r\n        }\r\n        get playbackRange() {\r\n            if (!this.player) {\r\n                return null;\r\n            }\r\n            return this.player.playbackRange;\r\n        }\r\n        set playbackRange(value) {\r\n            if (this.player) {\r\n                this.player.playbackRange = value;\r\n                if (this.settings.player.enableCursor) {\r\n                    this.updateSelectionCursor(value);\r\n                }\r\n            }\r\n        }\r\n        get playbackSpeed() {\r\n            if (!this.player) {\r\n                return 0;\r\n            }\r\n            return this.player.playbackSpeed;\r\n        }\r\n        set playbackSpeed(value) {\r\n            if (this.player) {\r\n                this.player.playbackSpeed = value;\r\n            }\r\n        }\r\n        get isLooping() {\r\n            if (!this.player) {\r\n                return false;\r\n            }\r\n            return this.player.isLooping;\r\n        }\r\n        set isLooping(value) {\r\n            if (this.player) {\r\n                this.player.isLooping = value;\r\n            }\r\n        }\r\n        destroyPlayer() {\r\n            if (!this.player) {\r\n                return;\r\n            }\r\n            this.player.destroy();\r\n            this.player = null;\r\n            this.destroyCursors();\r\n        }\r\n        setupPlayer() {\r\n            if (this.player) {\r\n                return;\r\n            }\r\n            this.player = this.uiFacade.createWorkerPlayer();\r\n            if (!this.player) {\r\n                return;\r\n            }\r\n            this.player.ready.on(() => {\r\n                this.loadMidiForScore();\r\n            });\r\n            this.player.readyForPlayback.on(() => {\r\n                this.onPlayerReady();\r\n                if (this.tracks) {\r\n                    for (let track of this.tracks) {\r\n                        let volume = track.playbackInfo.volume / 16;\r\n                        this.player.setChannelVolume(track.playbackInfo.primaryChannel, volume);\r\n                        this.player.setChannelVolume(track.playbackInfo.secondaryChannel, volume);\r\n                    }\r\n                }\r\n            });\r\n            this.player.soundFontLoaded.on(this.onSoundFontLoaded.bind(this));\r\n            this.player.soundFontLoadFailed.on(e => {\r\n                this.onError(e);\r\n            });\r\n            this.player.midiLoaded.on(this.onMidiLoaded.bind(this));\r\n            this.player.midiLoadFailed.on(e => {\r\n                this.onError(e);\r\n            });\r\n            this.player.stateChanged.on(this.onPlayerStateChanged.bind(this));\r\n            this.player.positionChanged.on(this.onPlayerPositionChanged.bind(this));\r\n            this.player.midiEventsPlayed.on(this.onMidiEventsPlayed.bind(this));\r\n            this.player.finished.on(this.onPlayerFinished.bind(this));\r\n            if (this.settings.player.enableCursor) {\r\n                this.setupCursors();\r\n            }\r\n            else {\r\n                this.destroyCursors();\r\n            }\r\n        }\r\n        loadMidiForScore() {\r\n            if (!this.player || !this.score || !this.player.isReady) {\r\n                return;\r\n            }\r\n            Logger.debug('AlphaTab', 'Generating Midi');\r\n            let midiFile = new MidiFile();\r\n            let handler = new AlphaSynthMidiFileHandler(midiFile);\r\n            let generator = new MidiFileGenerator(this.score, this.settings, handler);\r\n            generator.generate();\r\n            this._tickCache = generator.tickLookup;\r\n            this.onMidiLoad(midiFile);\r\n            this.player.loadMidiFile(midiFile);\r\n        }\r\n        /**\r\n         * Changes the volume of the given tracks.\r\n         * @param tracks The tracks for which the volume should be changed.\r\n         * @param volume The volume to set for all tracks in percent (0-1)\r\n         */\r\n        changeTrackVolume(tracks, volume) {\r\n            if (!this.player) {\r\n                return;\r\n            }\r\n            for (let track of tracks) {\r\n                this.player.setChannelVolume(track.playbackInfo.primaryChannel, volume);\r\n                this.player.setChannelVolume(track.playbackInfo.secondaryChannel, volume);\r\n            }\r\n        }\r\n        /**\r\n         * Changes the given tracks to be played solo or not.\r\n         * If one or more tracks are set to solo, only those tracks are hearable.\r\n         * @param tracks The list of tracks to play solo or not.\r\n         * @param solo If set to true, the tracks will be added to the solo list. If false, they are removed.\r\n         */\r\n        changeTrackSolo(tracks, solo) {\r\n            if (!this.player) {\r\n                return;\r\n            }\r\n            for (let track of tracks) {\r\n                this.player.setChannelSolo(track.playbackInfo.primaryChannel, solo);\r\n                this.player.setChannelSolo(track.playbackInfo.secondaryChannel, solo);\r\n            }\r\n        }\r\n        /**\r\n         * Changes the given tracks to be muted or not.\r\n         * @param tracks The list of track to mute or unmute.\r\n         * @param mute If set to true, the tracks will be muted. If false they are unmuted.\r\n         */\r\n        changeTrackMute(tracks, mute) {\r\n            if (!this.player) {\r\n                return;\r\n            }\r\n            for (let track of tracks) {\r\n                this.player.setChannelMute(track.playbackInfo.primaryChannel, mute);\r\n                this.player.setChannelMute(track.playbackInfo.secondaryChannel, mute);\r\n            }\r\n        }\r\n        /**\r\n         * Starts the playback of the current song.\r\n         * @returns true if the playback was started, otherwise false. Reasons for not starting can be that the player is not ready or already playing.\r\n         */\r\n        play() {\r\n            if (!this.player) {\r\n                return false;\r\n            }\r\n            return this.player.play();\r\n        }\r\n        /**\r\n         * Pauses the playback of the current song.\r\n         */\r\n        pause() {\r\n            if (!this.player) {\r\n                return;\r\n            }\r\n            this.player.pause();\r\n        }\r\n        /**\r\n         * Toggles between play/pause depending on the current player state.\r\n         */\r\n        playPause() {\r\n            if (!this.player) {\r\n                return;\r\n            }\r\n            this.player.playPause();\r\n        }\r\n        /**\r\n         * Stops the playback of the current song, and moves the playback position back to the start.\r\n         */\r\n        stop() {\r\n            if (!this.player) {\r\n                return;\r\n            }\r\n            this.player.stop();\r\n        }\r\n        /**\r\n         * Triggers the play of the given beat. This will stop the any other current ongoing playback.\r\n         * @param beat the single beat to play\r\n         */\r\n        playBeat(beat) {\r\n            if (!this.player) {\r\n                return;\r\n            }\r\n            // we generate a new midi file containing only the beat\r\n            let midiFile = new MidiFile();\r\n            let handler = new AlphaSynthMidiFileHandler(midiFile);\r\n            let generator = new MidiFileGenerator(beat.voice.bar.staff.track.score, this.settings, handler);\r\n            generator.generateSingleBeat(beat);\r\n            this.player.playOneTimeMidiFile(midiFile);\r\n        }\r\n        /**\r\n         * Triggers the play of the given note. This will stop the any other current ongoing playback.\r\n         * @param beat the single note to play\r\n         */\r\n        playNote(note) {\r\n            if (!this.player) {\r\n                return;\r\n            }\r\n            // we generate a new midi file containing only the beat\r\n            let midiFile = new MidiFile();\r\n            let handler = new AlphaSynthMidiFileHandler(midiFile);\r\n            let generator = new MidiFileGenerator(note.beat.voice.bar.staff.track.score, this.settings, handler);\r\n            generator.generateSingleNote(note);\r\n            this.player.playOneTimeMidiFile(midiFile);\r\n        }\r\n        destroyCursors() {\r\n            if (!this._cursorWrapper) {\r\n                return;\r\n            }\r\n            this.uiFacade.destroyCursors();\r\n            this._cursorWrapper = null;\r\n            this._barCursor = null;\r\n            this._beatCursor = null;\r\n            this._selectionWrapper = null;\r\n            this._previousTick = 0;\r\n            this._playerState = PlayerState.Paused;\r\n        }\r\n        setupCursors() {\r\n            //\r\n            // Create cursors\r\n            let cursors = this.uiFacade.createCursors();\r\n            if (!cursors) {\r\n                return;\r\n            }\r\n            // store options and created elements for fast access\r\n            this._cursorWrapper = cursors.cursorWrapper;\r\n            this._barCursor = cursors.barCursor;\r\n            this._beatCursor = cursors.beatCursor;\r\n            this._selectionWrapper = cursors.selectionWrapper;\r\n            //\r\n            // Hook into events\r\n            this._previousTick = 0;\r\n            this._playerState = PlayerState.Paused;\r\n            // we need to update our position caches if we render a tablature\r\n            this.renderer.postRenderFinished.on(() => {\r\n                this.cursorUpdateTick(this._previousTick, false);\r\n            });\r\n            if (this.player) {\r\n                this.player.positionChanged.on(e => {\r\n                    this._previousTick = e.currentTick;\r\n                    this.uiFacade.beginInvoke(() => {\r\n                        this.cursorUpdateTick(e.currentTick, false);\r\n                    });\r\n                });\r\n                this.player.stateChanged.on(e => {\r\n                    this._playerState = e.state;\r\n                    if (!e.stopped && e.state === PlayerState.Paused) {\r\n                        let currentBeat = this._currentBeat;\r\n                        let tickCache = this._tickCache;\r\n                        if (currentBeat && tickCache) {\r\n                            this.player.tickPosition =\r\n                                tickCache.getMasterBarStart(currentBeat.voice.bar.masterBar) + currentBeat.playbackStart;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        /**\r\n         * updates the cursors to highlight the beat at the specified tick position\r\n         * @param tick\r\n         * @param stop\r\n         */\r\n        cursorUpdateTick(tick, stop = false) {\r\n            this.uiFacade.beginInvoke(() => {\r\n                let cache = this._tickCache;\r\n                if (cache) {\r\n                    let tracks = this.tracks;\r\n                    if (tracks.length > 0) {\r\n                        let beat = cache.findBeat(tracks, tick);\r\n                        if (beat) {\r\n                            this.cursorUpdateBeat(beat.currentBeat, beat.nextBeat, beat.duration, stop, beat.beatsToHighlight);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        /**\r\n         * updates the cursors to highlight the specified beat\r\n         */\r\n        cursorUpdateBeat(beat, nextBeat, duration, stop, beatsToHighlight = null) {\r\n            if (!beat) {\r\n                return;\r\n            }\r\n            let cache = this.renderer.boundsLookup;\r\n            if (!cache) {\r\n                return;\r\n            }\r\n            let previousBeat = this._currentBeat;\r\n            let previousCache = this._previousCursorCache;\r\n            let previousState = this._previousStateForCursor;\r\n            this._currentBeat = beat;\r\n            this._previousCursorCache = cache;\r\n            this._previousStateForCursor = this._playerState;\r\n            if (beat === previousBeat && cache === previousCache && previousState === this._playerState) {\r\n                return;\r\n            }\r\n            let barCursor = this._barCursor;\r\n            let beatCursor = this._beatCursor;\r\n            let beatBoundings = cache.findBeat(beat);\r\n            if (!beatBoundings) {\r\n                return;\r\n            }\r\n            let barBoundings = beatBoundings.barBounds.masterBarBounds;\r\n            let barBounds = barBoundings.visualBounds;\r\n            if (barCursor) {\r\n                barCursor.top = barBounds.y;\r\n                barCursor.left = barBounds.x;\r\n                barCursor.width = barBounds.w;\r\n                barCursor.height = barBounds.h;\r\n            }\r\n            if (beatCursor) {\r\n                // move beat to start position immediately\r\n                beatCursor.stopAnimation();\r\n                beatCursor.top = barBounds.y;\r\n                beatCursor.left = beatBoundings.visualBounds.x;\r\n                beatCursor.height = barBounds.h;\r\n            }\r\n            // if playing, animate the cursor to the next beat\r\n            this.uiFacade.removeHighlights();\r\n            if (this._playerState === PlayerState.Playing || stop) {\r\n                duration /= this.playbackSpeed;\r\n                if (!stop) {\r\n                    if (beatsToHighlight) {\r\n                        for (let highlight of beatsToHighlight) {\r\n                            let className = BeatContainerGlyph.getGroupId(highlight);\r\n                            this.uiFacade.highlightElements(className);\r\n                        }\r\n                    }\r\n                    let nextBeatX = barBoundings.visualBounds.x + barBoundings.visualBounds.w;\r\n                    // get position of next beat on same stavegroup\r\n                    if (nextBeat) {\r\n                        // if we are moving within the same bar or to the next bar\r\n                        // transition to the next beat, otherwise transition to the end of the bar.\r\n                        if (nextBeat.voice.bar.index === beat.voice.bar.index ||\r\n                            nextBeat.voice.bar.index === beat.voice.bar.index + 1) {\r\n                            let nextBeatBoundings = cache.findBeat(nextBeat);\r\n                            if (nextBeatBoundings &&\r\n                                nextBeatBoundings.barBounds.masterBarBounds.staveGroupBounds ===\r\n                                    barBoundings.staveGroupBounds) {\r\n                                nextBeatX = nextBeatBoundings.visualBounds.x;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (beatCursor) {\r\n                        this.uiFacade.beginInvoke(() => {\r\n                            // Logger.Info(\"Player\",\r\n                            //    \"Transition from \" + beatBoundings.VisualBounds.X + \" to \" + nextBeatX + \" in \" + duration +\r\n                            //    \"(\" + Player.PlaybackRange + \")\");\r\n                            beatCursor.transitionToX(duration, nextBeatX);\r\n                        });\r\n                    }\r\n                }\r\n                if (!this._beatMouseDown && this.settings.player.scrollMode !== exports.ScrollMode.Off) {\r\n                    let scrollElement = this.uiFacade.getScrollContainer();\r\n                    let isVertical = Environment.getLayoutEngineFactory(this.settings).vertical;\r\n                    let mode = this.settings.player.scrollMode;\r\n                    let elementOffset = this.uiFacade.getOffset(scrollElement, this.container);\r\n                    if (isVertical) {\r\n                        switch (mode) {\r\n                            case exports.ScrollMode.Continuous:\r\n                                let y = elementOffset.y + barBoundings.realBounds.y + this.settings.player.scrollOffsetY;\r\n                                if (y !== this._lastScroll) {\r\n                                    this._lastScroll = y;\r\n                                    this.uiFacade.scrollToY(scrollElement, y, this.settings.player.scrollSpeed);\r\n                                }\r\n                                break;\r\n                            case exports.ScrollMode.OffScreen:\r\n                                let elementBottom = scrollElement.scrollTop + this.uiFacade.getOffset(null, scrollElement).h;\r\n                                if (barBoundings.visualBounds.y + barBoundings.visualBounds.h >= elementBottom ||\r\n                                    barBoundings.visualBounds.y < scrollElement.scrollTop) {\r\n                                    let scrollTop = barBoundings.realBounds.y + this.settings.player.scrollOffsetY;\r\n                                    this._lastScroll = barBoundings.visualBounds.x;\r\n                                    this.uiFacade.scrollToY(scrollElement, scrollTop, this.settings.player.scrollSpeed);\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                    else {\r\n                        switch (mode) {\r\n                            case exports.ScrollMode.Continuous:\r\n                                let x = barBoundings.visualBounds.x;\r\n                                if (x !== this._lastScroll) {\r\n                                    let scrollLeft = barBoundings.realBounds.x + this.settings.player.scrollOffsetX;\r\n                                    this._lastScroll = barBoundings.visualBounds.x;\r\n                                    this.uiFacade.scrollToX(scrollElement, scrollLeft, this.settings.player.scrollSpeed);\r\n                                }\r\n                                break;\r\n                            case exports.ScrollMode.OffScreen:\r\n                                let elementRight = scrollElement.scrollLeft + this.uiFacade.getOffset(null, scrollElement).w;\r\n                                if (barBoundings.visualBounds.x + barBoundings.visualBounds.w >= elementRight ||\r\n                                    barBoundings.visualBounds.x < scrollElement.scrollLeft) {\r\n                                    let scrollLeft = barBoundings.realBounds.x + this.settings.player.scrollOffsetX;\r\n                                    this._lastScroll = barBoundings.visualBounds.x;\r\n                                    this.uiFacade.scrollToX(scrollElement, scrollLeft, this.settings.player.scrollSpeed);\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                // trigger an event for others to indicate which beat/bar is played\r\n                this.onPlayedBeatChanged(beat);\r\n            }\r\n        }\r\n        onPlayedBeatChanged(beat) {\r\n            this.playedBeatChanged.trigger(beat);\r\n            this.uiFacade.triggerEvent(this.container, 'playedBeatChanged', beat);\r\n        }\r\n        onBeatMouseDown(originalEvent, beat) {\r\n            if (this.settings.player.enablePlayer &&\r\n                this.settings.player.enableCursor &&\r\n                this.settings.player.enableUserInteraction) {\r\n                this._selectionStart = new SelectionInfo(beat);\r\n                this._selectionEnd = null;\r\n            }\r\n            this._beatMouseDown = true;\r\n            this.beatMouseDown.trigger(beat);\r\n            this.uiFacade.triggerEvent(this.container, 'beatMouseDown', beat, originalEvent);\r\n        }\r\n        onBeatMouseMove(originalEvent, beat) {\r\n            if (this.settings.player.enableUserInteraction) {\r\n                if (!this._selectionEnd || this._selectionEnd.beat !== beat) {\r\n                    this._selectionEnd = new SelectionInfo(beat);\r\n                    this.cursorSelectRange(this._selectionStart, this._selectionEnd);\r\n                }\r\n            }\r\n            this.beatMouseMove.trigger(beat);\r\n            this.uiFacade.triggerEvent(this.container, 'beatMouseMove', beat, originalEvent);\r\n        }\r\n        onBeatMouseUp(originalEvent, beat) {\r\n            if (this.settings.player.enableUserInteraction) {\r\n                // for the selection ensure start < end\r\n                if (this._selectionEnd) {\r\n                    let startTick = this._selectionStart.beat.absolutePlaybackStart;\r\n                    let endTick = this._selectionStart.beat.absolutePlaybackStart;\r\n                    if (endTick < startTick) {\r\n                        let t = this._selectionStart;\r\n                        this._selectionStart = this._selectionEnd;\r\n                        this._selectionEnd = t;\r\n                    }\r\n                }\r\n                if (this._selectionStart && this._tickCache) {\r\n                    // get the start and stop ticks (which consider properly repeats)\r\n                    let tickCache = this._tickCache;\r\n                    let realMasterBarStart = tickCache.getMasterBarStart(this._selectionStart.beat.voice.bar.masterBar);\r\n                    // move to selection start\r\n                    this._currentBeat = null; // reset current beat so it is updating the cursor\r\n                    if (this._playerState === PlayerState.Paused) {\r\n                        this.cursorUpdateBeat(this._selectionStart.beat, null, 0, false, [this._selectionStart.beat]);\r\n                    }\r\n                    this.tickPosition = realMasterBarStart + this._selectionStart.beat.playbackStart;\r\n                    // set playback range\r\n                    if (this._selectionEnd && this._selectionStart.beat !== this._selectionEnd.beat) {\r\n                        let realMasterBarEnd = tickCache.getMasterBarStart(this._selectionEnd.beat.voice.bar.masterBar);\r\n                        let range = new PlaybackRange();\r\n                        range.startTick = realMasterBarStart + this._selectionStart.beat.playbackStart;\r\n                        range.endTick =\r\n                            realMasterBarEnd +\r\n                                this._selectionEnd.beat.playbackStart +\r\n                                this._selectionEnd.beat.playbackDuration -\r\n                                50;\r\n                        this.playbackRange = range;\r\n                    }\r\n                    else {\r\n                        this._selectionStart = null;\r\n                        this.playbackRange = null;\r\n                        this.cursorSelectRange(this._selectionStart, this._selectionEnd);\r\n                    }\r\n                }\r\n            }\r\n            this.beatMouseUp.trigger(beat);\r\n            this.uiFacade.triggerEvent(this.container, 'beatMouseUp', beat, originalEvent);\r\n            this._beatMouseDown = false;\r\n        }\r\n        updateSelectionCursor(range) {\r\n            if (!this._tickCache) {\r\n                return;\r\n            }\r\n            if (range) {\r\n                const startBeat = this._tickCache.findBeat(this.tracks, range.startTick);\r\n                const endBeat = this._tickCache.findBeat(this.tracks, range.endTick);\r\n                if (startBeat && endBeat) {\r\n                    const selectionStart = new SelectionInfo(startBeat.currentBeat);\r\n                    const selectionEnd = new SelectionInfo(endBeat.currentBeat);\r\n                    this.cursorSelectRange(selectionStart, selectionEnd);\r\n                }\r\n            }\r\n            else {\r\n                this.cursorSelectRange(null, null);\r\n            }\r\n        }\r\n        setupClickHandling() {\r\n            this.canvasElement.mouseDown.on(e => {\r\n                var _a, _b;\r\n                if (!e.isLeftMouseButton) {\r\n                    return;\r\n                }\r\n                if (this.settings.player.enableUserInteraction) {\r\n                    e.preventDefault();\r\n                }\r\n                let relX = e.getX(this.canvasElement);\r\n                let relY = e.getY(this.canvasElement);\r\n                let beat = (_b = (_a = this.renderer.boundsLookup) === null || _a === void 0 ? void 0 : _a.getBeatAtPos(relX, relY)) !== null && _b !== void 0 ? _b : null;\r\n                if (beat) {\r\n                    this.onBeatMouseDown(e, beat);\r\n                }\r\n            });\r\n            this.canvasElement.mouseMove.on(e => {\r\n                var _a, _b;\r\n                if (!this._beatMouseDown) {\r\n                    return;\r\n                }\r\n                let relX = e.getX(this.canvasElement);\r\n                let relY = e.getY(this.canvasElement);\r\n                let beat = (_b = (_a = this.renderer.boundsLookup) === null || _a === void 0 ? void 0 : _a.getBeatAtPos(relX, relY)) !== null && _b !== void 0 ? _b : null;\r\n                if (beat) {\r\n                    this.onBeatMouseMove(e, beat);\r\n                }\r\n            });\r\n            this.canvasElement.mouseUp.on(e => {\r\n                var _a, _b;\r\n                if (!this._beatMouseDown) {\r\n                    return;\r\n                }\r\n                if (this.settings.player.enableUserInteraction) {\r\n                    e.preventDefault();\r\n                }\r\n                let relX = e.getX(this.canvasElement);\r\n                let relY = e.getY(this.canvasElement);\r\n                let beat = (_b = (_a = this.renderer.boundsLookup) === null || _a === void 0 ? void 0 : _a.getBeatAtPos(relX, relY)) !== null && _b !== void 0 ? _b : null;\r\n                this.onBeatMouseUp(e, beat);\r\n            });\r\n            this.renderer.postRenderFinished.on(() => {\r\n                if (!this._selectionStart ||\r\n                    !this.settings.player.enablePlayer ||\r\n                    !this.settings.player.enableCursor ||\r\n                    !this.settings.player.enableUserInteraction) {\r\n                    return;\r\n                }\r\n                this.cursorSelectRange(this._selectionStart, this._selectionEnd);\r\n            });\r\n        }\r\n        cursorSelectRange(startBeat, endBeat) {\r\n            let cache = this.renderer.boundsLookup;\r\n            if (!cache) {\r\n                return;\r\n            }\r\n            let selectionWrapper = this._selectionWrapper;\r\n            if (!selectionWrapper) {\r\n                return;\r\n            }\r\n            selectionWrapper.clear();\r\n            if (!startBeat || !endBeat || startBeat.beat === endBeat.beat) {\r\n                return;\r\n            }\r\n            if (!startBeat.bounds) {\r\n                startBeat.bounds = cache.findBeat(startBeat.beat);\r\n            }\r\n            if (!endBeat.bounds) {\r\n                endBeat.bounds = cache.findBeat(endBeat.beat);\r\n            }\r\n            let startTick = startBeat.beat.absolutePlaybackStart;\r\n            let endTick = endBeat.beat.absolutePlaybackStart;\r\n            if (endTick < startTick) {\r\n                let t = startBeat;\r\n                startBeat = endBeat;\r\n                endBeat = t;\r\n            }\r\n            let startX = startBeat.bounds.realBounds.x;\r\n            let endX = endBeat.bounds.realBounds.x + endBeat.bounds.realBounds.w;\r\n            if (endBeat.beat.index === endBeat.beat.voice.beats.length - 1) {\r\n                endX =\r\n                    endBeat.bounds.barBounds.masterBarBounds.realBounds.x +\r\n                        endBeat.bounds.barBounds.masterBarBounds.realBounds.w;\r\n            }\r\n            // if the selection goes across multiple staves, we need a special selection highlighting\r\n            if (startBeat.bounds.barBounds.masterBarBounds.staveGroupBounds !==\r\n                endBeat.bounds.barBounds.masterBarBounds.staveGroupBounds) {\r\n                // from the startbeat to the end of the staff,\r\n                // then fill all staffs until the end-beat staff\r\n                // then from staff-start to the end beat (or to end of bar if it's the last beat)\r\n                let staffStartX = startBeat.bounds.barBounds.masterBarBounds.staveGroupBounds.visualBounds.x;\r\n                let staffEndX = startBeat.bounds.barBounds.masterBarBounds.staveGroupBounds.visualBounds.x +\r\n                    startBeat.bounds.barBounds.masterBarBounds.staveGroupBounds.visualBounds.w;\r\n                let startSelection = this.uiFacade.createSelectionElement();\r\n                startSelection.top = startBeat.bounds.barBounds.masterBarBounds.visualBounds.y;\r\n                startSelection.left = startX;\r\n                startSelection.width = staffEndX - startX;\r\n                startSelection.height = startBeat.bounds.barBounds.masterBarBounds.visualBounds.h;\r\n                selectionWrapper.appendChild(startSelection);\r\n                let staffStartIndex = startBeat.bounds.barBounds.masterBarBounds.staveGroupBounds.index + 1;\r\n                let staffEndIndex = endBeat.bounds.barBounds.masterBarBounds.staveGroupBounds.index;\r\n                for (let staffIndex = staffStartIndex; staffIndex < staffEndIndex; staffIndex++) {\r\n                    let staffBounds = cache.staveGroups[staffIndex];\r\n                    let middleSelection = this.uiFacade.createSelectionElement();\r\n                    middleSelection.top = staffBounds.visualBounds.y;\r\n                    middleSelection.left = staffStartX;\r\n                    middleSelection.width = staffEndX - staffStartX;\r\n                    middleSelection.height = staffBounds.visualBounds.h;\r\n                    selectionWrapper.appendChild(middleSelection);\r\n                }\r\n                let endSelection = this.uiFacade.createSelectionElement();\r\n                endSelection.top = endBeat.bounds.barBounds.masterBarBounds.visualBounds.y;\r\n                endSelection.left = staffStartX;\r\n                endSelection.width = endX - staffStartX;\r\n                endSelection.height = endBeat.bounds.barBounds.masterBarBounds.visualBounds.h;\r\n                selectionWrapper.appendChild(endSelection);\r\n            }\r\n            else {\r\n                // if the beats are on the same staff, we simply highlight from the startbeat to endbeat\r\n                let selection = this.uiFacade.createSelectionElement();\r\n                selection.top = startBeat.bounds.barBounds.masterBarBounds.visualBounds.y;\r\n                selection.left = startX;\r\n                selection.width = endX - startX;\r\n                selection.height = startBeat.bounds.barBounds.masterBarBounds.visualBounds.h;\r\n                selectionWrapper.appendChild(selection);\r\n            }\r\n        }\r\n        onScoreLoaded(score) {\r\n            this.scoreLoaded.trigger(score);\r\n            this.uiFacade.triggerEvent(this.container, 'scoreLoaded', score);\r\n        }\r\n        onResize(e) {\r\n            this.resize.trigger(e);\r\n            this.uiFacade.triggerEvent(this.container, 'resize', e);\r\n        }\r\n        onRenderStarted(resize) {\r\n            this.renderStarted.trigger(resize);\r\n            this.uiFacade.triggerEvent(this.container, 'renderStarted', resize);\r\n        }\r\n        onRenderFinished(renderingResult) {\r\n            this.renderFinished.trigger(renderingResult);\r\n            this.uiFacade.triggerEvent(this.container, 'renderFinished', renderingResult);\r\n        }\r\n        onPostRenderFinished() {\r\n            this.postRenderFinished.trigger();\r\n            this.uiFacade.triggerEvent(this.container, 'postRenderFinished', null);\r\n        }\r\n        onError(error) {\r\n            Logger.error('API', 'An unexpected error occurred', error);\r\n            this.error.trigger(error);\r\n            this.uiFacade.triggerEvent(this.container, 'error', error);\r\n        }\r\n        onPlayerReady() {\r\n            this.playerReady.trigger();\r\n            this.uiFacade.triggerEvent(this.container, 'playerReady', null);\r\n        }\r\n        onPlayerFinished() {\r\n            this.playerFinished.trigger();\r\n            this.uiFacade.triggerEvent(this.container, 'playerFinished', null);\r\n        }\r\n        onSoundFontLoaded() {\r\n            this.soundFontLoaded.trigger();\r\n            this.uiFacade.triggerEvent(this.container, 'soundFontLoaded', null);\r\n        }\r\n        onMidiLoad(e) {\r\n            this.midiLoad.trigger(e);\r\n            this.uiFacade.triggerEvent(this.container, 'midiLoad', e);\r\n        }\r\n        onMidiLoaded(e) {\r\n            this.midiLoaded.trigger(e);\r\n            this.uiFacade.triggerEvent(this.container, 'midiFileLoaded', e);\r\n        }\r\n        onPlayerStateChanged(e) {\r\n            this.playerStateChanged.trigger(e);\r\n            this.uiFacade.triggerEvent(this.container, 'playerStateChanged', e);\r\n        }\r\n        onPlayerPositionChanged(e) {\r\n            this.playerPositionChanged.trigger(e);\r\n            this.uiFacade.triggerEvent(this.container, 'playerPositionChanged', e);\r\n        }\r\n        onMidiEventsPlayed(e) {\r\n            this.midiEventsPlayed.trigger(e);\r\n            this.uiFacade.triggerEvent(this.container, 'midiEventsPlayed', e);\r\n        }\r\n    }\n\n    /**\r\n     * @target web\r\n     */\r\n    class FileLoadError extends AlphaTabError {\r\n        constructor(message, xhr) {\r\n            super(exports.AlphaTabErrorType.General, message);\r\n            this.xhr = xhr;\r\n            Object.setPrototypeOf(this, FileLoadError.prototype);\r\n        }\r\n    }\n\n    /**\r\n     * The ScoreLoader enables you easy loading of Scores using all\r\n     * available importers\r\n     */\r\n    class ScoreLoader {\r\n        /**\r\n         * Loads a score asynchronously from the given datasource\r\n         * @param path the source path to load the binary file from\r\n         * @param success this function is called if the Score was successfully loaded from the datasource\r\n         * @param error this function is called if any error during the loading occured.\r\n         * @param settings settings for the score import\r\n         * @target web\r\n         */\r\n        static loadScoreAsync(path, success, error, settings) {\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.open('GET', path, true, null, null);\r\n            xhr.responseType = 'arraybuffer';\r\n            xhr.onreadystatechange = () => {\r\n                if (xhr.readyState === XMLHttpRequest.DONE) {\r\n                    let response = xhr.response;\r\n                    if (xhr.status === 200 || (xhr.status === 0 && response)) {\r\n                        try {\r\n                            let buffer = xhr.response;\r\n                            let reader = new Uint8Array(buffer);\r\n                            let score = ScoreLoader.loadScoreFromBytes(reader, settings);\r\n                            success(score);\r\n                        }\r\n                        catch (e) {\r\n                            error(e);\r\n                        }\r\n                    }\r\n                    else if (xhr.status === 0) {\r\n                        error(new FileLoadError('You are offline!!\\n Please Check Your Network.', xhr));\r\n                    }\r\n                    else if (xhr.status === 404) {\r\n                        error(new FileLoadError('Requested URL not found.', xhr));\r\n                    }\r\n                    else if (xhr.status === 500) {\r\n                        error(new FileLoadError('Internel Server Error.', xhr));\r\n                    }\r\n                    else if (xhr.statusText === 'parsererror') {\r\n                        error(new FileLoadError('Error.\\nParsing JSON Request failed.', xhr));\r\n                    }\r\n                    else if (xhr.statusText === 'timeout') {\r\n                        error(new FileLoadError('Request Time out.', xhr));\r\n                    }\r\n                    else {\r\n                        error(new FileLoadError('Unknow Error: ' + xhr.responseText, xhr));\r\n                    }\r\n                }\r\n            };\r\n            xhr.send();\r\n        }\r\n        /**\r\n         * Loads the score from the given binary data.\r\n         * @param data The binary data containing a score in any known file format.\r\n         * @param settings The settings to use during importing.\r\n         * @returns The loaded score.\r\n         */\r\n        static loadScoreFromBytes(data, settings) {\r\n            if (!settings) {\r\n                settings = new Settings();\r\n            }\r\n            let importers = Environment.buildImporters();\r\n            Logger.debug('ScoreLoader', 'Loading score from ' + data.length + ' bytes using ' + importers.length + ' importers', null);\r\n            let score = null;\r\n            let bb = ByteBuffer.fromBuffer(data);\r\n            for (let importer of importers) {\r\n                bb.reset();\r\n                try {\r\n                    Logger.debug('ScoreLoader', 'Importing using importer ' + importer.name);\r\n                    importer.init(bb, settings);\r\n                    score = importer.readScore();\r\n                    Logger.debug('ScoreLoader', 'Score imported using ' + importer.name);\r\n                    break;\r\n                }\r\n                catch (e) {\r\n                    if (e instanceof UnsupportedFormatError) {\r\n                        Logger.debug('ScoreLoader', importer.name + ' does not support the file');\r\n                    }\r\n                    else {\r\n                        Logger.error('ScoreLoader', 'Score import failed due to unexpected error: ', e);\r\n                        throw e;\r\n                    }\r\n                }\r\n            }\r\n            if (score) {\r\n                return score;\r\n            }\r\n            Logger.error('ScoreLoader', 'No compatible importer found for file');\r\n            throw new UnsupportedFormatError('No compatible importer found for file');\r\n        }\r\n    }\n\n    /**\r\n     * @target web\r\n     */\r\n    class BrowserMouseEventArgs {\r\n        constructor(e) {\r\n            this.mouseEvent = e;\r\n        }\r\n        get isLeftMouseButton() {\r\n            return this.mouseEvent.button === 0;\r\n        }\r\n        getX(relativeTo) {\r\n            let relativeToElement = relativeTo.element;\r\n            let bounds = relativeToElement.getBoundingClientRect();\r\n            let left = bounds.left + relativeToElement.ownerDocument.defaultView.pageXOffset;\r\n            return this.mouseEvent.pageX - left;\r\n        }\r\n        getY(relativeTo) {\r\n            let relativeToElement = relativeTo.element;\r\n            let bounds = relativeToElement.getBoundingClientRect();\r\n            let top = bounds.top + relativeToElement.ownerDocument.defaultView.pageYOffset;\r\n            return this.mouseEvent.pageY - top;\r\n        }\r\n        preventDefault() {\r\n            this.mouseEvent.preventDefault();\r\n        }\r\n    }\n\n    /**\r\n     * @target web\r\n     */\r\n    class HtmlElementContainer {\r\n        constructor(element) {\r\n            this._resizeListeners = 0;\r\n            this.element = element;\r\n            this.mouseDown = {\r\n                on: (value) => {\r\n                    this.element.addEventListener('mousedown', e => {\r\n                        value(new BrowserMouseEventArgs(e));\r\n                    }, true);\r\n                },\r\n                off: (value) => {\r\n                    // not supported due to wrapping\r\n                }\r\n            };\r\n            this.mouseUp = {\r\n                on: (value) => {\r\n                    this.element.addEventListener('mouseup', e => {\r\n                        value(new BrowserMouseEventArgs(e));\r\n                    }, true);\r\n                },\r\n                off: (value) => {\r\n                    // not supported due to wrapping\r\n                }\r\n            };\r\n            this.mouseMove = {\r\n                on: (value) => {\r\n                    this.element.addEventListener('mousemove', e => {\r\n                        value(new BrowserMouseEventArgs(e));\r\n                    }, true);\r\n                },\r\n                off: (_) => {\r\n                    // not supported due to wrapping\r\n                }\r\n            };\r\n            this.resize = {\r\n                on: (value) => {\r\n                    if (this._resizeListeners === 0) {\r\n                        HtmlElementContainer.resizeObserver.value.observe(this.element);\r\n                    }\r\n                    this.element.addEventListener('resize', value, true);\r\n                    this._resizeListeners++;\r\n                },\r\n                off: (value) => {\r\n                    this.element.removeEventListener('resize', value, true);\r\n                    this._resizeListeners--;\r\n                    if (this._resizeListeners <= 0) {\r\n                        this._resizeListeners = 0;\r\n                        HtmlElementContainer.resizeObserver.value.unobserve(this.element);\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        get top() {\r\n            return parseFloat(this.element.style.top);\r\n        }\r\n        set top(value) {\r\n            this.element.style.top = value + 'px';\r\n        }\r\n        get left() {\r\n            return parseFloat(this.element.style.top);\r\n        }\r\n        set left(value) {\r\n            this.element.style.left = value + 'px';\r\n        }\r\n        get width() {\r\n            return this.element.offsetWidth;\r\n        }\r\n        set width(value) {\r\n            this.element.style.width = value + 'px';\r\n        }\r\n        get scrollLeft() {\r\n            return this.element.scrollLeft;\r\n        }\r\n        set scrollLeft(value) {\r\n            this.element.scrollTop = value;\r\n        }\r\n        get scrollTop() {\r\n            return this.element.scrollLeft;\r\n        }\r\n        set scrollTop(value) {\r\n            this.element.scrollTop = value;\r\n        }\r\n        get height() {\r\n            return this.element.offsetHeight;\r\n        }\r\n        set height(value) {\r\n            if (value >= 0) {\r\n                this.element.style.height = value + 'px';\r\n            }\r\n            else {\r\n                this.element.style.height = '100%';\r\n            }\r\n        }\r\n        get isVisible() {\r\n            return !!this.element.offsetWidth || !!this.element.offsetHeight || !!this.element.getClientRects().length;\r\n        }\r\n        stopAnimation() {\r\n            this.element.style.transition = 'none';\r\n        }\r\n        transitionToX(duration, x) {\r\n            this.element.style.transition = 'all 0s linear';\r\n            this.element.style.transitionDuration = duration + 'ms';\r\n            this.element.style.left = x + 'px';\r\n        }\r\n        appendChild(child) {\r\n            this.element.appendChild(child.element);\r\n        }\r\n        clear() {\r\n            this.element.innerHTML = '';\r\n        }\r\n    }\r\n    HtmlElementContainer.resizeObserver = new Lazy(() => new ResizeObserver((entries) => {\r\n        for (const e of entries) {\r\n            let evt = new CustomEvent('resize', {\r\n                detail: e\r\n            });\r\n            e.target.dispatchEvent(evt);\r\n        }\r\n    }));\n\n    /**\r\n     * This small utility helps to detect whether a particular font is already loaded.\r\n     * @target web\r\n     */\r\n    class FontLoadingChecker {\r\n        constructor(family) {\r\n            this._isStarted = false;\r\n            this.isFontLoaded = false;\r\n            this.fontLoaded = new EventEmitterOfT();\r\n            this._family = family;\r\n        }\r\n        checkForFontAvailability() {\r\n            if (Environment.isRunningInWorker) {\r\n                // no web fonts in web worker\r\n                this.isFontLoaded = false;\r\n                return;\r\n            }\r\n            if (this._isStarted) {\r\n                return;\r\n            }\r\n            this._isStarted = true;\r\n            let failCounter = 0;\r\n            let failCounterId = window.setInterval(() => {\r\n                failCounter++;\r\n                Logger.warning('Rendering', `Could not load font '${this._family}' within ${failCounter * 5} seconds`, null);\r\n            }, 5000);\r\n            Logger.debug('Font', `Start checking for font availablility: ${this._family}`);\r\n            Logger.debug('Font', `[${this._family}] Font API available`);\r\n            let checkFont = () => {\r\n                document.fonts.load(`1em ${this._family}`).then(() => {\r\n                    Logger.debug('Font', `[${this._family}] Font API signaled loaded`);\r\n                    if (document.fonts.check('1em ' + this._family)) {\r\n                        Logger.debug('Rendering', `[${this._family}] Font API signaled available`);\r\n                        this.isFontLoaded = true;\r\n                        window.clearInterval(failCounterId);\r\n                        this.fontLoaded.trigger(this._family);\r\n                    }\r\n                    else {\r\n                        Logger.debug('Font', `[${this._family}] Font API loaded reported, but font not available, checking later again`, null);\r\n                        window.setTimeout(() => {\r\n                            checkFont();\r\n                        }, 250);\r\n                    }\r\n                    return true;\r\n                });\r\n            };\r\n            checkFont();\r\n        }\r\n    }\n\n    /**\r\n     * Represents a fixed size circular sample buffer that can be written to and read from.\r\n     * @csharp_public\r\n     */\r\n    class CircularSampleBuffer {\r\n        /**\r\n         * Initializes a new instance of the {@link CircularSampleBuffer} class.\r\n         * @param size The size.\r\n         */\r\n        constructor(size) {\r\n            this._writePosition = 0;\r\n            this._readPosition = 0;\r\n            /**\r\n             * Gets the number of samples written to the buffer.\r\n             */\r\n            this.count = 0;\r\n            this._buffer = new Float32Array(size);\r\n        }\r\n        /**\r\n         * Clears all samples written to this buffer.\r\n         */\r\n        clear() {\r\n            this._readPosition = 0;\r\n            this._writePosition = 0;\r\n            this.count = 0;\r\n            this._buffer = new Float32Array(this._buffer.length);\r\n        }\r\n        /**\r\n         * Writes the given samples to this buffer.\r\n         * @param data The sample array to read from.\r\n         * @param offset\r\n         * @param count\r\n         * @returns\r\n         */\r\n        write(data, offset, count) {\r\n            let samplesWritten = 0;\r\n            if (count > this._buffer.length - this.count) {\r\n                count = this._buffer.length - this.count;\r\n            }\r\n            const writeToEnd = Math.min(this._buffer.length - this._writePosition, count);\r\n            this._buffer.set(data.subarray(offset, offset + writeToEnd), this._writePosition);\r\n            this._writePosition += writeToEnd;\r\n            this._writePosition %= this._buffer.length;\r\n            samplesWritten += writeToEnd;\r\n            if (samplesWritten < count) {\r\n                this._buffer.set(data.subarray(offset + samplesWritten, offset + samplesWritten + count - samplesWritten), this._writePosition);\r\n                this._writePosition += count - samplesWritten;\r\n                samplesWritten = count;\r\n            }\r\n            this.count += samplesWritten;\r\n            return samplesWritten;\r\n        }\r\n        /**\r\n         * Reads the requested amount of samples from the buffer.\r\n         * @param data The sample array to store the read elements.\r\n         * @param offset The offset within the destination buffer to put the items at.\r\n         * @param count The number of items to read from this buffer.\r\n         * @returns The number of items actually read from the buffer.\r\n         */\r\n        read(data, offset, count) {\r\n            if (count > this.count) {\r\n                count = this.count;\r\n            }\r\n            let samplesRead = 0;\r\n            const readToEnd = Math.min(this._buffer.length - this._readPosition, count);\r\n            data.set(this._buffer.subarray(this._readPosition, this._readPosition + readToEnd), offset);\r\n            samplesRead += readToEnd;\r\n            this._readPosition += readToEnd;\r\n            this._readPosition %= this._buffer.length;\r\n            if (samplesRead < count) {\r\n                data.set(this._buffer.subarray(this._readPosition, this._readPosition + count - samplesRead), offset + samplesRead);\r\n                this._readPosition += count - samplesRead;\r\n                samplesRead = count;\r\n            }\r\n            this.count -= samplesRead;\r\n            return samplesRead;\r\n        }\r\n    }\n\n    /**\r\n     * This class implements a HTML5 Web Audio API based audio output device\r\n     * for alphaSynth. It can be controlled via a JS API.\r\n     * @target web\r\n     */\r\n    class AlphaSynthWebAudioOutput {\r\n        constructor() {\r\n            this._context = null;\r\n            this._buffer = null;\r\n            this._source = null;\r\n            this._audioNode = null;\r\n            this._outputBuffer = new Float32Array(0);\r\n            this.ready = new EventEmitter();\r\n            this.samplesPlayed = new EventEmitterOfT();\r\n            this.sampleRequest = new EventEmitter();\r\n        }\r\n        get sampleRate() {\r\n            return this._context ? this._context.sampleRate : AlphaSynthWebAudioOutput.PreferredSampleRate;\r\n        }\r\n        open() {\r\n            this.patchIosSampleRate();\r\n            this._circularBuffer = new CircularSampleBuffer(AlphaSynthWebAudioOutput.BufferSize * AlphaSynthWebAudioOutput.BufferCount);\r\n            this._context = this.createAudioContext();\r\n            // possible fix for Web Audio in iOS 9 (issue #4)\r\n            let ctx = this._context;\r\n            if (ctx.state === 'suspended') {\r\n                let resume = () => {\r\n                    ctx.resume();\r\n                    window.setTimeout(() => {\r\n                        if (ctx.state === 'running') {\r\n                            document.body.removeEventListener('touchend', resume, false);\r\n                            document.body.removeEventListener('click', resume, false);\r\n                        }\r\n                    }, 0);\r\n                };\r\n                document.body.addEventListener('touchend', resume, false);\r\n                document.body.addEventListener('click', resume, false);\r\n            }\r\n            this.ready.trigger();\r\n        }\r\n        activate() {\r\n            if (!this._context) {\r\n                this._context = this.createAudioContext();\r\n            }\r\n            // tslint:disable-next-line: no-floating-promises\r\n            this._context.resume();\r\n        }\r\n        patchIosSampleRate() {\r\n            let ua = navigator.userAgent;\r\n            if (ua.indexOf('iPhone') !== -1 || ua.indexOf('iPad') !== 0) {\r\n                let context = this.createAudioContext();\r\n                let buffer = context.createBuffer(1, 1, AlphaSynthWebAudioOutput.PreferredSampleRate);\r\n                let dummy = context.createBufferSource();\r\n                dummy.buffer = buffer;\r\n                dummy.connect(context.destination);\r\n                dummy.start(0);\r\n                dummy.disconnect(0);\r\n                // tslint:disable-next-line: no-floating-promises\r\n                context.close();\r\n            }\r\n        }\r\n        createAudioContext() {\r\n            if ('AudioContext' in Environment.globalThis) {\r\n                return new AudioContext();\r\n            }\r\n            else if ('webkitAudioContext' in Environment.globalThis) {\r\n                return new webkitAudioContext();\r\n            }\r\n            throw new AlphaTabError(exports.AlphaTabErrorType.General, \"AudioContext not found\");\r\n        }\r\n        play() {\r\n            let ctx = this._context;\r\n            if (!ctx) {\r\n                return;\r\n            }\r\n            if (ctx.state === 'suspended' || ctx.state === 'interrupted') {\r\n                // tslint:disable-next-line: no-floating-promises\r\n                ctx.resume();\r\n            }\r\n            // create an empty buffer source (silence)\r\n            this._buffer = ctx.createBuffer(2, 4096, ctx.sampleRate);\r\n            // create a script processor node which will replace the silence with the generated audio\r\n            this._audioNode = ctx.createScriptProcessor(4096, 0, 2);\r\n            this._audioNode.onaudioprocess = this.generateSound.bind(this);\r\n            this._circularBuffer.clear();\r\n            this.requestBuffers();\r\n            this._source = ctx.createBufferSource();\r\n            this._source.buffer = this._buffer;\r\n            this._source.loop = true;\r\n            this._source.connect(this._audioNode, 0, 0);\r\n            this._source.start(0);\r\n            this._audioNode.connect(ctx.destination, 0, 0);\r\n        }\r\n        pause() {\r\n            if (this._source) {\r\n                this._source.stop(0);\r\n                this._source.disconnect(0);\r\n            }\r\n            this._source = null;\r\n            if (this._audioNode) {\r\n                this._audioNode.disconnect(0);\r\n            }\r\n            this._audioNode = null;\r\n        }\r\n        addSamples(f) {\r\n            this._circularBuffer.write(f, 0, f.length);\r\n        }\r\n        resetSamples() {\r\n            this._circularBuffer.clear();\r\n        }\r\n        requestBuffers() {\r\n            // if we fall under the half of buffers\r\n            // we request one half\r\n            let count = ((10 / 2) | 0) * 4096;\r\n            if (this._circularBuffer.count < count && this.sampleRequest) {\r\n                for (let i = 0; i < ((10 / 2) | 0); i++) {\r\n                    this.sampleRequest.trigger();\r\n                }\r\n            }\r\n        }\r\n        generateSound(e) {\r\n            let left = e.outputBuffer.getChannelData(0);\r\n            let right = e.outputBuffer.getChannelData(1);\r\n            let samples = left.length + right.length;\r\n            let buffer = this._outputBuffer;\r\n            if (buffer.length != samples) {\r\n                buffer = new Float32Array(samples);\r\n                this._outputBuffer = buffer;\r\n            }\r\n            this._circularBuffer.read(buffer, 0, Math.min(buffer.length, this._circularBuffer.count));\r\n            let s = 0;\r\n            for (let i = 0; i < left.length; i++) {\r\n                left[i] = buffer[s++];\r\n                right[i] = buffer[s++];\r\n            }\r\n            this.samplesPlayed.trigger(left.length);\r\n            this.requestBuffers();\r\n        }\r\n    }\r\n    AlphaSynthWebAudioOutput.BufferSize = 4096;\r\n    AlphaSynthWebAudioOutput.BufferCount = 10;\r\n    AlphaSynthWebAudioOutput.PreferredSampleRate = 44100;\n\n    /**\r\n     * a WebWorker based alphaSynth which uses the given player as output.\r\n     * @target web\r\n     */\r\n    class AlphaSynthWebWorkerApi {\r\n        constructor(player, alphaSynthScriptFile, logLevel) {\r\n            this._workerIsReadyForPlayback = false;\r\n            this._workerIsReady = false;\r\n            this._outputIsReady = false;\r\n            this._state = PlayerState.Paused;\r\n            this._masterVolume = 0;\r\n            this._metronomeVolume = 0;\r\n            this._countInVolume = 0;\r\n            this._playbackSpeed = 0;\r\n            this._tickPosition = 0;\r\n            this._timePosition = 0;\r\n            this._isLooping = false;\r\n            this._playbackRange = null;\r\n            this._midiEventsPlayedFilter = [];\r\n            this.ready = new EventEmitter();\r\n            this.readyForPlayback = new EventEmitter();\r\n            this.finished = new EventEmitter();\r\n            this.soundFontLoaded = new EventEmitter();\r\n            this.soundFontLoadFailed = new EventEmitterOfT();\r\n            this.midiLoaded = new EventEmitterOfT();\r\n            this.midiLoadFailed = new EventEmitterOfT();\r\n            this.stateChanged = new EventEmitterOfT();\r\n            this.positionChanged = new EventEmitterOfT();\r\n            this.midiEventsPlayed = new EventEmitterOfT();\r\n            this._workerIsReadyForPlayback = false;\r\n            this._workerIsReady = false;\r\n            this._outputIsReady = false;\r\n            this._state = PlayerState.Paused;\r\n            this._masterVolume = 0.0;\r\n            this._metronomeVolume = 0.0;\r\n            this._playbackSpeed = 0.0;\r\n            this._tickPosition = 0;\r\n            this._timePosition = 0.0;\r\n            this._isLooping = false;\r\n            this._playbackRange = null;\r\n            this._output = player;\r\n            this._output.ready.on(this.onOutputReady.bind(this));\r\n            this._output.samplesPlayed.on(this.onOutputSamplesPlayed.bind(this));\r\n            this._output.sampleRequest.on(this.onOutputSampleRequest.bind(this));\r\n            this._output.open();\r\n            try {\r\n                let script = \"importScripts('\" + alphaSynthScriptFile + \"')\";\r\n                let blob = new Blob([script]);\r\n                this._synth = new Worker(URL.createObjectURL(blob));\r\n            }\r\n            catch (e) {\r\n                // fallback to direct worker\r\n                try {\r\n                    this._synth = new Worker(alphaSynthScriptFile);\r\n                }\r\n                catch (e2) {\r\n                    Logger.error('AlphaSynth', 'Failed to create WebWorker: ' + e2);\r\n                    return;\r\n                }\r\n            }\r\n            this._synth.addEventListener('message', this.handleWorkerMessage.bind(this), false);\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.initialize',\r\n                sampleRate: this._output.sampleRate,\r\n                logLevel: logLevel\r\n            });\r\n            this.masterVolume = 1;\r\n            this.playbackSpeed = 1;\r\n            this.metronomeVolume = 0;\r\n        }\r\n        get isReady() {\r\n            return this._workerIsReady && this._outputIsReady;\r\n        }\r\n        get isReadyForPlayback() {\r\n            return this._workerIsReadyForPlayback;\r\n        }\r\n        get state() {\r\n            return this._state;\r\n        }\r\n        get logLevel() {\r\n            return Logger.logLevel;\r\n        }\r\n        set logLevel(value) {\r\n            Logger.logLevel = value;\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.setLogLevel',\r\n                value: value\r\n            });\r\n        }\r\n        get masterVolume() {\r\n            return this._masterVolume;\r\n        }\r\n        set masterVolume(value) {\r\n            value = Math.max(value, SynthConstants.MinVolume);\r\n            this._masterVolume = value;\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.setMasterVolume',\r\n                value: value\r\n            });\r\n        }\r\n        get metronomeVolume() {\r\n            return this._metronomeVolume;\r\n        }\r\n        set metronomeVolume(value) {\r\n            value = Math.max(value, SynthConstants.MinVolume);\r\n            this._metronomeVolume = value;\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.setMetronomeVolume',\r\n                value: value\r\n            });\r\n        }\r\n        get countInVolume() {\r\n            return this._countInVolume;\r\n        }\r\n        set countInVolume(value) {\r\n            value = Math.max(value, SynthConstants.MinVolume);\r\n            this._countInVolume = value;\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.setCountInVolume',\r\n                value: value\r\n            });\r\n        }\r\n        get midiEventsPlayedFilter() {\r\n            return this._midiEventsPlayedFilter;\r\n        }\r\n        set midiEventsPlayedFilter(value) {\r\n            this._midiEventsPlayedFilter = value;\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.setMidiEventsPlayedFilter',\r\n                value: value\r\n            });\r\n        }\r\n        get playbackSpeed() {\r\n            return this._playbackSpeed;\r\n        }\r\n        set playbackSpeed(value) {\r\n            value = SynthHelper.clamp(value, SynthConstants.MinPlaybackSpeed, SynthConstants.MaxPlaybackSpeed);\r\n            this._playbackSpeed = value;\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.setPlaybackSpeed',\r\n                value: value\r\n            });\r\n        }\r\n        get tickPosition() {\r\n            return this._tickPosition;\r\n        }\r\n        set tickPosition(value) {\r\n            if (value < 0) {\r\n                value = 0;\r\n            }\r\n            this._tickPosition = value;\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.setTickPosition',\r\n                value: value\r\n            });\r\n        }\r\n        get timePosition() {\r\n            return this._timePosition;\r\n        }\r\n        set timePosition(value) {\r\n            if (value < 0) {\r\n                value = 0;\r\n            }\r\n            this._timePosition = value;\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.setTimePosition',\r\n                value: value\r\n            });\r\n        }\r\n        get isLooping() {\r\n            return this._isLooping;\r\n        }\r\n        set isLooping(value) {\r\n            this._isLooping = value;\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.setIsLooping',\r\n                value: value\r\n            });\r\n        }\r\n        get playbackRange() {\r\n            return this._playbackRange;\r\n        }\r\n        set playbackRange(value) {\r\n            if (value) {\r\n                if (value.startTick < 0) {\r\n                    value.startTick = 0;\r\n                }\r\n                if (value.endTick < 0) {\r\n                    value.endTick = 0;\r\n                }\r\n            }\r\n            this._playbackRange = value;\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.setPlaybackRange',\r\n                value: value\r\n            });\r\n        }\r\n        destroy() {\r\n            this._synth.terminate();\r\n        }\r\n        //\r\n        // API communicating with the web worker\r\n        play() {\r\n            this._output.activate();\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.play'\r\n            });\r\n            return true;\r\n        }\r\n        pause() {\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.pause'\r\n            });\r\n        }\r\n        playPause() {\r\n            this._output.activate();\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.playPause'\r\n            });\r\n        }\r\n        stop() {\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.stop'\r\n            });\r\n        }\r\n        playOneTimeMidiFile(midi) {\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.playOneTimeMidiFile',\r\n                midi: JsonConverter.midiFileToJsObject(midi)\r\n            });\r\n        }\r\n        loadSoundFont(data, append) {\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.loadSoundFontBytes',\r\n                data: data,\r\n                append: append\r\n            });\r\n        }\r\n        loadSoundFontFromUrl(url, append, progress) {\r\n            Logger.debug('AlphaSynth', `Start loading Soundfont from url ${url}`);\r\n            let request = new XMLHttpRequest();\r\n            request.open('GET', url, true, null, null);\r\n            request.responseType = 'arraybuffer';\r\n            request.onload = _ => {\r\n                let buffer = new Uint8Array(request.response);\r\n                this.loadSoundFont(buffer, append);\r\n            };\r\n            request.onerror = e => {\r\n                Logger.error('AlphaSynth', 'Loading failed: ' + e.message);\r\n                this.soundFontLoadFailed.trigger(new FileLoadError(e.message, request));\r\n            };\r\n            request.onprogress = e => {\r\n                Logger.debug('AlphaSynth', `Soundfont downloading: ${e.loaded}/${e.total} bytes`);\r\n                progress(new ProgressEventArgs(e.loaded, e.total));\r\n            };\r\n            request.send();\r\n        }\r\n        resetSoundFonts() {\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.resetSoundFonts'\r\n            });\r\n        }\r\n        loadMidiFile(midi) {\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.loadMidi',\r\n                midi: JsonConverter.midiFileToJsObject(midi)\r\n            });\r\n        }\r\n        setChannelMute(channel, mute) {\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.setChannelMute',\r\n                channel: channel,\r\n                mute: mute\r\n            });\r\n        }\r\n        resetChannelStates() {\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.resetChannelStates'\r\n            });\r\n        }\r\n        setChannelSolo(channel, solo) {\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.setChannelSolo',\r\n                channel: channel,\r\n                solo: solo\r\n            });\r\n        }\r\n        setChannelVolume(channel, volume) {\r\n            volume = Math.max(volume, SynthConstants.MinVolume);\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.setChannelVolume',\r\n                channel: channel,\r\n                volume: volume\r\n            });\r\n        }\r\n        handleWorkerMessage(e) {\r\n            let data = e.data;\r\n            let cmd = data.cmd;\r\n            switch (cmd) {\r\n                case 'alphaSynth.ready':\r\n                    this._workerIsReady = true;\r\n                    this.checkReady();\r\n                    break;\r\n                case 'alphaSynth.readyForPlayback':\r\n                    this._workerIsReadyForPlayback = true;\r\n                    this.checkReadyForPlayback();\r\n                    break;\r\n                case 'alphaSynth.positionChanged':\r\n                    this._timePosition = data.currentTime;\r\n                    this._tickPosition = data.currentTick;\r\n                    this.positionChanged.trigger(new PositionChangedEventArgs(data.currentTime, data.endTime, data.currentTick, data.endTick, data.isSeek));\r\n                    break;\r\n                case 'alphaSynth.midiEventsPlayed':\r\n                    this.midiEventsPlayed.trigger(new MidiEventsPlayedEventArgs(data.events.map(JsonConverter.jsObjectToMidiEvent)));\r\n                    break;\r\n                case 'alphaSynth.playerStateChanged':\r\n                    this._state = data.state;\r\n                    this.stateChanged.trigger(new PlayerStateChangedEventArgs(data.state, data.stopped));\r\n                    break;\r\n                case 'alphaSynth.finished':\r\n                    this.finished.trigger();\r\n                    break;\r\n                case 'alphaSynth.soundFontLoaded':\r\n                    this.soundFontLoaded.trigger();\r\n                    break;\r\n                case 'alphaSynth.soundFontLoadFailed':\r\n                    this.soundFontLoadFailed.trigger(data.error);\r\n                    break;\r\n                case 'alphaSynth.midiLoaded':\r\n                    this.checkReadyForPlayback();\r\n                    this.midiLoaded.trigger(new PositionChangedEventArgs(data.currentTime, data.endTime, data.currentTick, data.endTick, data.isSeek));\r\n                    break;\r\n                case 'alphaSynth.midiLoadFailed':\r\n                    this.checkReadyForPlayback();\r\n                    this.midiLoadFailed.trigger(data.error);\r\n                    break;\r\n                case 'alphaSynth.output.addSamples':\r\n                    this._output.addSamples(data.samples);\r\n                    break;\r\n                case 'alphaSynth.output.play':\r\n                    this._output.play();\r\n                    break;\r\n                case 'alphaSynth.output.pause':\r\n                    this._output.pause();\r\n                    break;\r\n                case 'alphaSynth.output.resetSamples':\r\n                    this._output.resetSamples();\r\n                    break;\r\n            }\r\n        }\r\n        checkReady() {\r\n            if (this.isReady) {\r\n                this.ready.trigger();\r\n            }\r\n        }\r\n        checkReadyForPlayback() {\r\n            if (this.isReadyForPlayback) {\r\n                this.readyForPlayback.trigger();\r\n            }\r\n        }\r\n        //\r\n        // output communication ( output -> worker )\r\n        onOutputSampleRequest() {\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.output.sampleRequest'\r\n            });\r\n        }\r\n        onOutputSamplesPlayed(samples) {\r\n            this._synth.postMessage({\r\n                cmd: 'alphaSynth.output.samplesPlayed',\r\n                samples: samples\r\n            });\r\n        }\r\n        onOutputReady() {\r\n            this._outputIsReady = true;\r\n            this.checkReady();\r\n        }\r\n    }\n\n    /**\r\n     * @target web\r\n     */\r\n    class AlphaTabWorkerScoreRenderer {\r\n        constructor(api, settings) {\r\n            this._width = 0;\r\n            this.boundsLookup = null;\r\n            this.preRender = new EventEmitterOfT();\r\n            this.partialRenderFinished = new EventEmitterOfT();\r\n            this.renderFinished = new EventEmitterOfT();\r\n            this.postRenderFinished = new EventEmitter();\r\n            this.error = new EventEmitterOfT();\r\n            this._api = api;\r\n            if (!settings.core.scriptFile) {\r\n                Logger.error('Rendering', `Could not detect alphaTab script file, cannot initialize renderer`);\r\n                return;\r\n            }\r\n            // first try blob worker\r\n            try {\r\n                let script = `importScripts('${settings.core.scriptFile}')`;\r\n                let blob = new Blob([script]);\r\n                this._worker = new Worker(URL.createObjectURL(blob));\r\n            }\r\n            catch (e) {\r\n                try {\r\n                    this._worker = new Worker(settings.core.scriptFile);\r\n                }\r\n                catch (e2) {\r\n                    Logger.error('Rendering', `Failed to create WebWorker: ${e}`);\r\n                    return;\r\n                }\r\n            }\r\n            this._worker.postMessage({\r\n                cmd: 'alphaTab.initialize',\r\n                settings: this.serializeSettingsForWorker(settings)\r\n            });\r\n            this._worker.addEventListener('message', this.handleWorkerMessage.bind(this));\r\n        }\r\n        destroy() {\r\n            this._worker.terminate();\r\n        }\r\n        updateSettings(settings) {\r\n            this._worker.postMessage({\r\n                cmd: 'alphaTab.updateSettings',\r\n                settings: this.serializeSettingsForWorker(settings)\r\n            });\r\n        }\r\n        serializeSettingsForWorker(settings) {\r\n            const jsObject = JsonConverter.settingsToJsObject(settings);\r\n            // cut out player settings, they are only needed on UI thread side\r\n            jsObject.delete('player');\r\n            return jsObject;\r\n        }\r\n        render() {\r\n            this._worker.postMessage({\r\n                cmd: 'alphaTab.render'\r\n            });\r\n        }\r\n        resizeRender() {\r\n            this._worker.postMessage({\r\n                cmd: 'alphaTab.resizeRender'\r\n            });\r\n        }\r\n        get width() {\r\n            return this._width;\r\n        }\r\n        set width(value) {\r\n            this._width = value;\r\n            this._worker.postMessage({\r\n                cmd: 'alphaTab.setWidth',\r\n                width: value\r\n            });\r\n        }\r\n        handleWorkerMessage(e) {\r\n            let data = e.data;\r\n            let cmd = data.cmd;\r\n            switch (cmd) {\r\n                case 'alphaTab.preRender':\r\n                    this.preRender.trigger(data.resize);\r\n                    break;\r\n                case 'alphaTab.partialRenderFinished':\r\n                    this.partialRenderFinished.trigger(data.result);\r\n                    break;\r\n                case 'alphaTab.renderFinished':\r\n                    this.renderFinished.trigger(data.result);\r\n                    break;\r\n                case 'alphaTab.postRenderFinished':\r\n                    this.boundsLookup = BoundsLookup.fromJson(data.boundsLookup, this._api.score);\r\n                    this.postRenderFinished.trigger();\r\n                    break;\r\n                case 'alphaTab.error':\r\n                    this.error.trigger(data.error);\r\n                    break;\r\n            }\r\n        }\r\n        renderScore(score, trackIndexes) {\r\n            let jsObject = JsonConverter.scoreToJsObject(score);\r\n            this._worker.postMessage({\r\n                cmd: 'alphaTab.renderScore',\r\n                score: jsObject,\r\n                trackIndexes: trackIndexes,\r\n                fontSizes: FontSizes.FontSizeLookupTables\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * This wrapper holds all cursor related elements.\r\n     */\r\n    class Cursors {\r\n        /**\r\n         * Initializes a new instance of the {@link Cursors} class.\r\n         * @param cursorWrapper\r\n         * @param barCursor\r\n         * @param beatCursor\r\n         * @param selectionWrapper\r\n         */\r\n        constructor(cursorWrapper, barCursor, beatCursor, selectionWrapper) {\r\n            this.cursorWrapper = cursorWrapper;\r\n            this.barCursor = barCursor;\r\n            this.beatCursor = beatCursor;\r\n            this.selectionWrapper = selectionWrapper;\r\n        }\r\n    }\n\n    /**\r\n     * @target web\r\n     */\r\n    class BrowserUiFacade {\r\n        constructor(rootElement) {\r\n            this._fontCheckers = new Map();\r\n            this._contents = null;\r\n            this._file = null;\r\n            this._totalResultCount = 0;\r\n            this._initialTrackIndexes = null;\r\n            this.rootContainerBecameVisible = new EventEmitter();\r\n            this.canRenderChanged = new EventEmitter();\r\n            rootElement.classList.add('alphaTab');\r\n            this.rootContainer = new HtmlElementContainer(rootElement);\r\n            this.areWorkersSupported = 'Worker' in window;\r\n            Environment.bravuraFontChecker.fontLoaded.on(this.onFontLoaded.bind(this));\r\n            this._intersectionObserver = new IntersectionObserver(this.onElementVisibilityChanged.bind(this), {\r\n                threshold: [0, 0.01, 1]\r\n            });\r\n            this._intersectionObserver.observe(rootElement);\r\n        }\r\n        get resizeThrottle() {\r\n            return 10;\r\n        }\r\n        get canRender() {\r\n            return this.areAllFontsLoaded();\r\n        }\r\n        areAllFontsLoaded() {\r\n            Environment.bravuraFontChecker.checkForFontAvailability();\r\n            if (!Environment.bravuraFontChecker.isFontLoaded) {\r\n                return false;\r\n            }\r\n            let isAnyNotLoaded = false;\r\n            for (const checker of this._fontCheckers.values()) {\r\n                if (!checker.isFontLoaded) {\r\n                    isAnyNotLoaded = true;\r\n                }\r\n            }\r\n            if (isAnyNotLoaded) {\r\n                return false;\r\n            }\r\n            Logger.debug('Font', 'All fonts loaded: ' + this._fontCheckers.size);\r\n            return true;\r\n        }\r\n        onFontLoaded(family) {\r\n            FontSizes.generateFontLookup(family);\r\n            if (this.areAllFontsLoaded()) {\r\n                this.canRenderChanged.trigger();\r\n            }\r\n        }\r\n        onElementVisibilityChanged(entries) {\r\n            for (const e of entries) {\r\n                if (e.isIntersecting) {\r\n                    const htmlElement = e.target;\r\n                    if (htmlElement === this.rootContainer.element) {\r\n                        this.rootContainerBecameVisible.trigger();\r\n                        this._intersectionObserver.unobserve(this.rootContainer.element);\r\n                    }\r\n                    else if ('svg' in htmlElement.dataset) {\r\n                        this.replacePlaceholder(htmlElement, htmlElement.dataset['svg']);\r\n                        this._intersectionObserver.unobserve(htmlElement);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        createWorkerRenderer() {\r\n            return new AlphaTabWorkerScoreRenderer(this._api, this._api.settings);\r\n        }\r\n        initialize(api, raw) {\r\n            this._api = api;\r\n            let settings;\r\n            if (raw instanceof Settings) {\r\n                settings = raw;\r\n            }\r\n            else {\r\n                settings = JsonConverter.jsObjectToSettings(raw);\r\n            }\r\n            let dataAttributes = this.getDataAttributes();\r\n            SettingsSerializer.fromJson(settings, dataAttributes);\r\n            if (settings.notation.notationMode === exports.NotationMode.SongBook) {\r\n                settings.setSongBookModeSettings();\r\n            }\r\n            api.settings = settings;\r\n            this.setupFontCheckers(settings);\r\n            this._initialTrackIndexes = this.parseTracks(settings.core.tracks);\r\n            this._contents = '';\r\n            let element = api.container;\r\n            if (settings.core.tex) {\r\n                this._contents = element.element.innerHTML;\r\n                element.element.innerHTML = '';\r\n            }\r\n            this.createStyleElement(settings);\r\n            this._file = settings.core.file;\r\n        }\r\n        setupFontCheckers(settings) {\r\n            this.registerFontChecker(settings.display.resources.copyrightFont);\r\n            this.registerFontChecker(settings.display.resources.effectFont);\r\n            this.registerFontChecker(settings.display.resources.fingeringFont);\r\n            this.registerFontChecker(settings.display.resources.graceFont);\r\n            this.registerFontChecker(settings.display.resources.markerFont);\r\n            this.registerFontChecker(settings.display.resources.tablatureFont);\r\n            this.registerFontChecker(settings.display.resources.titleFont);\r\n            this.registerFontChecker(settings.display.resources.wordsFont);\r\n            this.registerFontChecker(settings.display.resources.barNumberFont);\r\n            this.registerFontChecker(settings.display.resources.fretboardNumberFont);\r\n            this.registerFontChecker(settings.display.resources.subTitleFont);\r\n        }\r\n        registerFontChecker(font) {\r\n            if (!this._fontCheckers.has(font.family)) {\r\n                let checker = new FontLoadingChecker(font.family);\r\n                this._fontCheckers.set(font.family, checker);\r\n                checker.fontLoaded.on(this.onFontLoaded.bind(this));\r\n                checker.checkForFontAvailability();\r\n            }\r\n        }\r\n        destroy() {\r\n            this.rootContainer.element.innerHTML = '';\r\n        }\r\n        createCanvasElement() {\r\n            let canvasElement = document.createElement('div');\r\n            canvasElement.className = 'at-surface';\r\n            canvasElement.style.fontSize = '0';\r\n            canvasElement.style.overflow = 'hidden';\r\n            canvasElement.style.lineHeight = '0';\r\n            return new HtmlElementContainer(canvasElement);\r\n        }\r\n        triggerEvent(container, name, details = null, originalEvent) {\r\n            let element = container.element;\r\n            name = 'alphaTab.' + name;\r\n            let e = document.createEvent('CustomEvent');\r\n            let originalMouseEvent = originalEvent\r\n                ? originalEvent.mouseEvent\r\n                : null;\r\n            e.initCustomEvent(name, false, false, details);\r\n            if (originalMouseEvent) {\r\n                e.originalEvent = originalMouseEvent;\r\n            }\r\n            element.dispatchEvent(e);\r\n            if (window && 'jQuery' in window) {\r\n                let jquery = window['jQuery'];\r\n                let args = [];\r\n                args.push(details);\r\n                if (originalMouseEvent) {\r\n                    args.push(originalMouseEvent);\r\n                }\r\n                jquery(element).trigger(name, args);\r\n            }\r\n        }\r\n        load(data, success, error) {\r\n            if (data instanceof Score) {\r\n                success(data);\r\n                return true;\r\n            }\r\n            if (data instanceof ArrayBuffer) {\r\n                let byteArray = new Uint8Array(data);\r\n                success(ScoreLoader.loadScoreFromBytes(byteArray, this._api.settings));\r\n                return true;\r\n            }\r\n            if (data instanceof Uint8Array) {\r\n                success(ScoreLoader.loadScoreFromBytes(data, this._api.settings));\r\n                return true;\r\n            }\r\n            if (typeof data === 'string') {\r\n                ScoreLoader.loadScoreAsync(data, success, error, this._api.settings);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        loadSoundFont(data, append) {\r\n            if (!this._api.player) {\r\n                return false;\r\n            }\r\n            if (data instanceof ArrayBuffer) {\r\n                this._api.player.loadSoundFont(new Uint8Array(data), append);\r\n                return true;\r\n            }\r\n            if (data instanceof Uint8Array) {\r\n                this._api.player.loadSoundFont(data, append);\r\n                return true;\r\n            }\r\n            if (typeof data === 'string') {\r\n                this._api.loadSoundFontFromUrl(data, append);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        initialRender() {\r\n            this._api.renderer.preRender.on((_) => {\r\n                this._totalResultCount = 0;\r\n            });\r\n            const initialRender = () => {\r\n                var _a;\r\n                // rendering was possibly delayed due to invisible element\r\n                // in this case we need the correct width for autosize\r\n                this._api.renderer.width = this.rootContainer.width | 0;\r\n                this._api.renderer.updateSettings(this._api.settings);\r\n                if (this._contents) {\r\n                    this._api.tex(this._contents, (_a = this._initialTrackIndexes) !== null && _a !== void 0 ? _a : undefined);\r\n                    this._initialTrackIndexes = null;\r\n                }\r\n                else if (this._file) {\r\n                    ScoreLoader.loadScoreAsync(this._file, s => {\r\n                        var _a;\r\n                        this._api.renderScore(s, (_a = this._initialTrackIndexes) !== null && _a !== void 0 ? _a : undefined);\r\n                        this._initialTrackIndexes = null;\r\n                    }, e => {\r\n                        this._api.onError(e);\r\n                    }, this._api.settings);\r\n                }\r\n            };\r\n            if (!this.rootContainer.isVisible) {\r\n                this.rootContainerBecameVisible.on(initialRender);\r\n            }\r\n            else {\r\n                initialRender();\r\n            }\r\n        }\r\n        createStyleElement(settings) {\r\n            let elementDocument = this._api.container.element.ownerDocument;\r\n            Environment.createStyleElement(elementDocument, settings.core.fontDirectory);\r\n        }\r\n        parseTracks(tracksData) {\r\n            if (!tracksData) {\r\n                return [];\r\n            }\r\n            let tracks = [];\r\n            // decode string\r\n            if (typeof tracksData === 'string') {\r\n                try {\r\n                    if (tracksData === 'all') {\r\n                        return [-1];\r\n                    }\r\n                    tracksData = JSON.parse(tracksData);\r\n                }\r\n                catch (e) {\r\n                    tracksData = [0];\r\n                }\r\n            }\r\n            // decode array\r\n            if (typeof tracksData === 'number') {\r\n                tracks.push(tracksData);\r\n            }\r\n            else if ('length' in tracksData) {\r\n                let length = tracksData.length;\r\n                let array = tracksData;\r\n                for (let i = 0; i < length; i++) {\r\n                    let item = array[i];\r\n                    let value = 0;\r\n                    if (typeof item === 'number') {\r\n                        value = item;\r\n                    }\r\n                    else if ('index' in item) {\r\n                        value = item.index;\r\n                    }\r\n                    else {\r\n                        value = parseInt(item.toString());\r\n                    }\r\n                    if (value >= 0 || value === -1) {\r\n                        tracks.push(value);\r\n                    }\r\n                }\r\n            }\r\n            else if ('index' in tracksData) {\r\n                tracks.push(tracksData.index);\r\n            }\r\n            return tracks;\r\n        }\r\n        getDataAttributes() {\r\n            let dataAttributes = new Map();\r\n            let element = this._api.container.element;\r\n            if (element.dataset) {\r\n                for (let key of Object.keys(element.dataset)) {\r\n                    let value = element.dataset[key];\r\n                    try {\r\n                        let stringValue = value;\r\n                        value = JSON.parse(stringValue);\r\n                    }\r\n                    catch (e) {\r\n                        if (value === '') {\r\n                            value = null;\r\n                        }\r\n                    }\r\n                    dataAttributes.set(key, value);\r\n                }\r\n            }\r\n            else {\r\n                for (let i = 0; i < element.attributes.length; i++) {\r\n                    let attr = element.attributes.item(i);\r\n                    let nodeName = attr.nodeName;\r\n                    if (nodeName.startsWith('data-')) {\r\n                        let keyParts = nodeName.substr(5).split('-');\r\n                        let key = keyParts[0];\r\n                        for (let j = 1; j < keyParts.length; j++) {\r\n                            key += keyParts[j].substr(0, 1).toUpperCase() + keyParts[j].substr(1);\r\n                        }\r\n                        let value = attr.nodeValue;\r\n                        try {\r\n                            value = JSON.parse(value);\r\n                        }\r\n                        catch (e) {\r\n                            if (value === '') {\r\n                                value = null;\r\n                            }\r\n                        }\r\n                        dataAttributes.set(key, value);\r\n                    }\r\n                }\r\n            }\r\n            return dataAttributes;\r\n        }\r\n        beginAppendRenderResults(renderResult) {\r\n            let canvasElement = this._api.canvasElement.element;\r\n            // null result indicates that the rendering finished\r\n            if (!renderResult) {\r\n                // so we remove elements that might be from a previous render session\r\n                while (canvasElement.childElementCount > this._totalResultCount) {\r\n                    canvasElement.removeChild(canvasElement.lastChild);\r\n                }\r\n            }\r\n            else {\r\n                let body = renderResult.renderResult;\r\n                if (typeof body === 'string') {\r\n                    let placeholder;\r\n                    if (this._totalResultCount < canvasElement.childElementCount) {\r\n                        placeholder = canvasElement.childNodes.item(this._totalResultCount);\r\n                    }\r\n                    else {\r\n                        placeholder = document.createElement('div');\r\n                        canvasElement.appendChild(placeholder);\r\n                    }\r\n                    placeholder.style.width = renderResult.width + 'px';\r\n                    placeholder.style.height = renderResult.height + 'px';\r\n                    placeholder.style.display = 'inline-block';\r\n                    if (!this._api.settings.core.enableLazyLoading) {\r\n                        this.replacePlaceholder(placeholder, body);\r\n                    }\r\n                    else {\r\n                        placeholder.dataset['svg'] = body;\r\n                        this._intersectionObserver.observe(placeholder);\r\n                    }\r\n                }\r\n                else {\r\n                    if (this._totalResultCount < canvasElement.childElementCount) {\r\n                        canvasElement.replaceChild(renderResult.renderResult, canvasElement.childNodes.item(this._totalResultCount));\r\n                    }\r\n                    else {\r\n                        canvasElement.appendChild(renderResult.renderResult);\r\n                    }\r\n                }\r\n                this._totalResultCount++;\r\n            }\r\n        }\r\n        replacePlaceholder(placeholder, body) {\r\n            var _a;\r\n            if (typeof placeholder.outerHTML === 'string') {\r\n                placeholder.outerHTML = body;\r\n            }\r\n            else {\r\n                const display = document.createElement('div');\r\n                display.innerHTML = body;\r\n                (_a = placeholder.parentNode) === null || _a === void 0 ? void 0 : _a.replaceChild(display.firstChild, placeholder);\r\n            }\r\n        }\r\n        /**\r\n         * This method creates the player. It detects browser compatibility and\r\n         * initializes a alphaSynth version for the client.\r\n         */\r\n        createWorkerPlayer() {\r\n            let supportsWebAudio = 'ScriptProcessorNode' in window;\r\n            let alphaSynthScriptFile = Environment.scriptFile;\r\n            if (!alphaSynthScriptFile) {\r\n                Logger.error('Player', 'alphaTab script file could not be detected, player cannot initialize');\r\n                return null;\r\n            }\r\n            let player = null;\r\n            if (supportsWebAudio) {\r\n                Logger.debug('Player', 'Will use webworkers for synthesizing and web audio api for playback');\r\n                player = new AlphaSynthWebWorkerApi(new AlphaSynthWebAudioOutput(), alphaSynthScriptFile, this._api.settings.core.logLevel);\r\n            }\r\n            if (!player) {\r\n                Logger.error('Player', 'Player requires webworkers and web audio api, browser unsupported', null);\r\n            }\r\n            else {\r\n                player.ready.on(() => {\r\n                    if (this._api.settings.player.soundFont) {\r\n                        this._api.loadSoundFontFromUrl(this._api.settings.player.soundFont, false);\r\n                    }\r\n                });\r\n            }\r\n            return player;\r\n        }\r\n        beginInvoke(action) {\r\n            window.requestAnimationFrame(() => {\r\n                action();\r\n            });\r\n        }\r\n        highlightElements(groupId) {\r\n            let element = this._api.container.element;\r\n            let elementsToHighlight = element.getElementsByClassName(groupId);\r\n            for (let i = 0; i < elementsToHighlight.length; i++) {\r\n                elementsToHighlight.item(i).classList.add('at-highlight');\r\n            }\r\n        }\r\n        removeHighlights() {\r\n            let element = this._api.container.element;\r\n            let elements = element.getElementsByClassName('at-highlight');\r\n            while (elements.length > 0) {\r\n                elements.item(0).classList.remove('at-highlight');\r\n            }\r\n        }\r\n        destroyCursors() {\r\n            let element = this._api.container.element;\r\n            let cursorWrapper = element.querySelector('.at-cursors');\r\n            element.removeChild(cursorWrapper);\r\n        }\r\n        createCursors() {\r\n            let element = this._api.container.element;\r\n            let cursorWrapper = document.createElement('div');\r\n            cursorWrapper.classList.add('at-cursors');\r\n            let selectionWrapper = document.createElement('div');\r\n            selectionWrapper.classList.add('at-selection');\r\n            let barCursor = document.createElement('div');\r\n            barCursor.classList.add('at-cursor-bar');\r\n            let beatCursor = document.createElement('div');\r\n            beatCursor.classList.add('at-cursor-beat');\r\n            // required css styles\r\n            element.style.position = 'relative';\r\n            element.style.textAlign = 'left';\r\n            cursorWrapper.style.position = 'absolute';\r\n            cursorWrapper.style.zIndex = '1000';\r\n            cursorWrapper.style.display = 'inline';\r\n            cursorWrapper.style.pointerEvents = 'none';\r\n            selectionWrapper.style.position = 'absolute';\r\n            barCursor.style.position = 'absolute';\r\n            beatCursor.style.position = 'absolute';\r\n            beatCursor.style.transition = 'all 0s linear';\r\n            // add cursors to UI\r\n            element.insertBefore(cursorWrapper, element.firstChild);\r\n            cursorWrapper.appendChild(selectionWrapper);\r\n            cursorWrapper.appendChild(barCursor);\r\n            cursorWrapper.appendChild(beatCursor);\r\n            return new Cursors(new HtmlElementContainer(cursorWrapper), new HtmlElementContainer(barCursor), new HtmlElementContainer(beatCursor), new HtmlElementContainer(selectionWrapper));\r\n        }\r\n        getOffset(scrollContainer, container) {\r\n            let element = container.element;\r\n            let bounds = element.getBoundingClientRect();\r\n            let top = bounds.top + element.ownerDocument.defaultView.pageYOffset;\r\n            let left = bounds.left + element.ownerDocument.defaultView.pageXOffset;\r\n            if (scrollContainer) {\r\n                let scrollElement = scrollContainer.element;\r\n                let nodeName = scrollElement.nodeName.toLowerCase();\r\n                if (nodeName !== 'html' && nodeName !== 'body') {\r\n                    let scrollElementOffset = this.getOffset(null, scrollContainer);\r\n                    top = top + scrollElement.scrollTop - scrollElementOffset.y;\r\n                    left = left + scrollElement.scrollLeft - scrollElementOffset.x;\r\n                }\r\n            }\r\n            let b = new Bounds();\r\n            b.x = left;\r\n            b.y = top;\r\n            b.w = bounds.width;\r\n            b.h = bounds.height;\r\n            return b;\r\n        }\r\n        getScrollContainer() {\r\n            let scrollElement = \r\n            // tslint:disable-next-line: strict-type-predicates\r\n            typeof this._api.settings.player.scrollElement === 'string'\r\n                ? document.querySelector(this._api.settings.player.scrollElement)\r\n                : this._api.settings.player.scrollElement;\r\n            let nodeName = scrollElement.nodeName.toLowerCase();\r\n            if (nodeName === 'html' || nodeName === 'body') {\r\n                // https://github.com/CoderLine/alphaTab/issues/205\r\n                // https://github.com/CoderLine/alphaTab/issues/354\r\n                // https://dev.opera.com/articles/fixing-the-scrolltop-bug/\r\n                if ('scrollingElement' in document) {\r\n                    scrollElement = document.scrollingElement;\r\n                }\r\n                else {\r\n                    const userAgent = navigator.userAgent;\r\n                    if (userAgent.indexOf('WebKit') !== -1) {\r\n                        scrollElement = document.body;\r\n                    }\r\n                    else {\r\n                        scrollElement = document.documentElement;\r\n                    }\r\n                }\r\n            }\r\n            return new HtmlElementContainer(scrollElement);\r\n        }\r\n        createSelectionElement() {\r\n            let element = document.createElement('div');\r\n            element.style.position = 'absolute';\r\n            return new HtmlElementContainer(element);\r\n        }\r\n        scrollToY(element, scrollTargetY, speed) {\r\n            this.internalScrollToY(element.element, scrollTargetY, speed);\r\n        }\r\n        scrollToX(element, scrollTargetY, speed) {\r\n            this.internalScrollToX(element.element, scrollTargetY, speed);\r\n        }\r\n        internalScrollToY(element, scrollTargetY, speed) {\r\n            let startY = element.scrollTop;\r\n            let diff = scrollTargetY - startY;\r\n            let start = 0;\r\n            let step = (x) => {\r\n                if (start === 0) {\r\n                    start = x;\r\n                }\r\n                let time = x - start;\r\n                let percent = Math.min(time / speed, 1);\r\n                element.scrollTop = (startY + diff * percent) | 0;\r\n                if (time < speed) {\r\n                    window.requestAnimationFrame(step);\r\n                }\r\n            };\r\n            window.requestAnimationFrame(step);\r\n        }\r\n        internalScrollToX(element, scrollTargetX, speed) {\r\n            let startX = element.scrollLeft;\r\n            let diff = scrollTargetX - startX;\r\n            let start = 0;\r\n            let step = (t) => {\r\n                if (start === 0) {\r\n                    start = t;\r\n                }\r\n                let time = t - start;\r\n                let percent = Math.min(time / speed, 1);\r\n                element.scrollLeft = (startX + diff * percent) | 0;\r\n                if (time < speed) {\r\n                    window.requestAnimationFrame(step);\r\n                }\r\n            };\r\n            window.requestAnimationFrame(step);\r\n        }\r\n    }\n\n    /**\r\n     * @target web\r\n     */\r\n    class AlphaTabApi extends AlphaTabApiBase {\r\n        constructor(element, options) {\r\n            super(new BrowserUiFacade(element), options);\r\n            this.soundFontLoad = new EventEmitterOfT();\r\n        }\r\n        tex(tex, tracks) {\r\n            let browser = this.uiFacade;\r\n            super.tex(tex, browser.parseTracks(tracks));\r\n        }\r\n        print(width, additionalSettings = null) {\r\n            // prepare a popup window for printing (a4 width, window height, centered)\r\n            let preview = window.open('', '', 'width=0,height=0');\r\n            let a4 = preview.document.createElement('div');\r\n            if (width) {\r\n                a4.style.width = width;\r\n            }\r\n            else {\r\n                if (this.settings.display.layoutMode === exports.LayoutMode.Horizontal) {\r\n                    a4.style.width = '297mm';\r\n                }\r\n                else {\r\n                    a4.style.width = '210mm';\r\n                }\r\n            }\r\n            preview.document.write('<!DOCTYPE html><html></head><body></body></html>');\r\n            preview.document.body.appendChild(a4);\r\n            let dualScreenLeft = typeof window['screenLeft'] !== 'undefined'\r\n                ? window['screenLeft']\r\n                : window['left'];\r\n            let dualScreenTop = typeof window['screenTop'] !== 'undefined' ? window['screenTop'] : window['top'];\r\n            let screenWidth = \"innerWidth\" in window\r\n                ? window.innerWidth\r\n                : \"clientWidth\" in document.documentElement\r\n                    ? document.documentElement.clientWidth\r\n                    : window.screen.width;\r\n            let screenHeight = \"innerHeight\" in window\r\n                ? window.innerHeight\r\n                : \"clientHeight\" in document.documentElement\r\n                    ? document.documentElement.clientHeight\r\n                    : window.screen.height;\r\n            let w = a4.offsetWidth + 50;\r\n            let h = window.innerHeight;\r\n            let left = ((screenWidth / 2) | 0) - ((w / 2) | 0) + dualScreenLeft;\r\n            let top = ((screenHeight / 2) | 0) - ((h / 2) | 0) + dualScreenTop;\r\n            preview.resizeTo(w, h);\r\n            preview.moveTo(left, top);\r\n            preview.focus();\r\n            // render alphaTab\r\n            let settings = JsonConverter.jsObjectToSettings(JsonConverter.settingsToJsObject(this.settings));\r\n            settings.core.enableLazyLoading = false;\r\n            settings.core.useWorkers = false;\r\n            settings.display.scale = 0.8;\r\n            settings.display.stretchForce = 0.8;\r\n            SettingsSerializer.fromJson(settings, additionalSettings);\r\n            let alphaTab = new AlphaTabApi(a4, settings);\r\n            alphaTab.renderer.postRenderFinished.on(() => {\r\n                alphaTab.canvasElement.height = -1;\r\n                preview.print();\r\n            });\r\n            alphaTab.renderTracks(this.tracks);\r\n        }\r\n        downloadMidi() {\r\n            if (!this.score) {\r\n                return;\r\n            }\r\n            let midiFile = new MidiFile();\r\n            let handler = new AlphaSynthMidiFileHandler(midiFile);\r\n            let generator = new MidiFileGenerator(this.score, this.settings, handler);\r\n            generator.generate();\r\n            let binary = midiFile.toBinary();\r\n            let fileName = !this.score.title ? 'File.mid' : `${this.score.title}.mid`;\r\n            let dlLink = document.createElement('a');\r\n            dlLink.download = fileName;\r\n            let blob = new Blob([binary], {\r\n                type: 'audio/midi'\r\n            });\r\n            let url = URL.createObjectURL(blob);\r\n            dlLink.href = url;\r\n            dlLink.style.display = 'none';\r\n            document.body.appendChild(dlLink);\r\n            dlLink.click();\r\n            document.body.removeChild(dlLink);\r\n        }\r\n        changeTrackMute(tracks, mute) {\r\n            let trackList = this.trackIndexesToTracks(this.uiFacade.parseTracks(tracks));\r\n            super.changeTrackMute(trackList, mute);\r\n        }\r\n        changeTrackSolo(tracks, solo) {\r\n            let trackList = this.trackIndexesToTracks(this.uiFacade.parseTracks(tracks));\r\n            super.changeTrackSolo(trackList, solo);\r\n        }\r\n        changeTrackVolume(tracks, volume) {\r\n            let trackList = this.trackIndexesToTracks(this.uiFacade.parseTracks(tracks));\r\n            super.changeTrackVolume(trackList, volume);\r\n        }\r\n        trackIndexesToTracks(trackIndexes) {\r\n            if (!this.score) {\r\n                return [];\r\n            }\r\n            let tracks = [];\r\n            if (trackIndexes.length === 1 && trackIndexes[0] === -1) {\r\n                for (let track of this.score.tracks) {\r\n                    tracks.push(track);\r\n                }\r\n            }\r\n            else {\r\n                for (let index of trackIndexes) {\r\n                    if (index >= 0 && index < this.score.tracks.length) {\r\n                        tracks.push(this.score.tracks[index]);\r\n                    }\r\n                }\r\n            }\r\n            return tracks;\r\n        }\r\n        loadSoundFontFromUrl(url, append) {\r\n            if (!this.player) {\r\n                return;\r\n            }\r\n            this.player.loadSoundFontFromUrl(url, append, e => {\r\n                this.soundFontLoad.trigger(e);\r\n                this.uiFacade.triggerEvent(this.container, 'soundFontLoad', e);\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * @target web\r\n     */\r\n    class JQueryAlphaTab {\r\n        constructor() {\r\n            this._initListeners = [];\r\n        }\r\n        exec(element, method, args) {\r\n            if (typeof method !== 'string') {\r\n                args = [method];\r\n                method = 'init';\r\n            }\r\n            if (method.charCodeAt(0) === 95 || method === 'exec') {\r\n                return null;\r\n            }\r\n            let jElement = new jQuery(element);\r\n            let context = jElement.data('alphaTab');\r\n            if (method === 'destroy' && !context) {\r\n                return null;\r\n            }\r\n            if (method !== 'init' && !context) {\r\n                throw new Error('alphaTab not initialized');\r\n            }\r\n            let apiMethod = this[method];\r\n            if (apiMethod) {\r\n                let realArgs = [jElement, context].concat(args);\r\n                return apiMethod.apply(this, realArgs);\r\n            }\r\n            else {\r\n                Logger.error('Api', \"Method '\" + method + \"' does not exist on jQuery.alphaTab\");\r\n                return null;\r\n            }\r\n        }\r\n        init(element, context, options) {\r\n            if (!context) {\r\n                context = new AlphaTabApi(element[0], options);\r\n                element.data('alphaTab', context);\r\n                for (let listener of this._initListeners) {\r\n                    listener(element, context, options);\r\n                }\r\n            }\r\n        }\r\n        destroy(element, context) {\r\n            element.removeData('alphaTab');\r\n            context.destroy();\r\n        }\r\n        print(element, context, width, additionalSettings) {\r\n            context.print(width, additionalSettings);\r\n        }\r\n        load(element, context, data, tracks) {\r\n            return context.load(data, tracks);\r\n        }\r\n        render(element, context) {\r\n            context.render();\r\n        }\r\n        renderScore(element, context, score, tracks) {\r\n            context.renderScore(score, tracks);\r\n        }\r\n        renderTracks(element, context, tracks) {\r\n            context.renderTracks(tracks);\r\n        }\r\n        invalidate(element, context) {\r\n            context.render();\r\n        }\r\n        tex(element, context, tex, tracks) {\r\n            context.tex(tex, tracks);\r\n        }\r\n        muteTrack(element, context, tracks, mute) {\r\n            context.changeTrackMute(tracks, mute);\r\n        }\r\n        soloTrack(element, context, tracks, solo) {\r\n            context.changeTrackSolo(tracks, solo);\r\n        }\r\n        trackVolume(element, context, tracks, volume) {\r\n            context.changeTrackVolume(tracks, volume);\r\n        }\r\n        loadSoundFont(element, context, value, append) {\r\n            context.loadSoundFont(value, append);\r\n        }\r\n        resetSoundFonts(element, context) {\r\n            context.resetSoundFonts();\r\n        }\r\n        pause(element, context) {\r\n            context.pause();\r\n        }\r\n        play(element, context) {\r\n            return context.play();\r\n        }\r\n        playPause(element, context) {\r\n            context.playPause();\r\n        }\r\n        stop(element, context) {\r\n            context.stop();\r\n        }\r\n        api(element, context) {\r\n            return context;\r\n        }\r\n        player(element, context) {\r\n            return context.player;\r\n        }\r\n        isReadyForPlayback(element, context) {\r\n            return context.isReadyForPlayback;\r\n        }\r\n        playerState(element, context) {\r\n            return context.playerState;\r\n        }\r\n        masterVolume(element, context, masterVolume) {\r\n            if (typeof masterVolume === 'number') {\r\n                context.masterVolume = masterVolume;\r\n            }\r\n            return context.masterVolume;\r\n        }\r\n        metronomeVolume(element, context, metronomeVolume) {\r\n            if (typeof metronomeVolume === 'number') {\r\n                context.metronomeVolume = metronomeVolume;\r\n            }\r\n            return context.metronomeVolume;\r\n        }\r\n        countInVolume(element, context, countInVolume) {\r\n            if (typeof countInVolume === 'number') {\r\n                context.countInVolume = countInVolume;\r\n            }\r\n            return context.countInVolume;\r\n        }\r\n        midiEventsPlayedFilter(element, context, midiEventsPlayedFilter) {\r\n            if (Array.isArray(midiEventsPlayedFilter)) {\r\n                context.midiEventsPlayedFilter = midiEventsPlayedFilter;\r\n            }\r\n            return context.midiEventsPlayedFilter;\r\n        }\r\n        playbackSpeed(element, context, playbackSpeed) {\r\n            if (typeof playbackSpeed === 'number') {\r\n                context.playbackSpeed = playbackSpeed;\r\n            }\r\n            return context.playbackSpeed;\r\n        }\r\n        tickPosition(element, context, tickPosition) {\r\n            if (typeof tickPosition === 'number') {\r\n                context.tickPosition = tickPosition;\r\n            }\r\n            return context.tickPosition;\r\n        }\r\n        timePosition(element, context, timePosition) {\r\n            if (typeof timePosition === 'number') {\r\n                context.timePosition = timePosition;\r\n            }\r\n            return context.timePosition;\r\n        }\r\n        loop(element, context, loop) {\r\n            if (typeof loop === 'boolean') {\r\n                context.isLooping = loop;\r\n            }\r\n            return context.isLooping;\r\n        }\r\n        renderer(element, context) {\r\n            return context.renderer;\r\n        }\r\n        score(element, context) {\r\n            return context.score;\r\n        }\r\n        settings(element, context) {\r\n            return context.settings;\r\n        }\r\n        tracks(element, context) {\r\n            return context.tracks;\r\n        }\r\n        _oninit(listener) {\r\n            this._initListeners.push(listener);\r\n        }\r\n        static restore(selector) {\r\n            new jQuery(selector).empty().removeData('alphaTab');\r\n        }\r\n    }\n\n    /**\r\n     * A canvas implementation storing SVG data\r\n     */\r\n    class SvgCanvas {\r\n        constructor() {\r\n            this.buffer = '';\r\n            this._currentPath = '';\r\n            this._currentPathIsEmpty = true;\r\n            this.color = new Color(255, 255, 255, 0xff);\r\n            this.lineWidth = 1;\r\n            this.font = new Font('Arial', 10, FontStyle.Plain);\r\n            this.textAlign = TextAlign.Left;\r\n            this.textBaseline = TextBaseline.Top;\r\n        }\r\n        beginRender(width, height) {\r\n            this.buffer = `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"${width | 0}px\" height=\"${height | 0}px\" class=\"at-surface-svg\">\\n`;\r\n            this._currentPath = '';\r\n            this._currentPathIsEmpty = true;\r\n            this.textBaseline = TextBaseline.Top;\r\n        }\r\n        beginGroup(identifier) {\r\n            this.buffer += `<g class=\"${identifier}\">`;\r\n        }\r\n        endGroup() {\r\n            this.buffer += '</g>';\r\n        }\r\n        endRender() {\r\n            this.buffer += '</svg>';\r\n            return this.buffer;\r\n        }\r\n        fillRect(x, y, w, h) {\r\n            if (w > 0) {\r\n                this.buffer += `<rect x=\"${x | 0}\" y=\"${y | 0}\" width=\"${w}\" height=\"${h}\" fill=\"${this.color.rgba}\" />\\n`;\r\n            }\r\n        }\r\n        strokeRect(x, y, w, h) {\r\n            this.buffer += `<rect x=\"${x | 0}\" y=\"${y | 0}\" width=\"${w}\" height=\"${h}\" stroke=\"${this.color.rgba}\"`;\r\n            if (this.lineWidth !== 1) {\r\n                this.buffer += ` stroke-width=\"${this.lineWidth}\"`;\r\n            }\r\n            this.buffer += ' fill=\"transparent\" />\\n';\r\n        }\r\n        beginPath() {\r\n            // nothing to do\r\n        }\r\n        closePath() {\r\n            this._currentPath += ' z';\r\n        }\r\n        moveTo(x, y) {\r\n            this._currentPath += ` M${x},${y}`;\r\n        }\r\n        lineTo(x, y) {\r\n            this._currentPathIsEmpty = false;\r\n            this._currentPath += ` L${x},${y}`;\r\n        }\r\n        quadraticCurveTo(cpx, cpy, x, y) {\r\n            this._currentPathIsEmpty = false;\r\n            this._currentPath += ` Q${cpx},${cpy},${x},${y}`;\r\n        }\r\n        bezierCurveTo(cp1X, cp1Y, cp2X, cp2Y, x, y) {\r\n            this._currentPathIsEmpty = false;\r\n            this._currentPath += ` C${cp1X},${cp1Y},${cp2X},${cp2Y},${x},${y}`;\r\n        }\r\n        fillCircle(x, y, radius) {\r\n            this._currentPathIsEmpty = false;\r\n            //\r\n            // M0,250 A1,1 0 0,0 500,250 A1,1 0 0,0 0,250 z\r\n            this._currentPath += ` M${x - radius},${y} A1,1 0 0,0 ${x + radius},${y} A1,1 0 0,0 ${x - radius},${y} z`;\r\n            this.fill();\r\n        }\r\n        strokeCircle(x, y, radius) {\r\n            this._currentPathIsEmpty = false;\r\n            //\r\n            // M0,250 A1,1 0 0,0 500,250 A1,1 0 0,0 0,250 z\r\n            this._currentPath += ` M${x - radius},${y} A1,1 0 0,0 ${x + radius},${y} A1,1 0 0,0 ${x - radius},${y} z`;\r\n            this.stroke();\r\n        }\r\n        fill() {\r\n            if (!this._currentPathIsEmpty) {\r\n                this.buffer += `<path d=\"${this._currentPath}\"`;\r\n                if (this.color.rgba !== '#000000') {\r\n                    this.buffer += ` fill=\"${this.color.rgba}\"`;\r\n                }\r\n                this.buffer += ' style=\"stroke: none\"/>';\r\n            }\r\n            this._currentPath = '';\r\n            this._currentPathIsEmpty = true;\r\n        }\r\n        stroke() {\r\n            if (!this._currentPathIsEmpty) {\r\n                let s = `<path d=\"${this._currentPath}\" stroke=\"${this.color.rgba}\"`;\r\n                if (this.lineWidth !== 1) {\r\n                    s += ` stroke-width=\"${this.lineWidth}\"`;\r\n                }\r\n                s += ' style=\"fill: none\" />';\r\n                this.buffer += s;\r\n            }\r\n            this._currentPath = '';\r\n            this._currentPathIsEmpty = true;\r\n        }\r\n        fillText(text, x, y) {\r\n            if (text === '') {\r\n                return;\r\n            }\r\n            let s = `<text x=\"${x | 0}\" y=\"${y | 0}\" style=\"stroke: none; font:${this.font.toCssString(this.settings.display.scale)}\" ${this.getSvgBaseLine()}`;\r\n            if (this.color.rgba !== '#000000') {\r\n                s += ` fill=\"${this.color.rgba}\"`;\r\n            }\r\n            if (this.textAlign !== TextAlign.Left) {\r\n                s += ` text-anchor=\"${this.getSvgTextAlignment(this.textAlign)}\"`;\r\n            }\r\n            s += `>${SvgCanvas.escapeText(text)}</text>`;\r\n            this.buffer += s;\r\n        }\r\n        static escapeText(text) {\r\n            return text\r\n                .replace(/&/g, '&amp;')\r\n                .replace(/\"/g, '&quot;')\r\n                .replace(/'/g, '&#39;')\r\n                .replace(/</g, '&lt;')\r\n                .replace(/>/g, '&gt;');\r\n        }\r\n        getSvgTextAlignment(textAlign) {\r\n            switch (textAlign) {\r\n                case TextAlign.Left:\r\n                    return 'start';\r\n                case TextAlign.Center:\r\n                    return 'middle';\r\n                case TextAlign.Right:\r\n                    return 'end';\r\n            }\r\n            return '';\r\n        }\r\n        getSvgBaseLine() {\r\n            switch (this.textBaseline) {\r\n                case TextBaseline.Top:\r\n                    return `dominant-baseline=\"hanging\"`;\r\n                case TextBaseline.Bottom:\r\n                    return `dominant-baseline=\"bottom\"`;\r\n                case TextBaseline.Middle:\r\n                default:\r\n                    // middle is set as default on the SVG tag via css\r\n                    return '';\r\n            }\r\n        }\r\n        measureText(text) {\r\n            if (!text) {\r\n                return 0;\r\n            }\r\n            return FontSizes.measureString(text, this.font.family, this.font.size, this.font.style);\r\n        }\r\n        onRenderFinished() {\r\n            // nothing to do\r\n            return null;\r\n        }\r\n        beginRotate(centerX, centerY, angle) {\r\n            this.buffer += '<g transform=\"translate(' + centerX + ' ,' + centerY + ') rotate( ' + angle + ')\">';\r\n        }\r\n        endRotate() {\r\n            this.buffer += '</g>';\r\n        }\r\n    }\n\n    /**\r\n     * This SVG canvas renders the music symbols by adding a CSS class 'at' to all elements.\r\n     */\r\n    class CssFontSvgCanvas extends SvgCanvas {\r\n        constructor() {\r\n            super();\r\n        }\r\n        fillMusicFontSymbol(x, y, scale, symbol, centerAtPosition = false) {\r\n            if (symbol === MusicFontSymbol.None) {\r\n                return;\r\n            }\r\n            this.fillMusicFontSymbolText(x, y, scale, `&#${symbol};`, centerAtPosition);\r\n        }\r\n        fillMusicFontSymbols(x, y, scale, symbols, centerAtPosition = false) {\r\n            let s = '';\r\n            for (let symbol of symbols) {\r\n                if (symbol !== MusicFontSymbol.None) {\r\n                    s += `&#${symbol};`;\r\n                }\r\n            }\r\n            this.fillMusicFontSymbolText(x, y, scale, s, centerAtPosition);\r\n        }\r\n        fillMusicFontSymbolText(x, y, scale, symbols, centerAtPosition = false) {\r\n            this.buffer += `<g transform=\"translate(${x} ${y})\" class=\"at\" ><text`;\r\n            if (scale !== 1) {\r\n                this.buffer += ` style=\"font-size: ${scale * 100}%; stroke:none\"`;\r\n            }\r\n            else {\r\n                this.buffer += ' style=\"stroke:none\"';\r\n            }\r\n            if (this.color.rgba !== '#000000') {\r\n                this.buffer += ` fill=\"${this.color.rgba}\"`;\r\n            }\r\n            if (centerAtPosition) {\r\n                this.buffer += ' text-anchor=\"' + this.getSvgTextAlignment(TextAlign.Center) + '\"';\r\n            }\r\n            this.buffer += `>${symbols}</text></g>`;\r\n        }\r\n    }\n\n    /**\r\n     * This is the base public class for creating factories providing BarRenderers\r\n     */\r\n    class BarRendererFactory {\r\n        constructor() {\r\n            this.isInAccolade = true;\r\n            this.isRelevantForBoundsLookup = true;\r\n            this.hideOnMultiTrack = false;\r\n            this.hideOnPercussionTrack = false;\r\n        }\r\n        canCreate(track, staff) {\r\n            return !this.hideOnPercussionTrack || !staff.isPercussion;\r\n        }\r\n    }\n\n    /**\r\n     * Lists the different position modes for {@link BarRendererBase.getBeatX}\r\n     */\r\n    var BeatXPosition;\r\n    (function (BeatXPosition) {\r\n        /**\r\n         * Gets the pre-notes position which is located before the accidentals\r\n         */\r\n        BeatXPosition[BeatXPosition[\"PreNotes\"] = 0] = \"PreNotes\";\r\n        /**\r\n         * Gets the on-notes position which is located after the accidentals but before the note heads.\r\n         */\r\n        BeatXPosition[BeatXPosition[\"OnNotes\"] = 1] = \"OnNotes\";\r\n        /**\r\n         * Gets the middle-notes position which is located after in the middle the note heads.\r\n         */\r\n        BeatXPosition[BeatXPosition[\"MiddleNotes\"] = 2] = \"MiddleNotes\";\r\n        /**\r\n         * Gets position of the stem for this beat\r\n         */\r\n        BeatXPosition[BeatXPosition[\"Stem\"] = 3] = \"Stem\";\r\n        /**\r\n         * Get the post-notes position which is located at after the note heads.\r\n         */\r\n        BeatXPosition[BeatXPosition[\"PostNotes\"] = 4] = \"PostNotes\";\r\n        /**\r\n         * Get the end-beat position which is located at the end of the beat. This position is almost\r\n         * equal to the pre-notes position of the next beat.\r\n         */\r\n        BeatXPosition[BeatXPosition[\"EndBeat\"] = 5] = \"EndBeat\";\r\n    })(BeatXPosition || (BeatXPosition = {}));\n\n    /**\r\n     * This glyph allows to group several other glyphs to be\r\n     * drawn at the same x position\r\n     */\r\n    class GlyphGroup extends Glyph {\r\n        constructor(x, y) {\r\n            super(x, y);\r\n            this.glyphs = null;\r\n        }\r\n        get isEmpty() {\r\n            return !this.glyphs || this.glyphs.length === 0;\r\n        }\r\n        doLayout() {\r\n            if (!this.glyphs || this.glyphs.length === 0) {\r\n                this.width = 0;\r\n                return;\r\n            }\r\n            let w = 0;\r\n            for (let i = 0, j = this.glyphs.length; i < j; i++) {\r\n                let g = this.glyphs[i];\r\n                g.renderer = this.renderer;\r\n                g.doLayout();\r\n                w = Math.max(w, g.width);\r\n            }\r\n            this.width = w;\r\n        }\r\n        addGlyph(g) {\r\n            if (!this.glyphs) {\r\n                this.glyphs = [];\r\n            }\r\n            if (this.renderer) {\r\n                g.renderer = this.renderer;\r\n            }\r\n            this.glyphs.push(g);\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            let glyphs = this.glyphs;\r\n            if (!glyphs || glyphs.length === 0) {\r\n                return;\r\n            }\r\n            for (let g of glyphs) {\r\n                g.paint(cx + this.x, cy + this.y, canvas);\r\n            }\r\n        }\r\n    }\n\n    class LeftToRightLayoutingGlyphGroup extends GlyphGroup {\r\n        constructor() {\r\n            super(0, 0);\r\n            this.glyphs = [];\r\n        }\r\n        addGlyph(g) {\r\n            g.x =\r\n                this.glyphs.length === 0\r\n                    ? 0\r\n                    : this.glyphs[this.glyphs.length - 1].x + this.glyphs[this.glyphs.length - 1].width;\r\n            g.renderer = this.renderer;\r\n            g.doLayout();\r\n            this.width = g.x + g.width;\r\n            super.addGlyph(g);\r\n        }\r\n    }\n\n    /**\r\n     * This glyph acts as container for handling\r\n     * multiple voice rendering\r\n     */\r\n    class VoiceContainerGlyph extends GlyphGroup {\r\n        constructor(x, y, voice) {\r\n            super(x, y);\r\n            this.voice = voice;\r\n            this.beatGlyphs = [];\r\n            this.tupletGroups = [];\r\n        }\r\n        scaleToWidth(width) {\r\n            const scale = this.renderer.scale;\r\n            let force = this.renderer.layoutingInfo.spaceToForce(width / scale);\r\n            this.scaleToForce(force);\r\n        }\r\n        scaleToForce(force) {\r\n            const scale = this.renderer.scale;\r\n            this.width = this.renderer.layoutingInfo.calculateVoiceWidth(force) * scale;\r\n            let positions = this.renderer.layoutingInfo.buildOnTimePositions(force);\r\n            let beatGlyphs = this.beatGlyphs;\r\n            for (let i = 0, j = beatGlyphs.length; i < j; i++) {\r\n                let currentBeatGlyph = beatGlyphs[i];\r\n                switch (currentBeatGlyph.beat.graceType) {\r\n                    case GraceType.None:\r\n                        currentBeatGlyph.x = positions.get(currentBeatGlyph.beat.absoluteDisplayStart) * scale - currentBeatGlyph.onTimeX;\r\n                        break;\r\n                    default:\r\n                        const graceDisplayStart = currentBeatGlyph.beat.graceGroup.beats[0].absoluteDisplayStart;\r\n                        const graceGroupId = currentBeatGlyph.beat.graceGroup.id;\r\n                        // placement for proper grace notes which have a following note\r\n                        if (currentBeatGlyph.beat.graceGroup.isComplete && positions.has(graceDisplayStart)) {\r\n                            currentBeatGlyph.x = positions.get(graceDisplayStart) * scale - currentBeatGlyph.onTimeX;\r\n                            let graceSprings = this.renderer.layoutingInfo.allGraceRods.get(graceGroupId);\r\n                            let graceTargetPreBeat = this.renderer.layoutingInfo.springs.get(graceDisplayStart).preBeatWidth;\r\n                            // move right in front to the note\r\n                            currentBeatGlyph.x -= graceTargetPreBeat;\r\n                            // respect the post beat width of the grace note\r\n                            currentBeatGlyph.x -= graceSprings[currentBeatGlyph.beat.graceIndex].postSpringWidth;\r\n                            // shift to right position of the particular grace note\r\n                            currentBeatGlyph.x += graceSprings[currentBeatGlyph.beat.graceIndex].graceBeatWidth;\r\n                            // move the whole group again forward for cases where another track has e.g. 3 beats and here we have only 2. \r\n                            // so we shift the whole group of this voice to stick to the end of the group.\r\n                            const lastGraceSpring = graceSprings[currentBeatGlyph.beat.graceGroup.beats.length - 1];\r\n                            currentBeatGlyph.x -= lastGraceSpring.graceBeatWidth;\r\n                        }\r\n                        else {\r\n                            // placement for improper grace beats where no beat in the same bar follows\r\n                            let graceSpring = this.renderer.layoutingInfo.incompleteGraceRods.get(graceGroupId);\r\n                            const relativeOffset = graceSpring[currentBeatGlyph.beat.graceIndex].postSpringWidth\r\n                                - graceSpring[currentBeatGlyph.beat.graceIndex].preSpringWidth;\r\n                            if (i > 0) {\r\n                                if (currentBeatGlyph.beat.graceIndex === 0) {\r\n                                    // we place the grace beat directly after the previous one\r\n                                    // otherwise this causes flickers on resizing \r\n                                    currentBeatGlyph.x = beatGlyphs[i - 1].x + beatGlyphs[i - 1].width;\r\n                                }\r\n                                else {\r\n                                    // for the multiple grace glyphs we take the width of the grace rod\r\n                                    // this width setting is aligned with the positioning logic below\r\n                                    currentBeatGlyph.x = beatGlyphs[i - 1].x\r\n                                        + graceSpring[currentBeatGlyph.beat.graceIndex - 1].postSpringWidth\r\n                                        - graceSpring[currentBeatGlyph.beat.graceIndex - 1].preSpringWidth\r\n                                        - relativeOffset;\r\n                                }\r\n                            }\r\n                            else {\r\n                                currentBeatGlyph.x = -relativeOffset;\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n                // size always previous glyph after we know the position\r\n                // of the next glyph\r\n                if (i > 0) {\r\n                    let beatWidth = currentBeatGlyph.x - beatGlyphs[i - 1].x;\r\n                    beatGlyphs[i - 1].scaleToWidth(beatWidth);\r\n                }\r\n                // for the last glyph size based on the full width\r\n                if (i === j - 1) {\r\n                    let beatWidth = this.width - beatGlyphs[beatGlyphs.length - 1].x;\r\n                    currentBeatGlyph.scaleToWidth(beatWidth);\r\n                }\r\n            }\r\n        }\r\n        registerLayoutingInfo(info) {\r\n            info.updateVoiceSize(this.width);\r\n            let beatGlyphs = this.beatGlyphs;\r\n            for (let b of beatGlyphs) {\r\n                b.registerLayoutingInfo(info);\r\n            }\r\n        }\r\n        applyLayoutingInfo(info) {\r\n            let beatGlyphs = this.beatGlyphs;\r\n            for (let b of beatGlyphs) {\r\n                b.applyLayoutingInfo(info);\r\n            }\r\n            this.scaleToForce(Math.max(this.renderer.settings.display.stretchForce, info.minStretchForce));\r\n        }\r\n        addGlyph(g) {\r\n            let bg = g;\r\n            g.x =\r\n                this.beatGlyphs.length === 0\r\n                    ? 0\r\n                    : this.beatGlyphs[this.beatGlyphs.length - 1].x + this.beatGlyphs[this.beatGlyphs.length - 1].width;\r\n            g.renderer = this.renderer;\r\n            g.doLayout();\r\n            this.beatGlyphs.push(bg);\r\n            this.width = g.x + g.width;\r\n            if (bg.beat.hasTuplet && bg.beat.tupletGroup.beats[0].id === bg.beat.id) {\r\n                this.tupletGroups.push(bg.beat.tupletGroup);\r\n            }\r\n        }\r\n        doLayout() {\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            // canvas.color = Color.random();\r\n            // canvas.strokeRect(cx + this.x, cy + this.y, this.width, this.renderer.height);\r\n            canvas.color =\r\n                this.voice.index === 0\r\n                    ? this.renderer.resources.mainGlyphColor\r\n                    : this.renderer.resources.secondaryGlyphColor;\r\n            for (let i = 0, j = this.beatGlyphs.length; i < j; i++) {\r\n                this.beatGlyphs[i].paint(cx + this.x, cy + this.y, canvas);\r\n            }\r\n        }\r\n    }\r\n    VoiceContainerGlyph.KeySizeBeat = 'Beat';\n\n    /**\r\n     * Defines all possible accidentals for notes.\r\n     */\r\n    var AccidentalType;\r\n    (function (AccidentalType) {\r\n        /**\r\n         * No accidental\r\n         */\r\n        AccidentalType[AccidentalType[\"None\"] = 0] = \"None\";\r\n        /**\r\n         * Naturalize\r\n         */\r\n        AccidentalType[AccidentalType[\"Natural\"] = 1] = \"Natural\";\r\n        /**\r\n         * Sharp\r\n         */\r\n        AccidentalType[AccidentalType[\"Sharp\"] = 2] = \"Sharp\";\r\n        /**\r\n         * Flat\r\n         */\r\n        AccidentalType[AccidentalType[\"Flat\"] = 3] = \"Flat\";\r\n        /**\r\n         * Natural for smear bends\r\n         */\r\n        AccidentalType[AccidentalType[\"NaturalQuarterNoteUp\"] = 4] = \"NaturalQuarterNoteUp\";\r\n        /**\r\n         * Sharp for smear bends\r\n         */\r\n        AccidentalType[AccidentalType[\"SharpQuarterNoteUp\"] = 5] = \"SharpQuarterNoteUp\";\r\n        /**\r\n         * Flat for smear bends\r\n         */\r\n        AccidentalType[AccidentalType[\"FlatQuarterNoteUp\"] = 6] = \"FlatQuarterNoteUp\";\r\n        /**\r\n         * Double Sharp, indicated by an 'x'\r\n         */\r\n        AccidentalType[AccidentalType[\"DoubleSharp\"] = 7] = \"DoubleSharp\";\r\n        /**\r\n         * Double Flat, indicated by 'bb'\r\n         */\r\n        AccidentalType[AccidentalType[\"DoubleFlat\"] = 8] = \"DoubleFlat\";\r\n    })(AccidentalType || (AccidentalType = {}));\n\n    class BeatLines {\r\n        constructor() {\r\n            this.maxLine = -1000;\r\n            this.minLine = -1000;\r\n        }\r\n    }\r\n    /**\r\n     * This small utilty public class allows the assignment of accidentals within a\r\n     * desired scope.\r\n     */\r\n    class AccidentalHelper {\r\n        constructor(barRenderer) {\r\n            this._registeredAccidentals = new Map();\r\n            this._appliedScoreLines = new Map();\r\n            this._appliedScoreLinesByValue = new Map();\r\n            this._notesByValue = new Map();\r\n            this._beatLines = new Map();\r\n            /**\r\n             * The beat on which the highest note of this helper was added.\r\n             * Used together with beaming helper to calculate overflow.\r\n             */\r\n            this.maxLineBeat = null;\r\n            /**\r\n             * The beat on which the lowest note of this helper was added.\r\n             * Used together with beaming helper to calculate overflow.\r\n             */\r\n            this.minLineBeat = null;\r\n            /**\r\n             * The line of the highest note added to this helper.\r\n             */\r\n            this.maxLine = -1000;\r\n            /**\r\n             * The line of the lowest note added to this helper.\r\n             */\r\n            this.minLine = -1000;\r\n            this._barRenderer = barRenderer;\r\n            this._bar = barRenderer.bar;\r\n        }\r\n        static getPercussionLine(bar, noteValue) {\r\n            var _a, _b;\r\n            if (noteValue < bar.staff.track.percussionArticulations.length) {\r\n                return bar.staff.track.percussionArticulations[noteValue].staffLine;\r\n            }\r\n            else {\r\n                return (_b = (_a = PercussionMapper.getArticulationByValue(noteValue)) === null || _a === void 0 ? void 0 : _a.staffLine) !== null && _b !== void 0 ? _b : 0;\r\n            }\r\n        }\r\n        static getNoteValue(note) {\r\n            if (note.isPercussion) {\r\n                return note.percussionArticulation;\r\n            }\r\n            let noteValue = note.displayValue;\r\n            // adjust note height according to accidentals enforced\r\n            switch (note.accidentalMode) {\r\n                case NoteAccidentalMode.ForceDoubleFlat:\r\n                    noteValue += 2;\r\n                    break;\r\n                case NoteAccidentalMode.ForceDoubleSharp:\r\n                    noteValue -= 2;\r\n                    break;\r\n                case NoteAccidentalMode.ForceFlat:\r\n                    noteValue += 1;\r\n                    break;\r\n                case NoteAccidentalMode.ForceSharp:\r\n                    noteValue -= 1;\r\n                    break;\r\n            }\r\n            return noteValue;\r\n        }\r\n        /**\r\n         * Calculates the accidental for the given note and assignes the value to it.\r\n         * The new accidental type is also registered within the current scope\r\n         * @param note\r\n         * @returns\r\n         */\r\n        applyAccidental(note) {\r\n            const noteValue = AccidentalHelper.getNoteValue(note);\r\n            let quarterBend = note.hasQuarterToneOffset;\r\n            return this.getAccidental(noteValue, quarterBend, note.beat, false, note);\r\n        }\r\n        /**\r\n         * Calculates the accidental for the given note value and assignes the value to it.\r\n         * The new accidental type is also registered within the current scope\r\n         * @param relatedBeat\r\n         * @param noteValue\r\n         * @param quarterBend\r\n         * @param isHelperNote true if the note registered via this call, is a small helper note (e.g. for bends) or false if it is a main note head (e.g. for harmonics)\r\n         * @returns\r\n         */\r\n        applyAccidentalForValue(relatedBeat, noteValue, quarterBend, isHelperNote) {\r\n            return this.getAccidental(noteValue, quarterBend, relatedBeat, isHelperNote, null);\r\n        }\r\n        static computeLineWithoutAccidentals(bar, note) {\r\n            let line = 0;\r\n            const noteValue = AccidentalHelper.getNoteValue(note);\r\n            if (bar.staff.isPercussion) {\r\n                line = AccidentalHelper.getPercussionLine(bar, noteValue);\r\n            }\r\n            else {\r\n                const accidentalMode = note ? note.accidentalMode : NoteAccidentalMode.Default;\r\n                line = AccidentalHelper.calculateNoteLine(bar, noteValue, accidentalMode);\r\n            }\r\n            return line;\r\n        }\r\n        getAccidental(noteValue, quarterBend, relatedBeat, isHelperNote, note = null) {\r\n            let accidentalToSet = AccidentalType.None;\r\n            let line = 0;\r\n            if (this._bar.staff.isPercussion) {\r\n                line = AccidentalHelper.getPercussionLine(this._bar, noteValue);\r\n            }\r\n            else {\r\n                const accidentalMode = note ? note.accidentalMode : NoteAccidentalMode.Default;\r\n                line = AccidentalHelper.calculateNoteLine(this._bar, noteValue, accidentalMode);\r\n                let ks = this._bar.masterBar.keySignature;\r\n                let ksi = ks + 7;\r\n                let index = noteValue % 12;\r\n                let accidentalForKeySignature = ksi < 7 ? AccidentalType.Flat : AccidentalType.Sharp;\r\n                let hasKeySignatureAccidentalSetForNote = AccidentalHelper.KeySignatureLookup[ksi][index];\r\n                let hasNoteAccidentalWithinOctave = AccidentalHelper.AccidentalNotes[index];\r\n                // the general logic is like this:\r\n                // - we check if the key signature has an accidental defined\r\n                // - we calculate which accidental a note needs according to its index in the octave\r\n                // - if the accidental is already placed at this line, nothing needs to be done, otherwise we place it\r\n                // - if there should not be an accidental, but there is one in the key signature, we clear it.\r\n                // the exceptions are:\r\n                // - for quarter bends we just place the corresponding accidental\r\n                // - the accidental mode can enforce the accidentals for the note\r\n                if (quarterBend) {\r\n                    accidentalToSet = hasNoteAccidentalWithinOctave ? accidentalForKeySignature : AccidentalType.Natural;\r\n                    switch (accidentalToSet) {\r\n                        case AccidentalType.Natural:\r\n                            accidentalToSet = AccidentalType.NaturalQuarterNoteUp;\r\n                            break;\r\n                        case AccidentalType.Sharp:\r\n                            accidentalToSet = AccidentalType.SharpQuarterNoteUp;\r\n                            break;\r\n                        case AccidentalType.Flat:\r\n                            accidentalToSet = AccidentalType.FlatQuarterNoteUp;\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    // define which accidental should be shown ignoring what might be set on the KS already\r\n                    switch (accidentalMode) {\r\n                        case NoteAccidentalMode.ForceSharp:\r\n                            accidentalToSet = AccidentalType.Sharp;\r\n                            break;\r\n                        case NoteAccidentalMode.ForceDoubleSharp:\r\n                            accidentalToSet = AccidentalType.DoubleSharp;\r\n                            break;\r\n                        case NoteAccidentalMode.ForceFlat:\r\n                            accidentalToSet = AccidentalType.Flat;\r\n                            break;\r\n                        case NoteAccidentalMode.ForceDoubleFlat:\r\n                            accidentalToSet = AccidentalType.DoubleFlat;\r\n                            break;\r\n                        default:\r\n                            // if note has an accidental in the octave, we place a symbol\r\n                            // according to the Key Signature\r\n                            if (hasNoteAccidentalWithinOctave) {\r\n                                accidentalToSet = accidentalForKeySignature;\r\n                            }\r\n                            else if (hasKeySignatureAccidentalSetForNote) {\r\n                                // note does not get an accidental, but KS defines one -> Naturalize\r\n                                accidentalToSet = AccidentalType.Natural;\r\n                            }\r\n                            break;\r\n                    }\r\n                    // Issue #472: Tied notes across bars do not show the accidentals but also \r\n                    // do not register them. \r\n                    // https://ultimatemusictheory.com/tied-notes-with-accidentals/\r\n                    let skipAccidental = false;\r\n                    if (note && note.isTieDestination && note.beat.index === 0) {\r\n                        // candidate for skip, check further if start note is on the same line\r\n                        const previousRenderer = this._barRenderer.previousRenderer;\r\n                        if (previousRenderer) {\r\n                            const tieOriginLine = previousRenderer.accidentalHelper.getNoteLine(note.tieOrigin);\r\n                            if (tieOriginLine === line) {\r\n                                skipAccidental = true;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (skipAccidental) {\r\n                        accidentalToSet = AccidentalType.None;\r\n                    }\r\n                    else {\r\n                        // do we need an accidental on the note?\r\n                        if (accidentalToSet !== AccidentalType.None) {\r\n                            // if we already have an accidental on this line we will reset it if it's the same\r\n                            if (this._registeredAccidentals.has(line)) {\r\n                                if (this._registeredAccidentals.get(line) === accidentalToSet) {\r\n                                    accidentalToSet = AccidentalType.None;\r\n                                }\r\n                            }\r\n                            // if there is no accidental on the line, and the key signature has it set already, we clear it on the note\r\n                            else if (hasKeySignatureAccidentalSetForNote && accidentalToSet === accidentalForKeySignature) {\r\n                                accidentalToSet = AccidentalType.None;\r\n                            }\r\n                            // register the new accidental on the line if any.\r\n                            if (accidentalToSet != AccidentalType.None) {\r\n                                this._registeredAccidentals.set(line, accidentalToSet);\r\n                            }\r\n                        }\r\n                        else {\r\n                            // if we don't want an accidental, but there is already one applied, we place a naturalize accidental\r\n                            // and clear the registration\r\n                            if (this._registeredAccidentals.has(line)) {\r\n                                // if there is already a naturalize symbol on the line, we don't care.\r\n                                if (this._registeredAccidentals.get(line) === AccidentalType.Natural) {\r\n                                    accidentalToSet = AccidentalType.None;\r\n                                }\r\n                                else {\r\n                                    accidentalToSet = AccidentalType.Natural;\r\n                                    this._registeredAccidentals.set(line, accidentalToSet);\r\n                                }\r\n                            }\r\n                            else {\r\n                                this._registeredAccidentals.delete(line);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (note) {\r\n                this._appliedScoreLines.set(note.id, line);\r\n                this._notesByValue.set(noteValue, note);\r\n            }\r\n            else {\r\n                this._appliedScoreLinesByValue.set(noteValue, line);\r\n            }\r\n            if (this.minLine === -1000 || this.minLine < line) {\r\n                this.minLine = line;\r\n                this.minLineBeat = relatedBeat;\r\n            }\r\n            if (this.maxLine === -1000 || this.maxLine > line) {\r\n                this.maxLine = line;\r\n                this.maxLineBeat = relatedBeat;\r\n            }\r\n            if (!isHelperNote) {\r\n                this.registerLine(relatedBeat, line);\r\n            }\r\n            return accidentalToSet;\r\n        }\r\n        registerLine(relatedBeat, line) {\r\n            let lines;\r\n            if (this._beatLines.has(relatedBeat.id)) {\r\n                lines = this._beatLines.get(relatedBeat.id);\r\n            }\r\n            else {\r\n                lines = new BeatLines();\r\n                this._beatLines.set(relatedBeat.id, lines);\r\n            }\r\n            if (lines.minLine === -1000 || line < lines.minLine) {\r\n                lines.minLine = line;\r\n            }\r\n            if (lines.minLine === -1000 || line > lines.maxLine) {\r\n                lines.maxLine = line;\r\n            }\r\n        }\r\n        getMaxLine(b) {\r\n            return this._beatLines.has(b.id)\r\n                ? this._beatLines.get(b.id).maxLine\r\n                : 0;\r\n        }\r\n        getMinLine(b) {\r\n            return this._beatLines.has(b.id)\r\n                ? this._beatLines.get(b.id).minLine\r\n                : 0;\r\n        }\r\n        static calculateNoteLine(bar, noteValue, mode) {\r\n            let value = noteValue;\r\n            let ks = bar.masterBar.keySignature;\r\n            let clef = bar.clef;\r\n            let index = value % 12;\r\n            let octave = ((value / 12) | 0) - 1;\r\n            // Initial Position\r\n            let steps = AccidentalHelper.OctaveSteps[clef];\r\n            // Move to Octave\r\n            steps -= octave * AccidentalHelper.StepsPerOctave;\r\n            // get the step list for the current keySignature\r\n            let stepList = ModelUtils.keySignatureIsSharp(ks) || ModelUtils.keySignatureIsNatural(ks)\r\n                ? AccidentalHelper.SharpNoteSteps\r\n                : AccidentalHelper.FlatNoteSteps;\r\n            steps -= stepList[index];\r\n            return steps;\r\n        }\r\n        getNoteLine(n) {\r\n            return this._appliedScoreLines.get(n.id);\r\n        }\r\n        getNoteLineForValue(rawValue, searchForNote = false) {\r\n            if (this._appliedScoreLinesByValue.has(rawValue)) {\r\n                return this._appliedScoreLinesByValue.get(rawValue);\r\n            }\r\n            if (searchForNote && this._notesByValue.has(rawValue)) {\r\n                return this.getNoteLine(this._notesByValue.get(rawValue));\r\n            }\r\n            return 0;\r\n        }\r\n    }\r\n    /**\r\n     * a lookup list containing an info whether the notes within an octave\r\n     * need an accidental rendered. the accidental symbol is determined based on the type of key signature.\r\n     */\r\n    AccidentalHelper.KeySignatureLookup = [\r\n        // Flats (where the value is true, a flat accidental is required for the notes)\r\n        [true, true, true, true, true, true, true, true, true, true, true, true],\r\n        [true, true, true, true, true, false, true, true, true, true, true, true],\r\n        [false, true, true, true, true, false, true, true, true, true, true, true],\r\n        [false, true, true, true, true, false, false, false, true, true, true, true],\r\n        [false, false, false, true, true, false, false, false, true, true, true, true],\r\n        [false, false, false, true, true, false, false, false, false, false, true, true],\r\n        [false, false, false, false, false, false, false, false, false, false, true, true],\r\n        // natural\r\n        [false, false, false, false, false, false, false, false, false, false, false, false],\r\n        // sharps  (where the value is true, a flat accidental is required for the notes)\r\n        [false, false, false, false, false, true, true, false, false, false, false, false],\r\n        [true, true, false, false, false, true, true, false, false, false, false, false],\r\n        [true, true, false, false, false, true, true, true, true, false, false, false],\r\n        [true, true, true, true, false, true, true, true, true, false, false, false],\r\n        [true, true, true, true, false, true, true, true, true, true, true, false],\r\n        [true, true, true, true, true, true, true, true, true, true, true, false],\r\n        [true, true, true, true, true, true, true, true, true, true, true, true]\r\n    ];\r\n    /**\r\n     * Contains the list of notes within an octave have accidentals set.\r\n     */\r\n    // prettier-ignore\r\n    AccidentalHelper.AccidentalNotes = [\r\n        false, true, false, true, false, false, true, false, true, false, true, false\r\n    ];\r\n    /**\r\n     * We always have 7 steps per octave.\r\n     * (by a step the offsets inbetween score lines is meant,\r\n     *      0 steps is on the first line (counting from top)\r\n     *      1 steps is on the space inbetween the first and the second line\r\n     */\r\n    AccidentalHelper.StepsPerOctave = 7;\r\n    /**\r\n     * Those are the amount of steps for the different clefs in case of a note value 0\r\n     * [Neutral, C3, C4, F4, G2]\r\n     */\r\n    AccidentalHelper.OctaveSteps = [38, 32, 30, 26, 38];\r\n    /**\r\n     * The step offsets of the notes within an octave in case of for sharp keysignatures\r\n     */\r\n    AccidentalHelper.SharpNoteSteps = [0, 0, 1, 1, 2, 3, 3, 4, 4, 5, 5, 6];\r\n    /**\r\n     * The step offsets of the notes within an octave in case of for flat keysignatures\r\n     */\r\n    AccidentalHelper.FlatNoteSteps = [0, 1, 1, 2, 2, 3, 4, 4, 5, 5, 6, 6];\n\n    class BeatLinePositions {\r\n        constructor() {\r\n            this.staffId = '';\r\n            this.up = 0;\r\n            this.down = 0;\r\n        }\r\n    }\r\n    class BeamingHelperDrawInfo {\r\n        constructor() {\r\n            this.startBeat = null;\r\n            this.startX = 0;\r\n            this.startY = 0;\r\n            this.endBeat = null;\r\n            this.endX = 0;\r\n            this.endY = 0;\r\n        }\r\n        // \r\n        /**\r\n         * calculates the Y-position given a X-pos using the current start end point\r\n         * @param x\r\n         */\r\n        calcY(x) {\r\n            // get the y position of the given beat on this curve\r\n            if (this.startX === this.endX) {\r\n                return this.startY;\r\n            }\r\n            // y(x)  = ( (y2 - y1) / (x2 - x1) )  * (x - x1) + y1;\r\n            return ((this.endY - this.startY) / (this.endX - this.startX)) * (x - this.startX) + this.startY;\r\n        }\r\n    }\r\n    /**\r\n     * This public class helps drawing beams and bars for notes.\r\n     */\r\n    class BeamingHelper {\r\n        constructor(staff, renderer) {\r\n            this._beatLineXPositions = new Map();\r\n            this._firstNonRestBeat = null;\r\n            this._lastNonRestBeat = null;\r\n            this.voice = null;\r\n            this.beats = [];\r\n            this.shortestDuration = Duration.QuadrupleWhole;\r\n            /**\r\n             * the number of fingering indicators that will be drawn\r\n             */\r\n            this.fingeringCount = 0;\r\n            /**\r\n             * an indicator whether any beat has a tuplet on it.\r\n             */\r\n            this.hasTuplet = false;\r\n            this._firstBeatLowestNoteCompareValue = -1;\r\n            this._firstBeatHighestNoteCompareValue = -1;\r\n            this._lastBeatLowestNoteCompareValue = -1;\r\n            this._lastBeatHighestNoteCompareValue = -1;\r\n            this.lowestNoteInHelper = null;\r\n            this._lowestNoteCompareValueInHelper = -1;\r\n            this.highestNoteInHelper = null;\r\n            this._highestNoteCompareValueInHelper = -1;\r\n            this.invertBeamDirection = false;\r\n            this.preferredBeamDirection = null;\r\n            this.isGrace = false;\r\n            this.minRestLine = null;\r\n            this.beatOfMinRestLine = null;\r\n            this.maxRestLine = null;\r\n            this.beatOfMaxRestLine = null;\r\n            this.direction = BeamDirection.Up;\r\n            this.drawingInfos = new Map();\r\n            this._staff = staff;\r\n            this._renderer = renderer;\r\n            this.beats = [];\r\n        }\r\n        get isRestBeamHelper() {\r\n            return this.beats.length === 1 && this.beats[0].isRest;\r\n        }\r\n        get hasLine() {\r\n            return this.beats.length === 1 && this.beats[0].duration > Duration.Whole;\r\n        }\r\n        get hasFlag() {\r\n            return (this.beats.length === 1 &&\r\n                !this.beats[0].isRest &&\r\n                (this.beats[0].duration > Duration.Quarter || this.beats[0].graceType !== GraceType.None));\r\n        }\r\n        getBeatLineX(beat) {\r\n            if (this.hasBeatLineX(beat)) {\r\n                if (this.direction === BeamDirection.Up) {\r\n                    return this._beatLineXPositions.get(beat.index).up;\r\n                }\r\n                return this._beatLineXPositions.get(beat.index).down;\r\n            }\r\n            return 0;\r\n        }\r\n        hasBeatLineX(beat) {\r\n            return this._beatLineXPositions.has(beat.index);\r\n        }\r\n        registerBeatLineX(staffId, beat, up, down) {\r\n            let positions = this.getOrCreateBeatPositions(beat);\r\n            positions.staffId = staffId;\r\n            positions.up = up;\r\n            positions.down = down;\r\n            for (const v of this.drawingInfos.values()) {\r\n                if (v.startBeat == beat) {\r\n                    v.startX = this.getBeatLineX(beat);\r\n                }\r\n                else if (v.endBeat == beat) {\r\n                    v.endX = this.getBeatLineX(beat);\r\n                }\r\n            }\r\n        }\r\n        getOrCreateBeatPositions(beat) {\r\n            if (!this._beatLineXPositions.has(beat.index)) {\r\n                this._beatLineXPositions.set(beat.index, new BeatLinePositions());\r\n            }\r\n            return this._beatLineXPositions.get(beat.index);\r\n        }\r\n        finish() {\r\n            this.direction = this.calculateDirection();\r\n        }\r\n        calculateDirection() {\r\n            let direction = null;\r\n            if (!this.voice) {\r\n                // no proper voice (should not happen usually)\r\n                direction = BeamDirection.Up;\r\n            }\r\n            else if (this.preferredBeamDirection !== null) {\r\n                // we have a preferred direction\r\n                direction = this.preferredBeamDirection;\r\n            }\r\n            else if (this.voice.index > 0) {\r\n                // on multi-voice setups secondary voices are always down\r\n                direction = this.invert(BeamDirection.Down);\r\n            }\r\n            else if (this.voice.bar.isMultiVoice) {\r\n                // on multi-voice setups primary voices are always up\r\n                direction = this.invert(BeamDirection.Up);\r\n            }\r\n            else if (this.beats[0].graceType !== GraceType.None) {\r\n                // grace notes are always up\r\n                direction = this.invert(BeamDirection.Up);\r\n            }\r\n            // the average line is used for determination\r\n            //      key lowerequal than middle line -> up\r\n            //      key higher than middle line -> down\r\n            if (this.highestNoteInHelper && this.lowestNoteInHelper) {\r\n                let highestNotePosition = this._renderer.getNoteY(this.highestNoteInHelper, NoteYPosition.Center);\r\n                let lowestNotePosition = this._renderer.getNoteY(this.lowestNoteInHelper, NoteYPosition.Center);\r\n                if (direction === null) {\r\n                    const avg = (highestNotePosition + lowestNotePosition) / 2;\r\n                    direction = this.invert(this._renderer.middleYPosition < avg ? BeamDirection.Up : BeamDirection.Down);\r\n                }\r\n                this._renderer.completeBeamingHelper(this);\r\n            }\r\n            else {\r\n                direction = this.invert(BeamDirection.Up);\r\n                this._renderer.completeBeamingHelper(this);\r\n            }\r\n            return direction;\r\n        }\r\n        static computeLineHeightsForRest(duration) {\r\n            switch (duration) {\r\n                case Duration.QuadrupleWhole:\r\n                    return [2, 2];\r\n                case Duration.DoubleWhole:\r\n                    return [2, 2];\r\n                case Duration.Whole:\r\n                    return [0, 1];\r\n                case Duration.Half:\r\n                    return [1, 0];\r\n                case Duration.Quarter:\r\n                    return [3, 3];\r\n                case Duration.Eighth:\r\n                    return [2, 2];\r\n                case Duration.Sixteenth:\r\n                    return [2, 4];\r\n                case Duration.ThirtySecond:\r\n                    return [4, 4];\r\n                case Duration.SixtyFourth:\r\n                    return [4, 6];\r\n                case Duration.OneHundredTwentyEighth:\r\n                    return [6, 6];\r\n                case Duration.TwoHundredFiftySixth:\r\n                    return [6, 8];\r\n            }\r\n            return [0, 0];\r\n        }\r\n        /**\r\n         * Registers a rest beat within the accidental helper so the rest\r\n         * symbol is considered properly during beaming.\r\n         * @param beat The rest beat.\r\n         * @param line The line on which the rest symbol is placed\r\n         */\r\n        applyRest(beat, line) {\r\n            // do not accept rests after the last beat which has notes\r\n            if (this._lastNonRestBeat && beat.index >= this._lastNonRestBeat.index ||\r\n                this._firstNonRestBeat && beat.index <= this._firstNonRestBeat.index) {\r\n                return;\r\n            }\r\n            // correct the line of the glyph to a note which would\r\n            // be placed at the upper / lower end of the glyph.\r\n            let aboveRest = line;\r\n            let belowRest = line;\r\n            const offsets = BeamingHelper.computeLineHeightsForRest(beat.duration);\r\n            aboveRest -= offsets[0];\r\n            belowRest += offsets[1];\r\n            if (this.minRestLine === null || this.minRestLine > aboveRest) {\r\n                this.minRestLine = aboveRest;\r\n                this.beatOfMinRestLine = beat;\r\n            }\r\n            if (this.maxRestLine === null || this.maxRestLine < belowRest) {\r\n                this.maxRestLine = belowRest;\r\n                this.beatOfMaxRestLine = beat;\r\n            }\r\n        }\r\n        invert(direction) {\r\n            if (!this.invertBeamDirection) {\r\n                return direction;\r\n            }\r\n            switch (direction) {\r\n                case BeamDirection.Down:\r\n                    return BeamDirection.Up;\r\n                case BeamDirection.Up:\r\n                default:\r\n                    return BeamDirection.Down;\r\n            }\r\n        }\r\n        checkBeat(beat) {\r\n            if (beat.invertBeamDirection) {\r\n                this.invertBeamDirection = true;\r\n            }\r\n            if (!this.voice) {\r\n                this.voice = beat.voice;\r\n            }\r\n            // allow adding if there are no beats yet\r\n            let add = false;\r\n            if (this.beats.length === 0) {\r\n                add = true;\r\n            }\r\n            else {\r\n                switch (this.beats[this.beats.length - 1].beamingMode) {\r\n                    case BeatBeamingMode.Auto:\r\n                        add = BeamingHelper.canJoin(this.beats[this.beats.length - 1], beat);\r\n                        break;\r\n                    case BeatBeamingMode.ForceSplitToNext:\r\n                        add = false;\r\n                        break;\r\n                    case BeatBeamingMode.ForceMergeWithNext:\r\n                        add = true;\r\n                        break;\r\n                }\r\n            }\r\n            if (add) {\r\n                if (beat.preferredBeamDirection !== null) {\r\n                    this.preferredBeamDirection = beat.preferredBeamDirection;\r\n                }\r\n                if (!beat.isRest) {\r\n                    if (this.isRestBeamHelper) {\r\n                        this.beats = [];\r\n                    }\r\n                    this.beats.push(beat);\r\n                    if (beat.graceType !== GraceType.None) {\r\n                        this.isGrace = true;\r\n                    }\r\n                    if (beat.hasTuplet) {\r\n                        this.hasTuplet = true;\r\n                    }\r\n                    let fingeringCount = 0;\r\n                    for (let n = 0; n < beat.notes.length; n++) {\r\n                        let note = beat.notes[n];\r\n                        if (note.leftHandFinger !== Fingers.Unknown || note.rightHandFinger !== Fingers.Unknown) {\r\n                            fingeringCount++;\r\n                        }\r\n                    }\r\n                    if (fingeringCount > this.fingeringCount) {\r\n                        this.fingeringCount = fingeringCount;\r\n                    }\r\n                    this.checkNote(beat.minNote);\r\n                    this.checkNote(beat.maxNote);\r\n                    if (this.shortestDuration < beat.duration) {\r\n                        this.shortestDuration = beat.duration;\r\n                    }\r\n                    if (!this._firstNonRestBeat) {\r\n                        this._firstNonRestBeat = beat;\r\n                    }\r\n                    this._lastNonRestBeat = beat;\r\n                }\r\n                else if (this.beats.length === 0) {\r\n                    this.beats.push(beat);\r\n                }\r\n                if (beat.hasTuplet) {\r\n                    this.hasTuplet = true;\r\n                }\r\n            }\r\n            return add;\r\n        }\r\n        checkNote(note) {\r\n            if (!note) {\r\n                return;\r\n            }\r\n            // a note can expand to 2 note heads if it has a harmonic\r\n            let lowestValueForNote;\r\n            let highestValueForNote;\r\n            // For percussion we use the line as value to compare whether it is\r\n            // higher or lower.\r\n            if (this.voice && note.isPercussion) {\r\n                lowestValueForNote = -AccidentalHelper.getPercussionLine(this.voice.bar, AccidentalHelper.getNoteValue(note));\r\n                highestValueForNote = lowestValueForNote;\r\n            }\r\n            else {\r\n                lowestValueForNote = AccidentalHelper.getNoteValue(note);\r\n                highestValueForNote = lowestValueForNote;\r\n                if (note.harmonicType !== HarmonicType.None && note.harmonicType !== HarmonicType.Natural) {\r\n                    highestValueForNote = note.realValue - this._staff.displayTranspositionPitch;\r\n                }\r\n            }\r\n            if (this.beats.length === 1 && this.beats[0] === note.beat) {\r\n                if (this._firstBeatLowestNoteCompareValue === -1 || lowestValueForNote < this._firstBeatLowestNoteCompareValue) {\r\n                    this._firstBeatLowestNoteCompareValue = lowestValueForNote;\r\n                }\r\n                if (this._firstBeatHighestNoteCompareValue === -1 || highestValueForNote > this._firstBeatHighestNoteCompareValue) {\r\n                    this._firstBeatHighestNoteCompareValue = highestValueForNote;\r\n                }\r\n            }\r\n            if (this._lastBeatLowestNoteCompareValue === -1 || lowestValueForNote < this._lastBeatLowestNoteCompareValue) {\r\n                this._lastBeatLowestNoteCompareValue = lowestValueForNote;\r\n            }\r\n            if (this._lastBeatHighestNoteCompareValue === -1 || highestValueForNote > this._lastBeatHighestNoteCompareValue) {\r\n                this._lastBeatHighestNoteCompareValue = highestValueForNote;\r\n            }\r\n            if (!this.lowestNoteInHelper || lowestValueForNote < this._lowestNoteCompareValueInHelper) {\r\n                this.lowestNoteInHelper = note;\r\n                this._lowestNoteCompareValueInHelper = lowestValueForNote;\r\n            }\r\n            if (!this.highestNoteInHelper || highestValueForNote > this._highestNoteCompareValueInHelper) {\r\n                this.highestNoteInHelper = note;\r\n                this._highestNoteCompareValueInHelper = highestValueForNote;\r\n            }\r\n        }\r\n        // TODO: Check if this beaming is really correct, I'm not sure if we are connecting beats correctly\r\n        static canJoin(b1, b2) {\r\n            // is this a voice we can join with?\r\n            if (!b1 ||\r\n                !b2 ||\r\n                b1.graceType !== b2.graceType ||\r\n                b1.graceType === GraceType.BendGrace ||\r\n                b2.graceType === GraceType.BendGrace) {\r\n                return false;\r\n            }\r\n            if (b1.graceType !== GraceType.None && b2.graceType !== GraceType.None) {\r\n                return true;\r\n            }\r\n            let m1 = b1.voice.bar;\r\n            let m2 = b2.voice.bar;\r\n            // only join on same measure\r\n            if (m1 !== m2) {\r\n                return false;\r\n            }\r\n            // get times of those voices and check if the times\r\n            // are in the same division\r\n            let start1 = b1.playbackStart;\r\n            let start2 = b2.playbackStart;\r\n            // we can only join 8th, 16th, 32th and 64th voices\r\n            if (!BeamingHelper.canJoinDuration(b1.duration) || !BeamingHelper.canJoinDuration(b2.duration)) {\r\n                return start1 === start2;\r\n            }\r\n            // break between different tuplet groups\r\n            if (b1.tupletGroup !== b2.tupletGroup) {\r\n                return false;\r\n            }\r\n            if (b1.hasTuplet && b2.hasTuplet) {\r\n                // force joining for full tuplet groups\r\n                if (b1.tupletGroup === b2.tupletGroup && b1.tupletGroup.isFull) {\r\n                    return true;\r\n                }\r\n            }\r\n            // TODO: create more rules for automatic beaming\r\n            let divisionLength = MidiUtils.QuarterTime;\r\n            switch (m1.masterBar.timeSignatureDenominator) {\r\n                case 8:\r\n                    if (m1.masterBar.timeSignatureNumerator % 3 === 0) {\r\n                        divisionLength += (MidiUtils.QuarterTime / 2) | 0;\r\n                    }\r\n                    break;\r\n            }\r\n            // check if they are on the same division\r\n            let division1 = ((divisionLength + start1) / divisionLength) | 0 | 0;\r\n            let division2 = ((divisionLength + start2) / divisionLength) | 0 | 0;\r\n            return division1 === division2;\r\n        }\r\n        static canJoinDuration(d) {\r\n            switch (d) {\r\n                case Duration.Whole:\r\n                case Duration.Half:\r\n                case Duration.Quarter:\r\n                    return false;\r\n                default:\r\n                    return true;\r\n            }\r\n        }\r\n        static isFullBarJoin(a, b, barIndex) {\r\n            // TODO: this getindex call seems expensive since we call this method very often.\r\n            return ModelUtils.getIndex(a.duration) - 2 - barIndex > 0 && ModelUtils.getIndex(b.duration) - 2 - barIndex > 0;\r\n        }\r\n        get beatOfLowestNote() {\r\n            return this.lowestNoteInHelper.beat;\r\n        }\r\n        get beatOfHighestNote() {\r\n            return this.highestNoteInHelper.beat;\r\n        }\r\n        /**\r\n         * Returns whether the the position of the given beat, was registered by the staff of the given ID\r\n         * @param staffId\r\n         * @param beat\r\n         * @returns\r\n         */\r\n        isPositionFrom(staffId, beat) {\r\n            if (!this._beatLineXPositions.has(beat.index)) {\r\n                return true;\r\n            }\r\n            return (this._beatLineXPositions.get(beat.index).staffId === staffId ||\r\n                !this._beatLineXPositions.get(beat.index).staffId);\r\n        }\r\n    }\n\n    class ReservedLayoutAreaSlot {\r\n        constructor(topY, bottomY) {\r\n            this.topY = 0;\r\n            this.bottomY = 0;\r\n            this.topY = topY;\r\n            this.bottomY = bottomY;\r\n        }\r\n    }\r\n    class ReservedLayoutArea {\r\n        constructor(beat) {\r\n            this.topY = -1000;\r\n            this.bottomY = -1000;\r\n            this.slots = [];\r\n            this.beat = beat;\r\n        }\r\n        addSlot(topY, bottomY) {\r\n            this.slots.push(new ReservedLayoutAreaSlot(topY, bottomY));\r\n            if (this.topY === -1000) {\r\n                this.topY = topY;\r\n                this.bottomY = bottomY;\r\n            }\r\n            else {\r\n                const min = Math.min(topY, bottomY);\r\n                const max = Math.max(topY, bottomY);\r\n                if (min < this.topY) {\r\n                    this.topY = min;\r\n                }\r\n                if (max > this.bottomY) {\r\n                    this.bottomY = max;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    class BarCollisionHelper {\r\n        constructor() {\r\n            this.reservedLayoutAreasByDisplayTime = new Map();\r\n            this.restDurationsByDisplayTime = new Map();\r\n        }\r\n        getBeatMinMaxY() {\r\n            let minY = -1000;\r\n            let maxY = -1000;\r\n            for (const v of this.reservedLayoutAreasByDisplayTime.values()) {\r\n                if (minY === -1000) {\r\n                    minY = v.topY;\r\n                    maxY = v.bottomY;\r\n                }\r\n                else {\r\n                    if (minY > v.topY) {\r\n                        minY = v.topY;\r\n                    }\r\n                    if (maxY < v.bottomY) {\r\n                        maxY = v.bottomY;\r\n                    }\r\n                }\r\n            }\r\n            if (minY === -1000) {\r\n                return [0, 0];\r\n            }\r\n            return [minY, maxY];\r\n        }\r\n        reserveBeatSlot(beat, topY, bottomY) {\r\n            if (topY == bottomY) {\r\n                return;\r\n            }\r\n            if (!this.reservedLayoutAreasByDisplayTime.has(beat.displayStart)) {\r\n                this.reservedLayoutAreasByDisplayTime.set(beat.displayStart, new ReservedLayoutArea(beat));\r\n            }\r\n            this.reservedLayoutAreasByDisplayTime.get(beat.displayStart).addSlot(topY, bottomY);\r\n            if (beat.isRest) {\r\n                this.registerRest(beat);\r\n            }\r\n        }\r\n        registerRest(beat) {\r\n            if (!this.restDurationsByDisplayTime.has(beat.displayStart)) {\r\n                this.restDurationsByDisplayTime.set(beat.displayStart, new Map());\r\n            }\r\n            if (!this.restDurationsByDisplayTime.get(beat.displayStart).has(beat.playbackDuration)) {\r\n                this.restDurationsByDisplayTime.get(beat.displayStart).set(beat.playbackDuration, beat.id);\r\n            }\r\n        }\r\n        applyRestCollisionOffset(beat, currentY, linesToPixel) {\r\n            // for the first voice we do not need collision detection on rests\r\n            // we just place it normally\r\n            if (beat.voice.index > 0) {\r\n                // From the Spring-Rod poisitioning we have the guarantee\r\n                // that 2 timewise subsequent elements can never collide \r\n                // on the horizontal axis. So we only need to check for collisions\r\n                // of elements at the current time position\r\n                // if there are none, we can just use the line\r\n                if (this.reservedLayoutAreasByDisplayTime.has(beat.playbackStart)) {\r\n                    // do check for collisions we need to obtain the range on which the \r\n                    // restglyph is placed\r\n                    // rest glyphs have their ancor \r\n                    const restSizes = BeamingHelper.computeLineHeightsForRest(beat.duration).map(i => i * linesToPixel);\r\n                    let oldRestTopY = currentY - restSizes[0];\r\n                    let oldRestBottomY = currentY + restSizes[1];\r\n                    let newRestTopY = oldRestTopY;\r\n                    const reservedSlots = this.reservedLayoutAreasByDisplayTime.get(beat.playbackStart);\r\n                    let hasCollision = false;\r\n                    for (const slot of reservedSlots.slots) {\r\n                        if ((oldRestTopY >= slot.topY && oldRestTopY <= slot.bottomY) ||\r\n                            (oldRestBottomY >= slot.topY && oldRestBottomY <= slot.bottomY)) {\r\n                            hasCollision = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (hasCollision) {\r\n                        // second voice above, the others below\r\n                        if (beat.voice.index == 1) {\r\n                            // move rest above top position\r\n                            // TODO: rest must align with note lines\r\n                            newRestTopY = reservedSlots.topY - restSizes[1] - restSizes[0];\r\n                        }\r\n                        else {\r\n                            // move rest above top position\r\n                            // TODO: rest must align with note lines\r\n                            newRestTopY = reservedSlots.bottomY;\r\n                        }\r\n                        let newRestBottomY = newRestTopY + restSizes[0] + restSizes[1];\r\n                        // moving always happens in full stave spaces\r\n                        const staveSpace = linesToPixel * 2;\r\n                        let distanceInLines = Math.ceil(Math.abs(newRestTopY - oldRestTopY) / staveSpace);\r\n                        // register new min/max offsets\r\n                        reservedSlots.addSlot(newRestTopY, newRestBottomY);\r\n                        if (newRestTopY < oldRestTopY) {\r\n                            return distanceInLines * -staveSpace;\r\n                        }\r\n                        else {\r\n                            return distanceInLines * staveSpace;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        }\r\n    }\n\n    class BarHelpers {\r\n        constructor(renderer) {\r\n            this.beamHelpers = [];\r\n            this.beamHelperLookup = [];\r\n            this._renderer = renderer;\r\n            this.collisionHelper = new BarCollisionHelper();\r\n        }\r\n        initialize() {\r\n            var barRenderer = this._renderer;\r\n            var bar = this._renderer.bar;\r\n            let currentBeamHelper = null;\r\n            let currentGraceBeamHelper = null;\r\n            for (let i = 0, j = bar.voices.length; i < j; i++) {\r\n                let v = bar.voices[i];\r\n                this.beamHelpers.push([]);\r\n                this.beamHelperLookup.push(new Map());\r\n                for (let k = 0, l = v.beats.length; k < l; k++) {\r\n                    let b = v.beats[k];\r\n                    let helperForBeat;\r\n                    if (b.graceType !== GraceType.None) {\r\n                        helperForBeat = currentGraceBeamHelper;\r\n                    }\r\n                    else {\r\n                        helperForBeat = currentBeamHelper;\r\n                        currentGraceBeamHelper = null;\r\n                    }\r\n                    // if a new beaming helper was started, we close our tuplet grouping as well\r\n                    // try to fit beam to current beamhelper\r\n                    if (!helperForBeat || !helperForBeat.checkBeat(b)) {\r\n                        if (helperForBeat) {\r\n                            helperForBeat.finish();\r\n                        }\r\n                        // if not possible, create the next beaming helper\r\n                        helperForBeat = new BeamingHelper(bar.staff, barRenderer);\r\n                        helperForBeat.checkBeat(b);\r\n                        if (b.graceType !== GraceType.None) {\r\n                            currentGraceBeamHelper = helperForBeat;\r\n                        }\r\n                        else {\r\n                            currentBeamHelper = helperForBeat;\r\n                        }\r\n                        this.beamHelpers[v.index].push(helperForBeat);\r\n                    }\r\n                    this.beamHelperLookup[v.index].set(b.index, helperForBeat);\r\n                }\r\n                if (currentBeamHelper) {\r\n                    currentBeamHelper.finish();\r\n                }\r\n                if (currentGraceBeamHelper) {\r\n                    currentGraceBeamHelper.finish();\r\n                }\r\n                currentBeamHelper = null;\r\n                currentGraceBeamHelper = null;\r\n            }\r\n        }\r\n        getBeamingHelperForBeat(beat) {\r\n            return this.beamHelperLookup[beat.voice.index].get(beat.index);\r\n        }\r\n    }\n\n    /**\r\n     * Lists the different position modes for {@link BarRendererBase.getNoteY}\r\n     */\r\n    var NoteYPosition;\r\n    (function (NoteYPosition) {\r\n        /**\r\n         * Gets the note y-position on top of the note stem or tab number.\r\n         */\r\n        NoteYPosition[NoteYPosition[\"TopWithStem\"] = 0] = \"TopWithStem\";\r\n        /**\r\n         * Gets the note y-position on top of the note head or tab number.\r\n         */\r\n        NoteYPosition[NoteYPosition[\"Top\"] = 1] = \"Top\";\r\n        /**\r\n         * Gets the note y-position on the center of the note head or tab number.\r\n         */\r\n        NoteYPosition[NoteYPosition[\"Center\"] = 2] = \"Center\";\r\n        /**\r\n         * Gets the note y-position on the bottom of the note head or tab number.\r\n         */\r\n        NoteYPosition[NoteYPosition[\"Bottom\"] = 3] = \"Bottom\";\r\n        /**\r\n         * Gets the note y-position on the bottom of the note stem or tab number.\r\n         */\r\n        NoteYPosition[NoteYPosition[\"BottomWithStem\"] = 4] = \"BottomWithStem\";\r\n    })(NoteYPosition || (NoteYPosition = {}));\r\n    /**\r\n     * Lists the different position modes for {@link BarRendererBase.getNoteX}\r\n     */\r\n    var NoteXPosition;\r\n    (function (NoteXPosition) {\r\n        /**\r\n         * Gets the note x-position on left of the note head or tab number.\r\n         */\r\n        NoteXPosition[NoteXPosition[\"Left\"] = 0] = \"Left\";\r\n        /**\r\n         * Gets the note x-position on the center of the note head or tab number.\r\n         */\r\n        NoteXPosition[NoteXPosition[\"Center\"] = 1] = \"Center\";\r\n        /**\r\n         * Gets the note x-position on the right of the note head or tab number.\r\n         */\r\n        NoteXPosition[NoteXPosition[\"Right\"] = 2] = \"Right\";\r\n    })(NoteXPosition || (NoteXPosition = {}));\r\n    /**\r\n     * This is the base public class for creating blocks which can render bars.\r\n     */\r\n    class BarRendererBase {\r\n        constructor(renderer, bar) {\r\n            this._preBeatGlyphs = new LeftToRightLayoutingGlyphGroup();\r\n            this._voiceContainers = new Map();\r\n            this._postBeatGlyphs = new LeftToRightLayoutingGlyphGroup();\r\n            this.x = 0;\r\n            this.y = 0;\r\n            this.width = 0;\r\n            this.height = 0;\r\n            this.index = 0;\r\n            this.topOverflow = 0;\r\n            this.bottomOverflow = 0;\r\n            /**\r\n             * Gets or sets whether this renderer is linked to the next one\r\n             * by some glyphs like a vibrato effect\r\n             */\r\n            this.isLinkedToPrevious = false;\r\n            /**\r\n             * Gets or sets whether this renderer can wrap to the next line\r\n             * or it needs to stay connected to the previous one.\r\n             * (e.g. when having double bar repeats we must not separate the 2 bars)\r\n             */\r\n            this.canWrap = true;\r\n            this._wasFirstOfLine = false;\r\n            this._appliedLayoutingInfo = 0;\r\n            this.isFinalized = false;\r\n            /**\r\n             * Gets the top padding for the main content of the renderer.\r\n             * Can be used to specify where i.E. the score lines of the notation start.\r\n             * @returns\r\n             */\r\n            this.topPadding = 0;\r\n            /**\r\n             * Gets the bottom padding for the main content of the renderer.\r\n             * Can be used to specify where i.E. the score lines of the notation end.\r\n             */\r\n            this.bottomPadding = 0;\r\n            this.scoreRenderer = renderer;\r\n            this.bar = bar;\r\n            if (bar) {\r\n                this.helpers = new BarHelpers(this);\r\n            }\r\n        }\r\n        get nextRenderer() {\r\n            if (!this.bar || !this.bar.nextBar) {\r\n                return null;\r\n            }\r\n            return this.scoreRenderer.layout.getRendererForBar(this.staff.staveId, this.bar.nextBar);\r\n        }\r\n        get previousRenderer() {\r\n            if (!this.bar || !this.bar.previousBar) {\r\n                return null;\r\n            }\r\n            return this.scoreRenderer.layout.getRendererForBar(this.staff.staveId, this.bar.previousBar);\r\n        }\r\n        get middleYPosition() {\r\n            return 0;\r\n        }\r\n        registerOverflowTop(topOverflow) {\r\n            if (topOverflow > this.topOverflow) {\r\n                this.topOverflow = topOverflow;\r\n            }\r\n        }\r\n        registerOverflowBottom(bottomOverflow) {\r\n            if (bottomOverflow > this.bottomOverflow) {\r\n                this.bottomOverflow = bottomOverflow;\r\n            }\r\n        }\r\n        scaleToWidth(width) {\r\n            // preBeat and postBeat glyphs do not get resized\r\n            let containerWidth = width - this._preBeatGlyphs.width - this._postBeatGlyphs.width;\r\n            for (const container of this._voiceContainers.values()) {\r\n                container.scaleToWidth(containerWidth);\r\n            }\r\n            this._postBeatGlyphs.x = this._preBeatGlyphs.x + this._preBeatGlyphs.width + containerWidth;\r\n            this.width = width;\r\n        }\r\n        get resources() {\r\n            return this.settings.display.resources;\r\n        }\r\n        get settings() {\r\n            return this.scoreRenderer.settings;\r\n        }\r\n        get scale() {\r\n            return this.settings.display.scale;\r\n        }\r\n        get isFirstOfLine() {\r\n            return this.index === 0;\r\n        }\r\n        get isLast() {\r\n            return !this.bar || this.bar.index === this.scoreRenderer.layout.lastBarIndex;\r\n        }\r\n        registerLayoutingInfo() {\r\n            let info = this.layoutingInfo;\r\n            let preSize = this._preBeatGlyphs.width;\r\n            if (info.preBeatSize < preSize) {\r\n                info.preBeatSize = preSize;\r\n            }\r\n            for (const container of this._voiceContainers.values()) {\r\n                container.registerLayoutingInfo(info);\r\n            }\r\n            let postSize = this._postBeatGlyphs.width;\r\n            if (info.postBeatSize < postSize) {\r\n                info.postBeatSize = postSize;\r\n            }\r\n        }\r\n        applyLayoutingInfo() {\r\n            if (this._appliedLayoutingInfo >= this.layoutingInfo.version) {\r\n                return false;\r\n            }\r\n            this._appliedLayoutingInfo = this.layoutingInfo.version;\r\n            // if we need additional space in the preBeat group we simply\r\n            // add a new spacer\r\n            this._preBeatGlyphs.width = this.layoutingInfo.preBeatSize;\r\n            // on beat glyphs we apply the glyph spacing\r\n            let voiceEnd = this._preBeatGlyphs.x + this._preBeatGlyphs.width;\r\n            for (const c of this._voiceContainers.values()) {\r\n                c.x = this._preBeatGlyphs.x + this._preBeatGlyphs.width;\r\n                c.applyLayoutingInfo(this.layoutingInfo);\r\n                let newEnd = c.x + c.width;\r\n                if (voiceEnd < newEnd) {\r\n                    voiceEnd = newEnd;\r\n                }\r\n            }\r\n            // on the post glyphs we add the spacing before all other glyphs\r\n            this._postBeatGlyphs.x = Math.floor(voiceEnd);\r\n            this._postBeatGlyphs.width = this.layoutingInfo.postBeatSize;\r\n            this.width = Math.ceil(this._postBeatGlyphs.x + this._postBeatGlyphs.width);\r\n            return true;\r\n        }\r\n        finalizeRenderer() {\r\n            this.isFinalized = true;\r\n        }\r\n        doLayout() {\r\n            if (!this.bar) {\r\n                return;\r\n            }\r\n            this.helpers.initialize();\r\n            this._preBeatGlyphs = new LeftToRightLayoutingGlyphGroup();\r\n            this._preBeatGlyphs.renderer = this;\r\n            this._voiceContainers.clear();\r\n            this._postBeatGlyphs = new LeftToRightLayoutingGlyphGroup();\r\n            this._postBeatGlyphs.renderer = this;\r\n            for (let i = 0; i < this.bar.voices.length; i++) {\r\n                let voice = this.bar.voices[i];\r\n                if (this.hasVoiceContainer(voice)) {\r\n                    let c = new VoiceContainerGlyph(0, 0, voice);\r\n                    c.renderer = this;\r\n                    this._voiceContainers.set(this.bar.voices[i].index, c);\r\n                }\r\n            }\r\n            if (this.bar.simileMark === SimileMark.SecondOfDouble) {\r\n                this.canWrap = false;\r\n            }\r\n            this.createPreBeatGlyphs();\r\n            this.createBeatGlyphs();\r\n            this.createPostBeatGlyphs();\r\n            this.updateSizes();\r\n            // finish up all helpers\r\n            for (const v of this.helpers.beamHelpers) {\r\n                for (const h of v) {\r\n                    h.finish();\r\n                }\r\n            }\r\n        }\r\n        hasVoiceContainer(voice) {\r\n            return !voice.isEmpty || voice.index === 0;\r\n        }\r\n        updateSizes() {\r\n            this.staff.registerStaffTop(this.topPadding);\r\n            this.staff.registerStaffBottom(this.height - this.bottomPadding);\r\n            let voiceContainers = this._voiceContainers;\r\n            let beatGlyphsStart = this.beatGlyphsStart;\r\n            let postBeatStart = beatGlyphsStart;\r\n            for (const c of voiceContainers.values()) {\r\n                c.x = beatGlyphsStart;\r\n                c.doLayout();\r\n                let x = c.x + c.width;\r\n                if (postBeatStart < x) {\r\n                    postBeatStart = x;\r\n                }\r\n            }\r\n            this._postBeatGlyphs.x = Math.floor(postBeatStart);\r\n            this.width = Math.ceil(this._postBeatGlyphs.x + this._postBeatGlyphs.width);\r\n            this.height += this.layoutingInfo.height * this.scale;\r\n        }\r\n        addPreBeatGlyph(g) {\r\n            g.renderer = this;\r\n            this._preBeatGlyphs.addGlyph(g);\r\n        }\r\n        addBeatGlyph(g) {\r\n            g.renderer = this;\r\n            g.preNotes.renderer = this;\r\n            g.onNotes.renderer = this;\r\n            g.onNotes.beamingHelper = this.helpers.beamHelperLookup[g.beat.voice.index].get(g.beat.index);\r\n            this.getVoiceContainer(g.beat.voice).addGlyph(g);\r\n        }\r\n        getVoiceContainer(voice) {\r\n            return this._voiceContainers.get(voice.index);\r\n        }\r\n        getBeatContainer(beat) {\r\n            var _a;\r\n            return (_a = this.getVoiceContainer(beat.voice)) === null || _a === void 0 ? void 0 : _a.beatGlyphs[beat.index];\r\n        }\r\n        getPreNotesGlyphForBeat(beat) {\r\n            var _a;\r\n            return (_a = this.getBeatContainer(beat)) === null || _a === void 0 ? void 0 : _a.preNotes;\r\n        }\r\n        getOnNotesGlyphForBeat(beat) {\r\n            var _a;\r\n            return (_a = this.getBeatContainer(beat)) === null || _a === void 0 ? void 0 : _a.onNotes;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            this.paintBackground(cx, cy, canvas);\r\n            canvas.color = this.resources.mainGlyphColor;\r\n            this._preBeatGlyphs.paint(cx + this.x, cy + this.y, canvas);\r\n            for (const c of this._voiceContainers.values()) {\r\n                canvas.color = c.voice.index === 0 ? this.resources.mainGlyphColor : this.resources.secondaryGlyphColor;\r\n                c.paint(cx + this.x, cy + this.y, canvas);\r\n            }\r\n            canvas.color = this.resources.mainGlyphColor;\r\n            this._postBeatGlyphs.paint(cx + this.x, cy + this.y, canvas);\r\n        }\r\n        paintBackground(cx, cy, canvas) {\r\n            this.layoutingInfo.paint(cx + this.x + this._preBeatGlyphs.x + this._preBeatGlyphs.width, cy + this.y + this.height, canvas);\r\n            // canvas.color = Color.random();\r\n            // canvas.fillRect(cx + this.x + this._preBeatGlyphs.x, cy + this.y, this._preBeatGlyphs.width, this.height);\r\n        }\r\n        buildBoundingsLookup(masterBarBounds, cx, cy) {\r\n            let barBounds = new BarBounds();\r\n            barBounds.bar = this.bar;\r\n            barBounds.visualBounds = new Bounds();\r\n            barBounds.visualBounds.x = cx + this.x;\r\n            barBounds.visualBounds.y = cy + this.y + this.topPadding;\r\n            barBounds.visualBounds.w = this.width;\r\n            barBounds.visualBounds.h = this.height - this.topPadding - this.bottomPadding;\r\n            barBounds.realBounds = new Bounds();\r\n            barBounds.realBounds.x = cx + this.x;\r\n            barBounds.realBounds.y = cy + this.y;\r\n            barBounds.realBounds.w = this.width;\r\n            barBounds.realBounds.h = this.height;\r\n            masterBarBounds.addBar(barBounds);\r\n            for (const [index, c] of this._voiceContainers) {\r\n                let isEmptyBar = this.bar.isEmpty && index === 0;\r\n                if (!c.voice.isEmpty || isEmptyBar) {\r\n                    for (let i = 0, j = c.beatGlyphs.length; i < j; i++) {\r\n                        let bc = c.beatGlyphs[i];\r\n                        bc.buildBoundingsLookup(barBounds, cx + this.x + c.x, cy + this.y + c.y, isEmptyBar);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        addPostBeatGlyph(g) {\r\n            this._postBeatGlyphs.addGlyph(g);\r\n        }\r\n        createPreBeatGlyphs() {\r\n            this._wasFirstOfLine = this.isFirstOfLine;\r\n        }\r\n        createBeatGlyphs() {\r\n            for (let v = 0; v < this.bar.voices.length; v++) {\r\n                let voice = this.bar.voices[v];\r\n                if (this.hasVoiceContainer(voice)) {\r\n                    this.createVoiceGlyphs(this.bar.voices[v]);\r\n                }\r\n            }\r\n        }\r\n        createVoiceGlyphs(v) {\r\n            // filled in subclasses\r\n        }\r\n        createPostBeatGlyphs() {\r\n            // filled in subclasses\r\n        }\r\n        get beatGlyphsStart() {\r\n            return this._preBeatGlyphs.x + this._preBeatGlyphs.width;\r\n        }\r\n        get postBeatGlyphsStart() {\r\n            return this._postBeatGlyphs.x;\r\n        }\r\n        getBeatX(beat, requestedPosition = BeatXPosition.PreNotes) {\r\n            let container = this.getBeatContainer(beat);\r\n            if (container) {\r\n                switch (requestedPosition) {\r\n                    case BeatXPosition.PreNotes:\r\n                        return container.voiceContainer.x + container.x;\r\n                    case BeatXPosition.OnNotes:\r\n                        return container.voiceContainer.x + container.x + container.onNotes.x;\r\n                    case BeatXPosition.MiddleNotes:\r\n                        return container.voiceContainer.x + container.x + container.onTimeX;\r\n                    case BeatXPosition.Stem:\r\n                        const offset = container.onNotes.beamingHelper\r\n                            ? container.onNotes.beamingHelper.getBeatLineX(beat)\r\n                            : container.onNotes.x + container.onNotes.width / 2;\r\n                        return container.voiceContainer.x + offset;\r\n                    case BeatXPosition.PostNotes:\r\n                        return container.voiceContainer.x + container.x + container.onNotes.x + container.onNotes.width;\r\n                    case BeatXPosition.EndBeat:\r\n                        return container.voiceContainer.x + container.x + container.width;\r\n                }\r\n            }\r\n            return 0;\r\n        }\r\n        getNoteX(note, requestedPosition) {\r\n            let container = this.getBeatContainer(note.beat);\r\n            if (container) {\r\n                return (container.voiceContainer.x +\r\n                    container.x +\r\n                    container.onNotes.x +\r\n                    container.onNotes.getNoteX(note, requestedPosition));\r\n            }\r\n            return 0;\r\n        }\r\n        getNoteY(note, requestedPosition) {\r\n            let beat = this.getOnNotesGlyphForBeat(note.beat);\r\n            if (beat) {\r\n                return beat.getNoteY(note, requestedPosition);\r\n            }\r\n            return NaN;\r\n        }\r\n        reLayout() {\r\n            // there are some glyphs which are shown only for renderers at the line start, so we simply recreate them\r\n            // but we only need to recreate them for the renderers that were the first of the line or are now the first of the line\r\n            if ((this._wasFirstOfLine && !this.isFirstOfLine) || (!this._wasFirstOfLine && this.isFirstOfLine)) {\r\n                this._preBeatGlyphs = new LeftToRightLayoutingGlyphGroup();\r\n                this._preBeatGlyphs.renderer = this;\r\n                this.createPreBeatGlyphs();\r\n            }\r\n            this.updateSizes();\r\n            this.registerLayoutingInfo();\r\n        }\r\n        paintSimileMark(cx, cy, canvas) {\r\n            switch (this.bar.simileMark) {\r\n                case SimileMark.Simple:\r\n                    canvas.fillMusicFontSymbol(cx + this.x + (this.width - 20 * this.scale) / 2, cy + this.y + this.height / 2, 1, MusicFontSymbol.Repeat1Bar, false);\r\n                    break;\r\n                case SimileMark.SecondOfDouble:\r\n                    canvas.fillMusicFontSymbol(cx + this.x - (28 * this.scale) / 2, cy + this.y + this.height / 2, 1, MusicFontSymbol.Repeat2Bars, false);\r\n                    break;\r\n            }\r\n        }\r\n        completeBeamingHelper(helper) {\r\n            // nothing by default\r\n        }\r\n    }\r\n    BarRendererBase.LineSpacing = 8;\r\n    BarRendererBase.StemWidth = 0.12 /*bravura stemThickness */ * BarRendererBase.LineSpacing;\r\n    BarRendererBase.StaffLineThickness = 0.13 /*bravura staffLineThickness */ * BarRendererBase.LineSpacing;\r\n    BarRendererBase.BeamThickness = 0.5 /*bravura beamThickness */ * BarRendererBase.LineSpacing;\r\n    BarRendererBase.BeamSpacing = 0.25 /*bravura beamSpacing */ * BarRendererBase.LineSpacing;\n\n    /**\r\n     * Lists all sizing types of the effect bar glyphs\r\n     */\r\n    var EffectBarGlyphSizing;\r\n    (function (EffectBarGlyphSizing) {\r\n        /**\r\n         * The effect glyph is placed above the pre-beat glyph which is before\r\n         * the actual note in the area where also accidentals are renderered.\r\n         */\r\n        EffectBarGlyphSizing[EffectBarGlyphSizing[\"SinglePreBeat\"] = 0] = \"SinglePreBeat\";\r\n        /**\r\n         * The effect glyph is placed above the on-beat glyph which is where\r\n         * the actual note head glyphs are placed.\r\n         */\r\n        EffectBarGlyphSizing[EffectBarGlyphSizing[\"SingleOnBeat\"] = 1] = \"SingleOnBeat\";\r\n        /**\r\n         * The effect glyph is placed above the on-beat glyph which is where\r\n         * the actual note head glyphs are placed. The glyph will size to the end of\r\n         * the applied beat.\r\n         */\r\n        EffectBarGlyphSizing[EffectBarGlyphSizing[\"SingleOnBeatToEnd\"] = 2] = \"SingleOnBeatToEnd\";\r\n        /**\r\n         * The effect glyph is placed above the on-beat glyph and expaded to the\r\n         * on-beat position of the next beat.\r\n         */\r\n        EffectBarGlyphSizing[EffectBarGlyphSizing[\"GroupedOnBeat\"] = 3] = \"GroupedOnBeat\";\r\n        /**\r\n         * The effect glyph is placed above the on-beat glyph and expaded to the\r\n         * on-beat position of the next beat. The glyph will size to the end of\r\n         * the applied beat.\r\n         */\r\n        EffectBarGlyphSizing[EffectBarGlyphSizing[\"GroupedOnBeatToEnd\"] = 4] = \"GroupedOnBeatToEnd\";\r\n        /**\r\n         * The effect glyph is placed on the whole bar covering the whole width\r\n         */\r\n        EffectBarGlyphSizing[EffectBarGlyphSizing[\"FullBar\"] = 5] = \"FullBar\";\r\n    })(EffectBarGlyphSizing || (EffectBarGlyphSizing = {}));\n\n    class EffectBand extends Glyph {\r\n        constructor(voice, info) {\r\n            super(0, 0);\r\n            this._uniqueEffectGlyphs = [];\r\n            this._effectGlyphs = [];\r\n            this.isEmpty = true;\r\n            this.previousBand = null;\r\n            this.isLinkedToPrevious = false;\r\n            this.firstBeat = null;\r\n            this.lastBeat = null;\r\n            this.height = 0;\r\n            this.slot = null;\r\n            this.voice = voice;\r\n            this.info = info;\r\n        }\r\n        doLayout() {\r\n            super.doLayout();\r\n            for (let i = 0; i < this.renderer.bar.voices.length; i++) {\r\n                this._effectGlyphs.push(new Map());\r\n                this._uniqueEffectGlyphs.push([]);\r\n            }\r\n        }\r\n        createGlyph(beat) {\r\n            if (beat.voice !== this.voice) {\r\n                return;\r\n            }\r\n            // NOTE: the track order will never change. even if the staff behind the renderer changes, the trackIndex will not.\r\n            // so it's okay to access the staff here while creating the glyphs.\r\n            if (this.info.shouldCreateGlyph(this.renderer.settings, beat) &&\r\n                (!this.info.hideOnMultiTrack || this.renderer.staff.trackIndex === 0)) {\r\n                this.isEmpty = false;\r\n                if (!this.firstBeat || beat.isBefore(this.firstBeat)) {\r\n                    this.firstBeat = beat;\r\n                }\r\n                if (!this.lastBeat || beat.isAfter(this.lastBeat)) {\r\n                    this.lastBeat = beat;\r\n                    // for \"toEnd\" sizing occupy until next follow-up-beat\r\n                    switch (this.info.sizingMode) {\r\n                        case EffectBarGlyphSizing.SingleOnBeatToEnd:\r\n                        case EffectBarGlyphSizing.GroupedOnBeatToEnd:\r\n                            if (this.lastBeat.nextBeat) {\r\n                                this.lastBeat = this.lastBeat.nextBeat;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n                let glyph = this.createOrResizeGlyph(this.info.sizingMode, beat);\r\n                if (glyph.height > this.height) {\r\n                    this.height = glyph.height;\r\n                }\r\n            }\r\n        }\r\n        createOrResizeGlyph(sizing, b) {\r\n            let g;\r\n            switch (sizing) {\r\n                case EffectBarGlyphSizing.FullBar:\r\n                    g = this.info.createNewGlyph(this.renderer, b);\r\n                    g.renderer = this.renderer;\r\n                    g.beat = b;\r\n                    g.doLayout();\r\n                    this._effectGlyphs[b.voice.index].set(b.index, g);\r\n                    this._uniqueEffectGlyphs[b.voice.index].push(g);\r\n                    return g;\r\n                case EffectBarGlyphSizing.SinglePreBeat:\r\n                case EffectBarGlyphSizing.SingleOnBeat:\r\n                case EffectBarGlyphSizing.SingleOnBeatToEnd:\r\n                    g = this.info.createNewGlyph(this.renderer, b);\r\n                    g.renderer = this.renderer;\r\n                    g.beat = b;\r\n                    g.doLayout();\r\n                    this._effectGlyphs[b.voice.index].set(b.index, g);\r\n                    this._uniqueEffectGlyphs[b.voice.index].push(g);\r\n                    return g;\r\n                case EffectBarGlyphSizing.GroupedOnBeat:\r\n                case EffectBarGlyphSizing.GroupedOnBeatToEnd:\r\n                    let singleSizing = sizing === EffectBarGlyphSizing.GroupedOnBeat\r\n                        ? EffectBarGlyphSizing.SingleOnBeat\r\n                        : EffectBarGlyphSizing.SingleOnBeatToEnd;\r\n                    if (b.index > 0 || this.renderer.index > 0) {\r\n                        // check if the previous beat also had this effect\r\n                        let prevBeat = b.previousBeat;\r\n                        if (this.info.shouldCreateGlyph(this.renderer.settings, prevBeat)) {\r\n                            // first load the effect bar renderer and glyph\r\n                            let prevEffect = null;\r\n                            if (b.index > 0 && this._effectGlyphs[b.voice.index].has(prevBeat.index)) {\r\n                                // load effect from previous beat in the same renderer\r\n                                prevEffect = this._effectGlyphs[b.voice.index].get(prevBeat.index);\r\n                            }\r\n                            else if (this.renderer.index > 0) {\r\n                                // load the effect from the previous renderer if possible.\r\n                                let previousRenderer = this.renderer\r\n                                    .previousRenderer;\r\n                                let previousBand = previousRenderer.getBand(this.voice, this.info.effectId);\r\n                                let voiceGlyphs = previousBand._effectGlyphs[b.voice.index];\r\n                                if (voiceGlyphs.has(prevBeat.index)) {\r\n                                    prevEffect = voiceGlyphs.get(prevBeat.index);\r\n                                }\r\n                            }\r\n                            // if the effect cannot be expanded, create a new glyph\r\n                            // in case of expansion also create a new glyph, but also link the glyphs together\r\n                            // so for rendering it might be expanded.\r\n                            let newGlyph = this.createOrResizeGlyph(singleSizing, b);\r\n                            if (prevEffect && this.info.canExpand(prevBeat, b)) {\r\n                                // link glyphs\r\n                                prevEffect.nextGlyph = newGlyph;\r\n                                newGlyph.previousGlyph = prevEffect;\r\n                                // mark renderers as linked for consideration when layouting the renderers (line breaking, partial breaking)\r\n                                this.isLinkedToPrevious = true;\r\n                            }\r\n                            return newGlyph;\r\n                        }\r\n                        // in case the previous beat did not have the same effect, we simply create a new glyph\r\n                        return this.createOrResizeGlyph(singleSizing, b);\r\n                    }\r\n                    // in case of the very first beat, we simply create the glyph.\r\n                    return this.createOrResizeGlyph(singleSizing, b);\r\n                default:\r\n                    return this.createOrResizeGlyph(EffectBarGlyphSizing.SingleOnBeat, b);\r\n            }\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            super.paint(cx, cy, canvas);\r\n            // canvas.LineWidth = 1;\r\n            // canvas.StrokeRect(cx + X, cy + Y, Renderer.Width, Slot.Shared.Height);\r\n            // canvas.LineWidth = 1.5f;\r\n            for (let i = 0, j = this._uniqueEffectGlyphs.length; i < j; i++) {\r\n                let v = this._uniqueEffectGlyphs[i];\r\n                for (let k = 0, l = v.length; k < l; k++) {\r\n                    let g = v[k];\r\n                    g.paint(cx + this.x, cy + this.y, canvas);\r\n                }\r\n            }\r\n        }\r\n        alignGlyphs() {\r\n            for (let v = 0; v < this._effectGlyphs.length; v++) {\r\n                for (const beatIndex of this._effectGlyphs[v].keys()) {\r\n                    this.alignGlyph(this.info.sizingMode, this.renderer.bar.voices[v].beats[beatIndex]);\r\n                }\r\n            }\r\n        }\r\n        alignGlyph(sizing, beat) {\r\n            let g = this._effectGlyphs[beat.voice.index].get(beat.index);\r\n            let pos;\r\n            let container = this.renderer.getBeatContainer(beat);\r\n            switch (sizing) {\r\n                case EffectBarGlyphSizing.SinglePreBeat:\r\n                    pos = container.preNotes;\r\n                    g.x = this.renderer.beatGlyphsStart + pos.x + container.x;\r\n                    g.width = pos.width;\r\n                    break;\r\n                case EffectBarGlyphSizing.SingleOnBeat:\r\n                case EffectBarGlyphSizing.GroupedOnBeat:\r\n                    pos = container.onNotes;\r\n                    g.x = this.renderer.beatGlyphsStart + pos.x + container.x;\r\n                    g.width = pos.width;\r\n                    break;\r\n                case EffectBarGlyphSizing.SingleOnBeatToEnd:\r\n                case EffectBarGlyphSizing.GroupedOnBeatToEnd:\r\n                    pos = container.onNotes;\r\n                    g.x = this.renderer.beatGlyphsStart + pos.x + container.x;\r\n                    if (container.beat.isLastOfVoice) {\r\n                        g.width = this.renderer.width - g.x;\r\n                    }\r\n                    else {\r\n                        g.width = container.width - container.preNotes.width - container.preNotes.x;\r\n                    }\r\n                    break;\r\n                case EffectBarGlyphSizing.FullBar:\r\n                    g.width = this.renderer.width;\r\n                    break;\r\n            }\r\n        }\r\n    }\n\n    class EffectBandSlotShared {\r\n        constructor() {\r\n            this.uniqueEffectId = null;\r\n            this.y = 0;\r\n            this.height = 0;\r\n            this.firstBeat = null;\r\n            this.lastBeat = null;\r\n        }\r\n    }\r\n    class EffectBandSlot {\r\n        constructor() {\r\n            this.bands = [];\r\n            this.shared = new EffectBandSlotShared();\r\n        }\r\n        update(effectBand) {\r\n            // lock band to particular effect if needed\r\n            if (!effectBand.info.canShareBand) {\r\n                this.shared.uniqueEffectId = effectBand.info.effectId;\r\n            }\r\n            effectBand.slot = this;\r\n            this.bands.push(effectBand);\r\n            if (effectBand.height > this.shared.height) {\r\n                this.shared.height = effectBand.height;\r\n            }\r\n            if (!this.shared.firstBeat || effectBand.firstBeat.isBefore(this.shared.firstBeat)) {\r\n                this.shared.firstBeat = effectBand.firstBeat;\r\n            }\r\n            if (!this.shared.lastBeat || effectBand.lastBeat.isAfter(this.shared.lastBeat)) {\r\n                this.shared.lastBeat = effectBand.lastBeat;\r\n            }\r\n        }\r\n        canBeUsed(band) {\r\n            return (((!this.shared.uniqueEffectId && band.info.canShareBand) ||\r\n                band.info.effectId === this.shared.uniqueEffectId) &&\r\n                (!this.shared.firstBeat ||\r\n                    this.shared.lastBeat.isBefore(band.firstBeat) ||\r\n                    this.shared.lastBeat.isBefore(this.shared.firstBeat)));\r\n        }\r\n    }\n\n    class EffectBandSizingInfo {\r\n        constructor() {\r\n            this.slots = [];\r\n            this._effectSlot = new Map();\r\n        }\r\n        getOrCreateSlot(band) {\r\n            // first check preferrable slot depending on type\r\n            if (this._effectSlot.has(band.info.effectId)) {\r\n                let slot = this._effectSlot.get(band.info.effectId);\r\n                if (slot.canBeUsed(band)) {\r\n                    return slot;\r\n                }\r\n            }\r\n            // find any slot that can be used\r\n            for (let slot of this.slots) {\r\n                if (slot.canBeUsed(band)) {\r\n                    return slot;\r\n                }\r\n            }\r\n            // create a new slot if required\r\n            let newSlot = new EffectBandSlot();\r\n            this.slots.push(newSlot);\r\n            return newSlot;\r\n        }\r\n        register(effectBand) {\r\n            let freeSlot = this.getOrCreateSlot(effectBand);\r\n            freeSlot.update(effectBand);\r\n            this._effectSlot.set(effectBand.info.effectId, freeSlot);\r\n        }\r\n    }\n\n    class BeatGlyphBase extends GlyphGroup {\r\n        constructor() {\r\n            super(0, 0);\r\n        }\r\n        doLayout() {\r\n            // left to right layout\r\n            let w = 0;\r\n            if (this.glyphs) {\r\n                for (let i = 0, j = this.glyphs.length; i < j; i++) {\r\n                    let g = this.glyphs[i];\r\n                    g.x = w;\r\n                    g.renderer = this.renderer;\r\n                    g.doLayout();\r\n                    w += g.width;\r\n                }\r\n            }\r\n            this.width = w;\r\n        }\r\n        noteLoop(action) {\r\n            for (let i = this.container.beat.notes.length - 1; i >= 0; i--) {\r\n                action(this.container.beat.notes[i]);\r\n            }\r\n        }\r\n    }\n\n    class BeatOnNoteGlyphBase extends BeatGlyphBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.centerX = 0;\r\n        }\r\n        updateBeamingHelper() {\r\n            //\r\n        }\r\n        buildBoundingsLookup(beatBounds, cx, cy) {\r\n            // implemented in subclasses\r\n        }\r\n        getNoteX(note, requestedPosition) {\r\n            return 0;\r\n        }\r\n        getNoteY(note, requestedPosition) {\r\n            return 0;\r\n        }\r\n    }\n\n    /**\r\n     * This renderer is responsible for displaying effects above or below the other staves\r\n     * like the vibrato.\r\n     */\r\n    class EffectBarRenderer extends BarRendererBase {\r\n        constructor(renderer, bar, infos) {\r\n            super(renderer, bar);\r\n            this._bands = [];\r\n            this._bandLookup = new Map();\r\n            this.sizingInfo = null;\r\n            this._infos = infos;\r\n        }\r\n        updateSizes() {\r\n            this.topOverflow = 0;\r\n            this.bottomOverflow = 0;\r\n            this.topPadding = 0;\r\n            this.bottomPadding = 0;\r\n            this.updateHeight();\r\n            super.updateSizes();\r\n        }\r\n        finalizeRenderer() {\r\n            super.finalizeRenderer();\r\n            this.updateHeight();\r\n        }\r\n        updateHeight() {\r\n            if (!this.sizingInfo) {\r\n                return;\r\n            }\r\n            let y = 0;\r\n            for (let slot of this.sizingInfo.slots) {\r\n                slot.shared.y = y;\r\n                for (let band of slot.bands) {\r\n                    band.y = y;\r\n                    band.height = slot.shared.height;\r\n                }\r\n                y += slot.shared.height;\r\n            }\r\n            this.height = y;\r\n        }\r\n        applyLayoutingInfo() {\r\n            if (!super.applyLayoutingInfo()) {\r\n                return false;\r\n            }\r\n            // we create empty slots for the same group\r\n            if (this.index > 0) {\r\n                let previousRenderer = this.previousRenderer;\r\n                this.sizingInfo = previousRenderer.sizingInfo;\r\n            }\r\n            else {\r\n                this.sizingInfo = new EffectBandSizingInfo();\r\n            }\r\n            for (let effectBand of this._bands) {\r\n                effectBand.alignGlyphs();\r\n                if (!effectBand.isEmpty) {\r\n                    // find a slot that ended before the start of the band\r\n                    this.sizingInfo.register(effectBand);\r\n                }\r\n            }\r\n            this.updateHeight();\r\n            return true;\r\n        }\r\n        scaleToWidth(width) {\r\n            super.scaleToWidth(width);\r\n            for (let effectBand of this._bands) {\r\n                effectBand.alignGlyphs();\r\n            }\r\n        }\r\n        createBeatGlyphs() {\r\n            this._bands = [];\r\n            this._bandLookup = new Map();\r\n            for (let voice of this.bar.voices) {\r\n                if (this.hasVoiceContainer(voice)) {\r\n                    for (let info of this._infos) {\r\n                        let band = new EffectBand(voice, info);\r\n                        band.renderer = this;\r\n                        band.doLayout();\r\n                        this._bands.push(band);\r\n                        this._bandLookup.set(voice.index + '.' + info.effectId, band);\r\n                    }\r\n                }\r\n            }\r\n            for (let voice of this.bar.voices) {\r\n                if (this.hasVoiceContainer(voice)) {\r\n                    this.createVoiceGlyphs(voice);\r\n                }\r\n            }\r\n            for (let effectBand of this._bands) {\r\n                if (effectBand.isLinkedToPrevious) {\r\n                    this.isLinkedToPrevious = true;\r\n                }\r\n            }\r\n        }\r\n        createVoiceGlyphs(v) {\r\n            for (let b of v.beats) {\r\n                // we create empty glyphs as alignment references and to get the\r\n                // effect bar sized\r\n                let container = new BeatContainerGlyph(b, this.getVoiceContainer(v));\r\n                container.preNotes = new BeatGlyphBase();\r\n                container.onNotes = new BeatOnNoteGlyphBase();\r\n                this.addBeatGlyph(container);\r\n                for (let effectBand of this._bands) {\r\n                    effectBand.createGlyph(b);\r\n                }\r\n            }\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            this.paintBackground(cx, cy, canvas);\r\n            // canvas.color = new Color(255, 0, 0, 100);\r\n            // canvas.fillRect(cx + this.x, cy + this.y, this.width, this.height);\r\n            for (let effectBand of this._bands) {\r\n                canvas.color =\r\n                    effectBand.voice.index === 0 ? this.resources.mainGlyphColor : this.resources.secondaryGlyphColor;\r\n                if (!effectBand.isEmpty) {\r\n                    effectBand.paint(cx + this.x, cy + this.y, canvas);\r\n                }\r\n            }\r\n        }\r\n        getBand(voice, effectId) {\r\n            let id = voice.index + '.' + effectId;\r\n            if (this._bandLookup.has(id)) {\r\n                return this._bandLookup.get(id);\r\n            }\r\n            return null;\r\n        }\r\n    }\n\n    class EffectBarRendererFactory extends BarRendererFactory {\r\n        constructor(staffId, infos) {\r\n            super();\r\n            this._infos = infos;\r\n            this._staffId = staffId;\r\n            this.isInAccolade = false;\r\n            this.isRelevantForBoundsLookup = false;\r\n        }\r\n        get staffId() {\r\n            return this._staffId;\r\n        }\r\n        create(renderer, bar) {\r\n            return new EffectBarRenderer(renderer, bar, this._infos.filter(i => renderer.settings.notation.isNotationElementVisible(i.notationElement)));\r\n        }\r\n    }\n\n    class AlternateEndingsGlyph extends EffectGlyph {\r\n        constructor(x, y, alternateEndings) {\r\n            super(x, y);\r\n            this._endingsString = \"\";\r\n            this._endings = [];\r\n            for (let i = 0; i < MasterBar.MaxAlternateEndings; i++) {\r\n                if ((alternateEndings & (0x01 << i)) !== 0) {\r\n                    this._endings.push(i);\r\n                }\r\n            }\r\n        }\r\n        doLayout() {\r\n            super.doLayout();\r\n            this.height = this.renderer.resources.wordsFont.size + (AlternateEndingsGlyph.Padding * this.scale + 2);\r\n            let endingsStrings = '';\r\n            for (let i = 0, j = this._endings.length; i < j; i++) {\r\n                endingsStrings += this._endings[i] + 1;\r\n                endingsStrings += '. ';\r\n            }\r\n            this._endingsString = endingsStrings;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            super.paint(cx, cy, canvas);\r\n            let baseline = canvas.textBaseline;\r\n            canvas.textBaseline = TextBaseline.Top;\r\n            if (this._endings.length > 0) {\r\n                let res = this.renderer.resources;\r\n                canvas.font = res.wordsFont;\r\n                canvas.moveTo(cx + this.x, cy + this.y + this.height);\r\n                canvas.lineTo(cx + this.x, cy + this.y);\r\n                canvas.lineTo(cx + this.x + this.width, cy + this.y);\r\n                canvas.stroke();\r\n                canvas.fillText(this._endingsString, cx + this.x + AlternateEndingsGlyph.Padding * this.scale, cy + this.y * this.scale);\r\n            }\r\n            canvas.textBaseline = baseline;\r\n        }\r\n    }\r\n    AlternateEndingsGlyph.Padding = 3;\n\n    /**\r\n     * A classes inheriting from this base can provide the\r\n     * data needed by a EffectBarRenderer to create effect glyphs dynamically.\r\n     */\r\n    class EffectBarRendererInfo {\r\n        /**\r\n         * Gets the unique effect name for this effect. (Used for grouping)\r\n         */\r\n        get effectId() {\r\n            return this.notationElement.toString();\r\n        }\r\n    }\n\n    class AlternateEndingsEffectInfo extends EffectBarRendererInfo {\r\n        get notationElement() {\r\n            return NotationElement.EffectAlternateEndings;\r\n        }\r\n        get hideOnMultiTrack() {\r\n            return true;\r\n        }\r\n        get canShareBand() {\r\n            return false;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.FullBar;\r\n        }\r\n        shouldCreateGlyph(settings, beat) {\r\n            return beat.voice.index === 0 && beat.index === 0 && beat.voice.bar.masterBar.alternateEndings !== 0;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new AlternateEndingsGlyph(0, 0, beat.voice.bar.masterBar.alternateEndings);\r\n        }\r\n        canExpand(from, to) {\r\n            return true;\r\n        }\r\n    }\n\n    class TextGlyph extends EffectGlyph {\r\n        constructor(x, y, text, font, textAlign = TextAlign.Left) {\r\n            super(x, y);\r\n            this._lines = text.split('\\n');\r\n            this.font = font;\r\n            this.textAlign = textAlign;\r\n        }\r\n        doLayout() {\r\n            super.doLayout();\r\n            this.height = this.font.size * this._lines.length;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            let color = canvas.color;\r\n            canvas.color = color;\r\n            canvas.font = this.font;\r\n            let old = canvas.textAlign;\r\n            canvas.textAlign = this.textAlign;\r\n            let y = cy + this.y;\r\n            for (let line of this._lines) {\r\n                canvas.fillText(line, cx + this.x, y);\r\n                y += this.font.size;\r\n            }\r\n            canvas.textAlign = old;\r\n        }\r\n    }\n\n    class CapoEffectInfo extends EffectBarRendererInfo {\r\n        get notationElement() {\r\n            return NotationElement.EffectCapo;\r\n        }\r\n        get hideOnMultiTrack() {\r\n            return false;\r\n        }\r\n        get canShareBand() {\r\n            return false;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.SingleOnBeat;\r\n        }\r\n        shouldCreateGlyph(settings, beat) {\r\n            return beat.index === 0 && beat.voice.bar.index === 0 && beat.voice.bar.staff.capo !== 0;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new TextGlyph(0, 0, 'Capo. fret ' + beat.voice.bar.staff.capo, renderer.resources.effectFont, TextAlign.Left);\r\n        }\r\n        canExpand(from, to) {\r\n            return false;\r\n        }\r\n    }\n\n    class ChordsEffectInfo extends EffectBarRendererInfo {\r\n        get notationElement() {\r\n            return NotationElement.EffectChordNames;\r\n        }\r\n        get hideOnMultiTrack() {\r\n            return false;\r\n        }\r\n        get canShareBand() {\r\n            return true;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.SingleOnBeat;\r\n        }\r\n        shouldCreateGlyph(settings, beat) {\r\n            return beat.hasChord;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new TextGlyph(0, 0, beat.chord.name, renderer.resources.effectFont, TextAlign.Center);\r\n        }\r\n        canExpand(from, to) {\r\n            return false;\r\n        }\r\n    }\n\n    class GroupedEffectGlyph extends EffectGlyph {\r\n        constructor(endPosition) {\r\n            super();\r\n            this.forceGroupedRendering = false;\r\n            this.endOnBarLine = false;\r\n            this.endPosition = endPosition;\r\n        }\r\n        get isLinkedWithPrevious() {\r\n            return !!this.previousGlyph && this.previousGlyph.renderer.staff.staveGroup === this.renderer.staff.staveGroup;\r\n        }\r\n        get isLinkedWithNext() {\r\n            return (!!this.nextGlyph &&\r\n                this.nextGlyph.renderer.isFinalized &&\r\n                this.nextGlyph.renderer.staff.staveGroup === this.renderer.staff.staveGroup);\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            // if we are linked with the previous, the first glyph of the group will also render this one.\r\n            if (this.isLinkedWithPrevious) {\r\n                return;\r\n            }\r\n            // we are not linked with any glyph therefore no expansion is required, we render a simple glyph.\r\n            if (!this.isLinkedWithNext && !this.forceGroupedRendering) {\r\n                this.paintNonGrouped(cx, cy, canvas);\r\n                return;\r\n            }\r\n            // find last linked glyph that can be\r\n            let lastLinkedGlyph;\r\n            if (!this.isLinkedWithNext && this.forceGroupedRendering) {\r\n                lastLinkedGlyph = this;\r\n            }\r\n            else {\r\n                lastLinkedGlyph = this.nextGlyph;\r\n                while (lastLinkedGlyph.isLinkedWithNext) {\r\n                    lastLinkedGlyph = lastLinkedGlyph.nextGlyph;\r\n                }\r\n            }\r\n            // use start position of next beat when possible\r\n            let endBeatRenderer = lastLinkedGlyph.renderer;\r\n            let endBeat = lastLinkedGlyph.beat;\r\n            let position = this.endPosition;\r\n            // calculate end X-position\r\n            let cxRenderer = cx - this.renderer.x;\r\n            let endX = this.calculateEndX(endBeatRenderer, endBeat, cxRenderer, position);\r\n            this.paintGrouped(cx, cy, endX, canvas);\r\n        }\r\n        calculateEndX(endBeatRenderer, endBeat, cx, endPosition) {\r\n            if (!endBeat) {\r\n                return cx + endBeatRenderer.x + this.x + this.width;\r\n            }\r\n            return cx + endBeatRenderer.x + endBeatRenderer.getBeatX(endBeat, endPosition);\r\n        }\r\n        paintNonGrouped(cx, cy, canvas) {\r\n            let cxRenderer = cx - this.renderer.x;\r\n            let endX = this.calculateEndX(this.renderer, this.beat, cxRenderer, this.endPosition);\r\n            this.paintGrouped(cx, cy, endX, canvas);\r\n        }\r\n    }\n\n    class CrescendoGlyph extends GroupedEffectGlyph {\r\n        constructor(x, y, crescendo) {\r\n            super(BeatXPosition.EndBeat);\r\n            this._crescendo = CrescendoType.None;\r\n            this._crescendo = crescendo;\r\n            this.x = x;\r\n            this.y = y;\r\n        }\r\n        doLayout() {\r\n            super.doLayout();\r\n            this.height = 17 * this.scale;\r\n        }\r\n        paintGrouped(cx, cy, endX, canvas) {\r\n            let startX = cx + this.x;\r\n            let height = this.height * this.scale;\r\n            canvas.beginPath();\r\n            if (this._crescendo === CrescendoType.Crescendo) {\r\n                endX -= CrescendoGlyph.Padding * this.scale;\r\n                canvas.moveTo(endX, cy + this.y);\r\n                canvas.lineTo(startX, cy + this.y + height / 2);\r\n                canvas.lineTo(endX, cy + this.y + height);\r\n            }\r\n            else {\r\n                endX -= CrescendoGlyph.Padding * this.scale;\r\n                canvas.moveTo(startX, cy + this.y);\r\n                canvas.lineTo(endX, cy + this.y + height / 2);\r\n                canvas.lineTo(startX, cy + this.y + height);\r\n            }\r\n            canvas.stroke();\r\n        }\r\n    }\r\n    CrescendoGlyph.Padding = (NoteHeadGlyph.QuarterNoteHeadWidth / 2) | 0;\n\n    class CrescendoEffectInfo extends EffectBarRendererInfo {\r\n        get notationElement() {\r\n            return NotationElement.EffectCrescendo;\r\n        }\r\n        get hideOnMultiTrack() {\r\n            return false;\r\n        }\r\n        get canShareBand() {\r\n            return true;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.GroupedOnBeatToEnd;\r\n        }\r\n        shouldCreateGlyph(settings, beat) {\r\n            return beat.crescendo !== CrescendoType.None;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new CrescendoGlyph(0, 0, beat.crescendo);\r\n        }\r\n        canExpand(from, to) {\r\n            return from.crescendo === to.crescendo;\r\n        }\r\n    }\n\n    class DynamicsGlyph extends MusicFontGlyph {\r\n        constructor(x, y, dynamics) {\r\n            super(x, y, 0.6, DynamicsGlyph.getSymbol(dynamics));\r\n        }\r\n        doLayout() {\r\n            super.doLayout();\r\n            this.height = 17 * this.scale;\r\n            this.y += this.height / 2;\r\n        }\r\n        static getSymbol(dynamics) {\r\n            switch (dynamics) {\r\n                case DynamicValue.PPP:\r\n                    return MusicFontSymbol.DynamicPPP;\r\n                case DynamicValue.PP:\r\n                    return MusicFontSymbol.DynamicPP;\r\n                case DynamicValue.P:\r\n                    return MusicFontSymbol.DynamicPiano;\r\n                case DynamicValue.MP:\r\n                    return MusicFontSymbol.DynamicMP;\r\n                case DynamicValue.MF:\r\n                    return MusicFontSymbol.DynamicMF;\r\n                case DynamicValue.F:\r\n                    return MusicFontSymbol.DynamicForte;\r\n                case DynamicValue.FF:\r\n                    return MusicFontSymbol.DynamicFF;\r\n                case DynamicValue.FFF:\r\n                    return MusicFontSymbol.DynamicFFF;\r\n                default:\r\n                    return MusicFontSymbol.None;\r\n            }\r\n        }\r\n    }\n\n    class DynamicsEffectInfo extends EffectBarRendererInfo {\r\n        get notationElement() {\r\n            return NotationElement.EffectDynamics;\r\n        }\r\n        get hideOnMultiTrack() {\r\n            return false;\r\n        }\r\n        get canShareBand() {\r\n            return false;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.SingleOnBeat;\r\n        }\r\n        shouldCreateGlyph(settings, beat) {\r\n            return this.internalShouldCreateGlyph(beat);\r\n        }\r\n        internalShouldCreateGlyph(beat) {\r\n            if (beat.voice.bar.staff.track.score.stylesheet.hideDynamics || beat.isEmpty || beat.voice.isEmpty || beat.isRest || beat.graceType !== GraceType.None) {\r\n                return false;\r\n            }\r\n            let previousBeat = this.getPreviousDynamicsBeat(beat);\r\n            let show = (beat.voice.index === 0 && !previousBeat) ||\r\n                (beat.dynamics !== (previousBeat === null || previousBeat === void 0 ? void 0 : previousBeat.dynamics));\r\n            // ensure we do not show duplicate dynamics\r\n            if (show && beat.voice.index > 0) {\r\n                for (let voice of beat.voice.bar.voices) {\r\n                    if (voice.index < beat.voice.index) {\r\n                        let beatAtSamePos = voice.getBeatAtPlaybackStart(beat.playbackStart);\r\n                        if (beatAtSamePos &&\r\n                            beat.dynamics === beatAtSamePos.dynamics &&\r\n                            this.internalShouldCreateGlyph(beatAtSamePos)) {\r\n                            show = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return show;\r\n        }\r\n        getPreviousDynamicsBeat(beat) {\r\n            let previousBeat = beat.previousBeat;\r\n            while (previousBeat != null) {\r\n                if (!previousBeat.isRest && previousBeat.graceType === GraceType.None) {\r\n                    return previousBeat;\r\n                }\r\n                previousBeat = previousBeat.previousBeat;\r\n            }\r\n            return null;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new DynamicsGlyph(0, 0, beat.dynamics);\r\n        }\r\n        canExpand(from, to) {\r\n            return true;\r\n        }\r\n    }\n\n    class FadeInGlyph extends EffectGlyph {\r\n        doLayout() {\r\n            super.doLayout();\r\n            this.height = 17 * this.scale;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            let size = 6 * this.scale;\r\n            let width = Math.max(this.width, 14 * this.scale);\r\n            let offset = this.height / 2;\r\n            canvas.beginPath();\r\n            canvas.moveTo(cx + this.x, cy + this.y + offset);\r\n            canvas.quadraticCurveTo(cx + this.x + width / 2, cy + this.y + offset, cx + this.x + width, cy + this.y + offset - size);\r\n            canvas.moveTo(cx + this.x, cy + this.y + offset);\r\n            canvas.quadraticCurveTo(cx + this.x + width / 2, cy + this.y + offset, cx + this.x + width, cy + this.y + offset + size);\r\n            canvas.stroke();\r\n        }\r\n    }\n\n    class FadeInEffectInfo extends EffectBarRendererInfo {\r\n        get notationElement() {\r\n            return NotationElement.EffectFadeIn;\r\n        }\r\n        get hideOnMultiTrack() {\r\n            return false;\r\n        }\r\n        get canShareBand() {\r\n            return true;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.SingleOnBeat;\r\n        }\r\n        shouldCreateGlyph(settings, beat) {\r\n            return beat.fadeIn;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new FadeInGlyph();\r\n        }\r\n        canExpand(from, to) {\r\n            return true;\r\n        }\r\n    }\n\n    class FermataGlyph extends MusicFontGlyph {\r\n        constructor(x, y, fermata) {\r\n            super(x, y, 1, FermataGlyph.getSymbol(fermata));\r\n        }\r\n        static getSymbol(accentuation) {\r\n            switch (accentuation) {\r\n                case FermataType.Short:\r\n                    return MusicFontSymbol.FermataShortAbove;\r\n                case FermataType.Medium:\r\n                    return MusicFontSymbol.FermataAbove;\r\n                case FermataType.Long:\r\n                    return MusicFontSymbol.FermataLongAbove;\r\n                default:\r\n                    return MusicFontSymbol.None;\r\n            }\r\n        }\r\n        doLayout() {\r\n            this.width = 23 * this.scale;\r\n            this.height = 12 * this.scale;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            super.paint(cx - this.width / 2, cy + this.height, canvas);\r\n        }\r\n    }\n\n    class FermataEffectInfo extends EffectBarRendererInfo {\r\n        get notationElement() {\r\n            return NotationElement.EffectFermata;\r\n        }\r\n        get hideOnMultiTrack() {\r\n            return false;\r\n        }\r\n        get canShareBand() {\r\n            return false;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.SingleOnBeat;\r\n        }\r\n        shouldCreateGlyph(settings, beat) {\r\n            return beat.voice.index === 0 && !!beat.fermata;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new FermataGlyph(0, 0, beat.fermata.type);\r\n        }\r\n        canExpand(from, to) {\r\n            return true;\r\n        }\r\n    }\n\n    class FingeringEffectInfo extends EffectBarRendererInfo {\r\n        get notationElement() {\r\n            return NotationElement.EffectFingering;\r\n        }\r\n        get hideOnMultiTrack() {\r\n            return false;\r\n        }\r\n        get canShareBand() {\r\n            return true;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.SingleOnBeat;\r\n        }\r\n        shouldCreateGlyph(settings, beat) {\r\n            if (beat.voice.index !== 0 ||\r\n                beat.isRest ||\r\n                (settings.notation.fingeringMode !== exports.FingeringMode.SingleNoteEffectBand &&\r\n                    settings.notation.fingeringMode !== exports.FingeringMode.SingleNoteEffectBandForcePiano)) {\r\n                return false;\r\n            }\r\n            if (beat.notes.length !== 1) {\r\n                return false;\r\n            }\r\n            return beat.notes[0].isFingering;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            var _a;\r\n            let finger = Fingers.Unknown;\r\n            let isLeft = false;\r\n            let note = beat.notes[0];\r\n            if (note.leftHandFinger !== Fingers.Unknown) {\r\n                finger = note.leftHandFinger;\r\n                isLeft = true;\r\n            }\r\n            else if (note.rightHandFinger !== Fingers.Unknown) {\r\n                finger = note.rightHandFinger;\r\n            }\r\n            let s = (_a = ModelUtils.fingerToString(renderer.settings, beat, finger, isLeft)) !== null && _a !== void 0 ? _a : \"\";\r\n            return new TextGlyph(0, 0, s, renderer.resources.fingeringFont, TextAlign.Left);\r\n        }\r\n        canExpand(from, to) {\r\n            return true;\r\n        }\r\n    }\n\n    class NoteEffectInfoBase extends EffectBarRendererInfo {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.lastCreateInfo = null;\r\n        }\r\n        shouldCreateGlyph(settings, beat) {\r\n            this.lastCreateInfo = [];\r\n            for (let i = 0, j = beat.notes.length; i < j; i++) {\r\n                let n = beat.notes[i];\r\n                if (this.shouldCreateGlyphForNote(n)) {\r\n                    this.lastCreateInfo.push(n);\r\n                }\r\n            }\r\n            return this.lastCreateInfo.length > 0;\r\n        }\r\n        get hideOnMultiTrack() {\r\n            return false;\r\n        }\r\n        get canShareBand() {\r\n            return true;\r\n        }\r\n        canExpand(from, to) {\r\n            return true;\r\n        }\r\n    }\n\n    class LineRangedGlyph extends GroupedEffectGlyph {\r\n        constructor(label) {\r\n            super(BeatXPosition.OnNotes);\r\n            this._label = label;\r\n        }\r\n        doLayout() {\r\n            if (this.renderer.settings.notation.extendLineEffectsToBeatEnd) {\r\n                this.endPosition = BeatXPosition.EndBeat;\r\n                this.forceGroupedRendering = true;\r\n            }\r\n            super.doLayout();\r\n            this.height = this.renderer.resources.effectFont.size;\r\n        }\r\n        paintNonGrouped(cx, cy, canvas) {\r\n            let res = this.renderer.resources;\r\n            canvas.font = res.effectFont;\r\n            let x = canvas.textAlign;\r\n            canvas.textAlign = TextAlign.Center;\r\n            canvas.fillText(this._label, cx + this.x, cy + this.y);\r\n            canvas.textAlign = x;\r\n        }\r\n        paintGrouped(cx, cy, endX, canvas) {\r\n            this.paintNonGrouped(cx, cy, canvas);\r\n            let lineSpacing = 3 * this.scale;\r\n            let textWidth = canvas.measureText(this._label);\r\n            let startX = cx + this.x + textWidth / 2 + lineSpacing;\r\n            let lineY = cy + this.y + 4 * this.scale;\r\n            let lineSize = 8 * this.scale;\r\n            if (endX > startX) {\r\n                let lineX = startX;\r\n                while (lineX < endX) {\r\n                    canvas.beginPath();\r\n                    canvas.moveTo(lineX, lineY | 0);\r\n                    canvas.lineTo(Math.min(lineX + lineSize, endX), lineY | 0);\r\n                    lineX += lineSize + lineSpacing;\r\n                    canvas.stroke();\r\n                }\r\n                canvas.beginPath();\r\n                canvas.moveTo(endX, (lineY - 5 * this.scale) | 0);\r\n                canvas.lineTo(endX, (lineY + 5 * this.scale) | 0);\r\n                canvas.stroke();\r\n            }\r\n        }\r\n    }\r\n    LineRangedGlyph.LineSpacing = 3;\r\n    LineRangedGlyph.LineTopPadding = 4;\r\n    LineRangedGlyph.LineTopOffset = 5;\r\n    LineRangedGlyph.LineSize = 8;\n\n    class HarmonicsEffectInfo extends NoteEffectInfoBase {\r\n        constructor(harmonicType) {\r\n            super();\r\n            this._beat = null;\r\n            this._harmonicType = HarmonicType.None;\r\n            this._harmonicType = harmonicType;\r\n            switch (harmonicType) {\r\n                case HarmonicType.None:\r\n                    this._effectId = 'harmonics-none';\r\n                    break;\r\n                case HarmonicType.Natural:\r\n                    this._effectId = 'harmonics-natural';\r\n                    break;\r\n                case HarmonicType.Artificial:\r\n                    this._effectId = 'harmonics-artificial';\r\n                    break;\r\n                case HarmonicType.Pinch:\r\n                    this._effectId = 'harmonics-pinch';\r\n                    break;\r\n                case HarmonicType.Tap:\r\n                    this._effectId = 'harmonics-tap';\r\n                    break;\r\n                case HarmonicType.Semi:\r\n                    this._effectId = 'harmonics-semi';\r\n                    break;\r\n                case HarmonicType.Feedback:\r\n                    this._effectId = 'harmonics-feedback';\r\n                    break;\r\n            }\r\n        }\r\n        get effectId() {\r\n            return this._effectId;\r\n        }\r\n        get notationElement() {\r\n            return NotationElement.EffectHarmonics;\r\n        }\r\n        shouldCreateGlyphForNote(note) {\r\n            if (!note.isHarmonic || note.harmonicType !== this._harmonicType) {\r\n                return false;\r\n            }\r\n            if (note.beat !== this._beat) {\r\n                this._beat = note.beat;\r\n            }\r\n            return true;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.GroupedOnBeat;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new LineRangedGlyph(HarmonicsEffectInfo.harmonicToString(this._harmonicType));\r\n        }\r\n        static harmonicToString(type) {\r\n            switch (type) {\r\n                case HarmonicType.Natural:\r\n                    return 'N.H.';\r\n                case HarmonicType.Artificial:\r\n                    return 'A.H.';\r\n                case HarmonicType.Pinch:\r\n                    return 'P.H.';\r\n                case HarmonicType.Tap:\r\n                    return 'T.H.';\r\n                case HarmonicType.Semi:\r\n                    return 'S.H.';\r\n                case HarmonicType.Feedback:\r\n                    return 'Fdbk.';\r\n            }\r\n            return '';\r\n        }\r\n    }\n\n    class LetRingEffectInfo extends EffectBarRendererInfo {\r\n        get notationElement() {\r\n            return NotationElement.EffectLetRing;\r\n        }\r\n        get canShareBand() {\r\n            return false;\r\n        }\r\n        get hideOnMultiTrack() {\r\n            return false;\r\n        }\r\n        shouldCreateGlyph(settings, beat) {\r\n            return beat.isLetRing;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.GroupedOnBeat;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new LineRangedGlyph('LetRing');\r\n        }\r\n        canExpand(from, to) {\r\n            return true;\r\n        }\r\n    }\n\n    class LyricsGlyph extends EffectGlyph {\r\n        constructor(x, y, lines, font, textAlign = TextAlign.Center) {\r\n            super(x, y);\r\n            this._lines = lines;\r\n            this.font = font;\r\n            this.textAlign = textAlign;\r\n        }\r\n        doLayout() {\r\n            super.doLayout();\r\n            this.height = this.font.size * this._lines.length;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            canvas.font = this.font;\r\n            let old = canvas.textAlign;\r\n            canvas.textAlign = this.textAlign;\r\n            for (let i = 0; i < this._lines.length; i++) {\r\n                if (this._lines[i]) {\r\n                    canvas.fillText(this._lines[i], cx + this.x, cy + this.y + i * this.font.size);\r\n                }\r\n            }\r\n            canvas.textAlign = old;\r\n        }\r\n    }\n\n    class LyricsEffectInfo extends EffectBarRendererInfo {\r\n        get notationElement() {\r\n            return NotationElement.EffectLyrics;\r\n        }\r\n        get hideOnMultiTrack() {\r\n            return false;\r\n        }\r\n        get canShareBand() {\r\n            return false;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.SingleOnBeat;\r\n        }\r\n        shouldCreateGlyph(settings, beat) {\r\n            return !!beat.lyrics;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new LyricsGlyph(0, 0, beat.lyrics, renderer.resources.effectFont, TextAlign.Center);\r\n        }\r\n        canExpand(from, to) {\r\n            return true;\r\n        }\r\n    }\n\n    class MarkerEffectInfo extends EffectBarRendererInfo {\r\n        get notationElement() {\r\n            return NotationElement.EffectMarker;\r\n        }\r\n        get hideOnMultiTrack() {\r\n            return true;\r\n        }\r\n        get canShareBand() {\r\n            return true;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.SinglePreBeat;\r\n        }\r\n        shouldCreateGlyph(settings, beat) {\r\n            return (beat.voice.bar.staff.index === 0 &&\r\n                beat.voice.index === 0 &&\r\n                beat.index === 0 &&\r\n                beat.voice.bar.masterBar.isSectionStart);\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new TextGlyph(0, 0, !beat.voice.bar.masterBar.section.marker\r\n                ? beat.voice.bar.masterBar.section.text\r\n                : '[' + beat.voice.bar.masterBar.section.marker + '] ' + beat.voice.bar.masterBar.section.text, renderer.resources.markerFont, TextAlign.Left);\r\n        }\r\n        canExpand(from, to) {\r\n            return true;\r\n        }\r\n    }\n\n    class OttavaGlyph extends GroupedEffectGlyph {\r\n        constructor(ottava, aboveStaff) {\r\n            super(BeatXPosition.PostNotes);\r\n            this._ottava = ottava;\r\n            this._aboveStaff = aboveStaff;\r\n        }\r\n        doLayout() {\r\n            super.doLayout();\r\n            this.height = 13 * this.scale;\r\n        }\r\n        paintNonGrouped(cx, cy, canvas) {\r\n            this.paintOttava(cx, cy, canvas);\r\n        }\r\n        paintOttava(cx, cy, canvas) {\r\n            let size = 0;\r\n            switch (this._ottava) {\r\n                case Ottavia._15ma:\r\n                    size = 37 * this.scale;\r\n                    canvas.fillMusicFontSymbol(cx + this.x - size / 2, cy + this.y + this.height, 0.8, MusicFontSymbol.QuindicesimaAlta, false);\r\n                    break;\r\n                case Ottavia._8va:\r\n                    size = 26 * this.scale;\r\n                    canvas.fillMusicFontSymbol(cx + this.x - size / 2, cy + this.y + this.height, 0.8, MusicFontSymbol.OttavaAlta, false);\r\n                    break;\r\n                case Ottavia._8vb:\r\n                    size = 23 * this.scale;\r\n                    canvas.fillMusicFontSymbol(cx + this.x - size / 2, cy + this.y + this.height, 0.8, MusicFontSymbol.OttavaBassaVb, false);\r\n                    break;\r\n                case Ottavia._15mb:\r\n                    size = 36 * this.scale;\r\n                    // NOTE: SMUFL does not have a glyph for 15mb so we build it\r\n                    canvas.fillMusicFontSymbols(cx + this.x - size / 2, cy + this.y + this.height, 0.8, [MusicFontSymbol.Quindicesima, MusicFontSymbol.OctaveBaselineM, MusicFontSymbol.OctaveBaselineB], false);\r\n                    break;\r\n            }\r\n            return size / 2;\r\n        }\r\n        paintGrouped(cx, cy, endX, canvas) {\r\n            let size = this.paintOttava(cx, cy, canvas);\r\n            let lineSpacing = 3 * this.scale;\r\n            let startX = cx + this.x + size + lineSpacing;\r\n            let lineY = cy + this.y;\r\n            lineY += this._aboveStaff ? 2 * this.scale : this.height - 2 * this.scale;\r\n            let lineSize = 8 * this.scale;\r\n            if (endX > startX) {\r\n                let lineX = startX;\r\n                while (lineX < endX) {\r\n                    canvas.beginPath();\r\n                    canvas.moveTo(lineX, lineY | 0);\r\n                    canvas.lineTo(Math.min(lineX + lineSize, endX), lineY | 0);\r\n                    lineX += lineSize + lineSpacing;\r\n                    canvas.stroke();\r\n                }\r\n                canvas.beginPath();\r\n                if (this._aboveStaff) {\r\n                    canvas.moveTo(endX, lineY);\r\n                    canvas.lineTo(endX, cy + this.y + this.height);\r\n                }\r\n                else {\r\n                    canvas.moveTo(endX, lineY);\r\n                    canvas.lineTo(endX, cy + this.y);\r\n                }\r\n                canvas.stroke();\r\n            }\r\n        }\r\n    }\n\n    class OttaviaEffectInfo extends EffectBarRendererInfo {\r\n        constructor(aboveStaff) {\r\n            super();\r\n            this._aboveStaff = aboveStaff;\r\n        }\r\n        get effectId() {\r\n            return 'ottavia-' + (this._aboveStaff ? 'above' : 'below');\r\n        }\r\n        get notationElement() {\r\n            return NotationElement.EffectOttavia;\r\n        }\r\n        get hideOnMultiTrack() {\r\n            return false;\r\n        }\r\n        get canShareBand() {\r\n            return true;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.GroupedOnBeat;\r\n        }\r\n        shouldCreateGlyph(settings, beat) {\r\n            switch (beat.ottava) {\r\n                case Ottavia._15ma:\r\n                    return this._aboveStaff;\r\n                case Ottavia._8va:\r\n                    return this._aboveStaff;\r\n                case Ottavia._8vb:\r\n                    return !this._aboveStaff;\r\n                case Ottavia._15mb:\r\n                    return !this._aboveStaff;\r\n            }\r\n            return false;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new OttavaGlyph(beat.ottava, this._aboveStaff);\r\n        }\r\n        canExpand(from, to) {\r\n            return from.ottava === to.ottava;\r\n        }\r\n    }\n\n    class PalmMuteEffectInfo extends NoteEffectInfoBase {\r\n        get notationElement() {\r\n            return NotationElement.EffectPalmMute;\r\n        }\r\n        shouldCreateGlyphForNote(note) {\r\n            return note.isPalmMute;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.GroupedOnBeat;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new LineRangedGlyph('P.M.');\r\n        }\r\n        constructor() {\r\n            super();\r\n        }\r\n    }\n\n    class PickSlideEffectInfo extends NoteEffectInfoBase {\r\n        get notationElement() {\r\n            return NotationElement.EffectPickSlide;\r\n        }\r\n        shouldCreateGlyphForNote(note) {\r\n            return note.slideOutType === SlideOutType.PickSlideDown || note.slideOutType === SlideOutType.PickSlideUp;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.GroupedOnBeat;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new LineRangedGlyph('P.S.');\r\n        }\r\n        constructor() {\r\n            super();\r\n        }\r\n    }\n\n    class PickStrokeGlyph extends MusicFontGlyph {\r\n        constructor(x, y, pickStroke) {\r\n            super(x, y, NoteHeadGlyph.GraceScale, PickStrokeGlyph.getSymbol(pickStroke));\r\n        }\r\n        doLayout() {\r\n            this.width = 9 * this.scale;\r\n            this.height = 13 * this.scale;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            super.paint(cx, cy + this.height, canvas);\r\n        }\r\n        static getSymbol(pickStroke) {\r\n            switch (pickStroke) {\r\n                case PickStroke.Up:\r\n                    return MusicFontSymbol.StringsUpBow;\r\n                case PickStroke.Down:\r\n                    return MusicFontSymbol.StringsDownBow;\r\n                default:\r\n                    return MusicFontSymbol.None;\r\n            }\r\n        }\r\n    }\n\n    class PickStrokeEffectInfo extends EffectBarRendererInfo {\r\n        get notationElement() {\r\n            return NotationElement.EffectPickStroke;\r\n        }\r\n        get hideOnMultiTrack() {\r\n            return false;\r\n        }\r\n        get canShareBand() {\r\n            return true;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.SingleOnBeat;\r\n        }\r\n        shouldCreateGlyph(settings, beat) {\r\n            return beat.pickStroke !== PickStroke.None;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new PickStrokeGlyph(0, 0, beat.pickStroke);\r\n        }\r\n        canExpand(from, to) {\r\n            return true;\r\n        }\r\n    }\n\n    class BeatVibratoGlyph extends GroupedEffectGlyph {\r\n        constructor(type) {\r\n            super(BeatXPosition.EndBeat);\r\n            this._stepSize = 0;\r\n            this._type = type;\r\n        }\r\n        doLayout() {\r\n            super.doLayout();\r\n            switch (this._type) {\r\n                case VibratoType.Slight:\r\n                    this._stepSize = 12 * this.scale;\r\n                    break;\r\n                case VibratoType.Wide:\r\n                    this._stepSize = 23 * this.scale;\r\n                    break;\r\n            }\r\n            this.height = 18 * this.scale;\r\n        }\r\n        paintGrouped(cx, cy, endX, canvas) {\r\n            let startX = cx + this.x;\r\n            let width = endX - startX;\r\n            let loops = Math.max(1, width / this._stepSize);\r\n            canvas.beginPath();\r\n            canvas.moveTo(startX, cy + this.y);\r\n            for (let i = 0; i < loops; i++) {\r\n                canvas.lineTo(startX + this._stepSize / 2, cy + this.y + this.height);\r\n                canvas.lineTo(startX + this._stepSize, cy + this.y);\r\n                startX += this._stepSize;\r\n            }\r\n            canvas.stroke();\r\n        }\r\n    }\n\n    class SlightBeatVibratoEffectInfo extends EffectBarRendererInfo {\r\n        get notationElement() {\r\n            return NotationElement.EffectSlightBeatVibrato;\r\n        }\r\n        get hideOnMultiTrack() {\r\n            return false;\r\n        }\r\n        get canShareBand() {\r\n            return true;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.GroupedOnBeatToEnd;\r\n        }\r\n        shouldCreateGlyph(settings, beat) {\r\n            return beat.vibrato === VibratoType.Slight;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new BeatVibratoGlyph(VibratoType.Slight);\r\n        }\r\n        canExpand(from, to) {\r\n            return true;\r\n        }\r\n    }\n\n    class NoteVibratoGlyph extends GroupedEffectGlyph {\r\n        constructor(x, y, type, scale = 1.2, partialWaves = false) {\r\n            super(BeatXPosition.EndBeat);\r\n            this._scale = 0;\r\n            this._symbol = MusicFontSymbol.None;\r\n            this._symbolSize = 0;\r\n            this._type = type;\r\n            this._scale = scale;\r\n            this.x = x;\r\n            this.y = y;\r\n            this._partialWaves = partialWaves;\r\n        }\r\n        doLayout() {\r\n            super.doLayout();\r\n            let symbolHeight = 0;\r\n            switch (this._type) {\r\n                case VibratoType.Slight:\r\n                    this._symbol = MusicFontSymbol.WiggleTrill;\r\n                    this._symbolSize = 9 * this._scale;\r\n                    symbolHeight = 6 * this._scale;\r\n                    break;\r\n                case VibratoType.Wide:\r\n                    this._symbol = MusicFontSymbol.WiggleVibratoMediumFast;\r\n                    this._symbolSize = 10 * this._scale;\r\n                    symbolHeight = 10 * this._scale;\r\n                    break;\r\n            }\r\n            this.height = symbolHeight * this.scale;\r\n        }\r\n        paintGrouped(cx, cy, endX, canvas) {\r\n            let startX = cx + this.x;\r\n            let width = endX - startX;\r\n            let step = this._symbolSize * this.scale;\r\n            let loops = width / step;\r\n            if (!this._partialWaves) {\r\n                loops = Math.floor(loops);\r\n            }\r\n            if (loops < 1) {\r\n                loops = 1;\r\n            }\r\n            let loopX = 0;\r\n            for (let i = 0; i < loops; i++) {\r\n                canvas.fillMusicFontSymbol(cx + this.x + loopX, cy + this.y + this.height * 2, this._scale * this.scale, this._symbol, false);\r\n                loopX += step;\r\n            }\r\n        }\r\n    }\n\n    class SlightNoteVibratoEffectInfo extends NoteEffectInfoBase {\r\n        get notationElement() {\r\n            return NotationElement.EffectSlightNoteVibrato;\r\n        }\r\n        shouldCreateGlyphForNote(note) {\r\n            return (note.vibrato === VibratoType.Slight ||\r\n                (note.isTieDestination && note.tieOrigin.vibrato === VibratoType.Slight));\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.GroupedOnBeatToEnd;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new NoteVibratoGlyph(0, 0, VibratoType.Slight, 1.2);\r\n        }\r\n        constructor() {\r\n            super();\r\n        }\r\n    }\n\n    class TapEffectInfo extends EffectBarRendererInfo {\r\n        get notationElement() {\r\n            return NotationElement.EffectTap;\r\n        }\r\n        get hideOnMultiTrack() {\r\n            return false;\r\n        }\r\n        get canShareBand() {\r\n            return true;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.SingleOnBeat;\r\n        }\r\n        shouldCreateGlyph(settings, beat) {\r\n            return beat.slap || beat.pop || beat.tap;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            let res = renderer.resources;\r\n            if (beat.slap) {\r\n                return new TextGlyph(0, 0, 'S', res.effectFont, TextAlign.Left);\r\n            }\r\n            if (beat.pop) {\r\n                return new TextGlyph(0, 0, 'P', res.effectFont, TextAlign.Left);\r\n            }\r\n            return new TextGlyph(0, 0, 'T', res.effectFont, TextAlign.Left);\r\n        }\r\n        canExpand(from, to) {\r\n            return true;\r\n        }\r\n    }\n\n    class TempoGlyph extends EffectGlyph {\r\n        constructor(x, y, tempo) {\r\n            super(x, y);\r\n            this._tempo = 0;\r\n            this._tempo = tempo;\r\n        }\r\n        doLayout() {\r\n            super.doLayout();\r\n            this.height = 25 * this.scale;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            let res = this.renderer.resources;\r\n            canvas.font = res.markerFont;\r\n            canvas.fillMusicFontSymbol(cx + this.x, cy + this.y + this.height * 0.8, this.scale * NoteHeadGlyph.GraceScale, MusicFontSymbol.NoteQuarterUp, false);\r\n            canvas.fillText('= ' + this._tempo, cx + this.x + this.height / 2, cy + this.y + canvas.font.size / 2);\r\n        }\r\n    }\n\n    class TempoEffectInfo extends EffectBarRendererInfo {\r\n        get notationElement() {\r\n            return NotationElement.EffectTempo;\r\n        }\r\n        get hideOnMultiTrack() {\r\n            return true;\r\n        }\r\n        get canShareBand() {\r\n            return false;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.SinglePreBeat;\r\n        }\r\n        shouldCreateGlyph(settings, beat) {\r\n            return (beat.voice.bar.staff.index === 0 &&\r\n                beat.voice.index === 0 &&\r\n                beat.index === 0 &&\r\n                (!!beat.voice.bar.masterBar.tempoAutomation || beat.voice.bar.index === 0));\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            let tempo = 0;\r\n            if (beat.voice.bar.masterBar.tempoAutomation) {\r\n                tempo = beat.voice.bar.masterBar.tempoAutomation.value;\r\n            }\r\n            else {\r\n                tempo = beat.voice.bar.staff.track.score.tempo;\r\n            }\r\n            return new TempoGlyph(0, 0, tempo);\r\n        }\r\n        canExpand(from, to) {\r\n            return true;\r\n        }\r\n    }\n\n    class TextEffectInfo extends EffectBarRendererInfo {\r\n        get notationElement() {\r\n            return NotationElement.EffectText;\r\n        }\r\n        get hideOnMultiTrack() {\r\n            return false;\r\n        }\r\n        get canShareBand() {\r\n            return false;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.SingleOnBeat;\r\n        }\r\n        shouldCreateGlyph(settings, beat) {\r\n            return !!beat.text;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new TextGlyph(0, 0, beat.text, renderer.resources.effectFont, TextAlign.Left);\r\n        }\r\n        canExpand(from, to) {\r\n            return true;\r\n        }\r\n    }\n\n    class TrillGlyph extends EffectGlyph {\r\n        constructor(x, y) {\r\n            super(x, y);\r\n        }\r\n        doLayout() {\r\n            super.doLayout();\r\n            this.height = 20 * this.scale;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            let res = this.renderer.resources;\r\n            canvas.font = res.markerFont;\r\n            let textw = canvas.measureText('tr');\r\n            canvas.fillText('tr', cx + this.x, cy + this.y + canvas.font.size / 2);\r\n            let startX = textw + 3 * this.scale;\r\n            let endX = this.width - startX;\r\n            let waveScale = 1.2;\r\n            let step = 11 * this.scale * waveScale;\r\n            let loops = Math.max(1, (endX - startX) / step);\r\n            let loopX = startX;\r\n            let loopY = cy + this.y + this.height;\r\n            for (let i = 0; i < loops; i++) {\r\n                canvas.fillMusicFontSymbol(cx + this.x + loopX, loopY, waveScale, MusicFontSymbol.WiggleTrill, false);\r\n                loopX += step;\r\n            }\r\n        }\r\n    }\n\n    class TrillEffectInfo extends NoteEffectInfoBase {\r\n        get notationElement() {\r\n            return NotationElement.EffectTrill;\r\n        }\r\n        shouldCreateGlyphForNote(note) {\r\n            return note.isTrill;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.SingleOnBeat;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new TrillGlyph(0, 0);\r\n        }\r\n    }\n\n    var TripletFeelGlyphBarType;\r\n    (function (TripletFeelGlyphBarType) {\r\n        TripletFeelGlyphBarType[TripletFeelGlyphBarType[\"Full\"] = 0] = \"Full\";\r\n        TripletFeelGlyphBarType[TripletFeelGlyphBarType[\"PartialLeft\"] = 1] = \"PartialLeft\";\r\n        TripletFeelGlyphBarType[TripletFeelGlyphBarType[\"PartialRight\"] = 2] = \"PartialRight\";\r\n    })(TripletFeelGlyphBarType || (TripletFeelGlyphBarType = {}));\r\n    class TripletFeelGlyph extends EffectGlyph {\r\n        constructor(tripletFeel) {\r\n            super(0, 0);\r\n            this._tripletFeel = tripletFeel;\r\n        }\r\n        doLayout() {\r\n            super.doLayout();\r\n            this.height = 25 * this.scale;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            cx += this.x;\r\n            cy += this.y;\r\n            let noteY = cy + this.height * NoteHeadGlyph.GraceScale;\r\n            canvas.font = this.renderer.resources.effectFont;\r\n            canvas.fillText('(', cx, cy + this.height * 0.3);\r\n            let leftNoteX = cx + 10 * this.scale;\r\n            let rightNoteX = cx + 40 * this.scale;\r\n            switch (this._tripletFeel) {\r\n                case TripletFeel.NoTripletFeel:\r\n                    this.renderBarNote(leftNoteX, noteY, TripletFeelGlyph.NoteScale, canvas, [TripletFeelGlyphBarType.Full]);\r\n                    this.renderBarNote(rightNoteX, noteY, TripletFeelGlyph.NoteScale, canvas, [TripletFeelGlyphBarType.Full]);\r\n                    break;\r\n                case TripletFeel.Triplet8th:\r\n                    this.renderBarNote(leftNoteX, noteY, TripletFeelGlyph.NoteScale, canvas, [TripletFeelGlyphBarType.Full]);\r\n                    canvas.fillMusicFontSymbol(rightNoteX, noteY, TripletFeelGlyph.NoteScale, MusicFontSymbol.NoteQuarterUp, false);\r\n                    canvas.fillMusicFontSymbol(rightNoteX + TripletFeelGlyph.NoteSeparation * this.scale, noteY, TripletFeelGlyph.NoteScale, MusicFontSymbol.NoteEighthUp, false);\r\n                    this.renderTriplet(rightNoteX, cy, canvas);\r\n                    break;\r\n                case TripletFeel.Triplet16th:\r\n                    this.renderBarNote(leftNoteX, noteY, TripletFeelGlyph.NoteScale, canvas, [\r\n                        TripletFeelGlyphBarType.Full,\r\n                        TripletFeelGlyphBarType.Full\r\n                    ]);\r\n                    this.renderBarNote(rightNoteX, noteY, TripletFeelGlyph.NoteScale, canvas, [\r\n                        TripletFeelGlyphBarType.Full,\r\n                        TripletFeelGlyphBarType.PartialRight\r\n                    ]);\r\n                    this.renderTriplet(rightNoteX, cy, canvas);\r\n                    break;\r\n                case TripletFeel.Dotted8th:\r\n                    this.renderBarNote(leftNoteX, noteY, TripletFeelGlyph.NoteScale, canvas, [TripletFeelGlyphBarType.Full]);\r\n                    this.renderBarNote(rightNoteX, noteY, TripletFeelGlyph.NoteScale, canvas, [\r\n                        TripletFeelGlyphBarType.Full,\r\n                        TripletFeelGlyphBarType.PartialRight\r\n                    ]);\r\n                    canvas.fillCircle(rightNoteX + 9 * this.scale, noteY, this.scale);\r\n                    break;\r\n                case TripletFeel.Dotted16th:\r\n                    this.renderBarNote(leftNoteX, noteY, TripletFeelGlyph.NoteScale, canvas, [\r\n                        TripletFeelGlyphBarType.Full,\r\n                        TripletFeelGlyphBarType.Full\r\n                    ]);\r\n                    this.renderBarNote(rightNoteX, noteY, TripletFeelGlyph.NoteScale, canvas, [\r\n                        TripletFeelGlyphBarType.Full,\r\n                        TripletFeelGlyphBarType.Full,\r\n                        TripletFeelGlyphBarType.PartialRight\r\n                    ]);\r\n                    canvas.fillCircle(rightNoteX + 9 * this.scale, noteY, this.scale);\r\n                    break;\r\n                case TripletFeel.Scottish8th:\r\n                    this.renderBarNote(leftNoteX, noteY, TripletFeelGlyph.NoteScale, canvas, [TripletFeelGlyphBarType.Full]);\r\n                    this.renderBarNote(rightNoteX, noteY, TripletFeelGlyph.NoteScale, canvas, [\r\n                        TripletFeelGlyphBarType.Full,\r\n                        TripletFeelGlyphBarType.PartialLeft\r\n                    ]);\r\n                    canvas.fillCircle(rightNoteX + TripletFeelGlyph.NoteSeparation * this.scale + 8 * this.scale, noteY, this.scale);\r\n                    break;\r\n                case TripletFeel.Scottish16th:\r\n                    this.renderBarNote(leftNoteX, noteY, TripletFeelGlyph.NoteScale, canvas, [\r\n                        TripletFeelGlyphBarType.Full,\r\n                        TripletFeelGlyphBarType.Full\r\n                    ]);\r\n                    this.renderBarNote(rightNoteX, noteY, TripletFeelGlyph.NoteScale, canvas, [\r\n                        TripletFeelGlyphBarType.Full,\r\n                        TripletFeelGlyphBarType.Full,\r\n                        TripletFeelGlyphBarType.PartialLeft\r\n                    ]);\r\n                    canvas.fillCircle(rightNoteX + TripletFeelGlyph.NoteSeparation * this.scale + 8 * this.scale, noteY, this.scale);\r\n                    break;\r\n            }\r\n            canvas.fillText('=', cx + 30 * this.scale, cy + 5 * this.scale);\r\n            canvas.fillText(')', cx + 65 * this.scale, cy + this.height * 0.3);\r\n        }\r\n        renderBarNote(cx, noteY, noteScale, canvas, bars) {\r\n            canvas.fillMusicFontSymbol(cx, noteY, noteScale, MusicFontSymbol.NoteQuarterUp, false);\r\n            let partialBarWidth = (TripletFeelGlyph.NoteSeparation / 2) * this.scale;\r\n            for (let i = 0; i < bars.length; i++) {\r\n                switch (bars[i]) {\r\n                    case TripletFeelGlyphBarType.Full:\r\n                        canvas.fillRect(cx + 4 * this.scale, noteY - TripletFeelGlyph.NoteHeight * this.scale + TripletFeelGlyph.BarSeparation * this.scale * i, TripletFeelGlyph.NoteSeparation * this.scale, TripletFeelGlyph.BarHeight * this.scale);\r\n                        break;\r\n                    case TripletFeelGlyphBarType.PartialLeft:\r\n                        canvas.fillRect(cx + 4 * this.scale, noteY - TripletFeelGlyph.NoteHeight * this.scale + TripletFeelGlyph.BarSeparation * this.scale * i, partialBarWidth, TripletFeelGlyph.BarHeight * this.scale);\r\n                        break;\r\n                    case TripletFeelGlyphBarType.PartialRight:\r\n                        canvas.fillRect(cx + 4 * this.scale + partialBarWidth, noteY - TripletFeelGlyph.NoteHeight * this.scale + TripletFeelGlyph.BarSeparation * this.scale * i, partialBarWidth, TripletFeelGlyph.BarHeight * this.scale);\r\n                        break;\r\n                }\r\n            }\r\n            canvas.fillMusicFontSymbol(cx + TripletFeelGlyph.NoteSeparation * this.scale, noteY, noteScale, MusicFontSymbol.NoteQuarterUp, false);\r\n        }\r\n        renderTriplet(cx, cy, canvas) {\r\n            cy += 2 * this.scale;\r\n            let font = this.renderer.resources.effectFont;\r\n            canvas.font = new Font(font.family, font.size * 0.8, font.style);\r\n            let rightX = cx + TripletFeelGlyph.NoteSeparation * this.scale + 3 * this.scale;\r\n            canvas.beginPath();\r\n            canvas.moveTo(cx, cy + 3 * this.scale);\r\n            canvas.lineTo(cx, cy);\r\n            canvas.lineTo(cx + 5 * this.scale, cy);\r\n            canvas.moveTo(rightX + 5 * this.scale, cy + 3 * this.scale);\r\n            canvas.lineTo(rightX + 5 * this.scale, cy);\r\n            canvas.lineTo(rightX, cy);\r\n            canvas.stroke();\r\n            canvas.fillText('3', cx + 7 * this.scale, cy - 10 * this.scale);\r\n            canvas.font = font;\r\n        }\r\n    }\r\n    TripletFeelGlyph.NoteScale = 0.4;\r\n    TripletFeelGlyph.NoteHeight = 12;\r\n    TripletFeelGlyph.NoteSeparation = 12;\r\n    TripletFeelGlyph.BarHeight = 2;\r\n    TripletFeelGlyph.BarSeparation = 3;\n\n    class TripletFeelEffectInfo extends EffectBarRendererInfo {\r\n        get notationElement() {\r\n            return NotationElement.EffectTripletFeel;\r\n        }\r\n        get hideOnMultiTrack() {\r\n            return true;\r\n        }\r\n        get canShareBand() {\r\n            return false;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.SinglePreBeat;\r\n        }\r\n        shouldCreateGlyph(settings, beat) {\r\n            return (beat.index === 0 &&\r\n                ((beat.voice.bar.masterBar.index === 0 &&\r\n                    beat.voice.bar.masterBar.tripletFeel !== TripletFeel.NoTripletFeel) ||\r\n                    (beat.voice.bar.masterBar.index > 0 &&\r\n                        beat.voice.bar.masterBar.tripletFeel !== beat.voice.bar.masterBar.previousMasterBar.tripletFeel)));\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new TripletFeelGlyph(beat.voice.bar.masterBar.tripletFeel);\r\n        }\r\n        canExpand(from, to) {\r\n            return true;\r\n        }\r\n    }\n\n    class WhammyBarEffectInfo extends EffectBarRendererInfo {\r\n        get notationElement() {\r\n            return NotationElement.EffectWhammyBar;\r\n        }\r\n        get hideOnMultiTrack() {\r\n            return false;\r\n        }\r\n        get canShareBand() {\r\n            return false;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.GroupedOnBeat;\r\n        }\r\n        shouldCreateGlyph(settings, beat) {\r\n            return beat.hasWhammyBar;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new LineRangedGlyph('w/bar');\r\n        }\r\n        canExpand(from, to) {\r\n            return true;\r\n        }\r\n    }\n\n    class WideBeatVibratoEffectInfo extends EffectBarRendererInfo {\r\n        get notationElement() {\r\n            return NotationElement.EffectWideBeatVibrato;\r\n        }\r\n        get hideOnMultiTrack() {\r\n            return false;\r\n        }\r\n        get canShareBand() {\r\n            return true;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.GroupedOnBeatToEnd;\r\n        }\r\n        shouldCreateGlyph(settings, beat) {\r\n            return beat.vibrato === VibratoType.Wide;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new BeatVibratoGlyph(VibratoType.Wide);\r\n        }\r\n        canExpand(from, to) {\r\n            return true;\r\n        }\r\n    }\n\n    class WideNoteVibratoEffectInfo extends NoteEffectInfoBase {\r\n        get notationElement() {\r\n            return NotationElement.EffectWideNoteVibrato;\r\n        }\r\n        shouldCreateGlyphForNote(note) {\r\n            return (note.vibrato === VibratoType.Wide || (note.isTieDestination && note.tieOrigin.vibrato === VibratoType.Wide));\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.GroupedOnBeatToEnd;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new NoteVibratoGlyph(0, 0, VibratoType.Wide, 1.2);\r\n        }\r\n    }\n\n    class ChordDiagramGlyph extends EffectGlyph {\r\n        constructor(x, y, chord) {\r\n            super(x, y);\r\n            this._textRow = 0;\r\n            this._fretRow = 0;\r\n            this._firstFretSpacing = 0;\r\n            this._chord = chord;\r\n        }\r\n        doLayout() {\r\n            super.doLayout();\r\n            const scale = this.scale;\r\n            let res = this.renderer.resources;\r\n            this._textRow = res.effectFont.size * 1.5 * scale;\r\n            this._fretRow = res.effectFont.size * 1.5 * scale;\r\n            if (this._chord.firstFret > 1) {\r\n                this._firstFretSpacing = ChordDiagramGlyph.FretSpacing * scale;\r\n            }\r\n            else {\r\n                this._firstFretSpacing = 0;\r\n            }\r\n            this.height =\r\n                this._textRow +\r\n                    this._fretRow +\r\n                    (ChordDiagramGlyph.Frets - 1) * ChordDiagramGlyph.FretSpacing * scale +\r\n                    2 * ChordDiagramGlyph.Padding * scale;\r\n            this.width =\r\n                this._firstFretSpacing +\r\n                    (this._chord.staff.tuning.length - 1) * ChordDiagramGlyph.StringSpacing * scale +\r\n                    2 * ChordDiagramGlyph.Padding * scale;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            cx += this.x + ChordDiagramGlyph.Padding * this.scale + this._firstFretSpacing;\r\n            cy += this.y;\r\n            let w = this.width - 2 * ChordDiagramGlyph.Padding * this.scale + this.scale - this._firstFretSpacing;\r\n            let stringSpacing = ChordDiagramGlyph.StringSpacing * this.scale;\r\n            let fretSpacing = ChordDiagramGlyph.FretSpacing * this.scale;\r\n            let res = this.renderer.resources;\r\n            let circleRadius = ChordDiagramGlyph.CircleRadius * this.scale;\r\n            let align = canvas.textAlign;\r\n            let baseline = canvas.textBaseline;\r\n            canvas.font = res.effectFont;\r\n            canvas.textAlign = TextAlign.Center;\r\n            canvas.textBaseline = TextBaseline.Top;\r\n            if (this._chord.showName) {\r\n                canvas.fillText(this._chord.name, cx + this.width / 2, cy + res.effectFont.size / 2);\r\n            }\r\n            cy += this._textRow;\r\n            cx += stringSpacing / 2;\r\n            canvas.font = res.fretboardNumberFont;\r\n            canvas.textBaseline = TextBaseline.Middle;\r\n            for (let i = 0; i < this._chord.staff.tuning.length; i++) {\r\n                let x = cx + i * stringSpacing;\r\n                let y = cy + this._fretRow / 2;\r\n                let fret = this._chord.strings[this._chord.staff.tuning.length - i - 1];\r\n                if (fret < 0) {\r\n                    canvas.fillMusicFontSymbol(x, y, this.scale, MusicFontSymbol.FretboardX, true);\r\n                }\r\n                else if (fret === 0) {\r\n                    canvas.fillMusicFontSymbol(x, y, this.scale, MusicFontSymbol.FretboardO, true);\r\n                }\r\n                else {\r\n                    fret -= this._chord.firstFret - 1;\r\n                    canvas.fillText(fret.toString(), x, y);\r\n                }\r\n            }\r\n            cy += this._fretRow;\r\n            for (let i = 0; i < this._chord.staff.tuning.length; i++) {\r\n                let x = cx + i * stringSpacing;\r\n                canvas.fillRect(x, cy, 1, fretSpacing * ChordDiagramGlyph.Frets + this.scale);\r\n            }\r\n            if (this._chord.firstFret > 1) {\r\n                canvas.textAlign = TextAlign.Left;\r\n                canvas.fillText(this._chord.firstFret.toString(), cx - this._firstFretSpacing, cy + fretSpacing / 2);\r\n            }\r\n            canvas.fillRect(cx, cy - this.scale, w, 2 * this.scale);\r\n            for (let i = 0; i <= ChordDiagramGlyph.Frets; i++) {\r\n                let y = cy + i * fretSpacing;\r\n                canvas.fillRect(cx, y, w, this.scale);\r\n            }\r\n            let barreLookup = new Map();\r\n            for (let barreFret of this._chord.barreFrets) {\r\n                let strings = [-1, -1];\r\n                barreLookup.set(barreFret - this._chord.firstFret, strings);\r\n            }\r\n            for (let guitarString = 0; guitarString < this._chord.strings.length; guitarString++) {\r\n                let fret = this._chord.strings[guitarString];\r\n                if (fret > 0) {\r\n                    fret -= this._chord.firstFret;\r\n                    if (barreLookup.has(fret)) {\r\n                        let info = barreLookup.get(fret);\r\n                        if (info[0] === -1 || guitarString < info[0]) {\r\n                            info[0] = guitarString;\r\n                        }\r\n                        if (info[1] === -1 || guitarString > info[1]) {\r\n                            info[1] = guitarString;\r\n                        }\r\n                    }\r\n                    let y = cy + fret * fretSpacing + fretSpacing / 2 + 0.5 * this.scale;\r\n                    let x = cx + (this._chord.strings.length - guitarString - 1) * stringSpacing;\r\n                    canvas.fillCircle(x, y, circleRadius);\r\n                }\r\n            }\r\n            for (const [fret, strings] of barreLookup) {\r\n                let y = cy + fret * fretSpacing + fretSpacing / 2 + 0.5 * this.scale;\r\n                let xLeft = cx + (this._chord.strings.length - strings[1] - 1) * stringSpacing;\r\n                let xRight = cx + (this._chord.strings.length - strings[0] - 1) * stringSpacing;\r\n                canvas.fillRect(xLeft, y - circleRadius, xRight - xLeft, circleRadius * 2);\r\n            }\r\n            canvas.textAlign = align;\r\n            canvas.textBaseline = baseline;\r\n        }\r\n    }\r\n    ChordDiagramGlyph.Padding = 5;\r\n    ChordDiagramGlyph.Frets = 5;\r\n    ChordDiagramGlyph.CircleRadius = 2.5;\r\n    ChordDiagramGlyph.StringSpacing = 10;\r\n    ChordDiagramGlyph.FretSpacing = 12;\n\n    class RowGlyphContainer extends GlyphGroup {\r\n        constructor(x, y, align = TextAlign.Center) {\r\n            super(x, y);\r\n            this._glyphWidth = 0;\r\n            this.glyphs = [];\r\n            this._align = align;\r\n        }\r\n        doLayout() {\r\n            let x = 0;\r\n            switch (this._align) {\r\n                case TextAlign.Left:\r\n                    x = 0;\r\n                    break;\r\n                case TextAlign.Center:\r\n                    x = (this.width - this._glyphWidth) / 2;\r\n                    break;\r\n                case TextAlign.Right:\r\n                    x = this.width - this._glyphWidth;\r\n                    break;\r\n            }\r\n            for (let glyph of this.glyphs) {\r\n                glyph.x = x;\r\n                x += glyph.width;\r\n            }\r\n        }\r\n        addGlyphToRow(glyph) {\r\n            this.glyphs.push(glyph);\r\n            this._glyphWidth += glyph.width;\r\n            if (glyph.height > this.height) {\r\n                this.height = glyph.height;\r\n            }\r\n        }\r\n    }\n\n    class RowContainerGlyph extends GlyphGroup {\r\n        constructor(x, y, align = TextAlign.Center) {\r\n            super(x, y);\r\n            this._rows = [];\r\n            this.height = 0.0;\r\n            this.glyphs = [];\r\n            this._align = align;\r\n        }\r\n        doLayout() {\r\n            let x = 0;\r\n            let y = 0;\r\n            let padding = 2 * RowContainerGlyph.Padding * this.scale;\r\n            this._rows = [];\r\n            let row = new RowGlyphContainer(x, y, this._align);\r\n            row.width = this.width;\r\n            for (let g of this.glyphs) {\r\n                if (x + g.width < this.width) {\r\n                    row.addGlyphToRow(g);\r\n                    x += g.width;\r\n                }\r\n                else {\r\n                    if (!row.isEmpty) {\r\n                        row.doLayout();\r\n                        this._rows.push(row);\r\n                        y += row.height + padding;\r\n                    }\r\n                    x = 0;\r\n                    row = new RowGlyphContainer(x, y, this._align);\r\n                    row.width = this.width;\r\n                    row.addGlyphToRow(g);\r\n                    x += g.width;\r\n                }\r\n            }\r\n            if (!row.isEmpty) {\r\n                row.doLayout();\r\n                this._rows.push(row);\r\n                y += row.height + padding;\r\n            }\r\n            this.height = y + padding;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            for (let row of this._rows) {\r\n                row.paint(cx + this.x, cy + this.y + RowContainerGlyph.Padding * this.scale, canvas);\r\n            }\r\n        }\r\n    }\r\n    RowContainerGlyph.Padding = 3;\n\n    class ChordDiagramContainerGlyph extends RowContainerGlyph {\r\n        constructor(x, y) {\r\n            super(x, y);\r\n        }\r\n        addChord(chord) {\r\n            if (chord.strings.length > 0) {\r\n                let chordDiagram = new ChordDiagramGlyph(0, 0, chord);\r\n                chordDiagram.renderer = this.renderer;\r\n                chordDiagram.doLayout();\r\n                this.glyphs.push(chordDiagram);\r\n            }\r\n        }\r\n    }\n\n    /**\r\n     * A Staff represents a single line within a StaveGroup.\r\n     * It stores BarRenderer instances created from a given factory.\r\n     */\r\n    class RenderStaff {\r\n        constructor(trackIndex, staff, factory) {\r\n            this._sharedLayoutData = new Map();\r\n            this.barRenderers = [];\r\n            this.x = 0;\r\n            this.y = 0;\r\n            this.height = 0;\r\n            this.index = 0;\r\n            this.staffIndex = 0;\r\n            /**\r\n             * This is the index of the track being rendered. This is not the index of the track within the model,\r\n             * but the n-th track being rendered. It is the index of the {@link ScoreRenderer.tracks} array defining\r\n             * which tracks should be rendered.\r\n             * For single-track rendering this will always be zero.\r\n             */\r\n            this.trackIndex = 0;\r\n            /**\r\n             * This is the visual offset from top where the\r\n             * Staff contents actually start. Used for grouping\r\n             * using a accolade\r\n             */\r\n            this.staveTop = 0;\r\n            this.topSpacing = 20;\r\n            this.bottomSpacing = 5;\r\n            /**\r\n             * This is the visual offset from top where the\r\n             * Staff contents actually ends. Used for grouping\r\n             * using a accolade\r\n             */\r\n            this.staveBottom = 0;\r\n            this.isFirstInAccolade = false;\r\n            this.isLastInAccolade = false;\r\n            this._factory = factory;\r\n            this.trackIndex = trackIndex;\r\n            this.modelStaff = staff;\r\n        }\r\n        get staveId() {\r\n            return this._factory.staffId;\r\n        }\r\n        getSharedLayoutData(key, def) {\r\n            if (this._sharedLayoutData.has(key)) {\r\n                return this._sharedLayoutData.get(key);\r\n            }\r\n            return def;\r\n        }\r\n        setSharedLayoutData(key, def) {\r\n            this._sharedLayoutData.set(key, def);\r\n        }\r\n        get isInAccolade() {\r\n            return this._factory.isInAccolade;\r\n        }\r\n        get isRelevantForBoundsLookup() {\r\n            return this._factory.isRelevantForBoundsLookup;\r\n        }\r\n        registerStaffTop(offset) {\r\n            this.staveTop = offset;\r\n        }\r\n        registerStaffBottom(offset) {\r\n            this.staveBottom = offset;\r\n        }\r\n        addBarRenderer(renderer) {\r\n            renderer.staff = this;\r\n            renderer.index = this.barRenderers.length;\r\n            renderer.reLayout();\r\n            this.barRenderers.push(renderer);\r\n            this.staveGroup.layout.registerBarRenderer(this.staveId, renderer);\r\n        }\r\n        addBar(bar, layoutingInfo) {\r\n            let renderer;\r\n            if (!bar) {\r\n                renderer = new BarRendererBase(this.staveGroup.layout.renderer, bar);\r\n            }\r\n            else {\r\n                renderer = this._factory.create(this.staveGroup.layout.renderer, bar);\r\n            }\r\n            renderer.staff = this;\r\n            renderer.index = this.barRenderers.length;\r\n            renderer.layoutingInfo = layoutingInfo;\r\n            renderer.doLayout();\r\n            renderer.registerLayoutingInfo();\r\n            this.barRenderers.push(renderer);\r\n            if (bar) {\r\n                this.staveGroup.layout.registerBarRenderer(this.staveId, renderer);\r\n            }\r\n        }\r\n        revertLastBar() {\r\n            let lastBar = this.barRenderers[this.barRenderers.length - 1];\r\n            this.barRenderers.splice(this.barRenderers.length - 1, 1);\r\n            this.staveGroup.layout.unregisterBarRenderer(this.staveId, lastBar);\r\n            return lastBar;\r\n        }\r\n        scaleToWidth(width) {\r\n            this._sharedLayoutData = new Map();\r\n            // Note: here we could do some \"intelligent\" distribution of\r\n            // the space over the bar renderers, for now we evenly apply the space to all bars\r\n            let difference = width - this.staveGroup.width;\r\n            let spacePerBar = difference / this.barRenderers.length;\r\n            for (let i = 0, j = this.barRenderers.length; i < j; i++) {\r\n                this.barRenderers[i].scaleToWidth(this.barRenderers[i].width + spacePerBar);\r\n            }\r\n        }\r\n        get topOverflow() {\r\n            let m = 0;\r\n            for (let i = 0, j = this.barRenderers.length; i < j; i++) {\r\n                let r = this.barRenderers[i];\r\n                if (r.topOverflow > m) {\r\n                    m = r.topOverflow;\r\n                }\r\n            }\r\n            return m;\r\n        }\r\n        get bottomOverflow() {\r\n            let m = 0;\r\n            for (let i = 0, j = this.barRenderers.length; i < j; i++) {\r\n                let r = this.barRenderers[i];\r\n                if (r.bottomOverflow > m) {\r\n                    m = r.bottomOverflow;\r\n                }\r\n            }\r\n            return m;\r\n        }\r\n        finalizeStaff() {\r\n            let x = 0;\r\n            this.height = 0;\r\n            let topOverflow = this.topOverflow;\r\n            let bottomOverflow = this.bottomOverflow;\r\n            for (let i = 0; i < this.barRenderers.length; i++) {\r\n                this.barRenderers[i].x = x;\r\n                this.barRenderers[i].y = this.topSpacing + topOverflow;\r\n                this.height = Math.max(this.height, this.barRenderers[i].height);\r\n                this.barRenderers[i].finalizeRenderer();\r\n                x += this.barRenderers[i].width;\r\n            }\r\n            if (this.height > 0) {\r\n                this.height += this.topSpacing + topOverflow + bottomOverflow + this.bottomSpacing;\r\n            }\r\n        }\r\n        paint(cx, cy, canvas, startIndex, count) {\r\n            if (this.height === 0 || count === 0) {\r\n                return;\r\n            }\r\n            for (let i = startIndex, j = Math.min(startIndex + count, this.barRenderers.length); i < j; i++) {\r\n                this.barRenderers[i].paint(cx + this.x, cy + this.y, canvas);\r\n            }\r\n        }\r\n    }\n\n    class Spring {\r\n        constructor() {\r\n            this.timePosition = 0;\r\n            this.longestDuration = 0;\r\n            this.smallestDuration = 0;\r\n            this.force = 0;\r\n            this.springConstant = 0;\r\n            this.preBeatWidth = 0;\r\n            this.graceBeatWidth = 0;\r\n            this.postSpringWidth = 0;\r\n            this.allDurations = new Set();\r\n        }\r\n        get springWidth() {\r\n            return this.preSpringWidth + this.postSpringWidth;\r\n        }\r\n        get preSpringWidth() {\r\n            return this.preBeatWidth + this.graceBeatWidth;\r\n        }\r\n    }\n\n    /**\r\n     * This public class stores size information about a stave.\r\n     * It is used by the layout engine to collect the sizes of score parts\r\n     * to align the parts across multiple staves.\r\n     */\r\n    class BarLayoutingInfo {\r\n        constructor() {\r\n            this._timeSortedSprings = [];\r\n            this._xMin = 0;\r\n            this._minTime = -1;\r\n            this._onTimePositionsForce = 0;\r\n            this._onTimePositions = new Map();\r\n            this._incompleteGraceRodsWidth = 0;\r\n            /**\r\n             * an internal version number that increments whenever a change was made.\r\n             */\r\n            this.version = 0;\r\n            this.preBeatSizes = new Map();\r\n            this.onBeatSizes = new Map();\r\n            this.onBeatCenterX = new Map();\r\n            this.preBeatSize = 0;\r\n            this.postBeatSize = 0;\r\n            this.voiceSize = 0;\r\n            this.minStretchForce = 0;\r\n            this.totalSpringConstant = 0;\r\n            this.incompleteGraceRods = new Map();\r\n            this.allGraceRods = new Map();\r\n            this.springs = new Map();\r\n            this.height = 0;\r\n        }\r\n        updateVoiceSize(size) {\r\n            if (size > this.voiceSize) {\r\n                this.voiceSize = size;\r\n                this.version++;\r\n            }\r\n        }\r\n        setPreBeatSize(beat, size) {\r\n            if (!this.preBeatSizes.has(beat.index) || this.preBeatSizes.get(beat.index) < size) {\r\n                this.preBeatSizes.set(beat.index, size);\r\n                this.version++;\r\n            }\r\n        }\r\n        getPreBeatSize(beat) {\r\n            if (this.preBeatSizes.has(beat.index)) {\r\n                return this.preBeatSizes.get(beat.index);\r\n            }\r\n            return 0;\r\n        }\r\n        setOnBeatSize(beat, size) {\r\n            if (!this.onBeatSizes.has(beat.index) || this.onBeatSizes.get(beat.index) < size) {\r\n                this.onBeatSizes.set(beat.index, size);\r\n                this.version++;\r\n            }\r\n        }\r\n        getOnBeatSize(beat) {\r\n            if (this.onBeatSizes.has(beat.index)) {\r\n                return this.onBeatSizes.get(beat.index);\r\n            }\r\n            return 0;\r\n        }\r\n        getBeatCenterX(beat) {\r\n            if (this.onBeatCenterX.has(beat.index)) {\r\n                return this.onBeatCenterX.get(beat.index);\r\n            }\r\n            return 0;\r\n        }\r\n        setBeatCenterX(beat, x) {\r\n            if (!this.onBeatCenterX.has(beat.index) || this.onBeatCenterX.get(beat.index) < x) {\r\n                this.onBeatCenterX.set(beat.index, x);\r\n                this.version++;\r\n            }\r\n        }\r\n        updateMinStretchForce(force) {\r\n            if (this.minStretchForce < force) {\r\n                this.minStretchForce = force;\r\n            }\r\n        }\r\n        addSpring(start, duration, graceBeatWidth, preBeatWidth, postSpringSize) {\r\n            this.version++;\r\n            let spring;\r\n            if (!this.springs.has(start)) {\r\n                spring = new Spring();\r\n                spring.timePosition = start;\r\n                spring.allDurations.add(duration);\r\n                // check in the previous spring for the shortest duration that overlaps with this spring\r\n                // Gourlay defines that we need the smallest note duration that either starts **or continues** on the current spring.\r\n                if (this._timeSortedSprings.length > 0) {\r\n                    let previousSpring = this._timeSortedSprings[this._timeSortedSprings.length - 1];\r\n                    for (const prevDuration of previousSpring.allDurations) {\r\n                        let end = previousSpring.timePosition + prevDuration;\r\n                    }\r\n                }\r\n                spring.longestDuration = duration;\r\n                spring.postSpringWidth = postSpringSize;\r\n                spring.graceBeatWidth = graceBeatWidth;\r\n                spring.preBeatWidth = preBeatWidth;\r\n                this.springs.set(start, spring);\r\n                let timeSorted = this._timeSortedSprings;\r\n                let insertPos = timeSorted.length - 1;\r\n                while (insertPos > 0 && timeSorted[insertPos].timePosition > start) {\r\n                    insertPos--;\r\n                }\r\n                this._timeSortedSprings.splice(insertPos + 1, 0, spring);\r\n            }\r\n            else {\r\n                spring = this.springs.get(start);\r\n                if (spring.postSpringWidth < postSpringSize) {\r\n                    spring.postSpringWidth = postSpringSize;\r\n                }\r\n                if (spring.graceBeatWidth < graceBeatWidth) {\r\n                    spring.graceBeatWidth = graceBeatWidth;\r\n                }\r\n                if (spring.preBeatWidth < preBeatWidth) {\r\n                    spring.preBeatWidth = preBeatWidth;\r\n                }\r\n                if (duration < spring.smallestDuration) {\r\n                    spring.smallestDuration = duration;\r\n                }\r\n                if (duration > spring.longestDuration) {\r\n                    spring.longestDuration = duration;\r\n                }\r\n                spring.allDurations.add(duration);\r\n            }\r\n            if (this._minTime === -1 || this._minTime > start) {\r\n                this._minTime = start;\r\n            }\r\n            return spring;\r\n        }\r\n        addBeatSpring(beat, preBeatSize, postBeatSize) {\r\n            let start = beat.absoluteDisplayStart;\r\n            if (beat.graceType !== GraceType.None) {\r\n                // For grace beats we just remember the the sizes required for them\r\n                // these sizes are then considered when the target beat is added. \r\n                const groupId = beat.graceGroup.id;\r\n                if (!this.allGraceRods.has(groupId)) {\r\n                    this.allGraceRods.set(groupId, new Array(beat.graceGroup.beats.length));\r\n                }\r\n                if (!beat.graceGroup.isComplete && !this.incompleteGraceRods.has(groupId)) {\r\n                    this.incompleteGraceRods.set(groupId, new Array(beat.graceGroup.beats.length));\r\n                }\r\n                let existingSpring = this.allGraceRods.get(groupId)[beat.graceIndex];\r\n                if (existingSpring) {\r\n                    if (existingSpring.postSpringWidth < postBeatSize) {\r\n                        existingSpring.postSpringWidth = postBeatSize;\r\n                    }\r\n                    if (existingSpring.preBeatWidth < preBeatSize) {\r\n                        existingSpring.preBeatWidth = preBeatSize;\r\n                    }\r\n                }\r\n                else {\r\n                    const graceSpring = new Spring();\r\n                    graceSpring.timePosition = start;\r\n                    graceSpring.postSpringWidth = postBeatSize;\r\n                    graceSpring.preBeatWidth = preBeatSize;\r\n                    if (!beat.graceGroup.isComplete) {\r\n                        this.incompleteGraceRods.get(groupId)[beat.graceIndex] = graceSpring;\r\n                    }\r\n                    this.allGraceRods.get(groupId)[beat.graceIndex] = graceSpring;\r\n                }\r\n            }\r\n            else {\r\n                let graceBeatSize = 0;\r\n                if (beat.graceGroup && this.allGraceRods.has(beat.graceGroup.id)) {\r\n                    for (const graceBeat of this.allGraceRods.get(beat.graceGroup.id)) {\r\n                        graceBeatSize += graceBeat.springWidth;\r\n                    }\r\n                }\r\n                this.addSpring(start, beat.displayDuration, graceBeatSize, preBeatSize, postBeatSize);\r\n            }\r\n        }\r\n        finish() {\r\n            for (const [k, s] of this.allGraceRods) {\r\n                let offset = 0;\r\n                if (this.incompleteGraceRods.has(k)) {\r\n                    for (const sp of s) {\r\n                        offset += sp.preBeatWidth;\r\n                        sp.graceBeatWidth = offset;\r\n                        offset += sp.postSpringWidth;\r\n                    }\r\n                }\r\n                else {\r\n                    for (let i = s.length - 1; i >= 0; i--) {\r\n                        // for grace beats we store the offset \r\n                        // in the 'graceBeatWidth' for later use during applying\r\n                        // beat positions\r\n                        s[i].graceBeatWidth = offset;\r\n                        offset -= (s[i].preBeatWidth + s[i].postSpringWidth);\r\n                    }\r\n                }\r\n            }\r\n            this._incompleteGraceRodsWidth = 0;\r\n            for (const s of this.incompleteGraceRods.values()) {\r\n                for (const sp of s) {\r\n                    this._incompleteGraceRodsWidth += sp.preBeatWidth + sp.postSpringWidth;\r\n                }\r\n            }\r\n            this.calculateSpringConstants();\r\n            this.version++;\r\n        }\r\n        calculateSpringConstants() {\r\n            this._xMin = 0;\r\n            let springs = this.springs;\r\n            for (const spring of springs.values()) {\r\n                if (spring.springWidth < this._xMin) {\r\n                    this._xMin = spring.springWidth;\r\n                }\r\n            }\r\n            let totalSpringConstant = 0;\r\n            let sortedSprings = this._timeSortedSprings;\r\n            if (sortedSprings.length === 0) {\r\n                this.totalSpringConstant = -1;\r\n                this.minStretchForce = -1;\r\n                return;\r\n            }\r\n            for (let i = 0; i < sortedSprings.length; i++) {\r\n                let currentSpring = sortedSprings[i];\r\n                let duration = 0;\r\n                if (i === sortedSprings.length - 1) {\r\n                    duration = currentSpring.longestDuration;\r\n                }\r\n                else {\r\n                    let nextSpring = sortedSprings[i + 1];\r\n                    duration = Math.abs(nextSpring.timePosition - currentSpring.timePosition);\r\n                }\r\n                currentSpring.springConstant = this.calculateSpringConstant(currentSpring, duration);\r\n                totalSpringConstant += 1 / currentSpring.springConstant;\r\n            }\r\n            this.totalSpringConstant = 1 / totalSpringConstant;\r\n            // calculate the force required to have at least the minimum size.\r\n            this.minStretchForce = 0;\r\n            // We take the space required between current and next spring\r\n            // and calculate the force needed so that the current spring\r\n            // reserves enough space\r\n            for (let i = 0; i < sortedSprings.length; i++) {\r\n                let currentSpring = sortedSprings[i];\r\n                let requiredSpace = 0;\r\n                if (i === sortedSprings.length - 1) {\r\n                    requiredSpace = currentSpring.postSpringWidth;\r\n                }\r\n                else {\r\n                    let nextSpring = sortedSprings[i + 1];\r\n                    requiredSpace = currentSpring.postSpringWidth + nextSpring.preSpringWidth;\r\n                }\r\n                // for the first spring we need to ensure we take the initial \r\n                // pre-spring width into account\r\n                if (i === 0) {\r\n                    requiredSpace += currentSpring.preSpringWidth;\r\n                }\r\n                let requiredSpaceForce = requiredSpace * currentSpring.springConstant;\r\n                this.updateMinStretchForce(requiredSpaceForce);\r\n            }\r\n        }\r\n        paint(_cx, _cy, _canvas) { }\r\n        // public height: number = 30;\r\n        // public paint(cx: number, cy: number, canvas: ICanvas) {\r\n        //     let sortedSprings: Spring[] = this._timeSortedSprings;\r\n        //     if (sortedSprings.length === 0) {\r\n        //         return;\r\n        //     }\r\n        //     const settings = canvas.settings;\r\n        //     const force = Math.max(settings.display.stretchForce, this.minStretchForce);\r\n        //     const height = this.height * settings.display.scale;\r\n        //     cy -= height;\r\n        //     canvas.color = settings.display.resources.mainGlyphColor;\r\n        //     const font = settings.display.resources.effectFont.clone();\r\n        //     font.size *= 0.8;\r\n        //     canvas.font = font;\r\n        //     canvas.fillText(force.toFixed(2), cx, cy);\r\n        //     cy += settings.display.resources.effectFont.size * 1.5;\r\n        //     let springX: number = sortedSprings[0].preSpringWidth;\r\n        //     for (let i: number = 0; i < sortedSprings.length; i++) {\r\n        //         const spring = sortedSprings[i];\r\n        //         canvas.color = new Color(0, 0, 255, 100);\r\n        //         canvas.fillRect(cx + springX - spring.preSpringWidth, cy, spring.preSpringWidth, height / 2);\r\n        //         canvas.color = new Color(0, 255, 0, 100);\r\n        //         canvas.fillRect(cx + springX, cy, spring.postSpringWidth, height / 2);\r\n        //         canvas.color = settings.display.resources.mainGlyphColor;\r\n        //         canvas.moveTo(cx + springX, cy);\r\n        //         canvas.lineTo(cx + springX, cy + height / 2);\r\n        //         canvas.stroke();\r\n        //         springX += this.calculateWidth(force, spring.springConstant);\r\n        //     }\r\n        // }\r\n        calculateSpringConstant(spring, duration) {\r\n            if (duration <= 0) {\r\n                duration = MidiUtils.toTicks(Duration.SixtyFourth);\r\n            }\r\n            if (spring.smallestDuration === 0) {\r\n                spring.smallestDuration = duration;\r\n            }\r\n            let minDuration = spring.smallestDuration;\r\n            let phi = 1 + 0.85 * Math.log2(duration / BarLayoutingInfo.MinDuration);\r\n            return (minDuration / duration) * (1 / (phi * BarLayoutingInfo.MinDurationWidth));\r\n        }\r\n        spaceToForce(space) {\r\n            if (this.totalSpringConstant !== -1) {\r\n                if (this._timeSortedSprings.length > 0) {\r\n                    space -= this._timeSortedSprings[0].preSpringWidth;\r\n                }\r\n                space -= this._incompleteGraceRodsWidth;\r\n                return Math.max(space, 0) * this.totalSpringConstant;\r\n            }\r\n            return -1;\r\n        }\r\n        calculateVoiceWidth(force) {\r\n            let width = 0;\r\n            if (this.totalSpringConstant !== -1) {\r\n                width = this.calculateWidth(force, this.totalSpringConstant);\r\n            }\r\n            if (this._timeSortedSprings.length > 0) {\r\n                width += this._timeSortedSprings[0].preSpringWidth;\r\n            }\r\n            width += this._incompleteGraceRodsWidth;\r\n            return width;\r\n        }\r\n        calculateWidth(force, springConstant) {\r\n            return force / springConstant;\r\n        }\r\n        buildOnTimePositions(force) {\r\n            if (this.totalSpringConstant === -1) {\r\n                return new Map();\r\n            }\r\n            if (ModelUtils.isAlmostEqualTo(this._onTimePositionsForce, force) && this._onTimePositions) {\r\n                return this._onTimePositions;\r\n            }\r\n            this._onTimePositionsForce = force;\r\n            let positions = (this._onTimePositions = new Map());\r\n            let sortedSprings = this._timeSortedSprings;\r\n            if (sortedSprings.length === 0) {\r\n                return positions;\r\n            }\r\n            let springX = sortedSprings[0].preSpringWidth;\r\n            for (let i = 0; i < sortedSprings.length; i++) {\r\n                positions.set(sortedSprings[i].timePosition, springX);\r\n                springX += this.calculateWidth(force, sortedSprings[i].springConstant);\r\n            }\r\n            return positions;\r\n        }\r\n    }\r\n    BarLayoutingInfo.MinDuration = 30;\r\n    BarLayoutingInfo.MinDurationWidth = 7;\n\n    /**\r\n     * This container represents a single column of bar renderers independent from any staves.\r\n     * This container can be used to reorganize renderers into a new staves.\r\n     */\r\n    class MasterBarsRenderers {\r\n        constructor() {\r\n            this.width = 0;\r\n            this.isLinkedToPrevious = false;\r\n            this.canWrap = true;\r\n            this.renderers = [];\r\n        }\r\n    }\n\n    class StaveTrackGroup {\r\n        constructor(staveGroup, track) {\r\n            this.staves = [];\r\n            this.stavesRelevantForBoundsLookup = [];\r\n            this.firstStaffInAccolade = null;\r\n            this.lastStaffInAccolade = null;\r\n            this.staveGroup = staveGroup;\r\n            this.track = track;\r\n        }\r\n        addStaff(staff) {\r\n            this.staves.push(staff);\r\n            if (staff.isRelevantForBoundsLookup) {\r\n                this.stavesRelevantForBoundsLookup.push(staff);\r\n            }\r\n        }\r\n    }\n\n    /**\r\n     * A Staff consists of a list of different staves and groups\r\n     * them using an accolade.\r\n     */\r\n    class StaveGroup {\r\n        constructor() {\r\n            this._allStaves = [];\r\n            this._firstStaffInAccolade = null;\r\n            this._lastStaffInAccolade = null;\r\n            this._accoladeSpacingCalculated = false;\r\n            this.x = 0;\r\n            this.y = 0;\r\n            this.index = 0;\r\n            this.accoladeSpacing = 0;\r\n            /**\r\n             * Indicates whether this line is full or not. If the line is full the\r\n             * bars can be aligned to the maximum width. If the line is not full\r\n             * the bars will not get stretched.\r\n             */\r\n            this.isFull = false;\r\n            /**\r\n             * The width that the content bars actually need\r\n             */\r\n            this.width = 0;\r\n            this.isLast = false;\r\n            this.masterBarsRenderers = [];\r\n            this.staves = [];\r\n        }\r\n        get firstBarIndex() {\r\n            return this.masterBarsRenderers[0].masterBar.index;\r\n        }\r\n        get lastBarIndex() {\r\n            return this.masterBarsRenderers[this.masterBarsRenderers.length - 1].masterBar.index;\r\n        }\r\n        addMasterBarRenderers(tracks, renderers) {\r\n            if (tracks.length === 0) {\r\n                return null;\r\n            }\r\n            this.masterBarsRenderers.push(renderers);\r\n            this.calculateAccoladeSpacing(tracks);\r\n            renderers.layoutingInfo.preBeatSize = 0;\r\n            let src = 0;\r\n            for (let i = 0, j = this.staves.length; i < j; i++) {\r\n                let g = this.staves[i];\r\n                for (let k = 0, l = g.staves.length; k < l; k++) {\r\n                    let s = g.staves[k];\r\n                    let renderer = renderers.renderers[src++];\r\n                    s.addBarRenderer(renderer);\r\n                }\r\n            }\r\n            // Width += renderers.Width;\r\n            this.updateWidth();\r\n            return renderers;\r\n        }\r\n        addBars(tracks, barIndex) {\r\n            if (tracks.length === 0) {\r\n                return null;\r\n            }\r\n            let result = new MasterBarsRenderers();\r\n            result.layoutingInfo = new BarLayoutingInfo();\r\n            result.masterBar = tracks[0].score.masterBars[barIndex];\r\n            this.masterBarsRenderers.push(result);\r\n            this.calculateAccoladeSpacing(tracks);\r\n            // add renderers\r\n            let barLayoutingInfo = result.layoutingInfo;\r\n            for (let g of this.staves) {\r\n                for (let s of g.staves) {\r\n                    let bar = g.track.staves[s.modelStaff.index].bars[barIndex];\r\n                    s.addBar(bar, barLayoutingInfo);\r\n                    let renderer = s.barRenderers[s.barRenderers.length - 1];\r\n                    result.renderers.push(renderer);\r\n                    if (renderer.isLinkedToPrevious) {\r\n                        result.isLinkedToPrevious = true;\r\n                    }\r\n                    if (!renderer.canWrap) {\r\n                        result.canWrap = false;\r\n                    }\r\n                }\r\n            }\r\n            barLayoutingInfo.finish();\r\n            // ensure same widths of new renderer\r\n            result.width = this.updateWidth();\r\n            return result;\r\n        }\r\n        revertLastBar() {\r\n            if (this.masterBarsRenderers.length > 1) {\r\n                let toRemove = this.masterBarsRenderers[this.masterBarsRenderers.length - 1];\r\n                this.masterBarsRenderers.splice(this.masterBarsRenderers.length - 1, 1);\r\n                let w = 0;\r\n                for (let i = 0, j = this._allStaves.length; i < j; i++) {\r\n                    let s = this._allStaves[i];\r\n                    let lastBar = s.revertLastBar();\r\n                    w = Math.max(w, lastBar.width);\r\n                }\r\n                this.width -= w;\r\n                return toRemove;\r\n            }\r\n            return null;\r\n        }\r\n        updateWidth() {\r\n            let realWidth = 0;\r\n            for (let i = 0, j = this._allStaves.length; i < j; i++) {\r\n                let s = this._allStaves[i];\r\n                s.barRenderers[s.barRenderers.length - 1].applyLayoutingInfo();\r\n                if (s.barRenderers[s.barRenderers.length - 1].width > realWidth) {\r\n                    realWidth = s.barRenderers[s.barRenderers.length - 1].width;\r\n                }\r\n            }\r\n            this.width += realWidth;\r\n            return realWidth;\r\n        }\r\n        calculateAccoladeSpacing(tracks) {\r\n            if (!this._accoladeSpacingCalculated && this.index === 0) {\r\n                this._accoladeSpacingCalculated = true;\r\n                if (!this.layout.renderer.settings.notation.isNotationElementVisible(NotationElement.TrackNames)) {\r\n                    this.accoladeSpacing = 0;\r\n                }\r\n                else {\r\n                    let canvas = this.layout.renderer.canvas;\r\n                    let res = this.layout.renderer.settings.display.resources.effectFont;\r\n                    canvas.font = res;\r\n                    for (let t of tracks) {\r\n                        this.accoladeSpacing = Math.ceil(Math.max(this.accoladeSpacing, canvas.measureText(t.shortName)));\r\n                    }\r\n                    this.accoladeSpacing *= this.layout.scale;\r\n                    this.accoladeSpacing += 2 * StaveGroup.AccoladeLabelSpacing * this.layout.scale;\r\n                    this.width += this.accoladeSpacing;\r\n                }\r\n            }\r\n        }\r\n        getStaveTrackGroup(track) {\r\n            for (let i = 0, j = this.staves.length; i < j; i++) {\r\n                let g = this.staves[i];\r\n                if (g.track === track) {\r\n                    return g;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        addStaff(track, staff) {\r\n            let group = this.getStaveTrackGroup(track);\r\n            if (!group) {\r\n                group = new StaveTrackGroup(this, track);\r\n                this.staves.push(group);\r\n            }\r\n            staff.staveTrackGroup = group;\r\n            staff.staveGroup = this;\r\n            staff.index = this._allStaves.length;\r\n            this._allStaves.push(staff);\r\n            group.addStaff(staff);\r\n            if (staff.isInAccolade) {\r\n                if (!this._firstStaffInAccolade) {\r\n                    this._firstStaffInAccolade = staff;\r\n                    staff.isFirstInAccolade = true;\r\n                }\r\n                if (!group.firstStaffInAccolade) {\r\n                    group.firstStaffInAccolade = staff;\r\n                }\r\n                if (!this._lastStaffInAccolade) {\r\n                    this._lastStaffInAccolade = staff;\r\n                    staff.isLastInAccolade = true;\r\n                }\r\n                if (this._lastStaffInAccolade) {\r\n                    this._lastStaffInAccolade.isLastInAccolade = false;\r\n                }\r\n                this._lastStaffInAccolade = staff;\r\n                this._lastStaffInAccolade.isLastInAccolade = true;\r\n                group.lastStaffInAccolade = staff;\r\n            }\r\n        }\r\n        get height() {\r\n            return this._allStaves[this._allStaves.length - 1].y + this._allStaves[this._allStaves.length - 1].height;\r\n        }\r\n        scaleToWidth(width) {\r\n            for (let i = 0, j = this._allStaves.length; i < j; i++) {\r\n                this._allStaves[i].scaleToWidth(width);\r\n            }\r\n            this.width = width;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            this.paintPartial(cx + this.x, cy + this.y, canvas, 0, this.masterBarsRenderers.length);\r\n        }\r\n        paintPartial(cx, cy, canvas, startIndex, count) {\r\n            this.buildBoundingsLookup(cx, cy);\r\n            for (let i = 0, j = this._allStaves.length; i < j; i++) {\r\n                this._allStaves[i].paint(cx, cy, canvas, startIndex, count);\r\n            }\r\n            let res = this.layout.renderer.settings.display.resources;\r\n            if (this.staves.length > 0 && startIndex === 0) {\r\n                //\r\n                // Draw start grouping\r\n                //\r\n                canvas.color = res.barSeparatorColor;\r\n                if (this._firstStaffInAccolade && this._lastStaffInAccolade) {\r\n                    //\r\n                    // draw grouping line for all staves\r\n                    //\r\n                    let firstStart = cy +\r\n                        this._firstStaffInAccolade.y +\r\n                        this._firstStaffInAccolade.staveTop +\r\n                        this._firstStaffInAccolade.topSpacing +\r\n                        this._firstStaffInAccolade.topOverflow;\r\n                    let lastEnd = cy +\r\n                        this._lastStaffInAccolade.y +\r\n                        this._lastStaffInAccolade.topSpacing +\r\n                        this._lastStaffInAccolade.topOverflow +\r\n                        this._lastStaffInAccolade.staveBottom;\r\n                    let acooladeX = cx + this._firstStaffInAccolade.x;\r\n                    canvas.beginPath();\r\n                    canvas.moveTo(acooladeX, firstStart);\r\n                    canvas.lineTo(acooladeX, lastEnd);\r\n                    canvas.stroke();\r\n                }\r\n                //\r\n                // Draw accolade for each track group\r\n                //\r\n                canvas.font = res.effectFont;\r\n                for (let i = 0, j = this.staves.length; i < j; i++) {\r\n                    let g = this.staves[i];\r\n                    if (g.firstStaffInAccolade && g.lastStaffInAccolade) {\r\n                        let firstStart = cy +\r\n                            g.firstStaffInAccolade.y +\r\n                            g.firstStaffInAccolade.staveTop +\r\n                            g.firstStaffInAccolade.topSpacing +\r\n                            g.firstStaffInAccolade.topOverflow;\r\n                        let lastEnd = cy +\r\n                            g.lastStaffInAccolade.y +\r\n                            g.lastStaffInAccolade.topSpacing +\r\n                            g.lastStaffInAccolade.topOverflow +\r\n                            g.lastStaffInAccolade.staveBottom;\r\n                        let acooladeX = cx + g.firstStaffInAccolade.x;\r\n                        let barSize = 3 * this.layout.renderer.settings.display.scale;\r\n                        let barOffset = barSize;\r\n                        let accoladeStart = firstStart - barSize * 4;\r\n                        let accoladeEnd = lastEnd + barSize * 4;\r\n                        // text\r\n                        if (this.index === 0 && this.layout.renderer.settings.notation.isNotationElementVisible(NotationElement.TrackNames)) {\r\n                            canvas.fillText(g.track.shortName, cx + StaveGroup.AccoladeLabelSpacing * this.layout.scale, firstStart);\r\n                        }\r\n                        // rect\r\n                        canvas.fillRect(acooladeX - barOffset - barSize, accoladeStart, barSize, accoladeEnd - accoladeStart);\r\n                        let spikeStartX = acooladeX - barOffset - barSize;\r\n                        let spikeEndX = acooladeX + barSize * 2;\r\n                        // top spike\r\n                        canvas.beginPath();\r\n                        canvas.moveTo(spikeStartX, accoladeStart);\r\n                        canvas.bezierCurveTo(spikeStartX, accoladeStart, spikeStartX, accoladeStart, spikeEndX, accoladeStart - barSize);\r\n                        canvas.bezierCurveTo(acooladeX, accoladeStart + barSize, spikeStartX, accoladeStart + barSize, spikeStartX, accoladeStart + barSize);\r\n                        canvas.closePath();\r\n                        canvas.fill();\r\n                        // bottom spike\r\n                        canvas.beginPath();\r\n                        canvas.moveTo(spikeStartX, accoladeEnd);\r\n                        canvas.bezierCurveTo(spikeStartX, accoladeEnd, acooladeX, accoladeEnd, spikeEndX, accoladeEnd + barSize);\r\n                        canvas.bezierCurveTo(acooladeX, accoladeEnd - barSize, spikeStartX, accoladeEnd - barSize, spikeStartX, accoladeEnd - barSize);\r\n                        canvas.closePath();\r\n                        canvas.fill();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        finalizeGroup() {\r\n            let currentY = 0;\r\n            for (let staff of this._allStaves) {\r\n                staff.x = this.accoladeSpacing;\r\n                staff.y = currentY;\r\n                staff.finalizeStaff();\r\n                currentY += staff.height;\r\n            }\r\n        }\r\n        buildBoundingsLookup(cx, cy) {\r\n            if (this.layout.renderer.boundsLookup.isFinished) {\r\n                return;\r\n            }\r\n            if (!this._firstStaffInAccolade || !this._lastStaffInAccolade) {\r\n                return;\r\n            }\r\n            let lastStaff = this._allStaves[this._allStaves.length - 1];\r\n            let visualTop = cy + this.y + this._firstStaffInAccolade.y;\r\n            let visualBottom = cy + this.y + this._lastStaffInAccolade.y + this._lastStaffInAccolade.height;\r\n            let realTop = cy + this.y + this._allStaves[0].y;\r\n            let realBottom = cy + this.y + lastStaff.y + lastStaff.height;\r\n            let lineTop = cy +\r\n                this.y +\r\n                this._firstStaffInAccolade.y +\r\n                this._firstStaffInAccolade.topSpacing +\r\n                this._firstStaffInAccolade.topOverflow +\r\n                (this._firstStaffInAccolade.barRenderers.length > 0\r\n                    ? this._firstStaffInAccolade.barRenderers[0].topPadding\r\n                    : 0);\r\n            let lineBottom = cy +\r\n                this.y +\r\n                lastStaff.y +\r\n                lastStaff.height -\r\n                lastStaff.bottomSpacing -\r\n                lastStaff.bottomOverflow -\r\n                (lastStaff.barRenderers.length > 0 ? lastStaff.barRenderers[0].bottomPadding : 0);\r\n            let visualHeight = visualBottom - visualTop;\r\n            let lineHeight = lineBottom - lineTop;\r\n            let realHeight = realBottom - realTop;\r\n            let x = this.x + this._firstStaffInAccolade.x;\r\n            let staveGroupBounds = new StaveGroupBounds();\r\n            staveGroupBounds.visualBounds = new Bounds();\r\n            staveGroupBounds.visualBounds.x = cx;\r\n            staveGroupBounds.visualBounds.y = cy + this.y;\r\n            staveGroupBounds.visualBounds.w = this.width;\r\n            staveGroupBounds.visualBounds.h = this.height;\r\n            staveGroupBounds.realBounds = new Bounds();\r\n            staveGroupBounds.realBounds.x = cx;\r\n            staveGroupBounds.realBounds.y = cy + this.y;\r\n            staveGroupBounds.realBounds.w = this.width;\r\n            staveGroupBounds.realBounds.h = this.height;\r\n            this.layout.renderer.boundsLookup.addStaveGroup(staveGroupBounds);\r\n            let masterBarBoundsLookup = new Map();\r\n            for (let i = 0; i < this.staves.length; i++) {\r\n                for (let staff of this.staves[i].stavesRelevantForBoundsLookup) {\r\n                    for (let renderer of staff.barRenderers) {\r\n                        let masterBarBounds;\r\n                        if (!masterBarBoundsLookup.has(renderer.bar.masterBar.index)) {\r\n                            masterBarBounds = new MasterBarBounds();\r\n                            masterBarBounds.index = renderer.bar.masterBar.index;\r\n                            masterBarBounds.isFirstOfLine = renderer.isFirstOfLine;\r\n                            masterBarBounds.realBounds = new Bounds();\r\n                            masterBarBounds.realBounds.x = x + renderer.x;\r\n                            masterBarBounds.realBounds.y = realTop;\r\n                            masterBarBounds.realBounds.w = renderer.width;\r\n                            masterBarBounds.realBounds.h = realHeight;\r\n                            masterBarBounds.visualBounds = new Bounds();\r\n                            masterBarBounds.visualBounds.x = x + renderer.x;\r\n                            masterBarBounds.visualBounds.y = visualTop;\r\n                            masterBarBounds.visualBounds.w = renderer.width;\r\n                            masterBarBounds.visualBounds.h = visualHeight;\r\n                            masterBarBounds.lineAlignedBounds = new Bounds();\r\n                            masterBarBounds.lineAlignedBounds.x = x + renderer.x;\r\n                            masterBarBounds.lineAlignedBounds.y = lineTop;\r\n                            masterBarBounds.lineAlignedBounds.w = renderer.width;\r\n                            masterBarBounds.lineAlignedBounds.h = lineHeight;\r\n                            this.layout.renderer.boundsLookup.addMasterBar(masterBarBounds);\r\n                            masterBarBoundsLookup.set(masterBarBounds.index, masterBarBounds);\r\n                        }\r\n                        else {\r\n                            masterBarBounds = masterBarBoundsLookup.get(renderer.bar.masterBar.index);\r\n                        }\r\n                        renderer.buildBoundingsLookup(masterBarBounds, x, cy + this.y + staff.y);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        getBarX(index) {\r\n            if (!this._firstStaffInAccolade || this.layout.renderer.tracks.length === 0) {\r\n                return 0;\r\n            }\r\n            let bar = this.layout.renderer.tracks[0].staves[0].bars[index];\r\n            let renderer = this.layout.getRendererForBar(this._firstStaffInAccolade.staveId, bar);\r\n            return renderer.x;\r\n        }\r\n    }\r\n    StaveGroup.AccoladeLabelSpacing = 10;\n\n    class TuningGlyph extends GlyphGroup {\r\n        constructor(x, y, tuning, trackLabel) {\r\n            super(x, y);\r\n            this._tuning = tuning;\r\n            this._trackLabel = trackLabel;\r\n            this.glyphs = [];\r\n        }\r\n        doLayout() {\r\n            if (this.glyphs.length > 0) {\r\n                return;\r\n            }\r\n            this.createGlyphs(this._tuning);\r\n            for (const g of this.glyphs) {\r\n                g.renderer = this.renderer;\r\n                g.doLayout();\r\n            }\r\n        }\r\n        createGlyphs(tuning) {\r\n            const scale = this.renderer.scale;\r\n            const res = this.renderer.resources;\r\n            this.height = 0;\r\n            const rowHeight = 15 * scale;\r\n            // Track name\r\n            if (this._trackLabel.length > 0) {\r\n                this.addGlyph(new TextGlyph(0, this.height, this._trackLabel, res.effectFont, TextAlign.Left));\r\n                this.height += rowHeight;\r\n            }\r\n            // Name\r\n            this.addGlyph(new TextGlyph(0, this.height, tuning.name, res.effectFont, TextAlign.Left));\r\n            const stringColumnWidth = 64 * scale;\r\n            this.renderer.scoreRenderer.canvas.font = res.effectFont;\r\n            this.width = Math.max(this.renderer.scoreRenderer.canvas.measureText(this._trackLabel) * scale, Math.max(this.renderer.scoreRenderer.canvas.measureText(tuning.name) * scale, 2 * stringColumnWidth));\r\n            this.height += rowHeight;\r\n            if (!tuning.isStandard) {\r\n                const circleScale = 0.7;\r\n                const circleHeight = TuningGlyph.CircleNumberHeight * circleScale * scale;\r\n                // Strings\r\n                let stringsPerColumn = Math.ceil(tuning.tunings.length / 2.0) | 0;\r\n                let currentX = 0;\r\n                let currentY = this.height;\r\n                for (let i = 0, j = tuning.tunings.length; i < j; i++) {\r\n                    const symbol = (MusicFontSymbol.GuitarString0 + (i + 1));\r\n                    this.addGlyph(new MusicFontGlyph(currentX, currentY + circleHeight / 1.2, circleScale, symbol));\r\n                    const str = '= ' + Tuning.getTextForTuning(tuning.tunings[i], false);\r\n                    this.addGlyph(new TextGlyph(currentX + circleHeight + 1 * scale, currentY, str, res.effectFont, TextAlign.Left));\r\n                    currentY += rowHeight;\r\n                    if (i === stringsPerColumn - 1) {\r\n                        currentY = this.height;\r\n                        currentX += stringColumnWidth;\r\n                    }\r\n                }\r\n                this.height += stringsPerColumn * rowHeight;\r\n            }\r\n            this.width += 15 * scale;\r\n        }\r\n    }\r\n    /**\r\n     * The height of the GuitarString# glyphs at scale 1\r\n     */\r\n    TuningGlyph.CircleNumberHeight = 20;\n\n    class TuningContainerGlyph extends RowContainerGlyph {\r\n        constructor(x, y) {\r\n            super(x, y, TextAlign.Left);\r\n        }\r\n        addTuning(tuning, trackLabel) {\r\n            if (tuning.tunings.length > 0) {\r\n                let tuningGlyph = new TuningGlyph(0, 0, tuning, trackLabel);\r\n                tuningGlyph.renderer = this.renderer;\r\n                tuningGlyph.doLayout();\r\n                this.glyphs.push(tuningGlyph);\r\n            }\r\n        }\r\n    }\n\n    /**\r\n     * This is the base public class for creating new layouting engines for the score renderer.\r\n     */\r\n    class ScoreLayout {\r\n        constructor(renderer) {\r\n            this._barRendererLookup = new Map();\r\n            this.width = 0;\r\n            this.height = 0;\r\n            this.scoreInfoGlyphs = new Map();\r\n            this.chordDiagrams = null;\r\n            this.tuningGlyph = null;\r\n            this.firstBarIndex = 0;\r\n            this.lastBarIndex = 0;\r\n            this.renderer = renderer;\r\n        }\r\n        layoutAndRender() {\r\n            let score = this.renderer.score;\r\n            let startIndex = this.renderer.settings.display.startBar;\r\n            startIndex--; // map to array index\r\n            startIndex = Math.min(score.masterBars.length - 1, Math.max(0, startIndex));\r\n            this.firstBarIndex = startIndex;\r\n            let endBarIndex = this.renderer.settings.display.barCount;\r\n            if (endBarIndex < 0) {\r\n                endBarIndex = score.masterBars.length;\r\n            }\r\n            endBarIndex = startIndex + endBarIndex - 1; // map count to array index\r\n            endBarIndex = Math.min(score.masterBars.length - 1, Math.max(0, endBarIndex));\r\n            this.lastBarIndex = endBarIndex;\r\n            this.createScoreInfoGlyphs();\r\n            this.doLayoutAndRender();\r\n        }\r\n        createScoreInfoGlyphs() {\r\n            Logger.debug('ScoreLayout', 'Creating score info glyphs');\r\n            let notation = this.renderer.settings.notation;\r\n            let score = this.renderer.score;\r\n            let res = this.renderer.settings.display.resources;\r\n            this.scoreInfoGlyphs = new Map();\r\n            if (score.title && notation.isNotationElementVisible(NotationElement.ScoreTitle)) {\r\n                this.scoreInfoGlyphs.set(NotationElement.ScoreTitle, new TextGlyph(0, 0, score.title, res.titleFont, TextAlign.Center));\r\n            }\r\n            if (score.subTitle && notation.isNotationElementVisible(NotationElement.ScoreSubTitle)) {\r\n                this.scoreInfoGlyphs.set(NotationElement.ScoreSubTitle, new TextGlyph(0, 0, score.subTitle, res.subTitleFont, TextAlign.Center));\r\n            }\r\n            if (score.artist && notation.isNotationElementVisible(NotationElement.ScoreArtist)) {\r\n                this.scoreInfoGlyphs.set(NotationElement.ScoreArtist, new TextGlyph(0, 0, score.artist, res.subTitleFont, TextAlign.Center));\r\n            }\r\n            if (score.album && notation.isNotationElementVisible(NotationElement.ScoreAlbum)) {\r\n                this.scoreInfoGlyphs.set(NotationElement.ScoreAlbum, new TextGlyph(0, 0, score.album, res.subTitleFont, TextAlign.Center));\r\n            }\r\n            if (score.music &&\r\n                score.music === score.words &&\r\n                notation.isNotationElementVisible(NotationElement.ScoreWordsAndMusic)) {\r\n                this.scoreInfoGlyphs.set(NotationElement.ScoreWordsAndMusic, new TextGlyph(0, 0, 'Music and Words by ' + score.words, res.wordsFont, TextAlign.Center));\r\n            }\r\n            else {\r\n                if (score.music && notation.isNotationElementVisible(NotationElement.ScoreMusic)) {\r\n                    this.scoreInfoGlyphs.set(NotationElement.ScoreMusic, new TextGlyph(0, 0, 'Music by ' + score.music, res.wordsFont, TextAlign.Right));\r\n                }\r\n                if (score.words && notation.isNotationElementVisible(NotationElement.ScoreWords)) {\r\n                    this.scoreInfoGlyphs.set(NotationElement.ScoreWords, new TextGlyph(0, 0, 'Words by ' + score.words, res.wordsFont, TextAlign.Left));\r\n                }\r\n            }\r\n            const fakeBarRenderer = new BarRendererBase(this.renderer, this.renderer.tracks[0].staves[0].bars[0]);\r\n            if (notation.isNotationElementVisible(NotationElement.GuitarTuning)) {\r\n                let tunings = [];\r\n                for (let track of this.renderer.tracks) {\r\n                    for (let staff of track.staves) {\r\n                        if (!staff.isPercussion && staff.isStringed && staff.tuning.length > 0 && staff.showTablature) {\r\n                            tunings.push(staff);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                // tuning info\r\n                if (tunings.length > 0) {\r\n                    this.tuningGlyph = new TuningContainerGlyph(0, 0);\r\n                    this.tuningGlyph.renderer = fakeBarRenderer;\r\n                    for (const t of tunings) {\r\n                        this.tuningGlyph.addTuning(t.stringTuning, tunings.length > 1 ? t.track.name : '');\r\n                    }\r\n                }\r\n            }\r\n            // chord diagram glyphs\r\n            if (notation.isNotationElementVisible(NotationElement.ChordDiagrams)) {\r\n                this.chordDiagrams = new ChordDiagramContainerGlyph(0, 0);\r\n                this.chordDiagrams.renderer = fakeBarRenderer;\r\n                let chords = new Map();\r\n                for (let track of this.renderer.tracks) {\r\n                    for (let staff of track.staves) {\r\n                        for (const [chordId, chord] of staff.chords) {\r\n                            if (!chords.has(chordId)) {\r\n                                if (chord.showDiagram) {\r\n                                    chords.set(chordId, chord);\r\n                                    this.chordDiagrams.addChord(chord);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        get scale() {\r\n            return this.renderer.settings.display.scale;\r\n        }\r\n        createEmptyStaveGroup() {\r\n            let group = new StaveGroup();\r\n            group.layout = this;\r\n            for (let trackIndex = 0; trackIndex < this.renderer.tracks.length; trackIndex++) {\r\n                let track = this.renderer.tracks[trackIndex];\r\n                let hasScore = false;\r\n                for (let staff of track.staves) {\r\n                    if (staff.showStandardNotation) {\r\n                        hasScore = true;\r\n                        break;\r\n                    }\r\n                }\r\n                for (let staffIndex = 0; staffIndex < track.staves.length; staffIndex++) {\r\n                    let staff = track.staves[staffIndex];\r\n                    // use optimal profile for track\r\n                    let staveProfile;\r\n                    if (staff.isPercussion) {\r\n                        staveProfile = exports.StaveProfile.Score;\r\n                    }\r\n                    else if (this.renderer.settings.display.staveProfile !== exports.StaveProfile.Default) {\r\n                        staveProfile = this.renderer.settings.display.staveProfile;\r\n                    }\r\n                    else if (staff.showTablature && staff.showStandardNotation) {\r\n                        staveProfile = exports.StaveProfile.ScoreTab;\r\n                    }\r\n                    else if (staff.showTablature) {\r\n                        staveProfile = hasScore ? exports.StaveProfile.TabMixed : exports.StaveProfile.Tab;\r\n                    }\r\n                    else if (staff.showStandardNotation) {\r\n                        staveProfile = exports.StaveProfile.Score;\r\n                    }\r\n                    else {\r\n                        continue;\r\n                    }\r\n                    let profile = Environment.staveProfiles.get(staveProfile);\r\n                    for (let factory of profile) {\r\n                        if (factory.canCreate(track, staff)) {\r\n                            group.addStaff(track, new RenderStaff(trackIndex, staff, factory));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return group;\r\n        }\r\n        registerBarRenderer(key, renderer) {\r\n            if (!this._barRendererLookup.has(key)) {\r\n                this._barRendererLookup.set(key, new Map());\r\n            }\r\n            this._barRendererLookup.get(key).set(renderer.bar.id, renderer);\r\n        }\r\n        unregisterBarRenderer(key, renderer) {\r\n            if (this._barRendererLookup.has(key)) {\r\n                let lookup = this._barRendererLookup.get(key);\r\n                lookup.delete(renderer.bar.id);\r\n            }\r\n        }\r\n        getRendererForBar(key, bar) {\r\n            let barRendererId = bar.id;\r\n            if (this._barRendererLookup.has(key) && this._barRendererLookup.get(key).has(barRendererId)) {\r\n                return this._barRendererLookup.get(key).get(barRendererId);\r\n            }\r\n            return null;\r\n        }\r\n        renderAnnotation() {\r\n            // attention, you are not allowed to remove change this notice within any version of this library without permission!\r\n            let msg = 'rendered by alphaTab';\r\n            let canvas = this.renderer.canvas;\r\n            let resources = this.renderer.settings.display.resources;\r\n            let size = 12 * this.renderer.settings.display.scale;\r\n            let height = size * 2;\r\n            this.height += height;\r\n            let x = this.width / 2;\r\n            canvas.beginRender(this.width, height);\r\n            canvas.color = resources.mainGlyphColor;\r\n            canvas.font = new Font(resources.copyrightFont.family, size, FontStyle.Bold);\r\n            canvas.textAlign = TextAlign.Center;\r\n            canvas.fillText(msg, x, size);\r\n            let result = canvas.endRender();\r\n            let e = new RenderFinishedEventArgs();\r\n            e.width = this.width;\r\n            e.height = height;\r\n            e.renderResult = result;\r\n            e.totalWidth = this.width;\r\n            e.totalHeight = this.height;\r\n            e.firstMasterBarIndex = -1;\r\n            e.lastMasterBarIndex = -1;\r\n            this.renderer.partialRenderFinished.trigger(e);\r\n        }\r\n    }\n\n    class HorizontalScreenLayoutPartialInfo {\r\n        constructor() {\r\n            this.width = 0;\r\n            this.masterBars = [];\r\n        }\r\n    }\r\n    /**\r\n     * This layout arranges the bars all horizontally\r\n     */\r\n    class HorizontalScreenLayout extends ScoreLayout {\r\n        constructor(renderer) {\r\n            super(renderer);\r\n            this._group = null;\r\n            this._pagePadding = null;\r\n        }\r\n        get name() {\r\n            return 'HorizontalScreen';\r\n        }\r\n        get supportsResize() {\r\n            return false;\r\n        }\r\n        resize() { }\r\n        doLayoutAndRender() {\r\n            this._pagePadding = this.renderer.settings.display.padding;\r\n            if (!this._pagePadding) {\r\n                this._pagePadding = HorizontalScreenLayout.PagePadding;\r\n            }\r\n            if (this._pagePadding.length === 1) {\r\n                this._pagePadding = [\r\n                    this._pagePadding[0],\r\n                    this._pagePadding[0],\r\n                    this._pagePadding[0],\r\n                    this._pagePadding[0]\r\n                ];\r\n            }\r\n            else if (this._pagePadding.length === 2) {\r\n                this._pagePadding = [\r\n                    this._pagePadding[0],\r\n                    this._pagePadding[1],\r\n                    this._pagePadding[0],\r\n                    this._pagePadding[1]\r\n                ];\r\n            }\r\n            let score = this.renderer.score;\r\n            let canvas = this.renderer.canvas;\r\n            let startIndex = this.renderer.settings.display.startBar;\r\n            startIndex--; // map to array index\r\n            startIndex = Math.min(score.masterBars.length - 1, Math.max(0, startIndex));\r\n            let currentBarIndex = startIndex;\r\n            let endBarIndex = this.renderer.settings.display.barCount;\r\n            if (endBarIndex <= 0) {\r\n                endBarIndex = score.masterBars.length;\r\n            }\r\n            endBarIndex = startIndex + endBarIndex - 1; // map count to array index\r\n            endBarIndex = Math.min(score.masterBars.length - 1, Math.max(0, endBarIndex));\r\n            this._group = this.createEmptyStaveGroup();\r\n            this._group.isLast = true;\r\n            this._group.x = this._pagePadding[0];\r\n            this._group.y = this._pagePadding[1];\r\n            let countPerPartial = this.renderer.settings.display.barCountPerPartial;\r\n            let partials = [];\r\n            let currentPartial = new HorizontalScreenLayoutPartialInfo();\r\n            while (currentBarIndex <= endBarIndex) {\r\n                let result = this._group.addBars(this.renderer.tracks, currentBarIndex);\r\n                if (result) {\r\n                    // if we detect that the new renderer is linked to the previous\r\n                    // renderer, we need to put it into the previous partial\r\n                    if (currentPartial.masterBars.length === 0 && result.isLinkedToPrevious && partials.length > 0) {\r\n                        let previousPartial = partials[partials.length - 1];\r\n                        previousPartial.masterBars.push(score.masterBars[currentBarIndex]);\r\n                        previousPartial.width += result.width;\r\n                    }\r\n                    else {\r\n                        currentPartial.masterBars.push(score.masterBars[currentBarIndex]);\r\n                        currentPartial.width += result.width;\r\n                        // no targetPartial here because previous partials already handled this code\r\n                        if (currentPartial.masterBars.length >= countPerPartial) {\r\n                            if (partials.length === 0) {\r\n                                currentPartial.width += this._group.x + this._group.accoladeSpacing;\r\n                            }\r\n                            partials.push(currentPartial);\r\n                            Logger.debug(this.name, 'Finished partial from bar ' +\r\n                                currentPartial.masterBars[0].index +\r\n                                ' to ' +\r\n                                currentPartial.masterBars[currentPartial.masterBars.length - 1].index, null);\r\n                            currentPartial = new HorizontalScreenLayoutPartialInfo();\r\n                        }\r\n                    }\r\n                }\r\n                currentBarIndex++;\r\n            }\r\n            // don't miss the last partial if not empty\r\n            if (currentPartial.masterBars.length > 0) {\r\n                if (partials.length === 0) {\r\n                    currentPartial.width += this._group.x + this._group.accoladeSpacing;\r\n                }\r\n                partials.push(currentPartial);\r\n                Logger.debug(this.name, 'Finished partial from bar ' +\r\n                    currentPartial.masterBars[0].index +\r\n                    ' to ' +\r\n                    currentPartial.masterBars[currentPartial.masterBars.length - 1].index, null);\r\n            }\r\n            this._group.finalizeGroup();\r\n            this.height = this._group.y + this._group.height + this._pagePadding[3];\r\n            this.width = this._group.x + this._group.width + this._pagePadding[2];\r\n            currentBarIndex = 0;\r\n            for (let i = 0; i < partials.length; i++) {\r\n                let partial = partials[i];\r\n                canvas.beginRender(partial.width, this.height);\r\n                canvas.color = this.renderer.settings.display.resources.mainGlyphColor;\r\n                canvas.textAlign = TextAlign.Left;\r\n                let renderX = this._group.getBarX(partial.masterBars[0].index) + this._group.accoladeSpacing;\r\n                if (i === 0) {\r\n                    renderX -= this._group.x + this._group.accoladeSpacing;\r\n                }\r\n                Logger.debug(this.name, 'Rendering partial from bar ' +\r\n                    partial.masterBars[0].index +\r\n                    ' to ' +\r\n                    partial.masterBars[partial.masterBars.length - 1].index, null);\r\n                this._group.paintPartial(-renderX, this._group.y, this.renderer.canvas, currentBarIndex, partial.masterBars.length);\r\n                let result = canvas.endRender();\r\n                let e = new RenderFinishedEventArgs();\r\n                e.totalWidth = this.width;\r\n                e.totalHeight = this.height;\r\n                e.width = partial.width;\r\n                e.height = this.height;\r\n                e.renderResult = result;\r\n                e.firstMasterBarIndex = partial.masterBars[0].index;\r\n                e.lastMasterBarIndex = partial.masterBars[partial.masterBars.length - 1].index;\r\n                this.renderer.partialRenderFinished.trigger(e);\r\n                currentBarIndex += partial.masterBars.length;\r\n            }\r\n        }\r\n    }\r\n    HorizontalScreenLayout.PagePadding = [20, 20, 20, 20];\r\n    HorizontalScreenLayout.GroupSpacing = 20;\n\n    /**\r\n     * This layout arranges the bars into a fixed width and dynamic height region.\r\n     */\r\n    class PageViewLayout extends ScoreLayout {\r\n        constructor(renderer) {\r\n            super(renderer);\r\n            this._groups = [];\r\n            this._allMasterBarRenderers = [];\r\n            this._barsFromPreviousGroup = [];\r\n            this._pagePadding = null;\r\n        }\r\n        get name() {\r\n            return 'PageView';\r\n        }\r\n        doLayoutAndRender() {\r\n            this._pagePadding = this.renderer.settings.display.padding;\r\n            if (!this._pagePadding) {\r\n                this._pagePadding = PageViewLayout.PagePadding;\r\n            }\r\n            if (this._pagePadding.length === 1) {\r\n                this._pagePadding = [\r\n                    this._pagePadding[0],\r\n                    this._pagePadding[0],\r\n                    this._pagePadding[0],\r\n                    this._pagePadding[0]\r\n                ];\r\n            }\r\n            else if (this._pagePadding.length === 2) {\r\n                this._pagePadding = [\r\n                    this._pagePadding[0],\r\n                    this._pagePadding[1],\r\n                    this._pagePadding[0],\r\n                    this._pagePadding[1]\r\n                ];\r\n            }\r\n            let x = this._pagePadding[0];\r\n            let y = this._pagePadding[1];\r\n            this.width = this.renderer.width;\r\n            this._allMasterBarRenderers = [];\r\n            //\r\n            // 1. Score Info\r\n            y = this.layoutAndRenderScoreInfo(x, y, -1);\r\n            //\r\n            // 2. Tunings\r\n            y = this.layoutAndRenderTunings(y, -1);\r\n            //\r\n            // 3. Chord Diagrms\r\n            y = this.layoutAndRenderChordDiagrams(y, -1);\r\n            //\r\n            // 4. One result per StaveGroup\r\n            y = this.layoutAndRenderScore(x, y);\r\n            this.height = y + this._pagePadding[3];\r\n        }\r\n        get supportsResize() {\r\n            return true;\r\n        }\r\n        resize() {\r\n            let x = this._pagePadding[0];\r\n            let y = this._pagePadding[1];\r\n            this.width = this.renderer.width;\r\n            let oldHeight = this.height;\r\n            //\r\n            // 1. Score Info\r\n            y = this.layoutAndRenderScoreInfo(x, y, oldHeight);\r\n            //\r\n            // 2. Tunings\r\n            y = this.layoutAndRenderTunings(y, oldHeight);\r\n            //\r\n            // 3. Chord Digrams\r\n            y = this.layoutAndRenderChordDiagrams(y, oldHeight);\r\n            //\r\n            // 4. One result per StaveGroup\r\n            y = this.resizeAndRenderScore(x, y, oldHeight);\r\n            this.height = y + this._pagePadding[3];\r\n        }\r\n        layoutAndRenderTunings(y, totalHeight = -1) {\r\n            if (!this.tuningGlyph) {\r\n                return y;\r\n            }\r\n            let res = this.renderer.settings.display.resources;\r\n            this.tuningGlyph.width = this.width;\r\n            this.tuningGlyph.doLayout();\r\n            let tuningHeight = this.tuningGlyph.height + 11 * this.scale;\r\n            y += tuningHeight;\r\n            let canvas = this.renderer.canvas;\r\n            canvas.beginRender(this.width, tuningHeight);\r\n            canvas.color = res.scoreInfoColor;\r\n            canvas.textAlign = TextAlign.Center;\r\n            this.tuningGlyph.paint(this._pagePadding[0], 0, canvas);\r\n            let result = canvas.endRender();\r\n            let e = new RenderFinishedEventArgs();\r\n            e.width = this.width;\r\n            e.height = tuningHeight;\r\n            e.renderResult = result;\r\n            e.totalWidth = this.width;\r\n            e.totalHeight = totalHeight < 0 ? y : totalHeight;\r\n            e.firstMasterBarIndex = -1;\r\n            e.lastMasterBarIndex = -1;\r\n            this.renderer.partialRenderFinished.trigger(e);\r\n            return y;\r\n        }\r\n        layoutAndRenderChordDiagrams(y, totalHeight = -1) {\r\n            if (!this.chordDiagrams) {\r\n                return y;\r\n            }\r\n            let res = this.renderer.settings.display.resources;\r\n            this.chordDiagrams.width = this.width;\r\n            this.chordDiagrams.doLayout();\r\n            let canvas = this.renderer.canvas;\r\n            canvas.beginRender(this.width, this.chordDiagrams.height);\r\n            canvas.color = res.scoreInfoColor;\r\n            canvas.textAlign = TextAlign.Center;\r\n            this.chordDiagrams.paint(0, 0, canvas);\r\n            let result = canvas.endRender();\r\n            y += this.chordDiagrams.height;\r\n            let e = new RenderFinishedEventArgs();\r\n            e.width = this.width;\r\n            e.height = this.chordDiagrams.height;\r\n            e.renderResult = result;\r\n            e.totalWidth = this.width;\r\n            e.totalHeight = totalHeight < 0 ? y : totalHeight;\r\n            e.firstMasterBarIndex = -1;\r\n            e.lastMasterBarIndex = -1;\r\n            this.renderer.partialRenderFinished.trigger(e);\r\n            return y;\r\n        }\r\n        layoutAndRenderScoreInfo(x, y, totalHeight = -1) {\r\n            Logger.debug(this.name, 'Layouting score info');\r\n            let scale = this.scale;\r\n            let res = this.renderer.settings.display.resources;\r\n            let centeredGlyphs = [\r\n                NotationElement.ScoreTitle,\r\n                NotationElement.ScoreSubTitle,\r\n                NotationElement.ScoreArtist,\r\n                NotationElement.ScoreAlbum,\r\n                NotationElement.ScoreWordsAndMusic\r\n            ];\r\n            for (let i = 0; i < centeredGlyphs.length; i++) {\r\n                if (this.scoreInfoGlyphs.has(centeredGlyphs[i])) {\r\n                    let glyph = this.scoreInfoGlyphs.get(centeredGlyphs[i]);\r\n                    glyph.x = this.width / 2;\r\n                    glyph.y = y;\r\n                    glyph.textAlign = TextAlign.Center;\r\n                    y += glyph.font.size * scale;\r\n                }\r\n            }\r\n            let musicOrWords = false;\r\n            let musicOrWordsHeight = 0;\r\n            if (this.scoreInfoGlyphs.has(NotationElement.ScoreMusic)) {\r\n                let glyph = this.scoreInfoGlyphs.get(NotationElement.ScoreMusic);\r\n                glyph.x = this.width - this._pagePadding[2];\r\n                glyph.y = y;\r\n                glyph.textAlign = TextAlign.Right;\r\n                musicOrWords = true;\r\n                musicOrWordsHeight = glyph.font.size * scale;\r\n            }\r\n            if (this.scoreInfoGlyphs.has(NotationElement.ScoreWords)) {\r\n                let glyph = this.scoreInfoGlyphs.get(NotationElement.ScoreWords);\r\n                glyph.x = x;\r\n                glyph.y = y;\r\n                glyph.textAlign = TextAlign.Left;\r\n                musicOrWords = true;\r\n                musicOrWordsHeight = glyph.font.size * scale;\r\n            }\r\n            if (musicOrWords) {\r\n                y += musicOrWordsHeight;\r\n            }\r\n            y += 17 * this.scale;\r\n            let canvas = this.renderer.canvas;\r\n            canvas.beginRender(this.width, y);\r\n            canvas.color = res.scoreInfoColor;\r\n            canvas.textAlign = TextAlign.Center;\r\n            for (const g of this.scoreInfoGlyphs.values()) {\r\n                g.paint(0, 0, canvas);\r\n            }\r\n            let result = canvas.endRender();\r\n            let e = new RenderFinishedEventArgs();\r\n            e.width = this.width;\r\n            e.height = y;\r\n            e.renderResult = result;\r\n            e.totalWidth = this.width;\r\n            e.totalHeight = totalHeight < 0 ? y : totalHeight;\r\n            e.firstMasterBarIndex = -1;\r\n            e.lastMasterBarIndex = -1;\r\n            this.renderer.partialRenderFinished.trigger(e);\r\n            return y;\r\n        }\r\n        resizeAndRenderScore(x, y, oldHeight) {\r\n            let canvas = this.renderer.canvas;\r\n            // if we have a fixed number of bars per row, we only need to refit them.\r\n            if (this.renderer.settings.display.barsPerRow !== -1) {\r\n                for (let i = 0; i < this._groups.length; i++) {\r\n                    let group = this._groups[i];\r\n                    this.fitGroup(group);\r\n                    group.finalizeGroup();\r\n                    y += this.paintGroup(group, oldHeight, canvas);\r\n                }\r\n            }\r\n            else {\r\n                this._groups = [];\r\n                let currentIndex = 0;\r\n                let maxWidth = this.maxWidth;\r\n                let group = this.createEmptyStaveGroup();\r\n                group.index = this._groups.length;\r\n                group.x = x;\r\n                group.y = y;\r\n                while (currentIndex < this._allMasterBarRenderers.length) {\r\n                    // if the current renderer still has space in the current group add it\r\n                    // also force adding in case the group is empty\r\n                    let renderers = this._allMasterBarRenderers[currentIndex];\r\n                    if (group.width + renderers.width <= maxWidth || group.masterBarsRenderers.length === 0) {\r\n                        group.addMasterBarRenderers(this.renderer.tracks, renderers);\r\n                        // move to next group\r\n                        currentIndex++;\r\n                    }\r\n                    else {\r\n                        // if we cannot wrap on the current bar, we remove the last bar\r\n                        // (this might even remove multiple ones until we reach a bar that can wrap);\r\n                        while (renderers && !renderers.canWrap && group.masterBarsRenderers.length > 1) {\r\n                            renderers = group.revertLastBar();\r\n                            currentIndex--;\r\n                        }\r\n                        // in case we do not have space, we create a new group\r\n                        group.isFull = true;\r\n                        group.isLast = this.lastBarIndex === group.lastBarIndex;\r\n                        this._groups.push(group);\r\n                        this.fitGroup(group);\r\n                        group.finalizeGroup();\r\n                        y += this.paintGroup(group, oldHeight, canvas);\r\n                        // note: we do not increase currentIndex here to have it added to the next group\r\n                        group = this.createEmptyStaveGroup();\r\n                        group.index = this._groups.length;\r\n                        group.x = x;\r\n                        group.y = y;\r\n                    }\r\n                }\r\n                group.isLast = this.lastBarIndex === group.lastBarIndex;\r\n                // don't forget to finish the last group\r\n                this.fitGroup(group);\r\n                group.finalizeGroup();\r\n                y += this.paintGroup(group, oldHeight, canvas);\r\n            }\r\n            return y;\r\n        }\r\n        layoutAndRenderScore(x, y) {\r\n            let canvas = this.renderer.canvas;\r\n            let startIndex = this.firstBarIndex;\r\n            let currentBarIndex = startIndex;\r\n            let endBarIndex = this.lastBarIndex;\r\n            this._groups = [];\r\n            while (currentBarIndex <= endBarIndex) {\r\n                // create group and align set proper coordinates\r\n                let group = this.createStaveGroup(currentBarIndex, endBarIndex);\r\n                this._groups.push(group);\r\n                group.x = x;\r\n                group.y = y;\r\n                currentBarIndex = group.lastBarIndex + 1;\r\n                // finalize group (sizing etc).\r\n                this.fitGroup(group);\r\n                group.finalizeGroup();\r\n                Logger.debug(this.name, 'Rendering partial from bar ' + group.firstBarIndex + ' to ' + group.lastBarIndex, null);\r\n                y += this.paintGroup(group, y, canvas);\r\n            }\r\n            return y;\r\n        }\r\n        paintGroup(group, totalHeight, canvas) {\r\n            // paint into canvas\r\n            let height = group.height + 20 * this.scale;\r\n            canvas.beginRender(this.width, height);\r\n            this.renderer.canvas.color = this.renderer.settings.display.resources.mainGlyphColor;\r\n            this.renderer.canvas.textAlign = TextAlign.Left;\r\n            // NOTE: we use this negation trick to make the group paint itself to 0/0 coordinates\r\n            // since we use partial drawing\r\n            group.paint(0, -group.y, canvas);\r\n            // calculate coordinates for next group\r\n            totalHeight += height;\r\n            let result = canvas.endRender();\r\n            let args = new RenderFinishedEventArgs();\r\n            args.totalWidth = this.width;\r\n            args.totalHeight = totalHeight;\r\n            args.width = this.width;\r\n            args.height = height;\r\n            args.renderResult = result;\r\n            args.firstMasterBarIndex = group.firstBarIndex;\r\n            args.lastMasterBarIndex = group.lastBarIndex;\r\n            this.renderer.partialRenderFinished.trigger(args);\r\n            return height;\r\n        }\r\n        /**\r\n         * Realignes the bars in this line according to the available space\r\n         */\r\n        fitGroup(group) {\r\n            if (group.isFull || group.width > this.maxWidth) {\r\n                group.scaleToWidth(this.maxWidth);\r\n            }\r\n            this.width = Math.max(this.width, group.width);\r\n        }\r\n        createStaveGroup(currentBarIndex, endIndex) {\r\n            let group = this.createEmptyStaveGroup();\r\n            group.index = this._groups.length;\r\n            let barsPerRow = this.renderer.settings.display.barsPerRow;\r\n            let maxWidth = this.maxWidth;\r\n            let end = endIndex + 1;\r\n            for (let i = currentBarIndex; i < end; i++) {\r\n                if (this._barsFromPreviousGroup.length > 0) {\r\n                    for (let renderer of this._barsFromPreviousGroup) {\r\n                        group.addMasterBarRenderers(this.renderer.tracks, renderer);\r\n                        i = renderer.masterBar.index;\r\n                    }\r\n                }\r\n                else {\r\n                    let renderers = group.addBars(this.renderer.tracks, i);\r\n                    if (renderers) {\r\n                        this._allMasterBarRenderers.push(renderers);\r\n                    }\r\n                }\r\n                this._barsFromPreviousGroup = [];\r\n                let groupIsFull = false;\r\n                // can bar placed in this line?\r\n                if (barsPerRow === -1 && group.width >= maxWidth && group.masterBarsRenderers.length !== 0) {\r\n                    groupIsFull = true;\r\n                }\r\n                else if (group.masterBarsRenderers.length === barsPerRow + 1) {\r\n                    groupIsFull = true;\r\n                }\r\n                if (groupIsFull) {\r\n                    let reverted = group.revertLastBar();\r\n                    if (reverted) {\r\n                        this._barsFromPreviousGroup.push(reverted);\r\n                        while (reverted && !reverted.canWrap && group.masterBarsRenderers.length > 1) {\r\n                            reverted = group.revertLastBar();\r\n                            if (reverted) {\r\n                                this._barsFromPreviousGroup.push(reverted);\r\n                            }\r\n                        }\r\n                    }\r\n                    group.isFull = true;\r\n                    group.isLast = false;\r\n                    this._barsFromPreviousGroup.reverse();\r\n                    return group;\r\n                }\r\n                group.x = 0;\r\n            }\r\n            group.isLast = endIndex === group.lastBarIndex;\r\n            return group;\r\n        }\r\n        get maxWidth() {\r\n            return this.renderer.width - this._pagePadding[0] - this._pagePadding[2];\r\n        }\r\n    }\r\n    PageViewLayout.PagePadding = [40, 40, 40, 40];\r\n    PageViewLayout.GroupSpacing = 20;\n\n    class AccidentalGlyph extends MusicFontGlyph {\r\n        constructor(x, y, accidentalType, isGrace = false) {\r\n            super(x, y, isGrace ? NoteHeadGlyph.GraceScale : 1, AccidentalGlyph.getMusicSymbol(accidentalType));\r\n            this._isGrace = isGrace;\r\n            this._accidentalType = accidentalType;\r\n        }\r\n        static getMusicSymbol(accidentalType) {\r\n            switch (accidentalType) {\r\n                case AccidentalType.Natural:\r\n                    return MusicFontSymbol.AccidentalNatural;\r\n                case AccidentalType.Sharp:\r\n                    return MusicFontSymbol.AccidentalSharp;\r\n                case AccidentalType.Flat:\r\n                    return MusicFontSymbol.AccidentalFlat;\r\n                case AccidentalType.NaturalQuarterNoteUp:\r\n                    return MusicFontSymbol.AccidentalQuarterToneNaturalArrowUp;\r\n                case AccidentalType.SharpQuarterNoteUp:\r\n                    return MusicFontSymbol.AccidentalQuarterToneSharpArrowUp;\r\n                case AccidentalType.FlatQuarterNoteUp:\r\n                    return MusicFontSymbol.AccidentalQuarterToneFlatArrowUp;\r\n                case AccidentalType.DoubleSharp:\r\n                    return MusicFontSymbol.AccidentalDoubleSharp;\r\n                case AccidentalType.DoubleFlat:\r\n                    return MusicFontSymbol.AccidentalDoubleFlat;\r\n            }\r\n            return MusicFontSymbol.None;\r\n        }\r\n        doLayout() {\r\n            switch (this._accidentalType) {\r\n                case AccidentalType.DoubleFlat:\r\n                    this.width = 18;\r\n                    break;\r\n                default:\r\n                    this.width = 8;\r\n                    break;\r\n            }\r\n            this.width = this.width * (this._isGrace ? NoteHeadGlyph.GraceScale : 1) * this.scale;\r\n        }\r\n    }\n\n    class BarNumberGlyph extends Glyph {\r\n        constructor(x, y, num) {\r\n            super(x, y);\r\n            this._number = 0;\r\n            this._number = num;\r\n        }\r\n        doLayout() {\r\n            this.renderer.scoreRenderer.canvas.font = this.renderer.resources.barNumberFont;\r\n            this.width = this.renderer.scoreRenderer.canvas.measureText(this._number.toString()) + 5 * this.scale;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            if (!this.renderer.staff.isFirstInAccolade) {\r\n                return;\r\n            }\r\n            let res = this.renderer.resources;\r\n            let c = canvas.color;\r\n            canvas.color = res.barNumberColor;\r\n            canvas.font = res.barNumberFont;\r\n            canvas.fillText(this._number.toString(), cx + this.x, cy + this.y);\r\n            canvas.color = c;\r\n        }\r\n    }\n\n    class BarSeperatorGlyph extends Glyph {\r\n        constructor(x, y) {\r\n            super(x, y);\r\n        }\r\n        doLayout() {\r\n            if (this.renderer.isLast) {\r\n                this.width = 15 * this.scale;\r\n            }\r\n            else if (!this.renderer.nextRenderer ||\r\n                this.renderer.nextRenderer.staff !== this.renderer.staff ||\r\n                !this.renderer.nextRenderer.bar.masterBar.isRepeatStart) {\r\n                this.width = 2 * this.scale;\r\n                if (this.renderer.bar.masterBar.isDoubleBar) {\r\n                    this.width += 2 * this.scale;\r\n                }\r\n            }\r\n            else {\r\n                this.width = 2 * this.scale;\r\n            }\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            let blockWidth = 4 * this.scale;\r\n            let top = cy + this.y + this.renderer.topPadding;\r\n            let bottom = cy + this.y + this.renderer.height - this.renderer.bottomPadding;\r\n            let left = cx + this.x;\r\n            let h = bottom - top;\r\n            if (this.renderer.isLast) {\r\n                // small bar\r\n                canvas.fillRect(left + this.width - blockWidth - blockWidth, top, this.scale, h);\r\n                // big bar\r\n                canvas.fillRect(left + this.width - blockWidth, top, blockWidth, h);\r\n            }\r\n            else if (!this.renderer.nextRenderer ||\r\n                this.renderer.nextRenderer.staff !== this.renderer.staff ||\r\n                !this.renderer.nextRenderer.bar.masterBar.isRepeatStart) {\r\n                // small bar\r\n                canvas.fillRect(left + this.width - this.scale, top, this.scale, h);\r\n                if (this.renderer.bar.masterBar.isDoubleBar) {\r\n                    canvas.fillRect(left + this.width - 5 * this.scale, top, this.scale, h);\r\n                }\r\n            }\r\n        }\r\n    }\n\n    class ClefGlyph extends MusicFontGlyph {\r\n        constructor(x, y, clef, clefOttava) {\r\n            super(x, y, 1, ClefGlyph.getSymbol(clef));\r\n            this._clef = clef;\r\n            this._clefOttava = clefOttava;\r\n        }\r\n        doLayout() {\r\n            switch (this._clef) {\r\n                case Clef.Neutral:\r\n                    this.width = 15 * this.scale;\r\n                    break;\r\n                case Clef.C3:\r\n                case Clef.C4:\r\n                case Clef.F4:\r\n                case Clef.G2:\r\n                    this.width = 28 * this.scale;\r\n                    break;\r\n            }\r\n        }\r\n        static getSymbol(clef) {\r\n            switch (clef) {\r\n                case Clef.Neutral:\r\n                    return MusicFontSymbol.UnpitchedPercussionClef1;\r\n                case Clef.C3:\r\n                    return MusicFontSymbol.CClef;\r\n                case Clef.C4:\r\n                    return MusicFontSymbol.CClef;\r\n                case Clef.F4:\r\n                    return MusicFontSymbol.FClef;\r\n                case Clef.G2:\r\n                    return MusicFontSymbol.GClef;\r\n                default:\r\n                    return MusicFontSymbol.None;\r\n            }\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            super.paint(cx, cy, canvas);\r\n            let numberGlyph;\r\n            let top = false;\r\n            switch (this._clefOttava) {\r\n                case Ottavia._15ma:\r\n                    numberGlyph = new MusicFontGlyph(-4 * this.scale, 0, 0.5, MusicFontSymbol.Quindicesima);\r\n                    top = true;\r\n                    break;\r\n                case Ottavia._8va:\r\n                    numberGlyph = new MusicFontGlyph(-2 * this.scale, 0, 0.5, MusicFontSymbol.Ottava);\r\n                    top = true;\r\n                    break;\r\n                case Ottavia._8vb:\r\n                    numberGlyph = new MusicFontGlyph(-6 * this.scale, 0, 0.5, MusicFontSymbol.Ottava);\r\n                    break;\r\n                case Ottavia._15mb:\r\n                    numberGlyph = new MusicFontGlyph(-8 * this.scale, 0, 0.5, MusicFontSymbol.Quindicesima);\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            let offsetY = 0;\r\n            let offsetX = 0;\r\n            switch (this._clef) {\r\n                case Clef.Neutral:\r\n                    offsetY = top ? -12 : 15;\r\n                    offsetX = 0;\r\n                    break;\r\n                case Clef.C3:\r\n                    offsetY = top ? -19 : 27;\r\n                    offsetX = 0;\r\n                    break;\r\n                case Clef.C4:\r\n                    offsetY = top ? -19 : 27;\r\n                    offsetX = 0;\r\n                    break;\r\n                case Clef.F4:\r\n                    offsetY = top ? -9 : 27;\r\n                    offsetX = -4;\r\n                    break;\r\n                case Clef.G2:\r\n                    offsetY = top ? -37 : 30;\r\n                    offsetX = 0;\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            numberGlyph.renderer = this.renderer;\r\n            numberGlyph.doLayout();\r\n            let x = this.width / 2;\r\n            numberGlyph.paint(cx + this.x + x + offsetX * this.scale, cy + this.y + offsetY * this.scale, canvas);\r\n        }\r\n    }\n\n    class RepeatCloseGlyph extends Glyph {\r\n        constructor(x, y) {\r\n            super(x, y);\r\n        }\r\n        doLayout() {\r\n            this.width = 11 * this.scale;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            let blockWidth = 4 * this.scale;\r\n            let top = cy + this.y + this.renderer.topPadding;\r\n            let bottom = cy + this.y + this.renderer.height - this.renderer.bottomPadding;\r\n            let left = cx + this.x;\r\n            let h = bottom - top;\r\n            // circles\r\n            let circleSize = 1.5 * this.scale;\r\n            let middle = (top + bottom) / 2;\r\n            let dotOffset = 3;\r\n            canvas.fillCircle(left, middle - circleSize * dotOffset, circleSize);\r\n            canvas.fillCircle(left, middle + circleSize * dotOffset, circleSize);\r\n            // line\r\n            left += 4 * this.scale;\r\n            canvas.beginPath();\r\n            canvas.moveTo(left, top);\r\n            canvas.lineTo(left, bottom);\r\n            canvas.stroke();\r\n            // big bar\r\n            left += 3 * this.scale + 0.5;\r\n            canvas.fillRect(left, top, blockWidth, h);\r\n        }\r\n    }\n\n    class RepeatCountGlyph extends Glyph {\r\n        constructor(x, y, count) {\r\n            super(x, y);\r\n            this._count = 0;\r\n            this._count = 0;\r\n            this._count = count;\r\n        }\r\n        doLayout() {\r\n            this.width = 0;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            let res = this.renderer.resources;\r\n            let oldAlign = canvas.textAlign;\r\n            canvas.font = res.barNumberFont;\r\n            canvas.textAlign = TextAlign.Right;\r\n            let s = 'x' + this._count;\r\n            let w = canvas.measureText(s) / 1.5;\r\n            canvas.fillText(s, cx + this.x - w, cy + this.y);\r\n            canvas.textAlign = oldAlign;\r\n        }\r\n    }\n\n    class RepeatOpenGlyph extends Glyph {\r\n        constructor(x, y, circleSize, dotOffset) {\r\n            super(x, y);\r\n            this._dotOffset = 0;\r\n            this._circleSize = 0;\r\n            this._dotOffset = 0.0;\r\n            this._circleSize = 0.0;\r\n            this._dotOffset = dotOffset;\r\n            this._circleSize = circleSize;\r\n        }\r\n        doLayout() {\r\n            this.width = 13 * this.scale;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            let blockWidth = 4 * this.scale;\r\n            let top = cy + this.y + this.renderer.topPadding;\r\n            let bottom = cy + this.y + this.renderer.height - this.renderer.bottomPadding;\r\n            let left = cx + this.x + 0.5;\r\n            // big bar\r\n            let h = bottom - top;\r\n            canvas.fillRect(left, top, blockWidth, h);\r\n            // line\r\n            left += blockWidth * 2 - 0.5;\r\n            canvas.beginPath();\r\n            canvas.moveTo(left, top);\r\n            canvas.lineTo(left, bottom);\r\n            canvas.stroke();\r\n            // circles\r\n            left += 3 * this.scale;\r\n            let circleSize = this._circleSize * this.scale;\r\n            let middle = (top + bottom) / 2;\r\n            canvas.fillCircle(left, middle - circleSize * this._dotOffset, circleSize);\r\n            canvas.fillCircle(left, middle + circleSize * this._dotOffset, circleSize);\r\n        }\r\n    }\n\n    class AccentuationGlyph extends MusicFontGlyph {\r\n        constructor(x, y, accentuation) {\r\n            super(x, y, 1, AccentuationGlyph.getSymbol(accentuation));\r\n        }\r\n        static getSymbol(accentuation) {\r\n            switch (accentuation) {\r\n                case AccentuationType.None:\r\n                    return MusicFontSymbol.None;\r\n                case AccentuationType.Normal:\r\n                    return MusicFontSymbol.ArticAccentAbove;\r\n                case AccentuationType.Heavy:\r\n                    return MusicFontSymbol.ArticMarcatoAbove;\r\n                default:\r\n                    return MusicFontSymbol.None;\r\n            }\r\n        }\r\n        doLayout() {\r\n            this.width = 9 * this.scale;\r\n            this.height = 9 * this.scale;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            super.paint(cx - 2 * this.scale, cy + this.height, canvas);\r\n        }\r\n    }\n\n    class CircleGlyph extends Glyph {\r\n        constructor(x, y, size) {\r\n            super(x, y);\r\n            this._size = 0;\r\n            this._size = size;\r\n        }\r\n        doLayout() {\r\n            this.width = this._size + 3 * this.scale;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            canvas.fillCircle(cx + this.x, cy + this.y, this._size);\r\n        }\r\n    }\n\n    class DeadNoteHeadGlyph extends MusicFontGlyph {\r\n        constructor(x, y, isGrace) {\r\n            super(x, y, isGrace ? NoteHeadGlyph.GraceScale : 1, MusicFontSymbol.NoteheadXOrnate);\r\n            this._isGrace = isGrace;\r\n        }\r\n        doLayout() {\r\n            this.width = 9 * (this._isGrace ? NoteHeadGlyph.GraceScale : 1) * this.scale;\r\n            this.height = NoteHeadGlyph.NoteHeadHeight * this.scale;\r\n        }\r\n    }\n\n    class DiamondNoteHeadGlyph extends MusicFontGlyph {\r\n        constructor(x, y, duration, isGrace) {\r\n            super(x, y, isGrace ? NoteHeadGlyph.GraceScale : 1, DiamondNoteHeadGlyph.getSymbol(duration));\r\n            this._isGrace = isGrace;\r\n        }\r\n        static getSymbol(duration) {\r\n            switch (duration) {\r\n                case Duration.QuadrupleWhole:\r\n                case Duration.DoubleWhole:\r\n                case Duration.Whole:\r\n                case Duration.Half:\r\n                    return MusicFontSymbol.NoteheadDiamondWhiteWide;\r\n                default:\r\n                    return MusicFontSymbol.NoteheadDiamondBlackWide;\r\n            }\r\n        }\r\n        doLayout() {\r\n            this.width = 9 * (this._isGrace ? NoteHeadGlyph.GraceScale : 1) * this.scale;\r\n            this.height = NoteHeadGlyph.NoteHeadHeight * this.scale;\r\n        }\r\n    }\n\n    class TieGlyph extends Glyph {\r\n        constructor(startBeat, endBeat, forEnd) {\r\n            super(0, 0);\r\n            this.yOffset = 0;\r\n            this.startNoteRenderer = null;\r\n            this.endNoteRenderer = null;\r\n            this.tieDirection = BeamDirection.Up;\r\n            this.startBeat = startBeat;\r\n            this.endBeat = endBeat;\r\n            this.forEnd = forEnd;\r\n        }\r\n        doLayout() {\r\n            this.width = 0;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            if (!this.endBeat) {\r\n                return;\r\n            }\r\n            // TODO fix nullability of start/end beat,\r\n            let startNoteRenderer = (this.startNoteRenderer = this.renderer.scoreRenderer.layout.getRendererForBar(this.renderer.staff.staveId, this.startBeat.voice.bar));\r\n            let endNoteRenderer = (this.endNoteRenderer = this.renderer.scoreRenderer.layout.getRendererForBar(this.renderer.staff.staveId, this.endBeat.voice.bar));\r\n            let startX = 0;\r\n            let endX = 0;\r\n            let startY = 0;\r\n            let endY = 0;\r\n            let shouldDraw = false;\r\n            // if we are on the tie start, we check if we\r\n            // either can draw till the end note, or we just can draw till the bar end\r\n            this.tieDirection = !startNoteRenderer\r\n                ? this.getBeamDirection(this.endBeat, endNoteRenderer)\r\n                : this.getBeamDirection(this.startBeat, startNoteRenderer);\r\n            if (!this.forEnd && startNoteRenderer) {\r\n                // line break or bar break\r\n                if (startNoteRenderer !== endNoteRenderer) {\r\n                    startX = cx + startNoteRenderer.x + this.getStartX();\r\n                    startY = cy + startNoteRenderer.y + this.getStartY() + this.yOffset;\r\n                    // line break: to bar end\r\n                    if (!endNoteRenderer || startNoteRenderer.staff !== endNoteRenderer.staff) {\r\n                        endX = cx + startNoteRenderer.x + startNoteRenderer.width;\r\n                        endY = startY;\r\n                    }\r\n                    else {\r\n                        endX = cx + endNoteRenderer.x + this.getEndX();\r\n                        endY = cy + endNoteRenderer.y + this.getEndY() + this.yOffset;\r\n                    }\r\n                }\r\n                else {\r\n                    startX = cx + startNoteRenderer.x + this.getStartX();\r\n                    endX = cx + endNoteRenderer.x + this.getEndX();\r\n                    startY = cy + startNoteRenderer.y + this.getStartY() + this.yOffset;\r\n                    endY = cy + endNoteRenderer.y + this.getEndY() + this.yOffset;\r\n                }\r\n                shouldDraw = true;\r\n            }\r\n            else if (!startNoteRenderer || startNoteRenderer.staff !== endNoteRenderer.staff) {\r\n                startX = cx + endNoteRenderer.x;\r\n                endX = cx + endNoteRenderer.x + this.getEndX();\r\n                startY = cy + endNoteRenderer.y + this.getEndY() + this.yOffset;\r\n                endY = startY;\r\n                shouldDraw = true;\r\n            }\r\n            if (shouldDraw) {\r\n                if (this.shouldDrawBendSlur()) {\r\n                    TieGlyph.drawBendSlur(canvas, startX, startY, endX, endY, this.tieDirection === BeamDirection.Down, this.scale);\r\n                }\r\n                else {\r\n                    TieGlyph.paintTie(canvas, this.scale, startX, startY, endX, endY, this.tieDirection === BeamDirection.Down, this.getTieHeight(startX, startY, endX, endY), 4);\r\n                }\r\n            }\r\n        }\r\n        shouldDrawBendSlur() {\r\n            return false;\r\n        }\r\n        getTieHeight(startX, startY, endX, endY) {\r\n            return 22;\r\n        }\r\n        getBeamDirection(beat, noteRenderer) {\r\n            return BeamDirection.Down;\r\n        }\r\n        getStartY() {\r\n            return 0;\r\n        }\r\n        getEndY() {\r\n            return 0;\r\n        }\r\n        getStartX() {\r\n            return 0;\r\n        }\r\n        getEndX() {\r\n            return 0;\r\n        }\r\n        static paintTie(canvas, scale, x1, y1, x2, y2, down = false, offset = 22, size = 4) {\r\n            if (x1 === x2 && y1 === y2) {\r\n                return;\r\n            }\r\n            // ensure endX > startX\r\n            if (x2 < x1) {\r\n                let t = x1;\r\n                x1 = x2;\r\n                x2 = t;\r\n                t = y1;\r\n                y1 = y2;\r\n                y2 = t;\r\n            }\r\n            //\r\n            // calculate control points\r\n            //\r\n            offset *= scale;\r\n            size *= scale;\r\n            // normal vector\r\n            let normalVectorX = y2 - y1;\r\n            let normalVectorY = x2 - x1;\r\n            let length = Math.sqrt(normalVectorX * normalVectorX + normalVectorY * normalVectorY);\r\n            if (down) {\r\n                normalVectorX *= -1;\r\n            }\r\n            else {\r\n                normalVectorY *= -1;\r\n            }\r\n            // make to unit vector\r\n            normalVectorX /= length;\r\n            normalVectorY /= length;\r\n            // center of connection\r\n            let centerX = (x2 + x1) / 2;\r\n            let centerY = (y2 + y1) / 2;\r\n            // control points\r\n            let cp1X = centerX + offset * normalVectorX;\r\n            let cp1Y = centerY + offset * normalVectorY;\r\n            let cp2X = centerX + (offset - size) * normalVectorX;\r\n            let cp2Y = centerY + (offset - size) * normalVectorY;\r\n            canvas.beginPath();\r\n            canvas.moveTo(x1, y1);\r\n            canvas.quadraticCurveTo(cp1X, cp1Y, x2, y2);\r\n            canvas.quadraticCurveTo(cp2X, cp2Y, x1, y1);\r\n            canvas.closePath();\r\n            canvas.fill();\r\n        }\r\n        static drawBendSlur(canvas, x1, y1, x2, y2, down, scale, slurText) {\r\n            let normalVectorX = y2 - y1;\r\n            let normalVectorY = x2 - x1;\r\n            let length = Math.sqrt(normalVectorX * normalVectorX + normalVectorY * normalVectorY);\r\n            if (down) {\r\n                normalVectorX *= -1;\r\n            }\r\n            else {\r\n                normalVectorY *= -1;\r\n            }\r\n            // make to unit vector\r\n            normalVectorX /= length;\r\n            normalVectorY /= length;\r\n            // center of connection\r\n            // TODO: should be 1/3\r\n            let centerX = (x2 + x1) / 2;\r\n            let centerY = (y2 + y1) / 2;\r\n            let offset = TieGlyph.BendSlurHeight * scale;\r\n            if (x2 - x1 < 20) {\r\n                offset /= 2;\r\n            }\r\n            let cp1X = centerX + offset * normalVectorX;\r\n            let cp1Y = centerY + offset * normalVectorY;\r\n            canvas.beginPath();\r\n            canvas.moveTo(x1, y1);\r\n            canvas.lineTo(cp1X, cp1Y);\r\n            canvas.lineTo(x2, y2);\r\n            canvas.stroke();\r\n            if (slurText) {\r\n                let w = canvas.measureText(slurText);\r\n                let textOffset = down ? 0 : -canvas.font.size;\r\n                canvas.fillText(slurText, cp1X - w / 2, cp1Y + textOffset);\r\n            }\r\n        }\r\n    }\r\n    TieGlyph.BendSlurHeight = 11;\n\n    class GhostParenthesisGlyph extends Glyph {\r\n        constructor(isOpen) {\r\n            super(0, 0);\r\n            this._isOpen = isOpen;\r\n        }\r\n        doLayout() {\r\n            super.doLayout();\r\n            this.width = GhostParenthesisGlyph.Size * this.scale;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            if (this._isOpen) {\r\n                TieGlyph.paintTie(canvas, this.scale, cx + this.x + this.width, cy + this.y + this.height, cx + this.x + this.width, cy + this.y, false, 6, 3);\r\n            }\r\n            else {\r\n                TieGlyph.paintTie(canvas, this.scale, cx + this.x, cy + this.y, cx + this.x, cy + this.y + this.height, false, 6, 3);\r\n            }\r\n        }\r\n    }\r\n    GhostParenthesisGlyph.Size = 6;\n\n    class GhostNoteInfo {\r\n        constructor(line, isGhost) {\r\n            this.line = 0;\r\n            this.line = line;\r\n            this.isGhost = isGhost;\r\n        }\r\n    }\r\n    class GhostNoteContainerGlyph extends Glyph {\r\n        constructor(isOpen) {\r\n            super(0, 0);\r\n            this._infos = [];\r\n            this._glyphs = [];\r\n            this.isEmpty = true;\r\n            this._isOpen = isOpen;\r\n        }\r\n        addParenthesis(n) {\r\n            let sr = this.renderer;\r\n            let line = sr.getNoteLine(n);\r\n            let hasParenthesis = n.isGhost || (this.isTiedBend(n) && sr.settings.notation.isNotationElementVisible(NotationElement.ParenthesisOnTiedBends));\r\n            this.addParenthesisOnLine(line, hasParenthesis);\r\n        }\r\n        addParenthesisOnLine(line, hasParenthesis) {\r\n            let info = new GhostNoteInfo(line, hasParenthesis);\r\n            this._infos.push(info);\r\n            if (hasParenthesis) {\r\n                this.isEmpty = false;\r\n            }\r\n        }\r\n        isTiedBend(note) {\r\n            if (note.isTieDestination) {\r\n                if (note.tieOrigin.hasBend) {\r\n                    return true;\r\n                }\r\n                return this.isTiedBend(note.tieOrigin);\r\n            }\r\n            return false;\r\n        }\r\n        doLayout() {\r\n            let sr = this.renderer;\r\n            this._infos.sort((a, b) => {\r\n                return a.line - b.line;\r\n            });\r\n            let previousGlyph = null;\r\n            let sizePerLine = sr.getScoreHeight(1);\r\n            for (let i = 0, j = this._infos.length; i < j; i++) {\r\n                let g;\r\n                if (!this._infos[i].isGhost) {\r\n                    previousGlyph = null;\r\n                }\r\n                else if (!previousGlyph) {\r\n                    g = new GhostParenthesisGlyph(this._isOpen);\r\n                    g.renderer = this.renderer;\r\n                    g.y = sr.getScoreY(this._infos[i].line) - sizePerLine;\r\n                    g.height = sizePerLine * 2;\r\n                    g.doLayout();\r\n                    this._glyphs.push(g);\r\n                    previousGlyph = g;\r\n                }\r\n                else {\r\n                    let y = sr.getScoreY(this._infos[i].line) + sizePerLine;\r\n                    previousGlyph.height = y - previousGlyph.y;\r\n                }\r\n            }\r\n            this.width = this._glyphs.length > 0 ? this._glyphs[0].width : 0;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            super.paint(cx, cy, canvas);\r\n            for (let g of this._glyphs) {\r\n                g.paint(cx + this.x, cy + this.y, canvas);\r\n            }\r\n        }\r\n    }\n\n    class ScoreNoteGlyphInfo {\r\n        constructor(glyph, line) {\r\n            this.line = 0;\r\n            this.glyph = glyph;\r\n            this.line = line;\r\n        }\r\n    }\n\n    class ScoreNoteChordGlyphBase extends Glyph {\r\n        constructor() {\r\n            super(0, 0);\r\n            this._infos = [];\r\n            this._noteHeadPadding = 0;\r\n            this.minNote = null;\r\n            this.maxNote = null;\r\n            this.spacingChanged = new EventEmitter();\r\n            this.upLineX = 0;\r\n            this.downLineX = 0;\r\n            this.displacedX = 0;\r\n            this.noteStartX = 0;\r\n        }\r\n        add(noteGlyph, noteLine) {\r\n            let info = new ScoreNoteGlyphInfo(noteGlyph, noteLine);\r\n            this._infos.push(info);\r\n            if (!this.minNote || this.minNote.line > info.line) {\r\n                this.minNote = info;\r\n            }\r\n            if (!this.maxNote || this.maxNote.line < info.line) {\r\n                this.maxNote = info;\r\n            }\r\n        }\r\n        get hasTopOverflow() {\r\n            return !!this.minNote && this.minNote.line <= 0;\r\n        }\r\n        get hasBottomOverflow() {\r\n            return !!this.maxNote && this.maxNote.line > 8;\r\n        }\r\n        doLayout() {\r\n            this._infos.sort((a, b) => {\r\n                return b.line - a.line;\r\n            });\r\n            let displacedX = 0;\r\n            let lastDisplaced = false;\r\n            let lastLine = 0;\r\n            let anyDisplaced = false;\r\n            let direction = this.direction;\r\n            let w = 0;\r\n            for (let i = 0, j = this._infos.length; i < j; i++) {\r\n                let g = this._infos[i].glyph;\r\n                g.renderer = this.renderer;\r\n                g.doLayout();\r\n                let displace = false;\r\n                if (i === 0) {\r\n                    displacedX = g.width;\r\n                }\r\n                else {\r\n                    // check if note needs to be repositioned\r\n                    if (Math.abs(lastLine - this._infos[i].line) <= 1) {\r\n                        // reposition if needed\r\n                        if (!lastDisplaced) {\r\n                            displace = true;\r\n                            g.x = displacedX;\r\n                            anyDisplaced = true;\r\n                            lastDisplaced = true; // let next iteration know we are displace now\r\n                        }\r\n                        else {\r\n                            lastDisplaced = false; // let next iteration know that we weren't displaced now\r\n                        }\r\n                    }\r\n                    else {\r\n                        lastDisplaced = false;\r\n                    }\r\n                }\r\n                // for beat direction down we invert the displacement.\r\n                // this means: displaced is on the left side of the stem and not displaced is right\r\n                if (direction === BeamDirection.Down) {\r\n                    g.x = displace ? 0 : displacedX;\r\n                }\r\n                else {\r\n                    g.x = displace ? displacedX : 0;\r\n                }\r\n                g.x += this.noteStartX;\r\n                lastLine = this._infos[i].line;\r\n                w = Math.max(w, g.x + g.width);\r\n            }\r\n            if (anyDisplaced) {\r\n                this._noteHeadPadding = 0;\r\n                this.upLineX = displacedX;\r\n                this.downLineX = displacedX;\r\n            }\r\n            else {\r\n                this._noteHeadPadding = direction === BeamDirection.Down ? -displacedX : 0;\r\n                w += this._noteHeadPadding;\r\n                this.upLineX = w;\r\n                this.downLineX = 0;\r\n            }\r\n            this.displacedX = displacedX;\r\n            this.width = w;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            cx += this.x;\r\n            cy += this.y;\r\n            // TODO: this method seems to be quite heavy according to the profiler, why?\r\n            let scoreRenderer = this.renderer;\r\n            // TODO: Take care of beateffects in overflow\r\n            let linePadding = 3 * this.scale;\r\n            let lineWidth = this.width - this.noteStartX + linePadding * 2;\r\n            if (this.hasTopOverflow) {\r\n                let color = canvas.color;\r\n                canvas.color = scoreRenderer.resources.staffLineColor;\r\n                let l = -2;\r\n                while (l >= this.minNote.line) {\r\n                    // + 1 Because we want to place the line in the center of the note, not at the top\r\n                    let lY = cy + scoreRenderer.getScoreY(l);\r\n                    canvas.fillRect(cx - linePadding + this.noteStartX, lY, lineWidth, this.scale);\r\n                    l -= 2;\r\n                }\r\n                canvas.color = color;\r\n            }\r\n            if (this.hasBottomOverflow) {\r\n                let color = canvas.color;\r\n                canvas.color = scoreRenderer.resources.staffLineColor;\r\n                let l = 10;\r\n                while (l <= this.maxNote.line) {\r\n                    let lY = cy + scoreRenderer.getScoreY(l);\r\n                    canvas.fillRect(cx - linePadding + this.noteStartX, lY, lineWidth, this.scale);\r\n                    l += 2;\r\n                }\r\n                canvas.color = color;\r\n            }\r\n            let infos = this._infos;\r\n            let x = cx + this._noteHeadPadding;\r\n            for (let g of infos) {\r\n                g.glyph.renderer = this.renderer;\r\n                g.glyph.paint(x, cy, canvas);\r\n            }\r\n        }\r\n    }\n\n    class TremoloPickingGlyph extends MusicFontGlyph {\r\n        constructor(x, y, duration) {\r\n            super(x, y, 1, TremoloPickingGlyph.getSymbol(duration));\r\n        }\r\n        doLayout() {\r\n            this.width = 12 * this.scale;\r\n        }\r\n        static getSymbol(duration) {\r\n            switch (duration) {\r\n                case Duration.ThirtySecond:\r\n                    return MusicFontSymbol.Tremolo3;\r\n                case Duration.Sixteenth:\r\n                    return MusicFontSymbol.Tremolo2;\r\n                case Duration.Eighth:\r\n                    return MusicFontSymbol.Tremolo1;\r\n                default:\r\n                    return MusicFontSymbol.None;\r\n            }\r\n        }\r\n    }\n\n    class ScoreNoteChordGlyph extends ScoreNoteChordGlyphBase {\r\n        constructor() {\r\n            super();\r\n            this._noteGlyphLookup = new Map();\r\n            this._notes = [];\r\n            this._tremoloPicking = null;\r\n            this.aboveBeatEffects = new Map();\r\n            this.belowBeatEffects = new Map();\r\n        }\r\n        get direction() {\r\n            return this.beamingHelper.direction;\r\n        }\r\n        getNoteX(note, requestedPosition) {\r\n            if (this._noteGlyphLookup.has(note.id)) {\r\n                let n = this._noteGlyphLookup.get(note.id);\r\n                let pos = this.x + n.x + this._noteHeadPadding;\r\n                switch (requestedPosition) {\r\n                    case NoteXPosition.Left:\r\n                        break;\r\n                    case NoteXPosition.Center:\r\n                        pos += n.width / 2;\r\n                        break;\r\n                    case NoteXPosition.Right:\r\n                        pos += n.width;\r\n                        break;\r\n                }\r\n                return pos;\r\n            }\r\n            return 0;\r\n        }\r\n        getNoteY(note, requestedPosition) {\r\n            if (this._noteGlyphLookup.has(note.id)) {\r\n                const n = this._noteGlyphLookup.get(note.id);\r\n                let pos = this.y + n.y;\r\n                switch (requestedPosition) {\r\n                    case NoteYPosition.TopWithStem:\r\n                        pos -= this.renderer.getStemSize(this.beamingHelper);\r\n                        break;\r\n                    case NoteYPosition.Top:\r\n                        pos -= n.height / 2;\r\n                        break;\r\n                    case NoteYPosition.Center:\r\n                        break;\r\n                    case NoteYPosition.Bottom:\r\n                        pos += n.height / 2;\r\n                        break;\r\n                    case NoteYPosition.BottomWithStem:\r\n                        pos += this.renderer.getStemSize(this.beamingHelper);\r\n                        break;\r\n                }\r\n                return pos;\r\n            }\r\n            return 0;\r\n        }\r\n        addNoteGlyph(noteGlyph, note, noteLine) {\r\n            super.add(noteGlyph, noteLine);\r\n            this._noteGlyphLookup.set(note.id, noteGlyph);\r\n            this._notes.push(note);\r\n        }\r\n        updateBeamingHelper(cx) {\r\n            if (this.beamingHelper) {\r\n                this.beamingHelper.registerBeatLineX('score', this.beat, cx + this.x + this.upLineX, cx + this.x + this.downLineX);\r\n            }\r\n        }\r\n        doLayout() {\r\n            super.doLayout();\r\n            let direction = this.direction;\r\n            for (const effect of this.aboveBeatEffects.values()) {\r\n                effect.renderer = this.renderer;\r\n                effect.doLayout();\r\n            }\r\n            for (const effect of this.belowBeatEffects.values()) {\r\n                effect.renderer = this.renderer;\r\n                effect.doLayout();\r\n            }\r\n            if (this.beat.isTremolo) {\r\n                let offset = 0;\r\n                let baseNote = direction === BeamDirection.Up ? this.minNote : this.maxNote;\r\n                let tremoloX = direction === BeamDirection.Up ? this.displacedX : 0;\r\n                let speed = this.beat.tremoloSpeed;\r\n                switch (speed) {\r\n                    case Duration.ThirtySecond:\r\n                        offset = direction === BeamDirection.Up ? -15 : 15;\r\n                        break;\r\n                    case Duration.Sixteenth:\r\n                        offset = direction === BeamDirection.Up ? -12 : 15;\r\n                        break;\r\n                    case Duration.Eighth:\r\n                        offset = direction === BeamDirection.Up ? -10 : 10;\r\n                        break;\r\n                    default:\r\n                        offset = direction === BeamDirection.Up ? -10 : 15;\r\n                        break;\r\n                }\r\n                this._tremoloPicking = new TremoloPickingGlyph(tremoloX, baseNote.glyph.y + offset * this.scale, speed);\r\n                this._tremoloPicking.renderer = this.renderer;\r\n                this._tremoloPicking.doLayout();\r\n            }\r\n        }\r\n        buildBoundingsLookup(beatBounds, cx, cy) {\r\n            for (let note of this._notes) {\r\n                if (this._noteGlyphLookup.has(note.id)) {\r\n                    let glyph = this._noteGlyphLookup.get(note.id);\r\n                    let noteBounds = new NoteBounds();\r\n                    noteBounds.note = note;\r\n                    noteBounds.noteHeadBounds = new Bounds();\r\n                    noteBounds.noteHeadBounds.x = cx + this.x + this._noteHeadPadding + glyph.x;\r\n                    noteBounds.noteHeadBounds.y = cy + this.y + glyph.y - glyph.height / 2;\r\n                    noteBounds.noteHeadBounds.w = glyph.width;\r\n                    noteBounds.noteHeadBounds.h = glyph.height;\r\n                    beatBounds.addNote(noteBounds);\r\n                }\r\n            }\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            // TODO: this method seems to be quite heavy according to the profiler, why?\r\n            let scoreRenderer = this.renderer;\r\n            //\r\n            // Note Effects only painted once\r\n            //\r\n            let aboveBeatEffectsY = 0;\r\n            let belowBeatEffectsY = 0;\r\n            let belowEffectSpacing = 1;\r\n            let aboveEffectSpacing = -belowEffectSpacing;\r\n            if (this.beamingHelper.direction === BeamDirection.Up) {\r\n                belowBeatEffectsY = scoreRenderer.getScoreY(this.minNote.line);\r\n                aboveBeatEffectsY = scoreRenderer.getScoreY(this.maxNote.line - 2);\r\n            }\r\n            else {\r\n                belowBeatEffectsY = scoreRenderer.getScoreY(this.maxNote.line - 1);\r\n                aboveBeatEffectsY = scoreRenderer.getScoreY(this.minNote.line + 1);\r\n                aboveEffectSpacing *= -1;\r\n                belowEffectSpacing *= -1;\r\n            }\r\n            for (const g of this.aboveBeatEffects.values()) {\r\n                aboveBeatEffectsY += aboveEffectSpacing * g.height;\r\n                g.paint(cx + this.x + 2 * this.scale, cy + this.y + aboveBeatEffectsY, canvas);\r\n            }\r\n            for (const g of this.belowBeatEffects.values()) {\r\n                belowBeatEffectsY += belowEffectSpacing * g.height;\r\n                g.paint(cx + this.x + 2 * this.scale, cy + this.y + belowBeatEffectsY, canvas);\r\n            }\r\n            super.paint(cx, cy, canvas);\r\n            if (this._tremoloPicking) {\r\n                this._tremoloPicking.paint(cx, cy, canvas);\r\n            }\r\n        }\r\n    }\n\n    class ScoreRestGlyph extends MusicFontGlyph {\r\n        constructor(x, y, duration) {\r\n            super(x, y, 1, ScoreRestGlyph.getSymbol(duration));\r\n            this._duration = duration;\r\n        }\r\n        static getSymbol(duration) {\r\n            switch (duration) {\r\n                case Duration.QuadrupleWhole:\r\n                    return MusicFontSymbol.RestLonga;\r\n                case Duration.DoubleWhole:\r\n                    return MusicFontSymbol.RestDoubleWhole;\r\n                case Duration.Whole:\r\n                    return MusicFontSymbol.RestWhole;\r\n                case Duration.Half:\r\n                    return MusicFontSymbol.RestHalf;\r\n                case Duration.Quarter:\r\n                    return MusicFontSymbol.RestQuarter;\r\n                case Duration.Eighth:\r\n                    return MusicFontSymbol.RestEighth;\r\n                case Duration.Sixteenth:\r\n                    return MusicFontSymbol.RestSixteenth;\r\n                case Duration.ThirtySecond:\r\n                    return MusicFontSymbol.RestThirtySecond;\r\n                case Duration.SixtyFourth:\r\n                    return MusicFontSymbol.RestSixtyFourth;\r\n                case Duration.OneHundredTwentyEighth:\r\n                    return MusicFontSymbol.RestOneHundredTwentyEighth;\r\n                case Duration.TwoHundredFiftySixth:\r\n                    return MusicFontSymbol.RestTwoHundredFiftySixth;\r\n                default:\r\n                    return MusicFontSymbol.None;\r\n            }\r\n        }\r\n        static getSize(duration) {\r\n            switch (duration) {\r\n                case Duration.QuadrupleWhole:\r\n                case Duration.DoubleWhole:\r\n                case Duration.Whole:\r\n                case Duration.Half:\r\n                case Duration.Quarter:\r\n                case Duration.Eighth:\r\n                case Duration.Sixteenth:\r\n                    return 9;\r\n                case Duration.ThirtySecond:\r\n                    return 12;\r\n                case Duration.SixtyFourth:\r\n                    return 14;\r\n                case Duration.OneHundredTwentyEighth:\r\n                case Duration.TwoHundredFiftySixth:\r\n                    return 20;\r\n            }\r\n            return 10;\r\n        }\r\n        doLayout() {\r\n            this.width = ScoreRestGlyph.getSize(this._duration) * this.scale;\r\n        }\r\n        updateBeamingHelper(cx) {\r\n            if (this.beamingHelper) {\r\n                this.beamingHelper.registerBeatLineX('score', this.beat, cx + this.x + this.width / 2, cx + this.x + this.width / 2);\r\n            }\r\n        }\r\n    }\n\n    class AccidentalColumnInfo {\r\n        constructor() {\r\n            this.x = 0;\r\n            this.y = -3000;\r\n            this.width = 0;\r\n        }\r\n    }\r\n    class AccidentalGroupGlyph extends GlyphGroup {\r\n        constructor() {\r\n            super(0, 0);\r\n        }\r\n        doLayout() {\r\n            if (!this.glyphs || this.glyphs.length === 0) {\r\n                this.width = 0;\r\n                return;\r\n            }\r\n            //\r\n            // Determine Columns for accidentals\r\n            //\r\n            this.glyphs.sort((a, b) => {\r\n                if (a.y < b.y) {\r\n                    return -1;\r\n                }\r\n                if (a.y > b.y) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n            // defines the reserved y position of the columns\r\n            let columns = [];\r\n            columns.push(new AccidentalColumnInfo());\r\n            let accidentalHeight = 21 * this.scale;\r\n            for (let i = 0, j = this.glyphs.length; i < j; i++) {\r\n                let g = this.glyphs[i];\r\n                g.renderer = this.renderer;\r\n                g.doLayout();\r\n                // find column where glyph fits into\r\n                // as long the glyph does not fit into the current column\r\n                let gColumn = 0;\r\n                while (columns[gColumn].y > g.y) {\r\n                    // move to next column\r\n                    gColumn++;\r\n                    // and create the new column if needed\r\n                    if (gColumn === columns.length) {\r\n                        columns.push(new AccidentalColumnInfo());\r\n                    }\r\n                }\r\n                // temporary save column as X\r\n                g.x = gColumn;\r\n                columns[gColumn].y = g.y + accidentalHeight;\r\n                if (columns[gColumn].width < g.width) {\r\n                    columns[gColumn].width = g.width;\r\n                }\r\n            }\r\n            //\r\n            // Place accidentals in columns\r\n            //\r\n            this.width = 0;\r\n            for (const column of columns) {\r\n                this.width += column.width;\r\n                column.x = this.width;\r\n            }\r\n            for (let i = 0, j = this.glyphs.length; i < j; i++) {\r\n                let g = this.glyphs[i];\r\n                const column = columns[g.x];\r\n                g.x = (this.width - column.x);\r\n            }\r\n        }\r\n    }\n\n    class BendNoteHeadGroupGlyph extends ScoreNoteChordGlyphBase {\r\n        constructor(beat, showParenthesis = false) {\r\n            super();\r\n            this._showParenthesis = false;\r\n            this._noteValueLookup = new Map();\r\n            this._accidentals = new AccidentalGroupGlyph();\r\n            this._preNoteParenthesis = null;\r\n            this._postNoteParenthesis = null;\r\n            this.isEmpty = true;\r\n            this.noteHeadOffset = 0;\r\n            this._beat = beat;\r\n            this._showParenthesis = showParenthesis;\r\n            if (showParenthesis) {\r\n                this._preNoteParenthesis = new GhostNoteContainerGlyph(true);\r\n                this._postNoteParenthesis = new GhostNoteContainerGlyph(false);\r\n            }\r\n        }\r\n        get direction() {\r\n            return BeamDirection.Up;\r\n        }\r\n        containsNoteValue(noteValue) {\r\n            return this._noteValueLookup.has(noteValue);\r\n        }\r\n        getNoteValueY(noteValue) {\r\n            if (this._noteValueLookup.has(noteValue)) {\r\n                return (this.y +\r\n                    this._noteValueLookup.get(noteValue).y);\r\n            }\r\n            return 0;\r\n        }\r\n        addGlyph(noteValue, quarterBend = false) {\r\n            let sr = this.renderer;\r\n            let noteHeadGlyph = new NoteHeadGlyph(0, 0, Duration.Quarter, true);\r\n            let accidental = sr.accidentalHelper.applyAccidentalForValue(this._beat, noteValue, quarterBend, true);\r\n            let line = sr.accidentalHelper.getNoteLineForValue(noteValue, false);\r\n            noteHeadGlyph.y = sr.getScoreY(line);\r\n            if (this._showParenthesis) {\r\n                this._preNoteParenthesis.renderer = this.renderer;\r\n                this._postNoteParenthesis.renderer = this.renderer;\r\n                this._preNoteParenthesis.addParenthesisOnLine(line, true);\r\n                this._postNoteParenthesis.addParenthesisOnLine(line, true);\r\n            }\r\n            if (accidental !== AccidentalType.None) {\r\n                let g = new AccidentalGlyph(0, noteHeadGlyph.y, accidental, true);\r\n                g.renderer = this.renderer;\r\n                this._accidentals.addGlyph(g);\r\n            }\r\n            this._noteValueLookup.set(noteValue, noteHeadGlyph);\r\n            this.add(noteHeadGlyph, line);\r\n            this.isEmpty = false;\r\n        }\r\n        doLayout() {\r\n            let x = 0;\r\n            if (this._showParenthesis) {\r\n                this._preNoteParenthesis.x = x;\r\n                this._preNoteParenthesis.renderer = this.renderer;\r\n                this._preNoteParenthesis.doLayout();\r\n                x += this._preNoteParenthesis.width + BendNoteHeadGroupGlyph.ElementPadding * this.scale;\r\n            }\r\n            if (!this._accidentals.isEmpty) {\r\n                x += this._accidentals.width + BendNoteHeadGroupGlyph.ElementPadding * this.scale;\r\n                this._accidentals.x = x;\r\n                this._accidentals.renderer = this.renderer;\r\n                this._accidentals.doLayout();\r\n                x += this._accidentals.width + BendNoteHeadGroupGlyph.ElementPadding * this.scale;\r\n            }\r\n            this.noteStartX = x;\r\n            super.doLayout();\r\n            this.noteHeadOffset = this.noteStartX + (this.width - this.noteStartX) / 2;\r\n            if (this._showParenthesis) {\r\n                this._postNoteParenthesis.x = this.width + BendNoteHeadGroupGlyph.ElementPadding * this.scale;\r\n                this._postNoteParenthesis.renderer = this.renderer;\r\n                this._postNoteParenthesis.doLayout();\r\n                this.width += this._postNoteParenthesis.width + BendNoteHeadGroupGlyph.ElementPadding * this.scale;\r\n            }\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            // canvas.Color = Color.Random();\r\n            // canvas.FillRect(cx + X, cy + Y, Width, 10);\r\n            // canvas.Color = Renderer.Resources.MainGlyphColor;\r\n            if (!this._accidentals.isEmpty) {\r\n                this._accidentals.paint(cx + this.x, cy + this.y, canvas);\r\n            }\r\n            if (this._showParenthesis) {\r\n                this._preNoteParenthesis.paint(cx + this.x, cy + this.y, canvas);\r\n                this._postNoteParenthesis.paint(cx + this.x, cy + this.y, canvas);\r\n            }\r\n            super.paint(cx, cy, canvas);\r\n        }\r\n    }\r\n    BendNoteHeadGroupGlyph.ElementPadding = 2;\n\n    class ScoreHelperNotesBaseGlyph extends Glyph {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.BendNoteHeads = [];\r\n        }\r\n        drawBendSlur(canvas, x1, y1, x2, y2, down, scale, slurText) {\r\n            TieGlyph.drawBendSlur(canvas, x1, y1, x2, y2, down, scale, slurText);\r\n        }\r\n        doLayout() {\r\n            super.doLayout();\r\n            this.width = 0;\r\n            for (let noteHeads of this.BendNoteHeads) {\r\n                noteHeads.doLayout();\r\n                this.width += noteHeads.width + 10 * this.scale;\r\n            }\r\n        }\r\n        getTieDirection(beat, noteRenderer) {\r\n            // invert direction (if stems go up, ties go down to not cross them)\r\n            switch (noteRenderer.getBeatDirection(beat)) {\r\n                case BeamDirection.Up:\r\n                    return BeamDirection.Down;\r\n                default:\r\n                    return BeamDirection.Up;\r\n            }\r\n        }\r\n    }\r\n    ScoreHelperNotesBaseGlyph.EndPadding = ((10 / 2) | 0) + 3;\n\n    class TabBendRenderPoint extends BendPoint {\r\n        constructor(offset = 0, value = 0) {\r\n            super(offset, value);\r\n            this.lineValue = 0;\r\n            this.lineValue = value;\r\n        }\r\n    }\n\n    class TabBendGlyph extends Glyph {\r\n        constructor() {\r\n            super(0, 0);\r\n            this._notes = [];\r\n            this._renderPoints = new Map();\r\n            this._preBendMinValue = -1;\r\n            this._bendMiddleMinValue = -1;\r\n            this._bendEndMinValue = -1;\r\n            this._bendEndContinuedMinValue = -1;\r\n            this._releaseMinValue = -1;\r\n            this._releaseContinuedMinValue = -1;\r\n            this._maxBendValue = -1;\r\n        }\r\n        addBends(note) {\r\n            this._notes.push(note);\r\n            let renderPoints = this.createRenderingPoints(note);\r\n            this._renderPoints.set(note.id, renderPoints);\r\n            if (this._maxBendValue === -1 || this._maxBendValue < note.maxBendPoint.value) {\r\n                this._maxBendValue = note.maxBendPoint.value;\r\n            }\r\n            // compute arrow end values for common bend types\r\n            let value = 0;\r\n            switch (note.bendType) {\r\n                case BendType.Bend:\r\n                    value = renderPoints[1].value;\r\n                    if (note.isTieOrigin) {\r\n                        if (this._bendEndContinuedMinValue === -1 || value < this._bendEndContinuedMinValue) {\r\n                            this._bendEndContinuedMinValue = value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (this._bendEndMinValue === -1 || value < this._bendEndMinValue) {\r\n                            this._bendEndMinValue = value;\r\n                        }\r\n                    }\r\n                    break;\r\n                case BendType.Release:\r\n                    value = renderPoints[1].value;\r\n                    if (note.isTieOrigin) {\r\n                        if (this._releaseContinuedMinValue === -1 || value < this._releaseContinuedMinValue) {\r\n                            this._releaseContinuedMinValue = value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (value > 0 && (this._releaseMinValue === -1 || value < this._releaseMinValue)) {\r\n                            this._releaseMinValue = value;\r\n                        }\r\n                    }\r\n                    break;\r\n                case BendType.BendRelease:\r\n                    value = renderPoints[1].value;\r\n                    if (this._bendMiddleMinValue === -1 || value < this._bendMiddleMinValue) {\r\n                        this._bendMiddleMinValue = value;\r\n                    }\r\n                    value = renderPoints[2].value;\r\n                    if (note.isTieOrigin) {\r\n                        if (this._releaseContinuedMinValue === -1 || value < this._releaseContinuedMinValue) {\r\n                            this._releaseContinuedMinValue = value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (value > 0 && (this._releaseMinValue === -1 || value < this._releaseMinValue)) {\r\n                            this._releaseMinValue = value;\r\n                        }\r\n                    }\r\n                    break;\r\n                case BendType.Prebend:\r\n                    value = renderPoints[0].value;\r\n                    if (this._preBendMinValue === -1 || value < this._preBendMinValue) {\r\n                        this._preBendMinValue = value;\r\n                    }\r\n                    break;\r\n                case BendType.PrebendBend:\r\n                    value = renderPoints[0].value;\r\n                    if (this._preBendMinValue === -1 || value < this._preBendMinValue) {\r\n                        this._preBendMinValue = value;\r\n                    }\r\n                    value = renderPoints[1].value;\r\n                    if (note.isTieOrigin) {\r\n                        if (this._bendEndContinuedMinValue === -1 || value < this._bendEndContinuedMinValue) {\r\n                            this._bendEndContinuedMinValue = value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (this._bendEndMinValue === -1 || value < this._bendEndMinValue) {\r\n                            this._bendEndMinValue = value;\r\n                        }\r\n                    }\r\n                    break;\r\n                case BendType.PrebendRelease:\r\n                    value = renderPoints[0].value;\r\n                    if (this._preBendMinValue === -1 || value < this._preBendMinValue) {\r\n                        this._preBendMinValue = value;\r\n                    }\r\n                    value = renderPoints[1].value;\r\n                    if (note.isTieOrigin) {\r\n                        if (this._releaseContinuedMinValue === -1 || value < this._releaseContinuedMinValue) {\r\n                            this._releaseContinuedMinValue = value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (value > 0 && (this._releaseMinValue === -1 || value < this._releaseMinValue)) {\r\n                            this._releaseMinValue = value;\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        doLayout() {\r\n            super.doLayout();\r\n            let bendHeight = this._maxBendValue * TabBendGlyph.BendValueHeight * this.scale;\r\n            this.renderer.registerOverflowTop(bendHeight);\r\n            let value = 0;\r\n            for (let note of this._notes) {\r\n                let renderPoints = this._renderPoints.get(note.id);\r\n                switch (note.bendType) {\r\n                    case BendType.Bend:\r\n                        renderPoints[1].lineValue = note.isTieOrigin\r\n                            ? this._bendEndContinuedMinValue\r\n                            : this._bendEndMinValue;\r\n                        break;\r\n                    case BendType.Release:\r\n                        value = note.isTieOrigin ? this._releaseContinuedMinValue : this._releaseMinValue;\r\n                        if (value >= 0) {\r\n                            renderPoints[1].lineValue = value;\r\n                        }\r\n                        break;\r\n                    case BendType.BendRelease:\r\n                        renderPoints[1].lineValue = this._bendMiddleMinValue;\r\n                        value = note.isTieOrigin ? this._releaseContinuedMinValue : this._releaseMinValue;\r\n                        if (value >= 0) {\r\n                            renderPoints[2].lineValue = value;\r\n                        }\r\n                        break;\r\n                    case BendType.Prebend:\r\n                        renderPoints[0].lineValue = this._preBendMinValue;\r\n                        break;\r\n                    case BendType.PrebendBend:\r\n                        renderPoints[0].lineValue = this._preBendMinValue;\r\n                        renderPoints[1].lineValue = note.isTieOrigin\r\n                            ? this._bendEndContinuedMinValue\r\n                            : this._bendEndMinValue;\r\n                        break;\r\n                    case BendType.PrebendRelease:\r\n                        renderPoints[0].lineValue = this._preBendMinValue;\r\n                        value = note.isTieOrigin ? this._releaseContinuedMinValue : this._releaseMinValue;\r\n                        if (value >= 0) {\r\n                            renderPoints[1].lineValue = value;\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            this.width = 0;\r\n            this._notes.sort((a, b) => {\r\n                if (a.isStringed) {\r\n                    return a.string - b.string;\r\n                }\r\n                return a.realValue - b.realValue;\r\n            });\r\n        }\r\n        createRenderingPoints(note) {\r\n            let renderingPoints = [];\r\n            // Guitar Pro Rendering Note:\r\n            // Last point of bend is always at end of the note even\r\n            // though it might not be 100% correct from timing perspective.\r\n            switch (note.bendType) {\r\n                case BendType.Custom:\r\n                    for (let bendPoint of note.bendPoints) {\r\n                        renderingPoints.push(new TabBendRenderPoint(bendPoint.offset, bendPoint.value));\r\n                    }\r\n                    break;\r\n                case BendType.BendRelease:\r\n                    renderingPoints.push(new TabBendRenderPoint(0, note.bendPoints[0].value));\r\n                    renderingPoints.push(new TabBendRenderPoint((BendPoint.MaxPosition / 2) | 0, note.bendPoints[1].value));\r\n                    renderingPoints.push(new TabBendRenderPoint(BendPoint.MaxPosition, note.bendPoints[3].value));\r\n                    break;\r\n                case BendType.Bend:\r\n                case BendType.Hold:\r\n                case BendType.Prebend:\r\n                case BendType.PrebendBend:\r\n                case BendType.PrebendRelease:\r\n                case BendType.Release:\r\n                    renderingPoints.push(new TabBendRenderPoint(0, note.bendPoints[0].value));\r\n                    renderingPoints.push(new TabBendRenderPoint(BendPoint.MaxPosition, note.bendPoints[1].value));\r\n                    break;\r\n            }\r\n            return renderingPoints;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            let color = canvas.color;\r\n            if (this._notes.length > 1) {\r\n                canvas.color = this.renderer.resources.secondaryGlyphColor;\r\n            }\r\n            for (let note of this._notes) {\r\n                let renderPoints = this._renderPoints.get(note.id);\r\n                let startNoteRenderer = this.renderer;\r\n                let endNote = note;\r\n                let isMultiBeatBend = false;\r\n                let endNoteRenderer = null;\r\n                let endNoteHasBend = false;\r\n                let slurText = note.bendStyle === BendStyle.Gradual ? 'grad.' : '';\r\n                let endBeat = null;\r\n                while (endNote.isTieOrigin) {\r\n                    let nextNote = endNote.tieDestination;\r\n                    endNoteRenderer = this.renderer.scoreRenderer.layout.getRendererForBar(this.renderer.staff.staveId, nextNote.beat.voice.bar);\r\n                    if (!endNoteRenderer || startNoteRenderer.staff !== endNoteRenderer.staff) {\r\n                        break;\r\n                    }\r\n                    endNote = nextNote;\r\n                    isMultiBeatBend = true;\r\n                    if (endNote.hasBend || !this.renderer.settings.notation.extendBendArrowsOnTiedNotes) {\r\n                        endNoteHasBend = true;\r\n                        break;\r\n                    }\r\n                }\r\n                endBeat = endNote.beat;\r\n                endNoteRenderer = this.renderer.scoreRenderer.layout.getRendererForBar(this.renderer.staff.staveId, endBeat.voice.bar);\r\n                if (endBeat.isLastOfVoice &&\r\n                    !endNote.hasBend &&\r\n                    this.renderer.settings.notation.extendBendArrowsOnTiedNotes) {\r\n                    endBeat = null;\r\n                }\r\n                let startX = 0;\r\n                let endX = 0;\r\n                let topY = cy + startNoteRenderer.y;\r\n                // float bottomY = cy + startNoteRenderer.Y + startNoteRenderer.GetNoteY(note);\r\n                startX = cx + startNoteRenderer.x;\r\n                if (renderPoints[0].value > 0 || note.isContinuedBend) {\r\n                    startX += startNoteRenderer.getBeatX(note.beat, BeatXPosition.MiddleNotes);\r\n                }\r\n                else {\r\n                    startX += startNoteRenderer.getNoteX(note, NoteXPosition.Right);\r\n                }\r\n                // canvas.Color = Color.Random();\r\n                // canvas.FillRect(\r\n                //    cx + startNoteRenderer.X + startNoteRenderer.GetBeatX(_note.Beat, BeatXPosition.MiddleNotes),\r\n                //    cy + startNoteRenderer.Y, 10, 10);\r\n                // canvas.FillRect(\r\n                //    cx + startNoteRenderer.X + startNoteRenderer.GetBeatX(_note.Beat, BeatXPosition.EndBeat),\r\n                //    cy + startNoteRenderer.Y + 10, 10, 10);\r\n                if (!endBeat || (endBeat.isLastOfVoice && !endNoteHasBend)) {\r\n                    endX = cx + endNoteRenderer.x + endNoteRenderer.postBeatGlyphsStart;\r\n                }\r\n                else if (endNoteHasBend || !endBeat.nextBeat) {\r\n                    endX = cx + endNoteRenderer.x + endNoteRenderer.getBeatX(endBeat, BeatXPosition.MiddleNotes);\r\n                }\r\n                else if (note.bendType === BendType.Hold) {\r\n                    endX = cx + endNoteRenderer.x + endNoteRenderer.getBeatX(endBeat.nextBeat, BeatXPosition.OnNotes);\r\n                }\r\n                else {\r\n                    endX = cx + endNoteRenderer.x + endNoteRenderer.getBeatX(endBeat.nextBeat, BeatXPosition.PreNotes);\r\n                }\r\n                if (!isMultiBeatBend) {\r\n                    endX -= TabBendGlyph.ArrowSize * this.scale;\r\n                }\r\n                // we need some pixels for the arrow. otherwise we might draw into the next\r\n                // note\r\n                let width = endX - startX;\r\n                // calculate offsets per step\r\n                let dX = width / BendPoint.MaxPosition;\r\n                canvas.beginPath();\r\n                for (let i = 0, j = renderPoints.length - 1; i < j; i++) {\r\n                    let firstPt = renderPoints[i];\r\n                    let secondPt = renderPoints[i + 1];\r\n                    // draw pre-bend if previous\r\n                    if (i === 0 && firstPt.value !== 0 && !note.isTieDestination) {\r\n                        this.paintBend(note, new TabBendRenderPoint(0, 0), firstPt, startX, topY, dX, slurText, canvas);\r\n                    }\r\n                    if (note.bendType !== BendType.Prebend) {\r\n                        if (i === 0) {\r\n                            startX += 2 * this.scale;\r\n                        }\r\n                        this.paintBend(note, firstPt, secondPt, startX, topY, dX, slurText, canvas);\r\n                    }\r\n                    else if (note.isTieOrigin && note.tieDestination.hasBend) {\r\n                        secondPt = new TabBendRenderPoint(BendPoint.MaxPosition, firstPt.value);\r\n                        secondPt.lineValue = firstPt.lineValue;\r\n                        this.paintBend(note, firstPt, secondPt, startX, topY, dX, slurText, canvas);\r\n                    }\r\n                }\r\n                canvas.color = color;\r\n            }\r\n        }\r\n        paintBend(note, firstPt, secondPt, cx, cy, dX, slurText, canvas) {\r\n            let r = this.renderer;\r\n            let res = this.renderer.resources;\r\n            let overflowOffset = r.lineOffset / 2;\r\n            let x1 = cx + dX * firstPt.offset;\r\n            let bendValueHeight = TabBendGlyph.BendValueHeight * this.scale;\r\n            let y1 = cy - bendValueHeight * firstPt.lineValue;\r\n            if (firstPt.value === 0) {\r\n                if (secondPt.offset === firstPt.offset) {\r\n                    y1 += r.getNoteY(note.beat.maxStringNote, NoteYPosition.Top);\r\n                }\r\n                else {\r\n                    y1 += r.getNoteY(note, NoteYPosition.Center);\r\n                }\r\n            }\r\n            else {\r\n                y1 += overflowOffset;\r\n            }\r\n            let x2 = cx + dX * secondPt.offset;\r\n            let y2 = cy - bendValueHeight * secondPt.lineValue;\r\n            if (secondPt.lineValue === 0) {\r\n                y2 += r.getNoteY(note, NoteYPosition.Center);\r\n            }\r\n            else {\r\n                y2 += overflowOffset;\r\n            }\r\n            // what type of arrow? (up/down)\r\n            let arrowOffset = 0;\r\n            let arrowSize = TabBendGlyph.ArrowSize * this.scale;\r\n            if (secondPt.value > firstPt.value) {\r\n                if (y2 + arrowSize > y1) {\r\n                    y2 = y1 - arrowSize;\r\n                }\r\n                canvas.beginPath();\r\n                canvas.moveTo(x2, y2);\r\n                canvas.lineTo(x2 - arrowSize * 0.5, y2 + arrowSize);\r\n                canvas.lineTo(x2 + arrowSize * 0.5, y2 + arrowSize);\r\n                canvas.closePath();\r\n                canvas.fill();\r\n                arrowOffset = arrowSize;\r\n            }\r\n            else if (secondPt.value !== firstPt.value) {\r\n                if (y2 < y1) {\r\n                    y2 = y1 + arrowSize;\r\n                }\r\n                canvas.beginPath();\r\n                canvas.moveTo(x2, y2);\r\n                canvas.lineTo(x2 - arrowSize * 0.5, y2 - arrowSize);\r\n                canvas.lineTo(x2 + arrowSize * 0.5, y2 - arrowSize);\r\n                canvas.closePath();\r\n                canvas.fill();\r\n                arrowOffset = -arrowSize;\r\n            }\r\n            canvas.stroke();\r\n            if (firstPt.value === secondPt.value) {\r\n                // draw horizontal dashed line\r\n                // to really have the line ending at the right position\r\n                // we draw from right to left. it's okay if the space is at the beginning\r\n                if (firstPt.lineValue > 0) {\r\n                    let dashX = x2;\r\n                    let dashSize = TabBendGlyph.DashSize * this.scale;\r\n                    let end = x1 + dashSize;\r\n                    let dashes = (dashX - x1) / (dashSize * 2);\r\n                    if (dashes < 1) {\r\n                        canvas.moveTo(dashX, y1);\r\n                        canvas.lineTo(x1, y1);\r\n                    }\r\n                    else {\r\n                        while (dashX > end) {\r\n                            canvas.moveTo(dashX, y1);\r\n                            canvas.lineTo(dashX - dashSize, y1);\r\n                            dashX -= dashSize * 2;\r\n                        }\r\n                    }\r\n                    canvas.stroke();\r\n                }\r\n            }\r\n            else {\r\n                if (x2 > x1) {\r\n                    // draw bezier lien from first to second point\r\n                    canvas.moveTo(x1, y1);\r\n                    canvas.bezierCurveTo((x1 + x2) / 2, y1, x2, y1, x2, y2 + arrowOffset);\r\n                    canvas.stroke();\r\n                }\r\n                else {\r\n                    canvas.moveTo(x1, y1);\r\n                    canvas.lineTo(x2, y2);\r\n                    canvas.stroke();\r\n                }\r\n            }\r\n            if (slurText && firstPt.offset < secondPt.offset) {\r\n                canvas.font = res.graceFont;\r\n                let size = canvas.measureText(slurText);\r\n                let y = 0;\r\n                let x = 0;\r\n                if (y1 > y2) {\r\n                    let h = Math.abs(y1 - y2);\r\n                    y = h > canvas.font.size * 1.3 ? y1 - h / 2 : y1;\r\n                    x = (x1 + x2 - size) / 2;\r\n                }\r\n                else {\r\n                    y = y1;\r\n                    x = x2 - size;\r\n                }\r\n                canvas.fillText(slurText, x, y);\r\n            }\r\n            if (secondPt.value !== 0 && firstPt.value !== secondPt.value) {\r\n                let dV = secondPt.value;\r\n                let up = secondPt.value > firstPt.value;\r\n                dV = Math.abs(dV);\r\n                // calculate label\r\n                let s = '';\r\n                // Full Steps\r\n                if (dV === 4) {\r\n                    s = 'full';\r\n                    dV -= 4;\r\n                }\r\n                else if (dV >= 4 || dV <= -4) {\r\n                    let steps = (dV / 4) | 0;\r\n                    s += steps;\r\n                    // Quaters\r\n                    dV -= steps * 4;\r\n                }\r\n                if (dV > 0) {\r\n                    s += TabBendGlyph.getFractionSign(dV);\r\n                }\r\n                if (s !== '') {\r\n                    y2 = cy - bendValueHeight * secondPt.value;\r\n                    let startY = y2;\r\n                    if (!up) {\r\n                        startY = y1 + (Math.abs(y2 - y1) * 1) / 3;\r\n                    }\r\n                    // draw label\r\n                    canvas.font = res.tablatureFont;\r\n                    let size = canvas.measureText(s);\r\n                    let y = startY - res.tablatureFont.size * 0.5 - 2 * this.scale;\r\n                    let x = x2 - size / 2;\r\n                    canvas.fillText(s, x, y);\r\n                }\r\n            }\r\n        }\r\n        static getFractionSign(steps) {\r\n            switch (steps) {\r\n                case 1:\r\n                    return '¼';\r\n                case 2:\r\n                    return '½';\r\n                case 3:\r\n                    return '¾';\r\n                default:\r\n                    return steps + '/ 4';\r\n            }\r\n        }\r\n    }\r\n    TabBendGlyph.ArrowSize = 6;\r\n    TabBendGlyph.DashSize = 3;\r\n    TabBendGlyph.BendValueHeight = 6;\n\n    class TabWhammyBarGlyph extends Glyph {\r\n        constructor(beat) {\r\n            super(0, 0);\r\n            this._isSimpleDip = false;\r\n            this._beat = beat;\r\n            this._renderPoints = this.createRenderingPoints(beat);\r\n        }\r\n        createRenderingPoints(beat) {\r\n            // advanced rendering\r\n            if (beat.whammyBarType === WhammyType.Custom) {\r\n                return beat.whammyBarPoints;\r\n            }\r\n            let renderingPoints = [];\r\n            // Guitar Pro Rendering Note:\r\n            // Last point of bend is always at end of the beat even\r\n            // though it might not be 100% correct from timing perspective.\r\n            switch (beat.whammyBarType) {\r\n                case WhammyType.Dive:\r\n                case WhammyType.Hold:\r\n                case WhammyType.PrediveDive:\r\n                case WhammyType.Predive:\r\n                    renderingPoints.push(new BendPoint(0, beat.whammyBarPoints[0].value));\r\n                    renderingPoints.push(new BendPoint(BendPoint.MaxPosition, beat.whammyBarPoints[1].value));\r\n                    break;\r\n                case WhammyType.Dip:\r\n                    renderingPoints.push(new BendPoint(0, beat.whammyBarPoints[0].value));\r\n                    renderingPoints.push(new BendPoint((BendPoint.MaxPosition / 2) | 0, beat.whammyBarPoints[1].value));\r\n                    renderingPoints.push(new BendPoint(BendPoint.MaxPosition, beat.whammyBarPoints[beat.whammyBarPoints.length - 1].value));\r\n                    break;\r\n            }\r\n            return renderingPoints;\r\n        }\r\n        doLayout() {\r\n            super.doLayout();\r\n            this._isSimpleDip =\r\n                this.renderer.settings.notation.notationMode === exports.NotationMode.SongBook &&\r\n                    this._beat.whammyBarType === WhammyType.Dip;\r\n            //\r\n            // Get the min and max values for all combined whammys\r\n            let minValue = null;\r\n            let maxValue = null;\r\n            let beat = this._beat;\r\n            while (beat && beat.hasWhammyBar) {\r\n                if (!minValue || minValue.value > beat.minWhammyPoint.value) {\r\n                    minValue = beat.minWhammyPoint;\r\n                }\r\n                if (!maxValue || maxValue.value < beat.maxWhammyPoint.value) {\r\n                    maxValue = beat.maxWhammyPoint;\r\n                }\r\n                beat = beat.nextBeat;\r\n            }\r\n            let topOffset = maxValue.value > 0 ? Math.abs(this.getOffset(maxValue.value)) : 0;\r\n            if (topOffset > 0 ||\r\n                this._beat.whammyBarPoints[0].value !== 0 ||\r\n                this.renderer.settings.notation.isNotationElementVisible(NotationElement.ZerosOnDiveWhammys)) {\r\n                topOffset += this.renderer.resources.tablatureFont.size * 2;\r\n            }\r\n            let bottomOffset = minValue.value < 0 ? Math.abs(this.getOffset(minValue.value)) : 0;\r\n            this.renderer.registerOverflowTop(topOffset + bottomOffset);\r\n            let currentOffset = this.renderer.staff.getSharedLayoutData(TabWhammyBarGlyph.TopOffsetSharedDataKey, -1);\r\n            if (topOffset > currentOffset) {\r\n                this.renderer.staff.setSharedLayoutData(TabWhammyBarGlyph.TopOffsetSharedDataKey, topOffset);\r\n            }\r\n        }\r\n        getOffset(value) {\r\n            if (value === 0) {\r\n                return 0;\r\n            }\r\n            let offset = TabWhammyBarGlyph.PerHalfSize * this.scale +\r\n                Math.log2(Math.abs(value) / 2) * TabWhammyBarGlyph.PerHalfSize * this.scale;\r\n            if (value < 0) {\r\n                offset = -offset;\r\n            }\r\n            return offset;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            let startNoteRenderer = this.renderer;\r\n            let endBeat = this._beat.nextBeat;\r\n            let endNoteRenderer = null;\r\n            let endXPositionType = BeatXPosition.PreNotes;\r\n            if (endBeat) {\r\n                endNoteRenderer = this.renderer.scoreRenderer.layout.getRendererForBar(this.renderer.staff.staveId, endBeat.voice.bar);\r\n                if (!endNoteRenderer || endNoteRenderer.staff !== startNoteRenderer.staff) {\r\n                    endBeat = null;\r\n                    endNoteRenderer = null;\r\n                }\r\n                else if (endNoteRenderer !== startNoteRenderer && !endBeat.hasWhammyBar) {\r\n                    endBeat = null;\r\n                    endNoteRenderer = null;\r\n                }\r\n                else {\r\n                    endXPositionType =\r\n                        endBeat.hasWhammyBar &&\r\n                            (startNoteRenderer.settings.notation.notationMode !== exports.NotationMode.SongBook ||\r\n                                endBeat.whammyBarType !== WhammyType.Dip)\r\n                            ? BeatXPosition.MiddleNotes\r\n                            : BeatXPosition.PreNotes;\r\n                }\r\n            }\r\n            let startX = 0;\r\n            let endX = 0;\r\n            if (this._isSimpleDip) {\r\n                startX =\r\n                    cx +\r\n                        startNoteRenderer.x +\r\n                        startNoteRenderer.getBeatX(this._beat, BeatXPosition.OnNotes) -\r\n                        2 * this.scale;\r\n                endX =\r\n                    cx +\r\n                        startNoteRenderer.x +\r\n                        startNoteRenderer.getBeatX(this._beat, BeatXPosition.PostNotes) +\r\n                        2 * this.scale;\r\n            }\r\n            else {\r\n                startX = cx + startNoteRenderer.x + startNoteRenderer.getBeatX(this._beat, BeatXPosition.MiddleNotes);\r\n                endX = !endNoteRenderer\r\n                    ? cx + startNoteRenderer.x + startNoteRenderer.width - 2 * this.scale\r\n                    : cx + endNoteRenderer.x + endNoteRenderer.getBeatX(endBeat, endXPositionType);\r\n            }\r\n            let old = canvas.textAlign;\r\n            canvas.textAlign = TextAlign.Center;\r\n            if (this._renderPoints.length >= 2) {\r\n                let dx = (endX - startX) / BendPoint.MaxPosition;\r\n                canvas.beginPath();\r\n                let zeroY = cy + this.renderer.staff.getSharedLayoutData(TabWhammyBarGlyph.TopOffsetSharedDataKey, 0);\r\n                let slurText = this._beat.whammyStyle === BendStyle.Gradual ? 'grad.' : '';\r\n                for (let i = 0, j = this._renderPoints.length - 1; i < j; i++) {\r\n                    let firstPt = this._renderPoints[i];\r\n                    let secondPt = this._renderPoints[i + 1];\r\n                    let nextPt = i < j - 2 ? this._renderPoints[i + 2] : null;\r\n                    let isFirst = i === 0;\r\n                    // draw pre-bend if previous\r\n                    if (i === 0 && firstPt.value !== 0 && !this._beat.isContinuedWhammy) {\r\n                        this.paintWhammy(false, new BendPoint(0, 0), firstPt, secondPt, startX, zeroY, dx, canvas);\r\n                        isFirst = false;\r\n                    }\r\n                    this.paintWhammy(isFirst, firstPt, secondPt, nextPt, startX, zeroY, dx, canvas, slurText);\r\n                    slurText = '';\r\n                }\r\n                canvas.stroke();\r\n            }\r\n            canvas.textAlign = old;\r\n        }\r\n        paintWhammy(isFirst, firstPt, secondPt, nextPt, cx, cy, dx, canvas, slurText) {\r\n            let x1 = cx + dx * firstPt.offset;\r\n            let x2 = cx + dx * secondPt.offset;\r\n            let y1 = cy - this.getOffset(firstPt.value);\r\n            let y2 = cy - this.getOffset(secondPt.value);\r\n            if (firstPt.offset === secondPt.offset) {\r\n                let dashSize = TabWhammyBarGlyph.DashSize * this.scale;\r\n                let dashes = Math.abs(y2 - y1) / (dashSize * 2);\r\n                if (dashes < 1) {\r\n                    canvas.moveTo(x1, y1);\r\n                    canvas.lineTo(x2, y2);\r\n                }\r\n                else {\r\n                    let dashEndY = Math.max(y1, y2);\r\n                    let dashStartY = Math.min(y1, y2);\r\n                    while (dashEndY > dashStartY) {\r\n                        canvas.moveTo(x1, dashStartY);\r\n                        canvas.lineTo(x1, dashStartY + dashSize);\r\n                        dashStartY += dashSize * 2;\r\n                    }\r\n                }\r\n                canvas.stroke();\r\n            }\r\n            else if (firstPt.value === secondPt.value) {\r\n                let dashSize = TabWhammyBarGlyph.DashSize * this.scale;\r\n                let dashes = Math.abs(x2 - x1) / (dashSize * 2);\r\n                if (dashes < 1) {\r\n                    canvas.moveTo(x1, y1);\r\n                    canvas.lineTo(x2, y2);\r\n                }\r\n                else {\r\n                    let dashEndX = Math.max(x1, x2);\r\n                    let dashStartX = Math.min(x1, x2);\r\n                    while (dashEndX > dashStartX) {\r\n                        canvas.moveTo(dashEndX, y1);\r\n                        canvas.lineTo(dashEndX - dashSize, y1);\r\n                        dashEndX -= dashSize * 2;\r\n                    }\r\n                }\r\n                canvas.stroke();\r\n            }\r\n            else {\r\n                canvas.moveTo(x1, y1);\r\n                canvas.lineTo(x2, y2);\r\n            }\r\n            let res = this.renderer.resources;\r\n            if (isFirst && !this._beat.isContinuedWhammy && !this._isSimpleDip) {\r\n                let y = y1;\r\n                y -= res.tablatureFont.size + 2 * this.scale;\r\n                if (this.renderer.settings.notation.isNotationElementVisible(NotationElement.ZerosOnDiveWhammys)) {\r\n                    canvas.fillText('0', x1, y);\r\n                }\r\n                if (slurText) {\r\n                    y -= res.tablatureFont.size + 2 * this.scale;\r\n                    canvas.fillText(slurText, x1, y);\r\n                }\r\n            }\r\n            let dV = Math.abs(secondPt.value);\r\n            if ((dV !== 0 || (this.renderer.settings.notation.isNotationElementVisible(NotationElement.ZerosOnDiveWhammys) && !this._isSimpleDip)) &&\r\n                firstPt.value !== secondPt.value) {\r\n                let s = '';\r\n                if (secondPt.value < 0) {\r\n                    s += '-';\r\n                }\r\n                if (dV >= 4) {\r\n                    let steps = (dV / 4) | 0;\r\n                    s += steps;\r\n                    // Quaters\r\n                    dV -= steps * 4;\r\n                }\r\n                else if (dV === 0) {\r\n                    s += '0';\r\n                }\r\n                if (dV > 0) {\r\n                    s += TabBendGlyph.getFractionSign(dV);\r\n                }\r\n                let y = 0;\r\n                if (this._isSimpleDip) {\r\n                    y = Math.min(y1, y2) - res.tablatureFont.size - 2 * this.scale;\r\n                }\r\n                else {\r\n                    y = firstPt.offset === secondPt.offset ? Math.min(y1, y2) : y2;\r\n                    y -= res.tablatureFont.size + 2 * this.scale;\r\n                    if (nextPt && nextPt.value > secondPt.value) {\r\n                        y -= 2 * this.scale;\r\n                    }\r\n                }\r\n                let x = x2;\r\n                canvas.fillText(s, x, y);\r\n            }\r\n        }\r\n    }\r\n    TabWhammyBarGlyph.TopOffsetSharedDataKey = 'tab.whammy.topoffset';\r\n    TabWhammyBarGlyph.PerHalfSize = 6;\r\n    TabWhammyBarGlyph.DashSize = 3;\n\n    class ScoreWhammyBarGlyph extends ScoreHelperNotesBaseGlyph {\r\n        constructor(beat) {\r\n            super(0, 0);\r\n            this._beat = beat;\r\n        }\r\n        doLayout() {\r\n            let whammyMode = this.renderer.settings.notation.notationMode;\r\n            switch (this._beat.whammyBarType) {\r\n                case WhammyType.None:\r\n                case WhammyType.Custom:\r\n                case WhammyType.Hold:\r\n                    return;\r\n                case WhammyType.Dive:\r\n                case WhammyType.PrediveDive:\r\n                    {\r\n                        let endGlyphs = new BendNoteHeadGroupGlyph(this._beat, false);\r\n                        endGlyphs.renderer = this.renderer;\r\n                        let lastWhammyPoint = this._beat.whammyBarPoints[this._beat.whammyBarPoints.length - 1];\r\n                        for (let note of this._beat.notes) {\r\n                            if (!note.isTieOrigin) {\r\n                                endGlyphs.addGlyph(this.getBendNoteValue(note, lastWhammyPoint), lastWhammyPoint.value % 2 !== 0);\r\n                            }\r\n                        }\r\n                        endGlyphs.doLayout();\r\n                        this.BendNoteHeads.push(endGlyphs);\r\n                    }\r\n                    break;\r\n                case WhammyType.Dip:\r\n                    {\r\n                        if (whammyMode === exports.NotationMode.SongBook) {\r\n                            let res = this.renderer.resources;\r\n                            this.renderer.simpleWhammyOverflow =\r\n                                res.tablatureFont.size * 1.5 +\r\n                                    ScoreWhammyBarGlyph.SimpleDipHeight * this.scale +\r\n                                    ScoreWhammyBarGlyph.SimpleDipPadding * this.scale;\r\n                        }\r\n                        else {\r\n                            let middleGlyphs = new BendNoteHeadGroupGlyph(this._beat, false);\r\n                            middleGlyphs.renderer = this.renderer;\r\n                            if (this.renderer.settings.notation.notationMode === exports.NotationMode.GuitarPro) {\r\n                                let middleBendPoint = this._beat.whammyBarPoints[1];\r\n                                for (let note of this._beat.notes) {\r\n                                    middleGlyphs.addGlyph(this.getBendNoteValue(note, this._beat.whammyBarPoints[1]), middleBendPoint.value % 2 !== 0);\r\n                                }\r\n                            }\r\n                            middleGlyphs.doLayout();\r\n                            this.BendNoteHeads.push(middleGlyphs);\r\n                            let endGlyphs = new BendNoteHeadGroupGlyph(this._beat, false);\r\n                            endGlyphs.renderer = this.renderer;\r\n                            if (this.renderer.settings.notation.notationMode === exports.NotationMode.GuitarPro) {\r\n                                let lastBendPoint = this._beat.whammyBarPoints[this._beat.whammyBarPoints.length - 1];\r\n                                for (let note of this._beat.notes) {\r\n                                    endGlyphs.addGlyph(this.getBendNoteValue(note, lastBendPoint), lastBendPoint.value % 2 !== 0);\r\n                                }\r\n                            }\r\n                            endGlyphs.doLayout();\r\n                            this.BendNoteHeads.push(endGlyphs);\r\n                        }\r\n                    }\r\n                    break;\r\n                case WhammyType.Predive:\r\n                    break;\r\n            }\r\n            super.doLayout();\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            let beat = this._beat;\r\n            switch (beat.whammyBarType) {\r\n                case WhammyType.None:\r\n                case WhammyType.Custom:\r\n                    return;\r\n            }\r\n            let whammyMode = this.renderer.settings.notation.notationMode;\r\n            let startNoteRenderer = this.renderer.scoreRenderer.layout.getRendererForBar(this.renderer.staff.staveId, beat.voice.bar);\r\n            let startX = cx + startNoteRenderer.x + startNoteRenderer.getBeatX(beat, BeatXPosition.MiddleNotes);\r\n            let beatDirection = this.getTieDirection(beat, startNoteRenderer);\r\n            let direction = this._beat.notes.length === 1 ? beatDirection : BeamDirection.Up;\r\n            let textalign = canvas.textAlign;\r\n            for (let i = 0; i < beat.notes.length; i++) {\r\n                let note = beat.notes[i];\r\n                let startY = cy + startNoteRenderer.y;\r\n                if (i > 0 && i >= ((this._beat.notes.length / 2) | 0)) {\r\n                    direction = BeamDirection.Down;\r\n                }\r\n                if (direction === BeamDirection.Down) {\r\n                    startY += startNoteRenderer.getNoteY(note, NoteYPosition.Bottom);\r\n                }\r\n                else {\r\n                    startY += startNoteRenderer.getNoteY(note, NoteYPosition.Top);\r\n                }\r\n                let endX = cx + startNoteRenderer.x;\r\n                if (beat.isLastOfVoice) {\r\n                    endX += startNoteRenderer.width;\r\n                }\r\n                else {\r\n                    endX += startNoteRenderer.getBeatX(beat, BeatXPosition.EndBeat);\r\n                }\r\n                endX -= 8 * this.scale;\r\n                let slurText = beat.whammyStyle === BendStyle.Gradual && i === 0 ? 'grad.' : '';\r\n                let endNoteRenderer = null;\r\n                if (note.isTieOrigin) {\r\n                    endNoteRenderer = this.renderer.scoreRenderer.layout.getRendererForBar(this.renderer.staff.staveId, note.tieDestination.beat.voice.bar);\r\n                    if (endNoteRenderer && endNoteRenderer.staff === startNoteRenderer.staff) {\r\n                        endX =\r\n                            cx +\r\n                                endNoteRenderer.x +\r\n                                endNoteRenderer.getBeatX(note.tieDestination.beat, BeatXPosition.MiddleNotes);\r\n                    }\r\n                    else {\r\n                        endNoteRenderer = null;\r\n                    }\r\n                }\r\n                let heightOffset = NoteHeadGlyph.NoteHeadHeight * this.scale * NoteHeadGlyph.GraceScale * 0.5;\r\n                if (direction === BeamDirection.Up) {\r\n                    heightOffset = -heightOffset;\r\n                }\r\n                let endValue = beat.whammyBarPoints.length > 0\r\n                    ? this.getBendNoteValue(note, beat.whammyBarPoints[beat.whammyBarPoints.length - 1])\r\n                    : 0;\r\n                let endY = 0;\r\n                let bendTie = false;\r\n                if (this.BendNoteHeads.length > 0 && this.BendNoteHeads[0].containsNoteValue(endValue)) {\r\n                    endY = this.BendNoteHeads[0].getNoteValueY(endValue) + heightOffset;\r\n                    bendTie = true;\r\n                }\r\n                else if (endNoteRenderer &&\r\n                    ((note.isTieOrigin && note.tieDestination.beat.hasWhammyBar) || note.beat.isContinuedWhammy)) {\r\n                    endY = cy + endNoteRenderer.y + endNoteRenderer.getNoteY(note.tieDestination, NoteYPosition.Top);\r\n                    bendTie = true;\r\n                    if (direction === BeamDirection.Down) {\r\n                        endY += NoteHeadGlyph.NoteHeadHeight * this.scale;\r\n                    }\r\n                }\r\n                else if (note.isTieOrigin) {\r\n                    if (!endNoteRenderer) {\r\n                        endY = startY;\r\n                    }\r\n                    else {\r\n                        endY = cy + endNoteRenderer.y + endNoteRenderer.getNoteY(note.tieDestination, NoteYPosition.Top);\r\n                    }\r\n                    if (direction === BeamDirection.Down) {\r\n                        endY += NoteHeadGlyph.NoteHeadHeight * this.scale;\r\n                    }\r\n                }\r\n                switch (beat.whammyBarType) {\r\n                    case WhammyType.Hold:\r\n                        if (note.isTieOrigin) {\r\n                            TieGlyph.paintTie(canvas, this.scale, startX, startY, endX, endY, beatDirection === BeamDirection.Down, 22, 4);\r\n                        }\r\n                        break;\r\n                    case WhammyType.Dive:\r\n                        if (i === 0) {\r\n                            this.BendNoteHeads[0].x = endX - this.BendNoteHeads[0].noteHeadOffset;\r\n                            this.BendNoteHeads[0].y = cy + startNoteRenderer.y;\r\n                            this.BendNoteHeads[0].paint(0, 0, canvas);\r\n                            if (this.BendNoteHeads[0].containsNoteValue(endValue)) {\r\n                                endY += this.BendNoteHeads[0].y;\r\n                            }\r\n                        }\r\n                        if (bendTie) {\r\n                            this.drawBendSlur(canvas, startX, startY, endX, endY, direction === BeamDirection.Down, this.scale, slurText);\r\n                        }\r\n                        else if (note.isTieOrigin) {\r\n                            TieGlyph.paintTie(canvas, this.scale, startX, startY, endX, endY, beatDirection === BeamDirection.Down, 22, 4);\r\n                        }\r\n                        break;\r\n                    case WhammyType.Dip:\r\n                        if (whammyMode === exports.NotationMode.SongBook) {\r\n                            if (i === 0) {\r\n                                let simpleStartX = cx +\r\n                                    startNoteRenderer.x +\r\n                                    startNoteRenderer.getBeatX(this._beat, BeatXPosition.OnNotes) -\r\n                                    2 * this.scale;\r\n                                let simpleEndX = cx +\r\n                                    startNoteRenderer.x +\r\n                                    startNoteRenderer.getBeatX(this._beat, BeatXPosition.PostNotes) +\r\n                                    2 * this.scale;\r\n                                let middleX = (simpleStartX + simpleEndX) / 2;\r\n                                let text = (((this._beat.whammyBarPoints[1].value - this._beat.whammyBarPoints[0].value) / 4) |\r\n                                    0).toString();\r\n                                canvas.font = this.renderer.resources.tablatureFont;\r\n                                canvas.fillText(text, middleX, cy + this.y);\r\n                                let simpleStartY = cy + this.y + canvas.font.size + 2 * this.scale;\r\n                                let simpleEndY = simpleStartY + ScoreWhammyBarGlyph.SimpleDipHeight * this.scale;\r\n                                if (this._beat.whammyBarPoints[1].value > this._beat.whammyBarPoints[0].value) {\r\n                                    canvas.moveTo(simpleStartX, simpleEndY);\r\n                                    canvas.lineTo(middleX, simpleStartY);\r\n                                    canvas.lineTo(simpleEndX, simpleEndY);\r\n                                }\r\n                                else {\r\n                                    canvas.moveTo(simpleStartX, simpleStartY);\r\n                                    canvas.lineTo(middleX, simpleEndY);\r\n                                    canvas.lineTo(simpleEndX, simpleStartY);\r\n                                }\r\n                                canvas.stroke();\r\n                            }\r\n                            if (note.isTieOrigin) {\r\n                                TieGlyph.paintTie(canvas, this.scale, startX, startY, endX, endY, beatDirection === BeamDirection.Down, 22, 4);\r\n                            }\r\n                        }\r\n                        else {\r\n                            let middleX = (startX + endX) / 2;\r\n                            this.BendNoteHeads[0].x = middleX - this.BendNoteHeads[0].noteHeadOffset;\r\n                            this.BendNoteHeads[0].y = cy + startNoteRenderer.y;\r\n                            this.BendNoteHeads[0].paint(0, 0, canvas);\r\n                            let middleValue = this.getBendNoteValue(note, beat.whammyBarPoints[1]);\r\n                            let middleY = this.BendNoteHeads[0].getNoteValueY(middleValue) + heightOffset;\r\n                            this.drawBendSlur(canvas, startX, startY, middleX, middleY, direction === BeamDirection.Down, this.scale, slurText);\r\n                            this.BendNoteHeads[1].x = endX - this.BendNoteHeads[1].noteHeadOffset;\r\n                            this.BendNoteHeads[1].y = cy + startNoteRenderer.y;\r\n                            this.BendNoteHeads[1].paint(0, 0, canvas);\r\n                            endY = this.BendNoteHeads[1].getNoteValueY(endValue) + heightOffset;\r\n                            this.drawBendSlur(canvas, middleX, middleY, endX, endY, direction === BeamDirection.Down, this.scale, slurText);\r\n                        }\r\n                        break;\r\n                    case WhammyType.PrediveDive:\r\n                    case WhammyType.Predive:\r\n                        let preX = cx + startNoteRenderer.x + startNoteRenderer.getBeatX(note.beat, BeatXPosition.PreNotes);\r\n                        preX += startNoteRenderer.getPreNotesGlyphForBeat(note.beat)\r\n                            .prebendNoteHeadOffset;\r\n                        let preY = cy +\r\n                            startNoteRenderer.y +\r\n                            startNoteRenderer.getScoreY(startNoteRenderer.accidentalHelper.getNoteLineForValue(note.displayValue - ((note.beat.whammyBarPoints[0].value / 2) | 0), false)) +\r\n                            heightOffset;\r\n                        this.drawBendSlur(canvas, preX, preY, startX, startY, direction === BeamDirection.Down, this.scale, slurText);\r\n                        if (this.BendNoteHeads.length > 0) {\r\n                            this.BendNoteHeads[0].x = endX - this.BendNoteHeads[0].noteHeadOffset;\r\n                            this.BendNoteHeads[0].y = cy + startNoteRenderer.y;\r\n                            this.BendNoteHeads[0].paint(0, 0, canvas);\r\n                            this.drawBendSlur(canvas, startX, startY, endX, endY, direction === BeamDirection.Down, this.scale, slurText);\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            canvas.textAlign = textalign;\r\n        }\r\n        getBendNoteValue(note, bendPoint) {\r\n            // NOTE: bendpoints are in 1/4 tones, but the note values are in 1/2 notes.\r\n            return note.displayValueWithoutBend + ((bendPoint.value / 2) | 0);\r\n        }\r\n    }\r\n    ScoreWhammyBarGlyph.SimpleDipHeight = TabWhammyBarGlyph.PerHalfSize * 2;\r\n    ScoreWhammyBarGlyph.SimpleDipPadding = 2;\n\n    /**\r\n     * This simple glyph allows to put an empty region in to a BarRenderer.\r\n     */\r\n    class SpacingGlyph extends Glyph {\r\n        constructor(x, y, width) {\r\n            super(x, y);\r\n            this.width = width;\r\n        }\r\n    }\n\n    class PercussionNoteHeadGlyph extends MusicFontGlyph {\r\n        constructor(x, y, articulation, duration, isGrace) {\r\n            super(x, y, isGrace ? NoteHeadGlyph.GraceScale : 1, articulation.getSymbol(duration));\r\n            this._isGrace = isGrace;\r\n            this._articulation = articulation;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            let offset = this._isGrace ? this.scale : 0;\r\n            canvas.fillMusicFontSymbol(cx + this.x, cy + this.y + offset, this.glyphScale * this.scale, this.symbol, false);\r\n            if (this._articulation.techniqueSymbol !== MusicFontSymbol.None && this._articulation.techniqueSymbolPlacement === TextBaseline.Middle) {\r\n                canvas.fillMusicFontSymbol(cx + this.x, cy + this.y + offset, this.glyphScale * this.scale, this._articulation.techniqueSymbol, false);\r\n            }\r\n        }\r\n        doLayout() {\r\n            let scale = (this._isGrace ? NoteHeadGlyph.GraceScale : 1) * this.scale;\r\n            switch (this.symbol) {\r\n                case MusicFontSymbol.NoteheadWhole:\r\n                    this.width = 14;\r\n                    break;\r\n                case MusicFontSymbol.NoteheadCircleX:\r\n                case MusicFontSymbol.NoteheadDiamondWhite:\r\n                    this.width = 9;\r\n                    break;\r\n                case MusicFontSymbol.NoteheadHeavyXHat:\r\n                case MusicFontSymbol.NoteheadHeavyX:\r\n                    this.width = 13;\r\n                    break;\r\n                default:\r\n                    this.width = 10;\r\n                    break;\r\n            }\r\n            this.width = this.width * (this._isGrace ? NoteHeadGlyph.GraceScale : 1) * this.scale;\r\n            this.height = NoteHeadGlyph.NoteHeadHeight * scale;\r\n        }\r\n    }\n\n    class ArticStaccatoAboveGlyph extends MusicFontGlyph {\r\n        constructor(x, y) {\r\n            super(x, y, NoteHeadGlyph.GraceScale, MusicFontSymbol.ArticStaccatoAbove);\r\n        }\r\n        doLayout() {\r\n            this.width = NoteHeadGlyph.QuarterNoteHeadWidth * this.scale;\r\n            this.height = 7 * this.scale;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            super.paint(cx + 3 * this.scale, cy + 5 * this.scale, canvas);\r\n        }\r\n    }\n\n    class PictEdgeOfCymbalGlyph extends MusicFontGlyph {\r\n        constructor(x, y) {\r\n            super(x, y, 0.5, MusicFontSymbol.PictEdgeOfCymbal);\r\n        }\r\n        doLayout() {\r\n            this.width = 22 * this.scale;\r\n            this.height = 15 * this.scale;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            super.paint(cx - 3 * this.scale, cy + this.height, canvas);\r\n        }\r\n    }\n\n    class GuitarGolpeGlyph extends MusicFontGlyph {\r\n        constructor(x, y) {\r\n            super(x, y, NoteHeadGlyph.GraceScale, MusicFontSymbol.GuitarGolpe);\r\n        }\r\n        doLayout() {\r\n            this.width = 9 * this.scale;\r\n            this.height = 10 * this.scale;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            super.paint(cx, cy + this.height, canvas);\r\n        }\r\n    }\n\n    class ScoreBeatGlyph extends BeatOnNoteGlyphBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this._collisionOffset = -1000;\r\n            this._skipPaint = false;\r\n            this.noteHeads = null;\r\n            this.restGlyph = null;\r\n        }\r\n        getNoteX(note, requestedPosition) {\r\n            return this.noteHeads ? this.noteHeads.getNoteX(note, requestedPosition) : 0;\r\n        }\r\n        buildBoundingsLookup(beatBounds, cx, cy) {\r\n            if (this.noteHeads) {\r\n                this.noteHeads.buildBoundingsLookup(beatBounds, cx + this.x, cy + this.y);\r\n            }\r\n        }\r\n        getNoteY(note, requestedPosition) {\r\n            return this.noteHeads ? this.noteHeads.getNoteY(note, requestedPosition) : 0;\r\n        }\r\n        updateBeamingHelper() {\r\n            if (this.noteHeads) {\r\n                this.noteHeads.updateBeamingHelper(this.container.x + this.x);\r\n            }\r\n            else if (this.restGlyph) {\r\n                this.restGlyph.updateBeamingHelper(this.container.x + this.x);\r\n                if (this.renderer.bar.isMultiVoice && this._collisionOffset === -1000) {\r\n                    this._collisionOffset = this.renderer.helpers.collisionHelper.applyRestCollisionOffset(this.container.beat, this.restGlyph.y, this.renderer.getScoreHeight(1));\r\n                    this.y += this._collisionOffset;\r\n                    const existingRests = this.renderer.helpers.collisionHelper.restDurationsByDisplayTime;\r\n                    if (existingRests.has(this.container.beat.playbackStart) &&\r\n                        existingRests.get(this.container.beat.playbackStart).has(this.container.beat.playbackDuration) &&\r\n                        existingRests.get(this.container.beat.playbackStart).get(this.container.beat.playbackDuration) !== this.container.beat.id) {\r\n                        this._skipPaint = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            if (!this._skipPaint) {\r\n                super.paint(cx, cy, canvas);\r\n            }\r\n        }\r\n        doLayout() {\r\n            // create glyphs\r\n            let sr = this.renderer;\r\n            if (!this.container.beat.isEmpty) {\r\n                if (!this.container.beat.isRest) {\r\n                    //\r\n                    // Note heads\r\n                    //\r\n                    this.noteHeads = new ScoreNoteChordGlyph();\r\n                    this.noteHeads.beat = this.container.beat;\r\n                    this.noteHeads.beamingHelper = this.beamingHelper;\r\n                    let ghost = new GhostNoteContainerGlyph(false);\r\n                    ghost.renderer = this.renderer;\r\n                    for (let note of this.container.beat.notes) {\r\n                        if (note.isVisible) {\r\n                            this.createNoteGlyph(note);\r\n                            ghost.addParenthesis(note);\r\n                        }\r\n                    }\r\n                    this.addGlyph(this.noteHeads);\r\n                    if (!ghost.isEmpty) {\r\n                        this.addGlyph(new SpacingGlyph(0, 0, 4 *\r\n                            (this.container.beat.graceType !== GraceType.None ? NoteHeadGlyph.GraceScale : 1) *\r\n                            this.scale));\r\n                        this.addGlyph(ghost);\r\n                    }\r\n                    //\r\n                    // Whammy Bar\r\n                    if (this.container.beat.hasWhammyBar) {\r\n                        let whammy = new ScoreWhammyBarGlyph(this.container.beat);\r\n                        whammy.renderer = this.renderer;\r\n                        whammy.doLayout();\r\n                        this.container.ties.push(whammy);\r\n                    }\r\n                    //\r\n                    // Note dots\r\n                    //\r\n                    if (this.container.beat.dots > 0) {\r\n                        this.addGlyph(new SpacingGlyph(0, 0, 5 * this.scale));\r\n                        for (let i = 0; i < this.container.beat.dots; i++) {\r\n                            let group = new GlyphGroup(0, 0);\r\n                            for (let note of this.container.beat.notes) {\r\n                                this.createBeatDot(sr.getNoteLine(note), group);\r\n                            }\r\n                            this.addGlyph(group);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    let line = Math.ceil((this.renderer.bar.staff.standardNotationLineCount - 1) / 2) * 2;\r\n                    // this positioning is quite strange, for most staff line counts\r\n                    // the whole/rest are aligned as half below the whole rest. \r\n                    // but for staff line count 1 and 3 they are aligned centered on the same line. \r\n                    if (this.container.beat.duration === Duration.Whole &&\r\n                        this.renderer.bar.staff.standardNotationLineCount !== 1 &&\r\n                        this.renderer.bar.staff.standardNotationLineCount !== 3) {\r\n                        line -= 2;\r\n                    }\r\n                    this.restGlyph = new ScoreRestGlyph(0, sr.getScoreY(line), this.container.beat.duration);\r\n                    this.restGlyph.beat = this.container.beat;\r\n                    this.restGlyph.beamingHelper = this.beamingHelper;\r\n                    this.addGlyph(this.restGlyph);\r\n                    if (this.renderer.bar.isMultiVoice) {\r\n                        if (this.container.beat.voice.index === 0) {\r\n                            const restSizes = BeamingHelper.computeLineHeightsForRest(this.container.beat.duration);\r\n                            let restTop = this.restGlyph.y - sr.getScoreHeight(restSizes[0]);\r\n                            let restBottom = this.restGlyph.y + sr.getScoreHeight(restSizes[1]);\r\n                            this.renderer.helpers.collisionHelper.reserveBeatSlot(this.container.beat, restTop, restBottom);\r\n                        }\r\n                        else {\r\n                            this.renderer.helpers.collisionHelper.registerRest(this.container.beat);\r\n                        }\r\n                    }\r\n                    if (this.beamingHelper) {\r\n                        this.beamingHelper.applyRest(this.container.beat, line);\r\n                    }\r\n                    //\r\n                    // Note dots\r\n                    //\r\n                    if (this.container.beat.dots > 0) {\r\n                        this.addGlyph(new SpacingGlyph(0, 0, 5 * this.scale));\r\n                        for (let i = 0; i < this.container.beat.dots; i++) {\r\n                            let group = new GlyphGroup(0, 0);\r\n                            this.createBeatDot(line, group);\r\n                            this.addGlyph(group);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            super.doLayout();\r\n            if (this.container.beat.isEmpty) {\r\n                this.centerX = this.width / 2;\r\n            }\r\n            else if (this.container.beat.isRest) {\r\n                this.centerX = this.restGlyph.x + this.restGlyph.width / 2;\r\n            }\r\n            else {\r\n                this.centerX = this.noteHeads.x + this.noteHeads.width / 2;\r\n            }\r\n        }\r\n        createBeatDot(line, group) {\r\n            let sr = this.renderer;\r\n            group.addGlyph(new CircleGlyph(0, sr.getScoreY(line), 1.5 * this.scale));\r\n        }\r\n        createNoteHeadGlyph(n) {\r\n            let isGrace = this.container.beat.graceType !== GraceType.None;\r\n            if (n.beat.voice.bar.staff.isPercussion) {\r\n                const articulation = PercussionMapper.getArticulation(n);\r\n                if (articulation) {\r\n                    return new PercussionNoteHeadGlyph(0, 0, articulation, n.beat.duration, isGrace);\r\n                }\r\n                else {\r\n                    Logger.warning('Rendering', `No articulation found for percussion instrument ${n.percussionArticulation}`);\r\n                }\r\n            }\r\n            if (n.isDead) {\r\n                return new DeadNoteHeadGlyph(0, 0, isGrace);\r\n            }\r\n            if (n.beat.graceType === GraceType.BendGrace) {\r\n                return new NoteHeadGlyph(0, 0, Duration.Quarter, true);\r\n            }\r\n            if (n.harmonicType === HarmonicType.Natural) {\r\n                return new DiamondNoteHeadGlyph(0, 0, n.beat.duration, isGrace);\r\n            }\r\n            return new NoteHeadGlyph(0, 0, n.beat.duration, isGrace);\r\n        }\r\n        createNoteGlyph(n) {\r\n            if (n.beat.graceType === GraceType.BendGrace && !n.hasBend) {\r\n                return;\r\n            }\r\n            let sr = this.renderer;\r\n            let noteHeadGlyph = this.createNoteHeadGlyph(n);\r\n            // calculate y position\r\n            let line = sr.getNoteLine(n);\r\n            noteHeadGlyph.y = sr.getScoreY(line);\r\n            this.noteHeads.addNoteGlyph(noteHeadGlyph, n, line);\r\n            if (n.harmonicType !== HarmonicType.None && n.harmonicType !== HarmonicType.Natural) {\r\n                // create harmonic note head.\r\n                let harmonicFret = n.displayValue + n.harmonicPitch;\r\n                noteHeadGlyph = new DiamondNoteHeadGlyph(0, 0, n.beat.duration, this.container.beat.graceType !== GraceType.None);\r\n                line = sr.accidentalHelper.getNoteLineForValue(harmonicFret, false);\r\n                noteHeadGlyph.y = sr.getScoreY(line);\r\n                this.noteHeads.addNoteGlyph(noteHeadGlyph, n, line);\r\n            }\r\n            if (n.isStaccato && !this.noteHeads.aboveBeatEffects.has('Staccato')) {\r\n                this.noteHeads.belowBeatEffects.set('Staccato', new ArticStaccatoAboveGlyph(0, 0));\r\n            }\r\n            if (n.accentuated === AccentuationType.Normal && !this.noteHeads.aboveBeatEffects.has('Accent')) {\r\n                this.noteHeads.belowBeatEffects.set('Accent', new AccentuationGlyph(0, 0, AccentuationType.Normal));\r\n            }\r\n            if (n.accentuated === AccentuationType.Heavy && !this.noteHeads.aboveBeatEffects.has('HAccent')) {\r\n                this.noteHeads.belowBeatEffects.set('HAccent', new AccentuationGlyph(0, 0, AccentuationType.Heavy));\r\n            }\r\n            if (n.isPercussion) {\r\n                const articulation = PercussionMapper.getArticulation(n);\r\n                if (articulation && articulation.techniqueSymbolPlacement !== TextBaseline.Middle) {\r\n                    const effectContainer = articulation.techniqueSymbolPlacement === TextBaseline.Top\r\n                        ? this.noteHeads.aboveBeatEffects\r\n                        : this.noteHeads.belowBeatEffects;\r\n                    switch (articulation.techniqueSymbol) {\r\n                        case MusicFontSymbol.PictEdgeOfCymbal:\r\n                            effectContainer.set('PictEdgeOfCymbal', new PictEdgeOfCymbalGlyph(0, 0));\r\n                            break;\r\n                        case MusicFontSymbol.ArticStaccatoAbove:\r\n                            effectContainer.set('ArticStaccatoAbove', new ArticStaccatoAboveGlyph(0, 0));\r\n                            break;\r\n                        case MusicFontSymbol.StringsUpBow:\r\n                            effectContainer.set('StringsUpBow', new PickStrokeGlyph(0, 0, PickStroke.Up));\r\n                            break;\r\n                        case MusicFontSymbol.StringsDownBow:\r\n                            effectContainer.set('StringsDownBow', new PickStrokeGlyph(0, 0, PickStroke.Down));\r\n                            break;\r\n                        case MusicFontSymbol.GuitarGolpe:\r\n                            effectContainer.set('GuitarGolpe', new GuitarGolpeGlyph(0, 0));\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\n\n    class ScoreBrushGlyph extends Glyph {\r\n        constructor(beat) {\r\n            super(0, 0);\r\n            this._beat = beat;\r\n        }\r\n        doLayout() {\r\n            this.width = 10 * this.scale;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            let scoreBarRenderer = this.renderer;\r\n            let lineSize = scoreBarRenderer.lineOffset;\r\n            let startY = cy + this.y + (scoreBarRenderer.getNoteY(this._beat.maxNote, NoteYPosition.Bottom) - lineSize);\r\n            let endY = cy + this.y + scoreBarRenderer.getNoteY(this._beat.minNote, NoteYPosition.Top) + lineSize;\r\n            let arrowX = cx + this.x + this.width / 2;\r\n            let arrowSize = 8 * this.scale;\r\n            if (this._beat.brushType !== BrushType.None) {\r\n                let glyph = new NoteVibratoGlyph(0, 0, VibratoType.Slight, 1.2, true);\r\n                glyph.renderer = this.renderer;\r\n                glyph.doLayout();\r\n                let waveOffset = -glyph.height / 2;\r\n                if (this._beat.brushType === BrushType.ArpeggioUp) {\r\n                    let lineStartY = startY + arrowSize;\r\n                    let lineEndY = endY - arrowSize;\r\n                    glyph.width = Math.abs(lineEndY - lineStartY);\r\n                    canvas.beginRotate(cx + this.x + 5 * this.scale, lineEndY, -90);\r\n                    glyph.paint(0, waveOffset, canvas);\r\n                    canvas.endRotate();\r\n                    canvas.beginPath();\r\n                    canvas.moveTo(arrowX, endY);\r\n                    canvas.lineTo(arrowX + arrowSize / 2, endY - arrowSize);\r\n                    canvas.lineTo(arrowX - arrowSize / 2, endY - arrowSize);\r\n                    canvas.closePath();\r\n                    canvas.fill();\r\n                }\r\n                else if (this._beat.brushType === BrushType.ArpeggioDown) {\r\n                    let lineStartY = startY + arrowSize;\r\n                    let lineEndY = endY;\r\n                    glyph.width = Math.abs(lineEndY - lineStartY);\r\n                    canvas.beginRotate(cx + this.x + 5 * this.scale, lineStartY, 90);\r\n                    glyph.paint(0, waveOffset, canvas);\r\n                    canvas.endRotate();\r\n                    canvas.beginPath();\r\n                    canvas.moveTo(arrowX, startY);\r\n                    canvas.lineTo(arrowX + arrowSize / 2, startY + arrowSize);\r\n                    canvas.lineTo(arrowX - arrowSize / 2, startY + arrowSize);\r\n                    canvas.closePath();\r\n                    canvas.fill();\r\n                }\r\n            }\r\n        }\r\n    }\n\n    class ScoreBeatPreNotesGlyph extends BeatGlyphBase {\r\n        constructor() {\r\n            super();\r\n            this._prebends = null;\r\n            this.accidentals = null;\r\n        }\r\n        get prebendNoteHeadOffset() {\r\n            return this._prebends ? this._prebends.x + this._prebends.noteHeadOffset : 0;\r\n        }\r\n        doLayout() {\r\n            if (!this.container.beat.isRest) {\r\n                let accidentals = new AccidentalGroupGlyph();\r\n                let ghost = new GhostNoteContainerGlyph(true);\r\n                ghost.renderer = this.renderer;\r\n                this._prebends = new BendNoteHeadGroupGlyph(this.container.beat, true);\r\n                this._prebends.renderer = this.renderer;\r\n                for (let note of this.container.beat.notes) {\r\n                    if (note.isVisible) {\r\n                        if (note.hasBend) {\r\n                            switch (note.bendType) {\r\n                                case BendType.PrebendBend:\r\n                                case BendType.Prebend:\r\n                                case BendType.PrebendRelease:\r\n                                    this._prebends.addGlyph(note.displayValue - ((note.bendPoints[0].value / 2) | 0), false);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        else if (note.beat.hasWhammyBar) {\r\n                            switch (note.beat.whammyBarType) {\r\n                                case WhammyType.PrediveDive:\r\n                                case WhammyType.Predive:\r\n                                    this._prebends.addGlyph(note.displayValue - ((note.beat.whammyBarPoints[0].value / 2) | 0), false);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        this.createAccidentalGlyph(note, accidentals);\r\n                        ghost.addParenthesis(note);\r\n                    }\r\n                }\r\n                if (!this._prebends.isEmpty) {\r\n                    this.addGlyph(this._prebends);\r\n                    this.addGlyph(new SpacingGlyph(0, 0, 4 * (this.container.beat.graceType !== GraceType.None ? NoteHeadGlyph.GraceScale : 1) * this.scale));\r\n                }\r\n                if (this.container.beat.brushType !== BrushType.None) {\r\n                    this.addGlyph(new ScoreBrushGlyph(this.container.beat));\r\n                    this.addGlyph(new SpacingGlyph(0, 0, 4 * this.scale));\r\n                }\r\n                if (!ghost.isEmpty) {\r\n                    this.addGlyph(ghost);\r\n                    this.addGlyph(new SpacingGlyph(0, 0, 4 * (this.container.beat.graceType !== GraceType.None ? NoteHeadGlyph.GraceScale : 1) * this.scale));\r\n                }\r\n                if (!accidentals.isEmpty) {\r\n                    this.accidentals = accidentals;\r\n                    this.addGlyph(new SpacingGlyph(0, 0, 2 * (this.container.beat.graceType !== GraceType.None ? NoteHeadGlyph.GraceScale : 1) * this.scale));\r\n                    this.addGlyph(accidentals);\r\n                    this.addGlyph(new SpacingGlyph(0, 0, 2 * (this.container.beat.graceType !== GraceType.None ? NoteHeadGlyph.GraceScale : 1) * this.scale));\r\n                }\r\n            }\r\n            super.doLayout();\r\n        }\r\n        createAccidentalGlyph(n, accidentals) {\r\n            let sr = this.renderer;\r\n            let accidental = sr.accidentalHelper.applyAccidental(n);\r\n            let noteLine = sr.getNoteLine(n);\r\n            let isGrace = this.container.beat.graceType !== GraceType.None;\r\n            if (accidental !== AccidentalType.None) {\r\n                let g = new AccidentalGlyph(0, sr.getScoreY(noteLine), accidental, isGrace);\r\n                g.renderer = this.renderer;\r\n                accidentals.addGlyph(g);\r\n            }\r\n            if (n.harmonicType !== HarmonicType.None && n.harmonicType !== HarmonicType.Natural) {\r\n                let harmonicFret = n.displayValue + n.harmonicPitch;\r\n                accidental = sr.accidentalHelper.applyAccidentalForValue(n.beat, harmonicFret, isGrace, false);\r\n                noteLine = sr.accidentalHelper.getNoteLineForValue(harmonicFret, false);\r\n                let g = new AccidentalGlyph(0, sr.getScoreY(noteLine), accidental, isGrace);\r\n                g.renderer = this.renderer;\r\n                accidentals.addGlyph(g);\r\n            }\r\n        }\r\n    }\n\n    class DigitGlyph extends MusicFontGlyph {\r\n        constructor(x, y, digit, scale) {\r\n            super(x, y, scale, DigitGlyph.getSymbol(digit));\r\n            this._digit = 0;\r\n            this._scale = 0;\r\n            this._digit = digit;\r\n            this._scale = scale;\r\n        }\r\n        doLayout() {\r\n            this.width = this.getDigitWidth(this._digit) * this.scale * this._scale;\r\n        }\r\n        getDigitWidth(digit) {\r\n            switch (digit) {\r\n                case 0:\r\n                case 2:\r\n                case 3:\r\n                case 4:\r\n                case 5:\r\n                case 6:\r\n                case 7:\r\n                case 8:\r\n                case 9:\r\n                    return 14;\r\n                case 1:\r\n                    return 10;\r\n                default:\r\n                    return 0;\r\n            }\r\n        }\r\n        static getSymbol(digit) {\r\n            switch (digit) {\r\n                case 0:\r\n                    return MusicFontSymbol.TimeSig0;\r\n                case 1:\r\n                    return MusicFontSymbol.TimeSig1;\r\n                case 2:\r\n                    return MusicFontSymbol.TimeSig2;\r\n                case 3:\r\n                    return MusicFontSymbol.TimeSig3;\r\n                case 4:\r\n                    return MusicFontSymbol.TimeSig4;\r\n                case 5:\r\n                    return MusicFontSymbol.TimeSig5;\r\n                case 6:\r\n                    return MusicFontSymbol.TimeSig6;\r\n                case 7:\r\n                    return MusicFontSymbol.TimeSig7;\r\n                case 8:\r\n                    return MusicFontSymbol.TimeSig8;\r\n                case 9:\r\n                    return MusicFontSymbol.TimeSig9;\r\n                default:\r\n                    return MusicFontSymbol.None;\r\n            }\r\n        }\r\n    }\n\n    class NumberGlyph extends GlyphGroup {\r\n        constructor(x, y, num, scale = 1.0) {\r\n            super(x, y);\r\n            this._number = 0;\r\n            this._scale = 0;\r\n            this._number = num;\r\n            this._scale = scale;\r\n        }\r\n        doLayout() {\r\n            let i = this._number;\r\n            while (i > 0) {\r\n                let num = i % 10;\r\n                let gl = new DigitGlyph(0, 0, num, this._scale);\r\n                this.addGlyph(gl);\r\n                i = (i / 10) | 0;\r\n            }\r\n            if (this.glyphs) {\r\n                this.glyphs.reverse();\r\n                let cx = 0;\r\n                for (let j = 0, k = this.glyphs.length; j < k; j++) {\r\n                    let g = this.glyphs[j];\r\n                    g.x = cx;\r\n                    g.y = 0;\r\n                    g.renderer = this.renderer;\r\n                    g.doLayout();\r\n                    cx += g.width;\r\n                }\r\n                this.width = cx;\r\n            }\r\n        }\r\n    }\r\n    NumberGlyph.numberHeight = 18;\n\n    class TimeSignatureGlyph extends GlyphGroup {\r\n        constructor(x, y, numerator, denominator, isCommon) {\r\n            super(x, y);\r\n            this._numerator = 0;\r\n            this._denominator = 0;\r\n            this._numerator = numerator;\r\n            this._denominator = denominator;\r\n            this._isCommon = isCommon;\r\n        }\r\n        doLayout() {\r\n            if (this._isCommon && this._numerator === 2 && this._denominator === 2) {\r\n                let common = new MusicFontGlyph(0, 0, this.commonScale, MusicFontSymbol.TimeSigCutCommon);\r\n                common.width = 14 * this.scale;\r\n                this.addGlyph(common);\r\n                super.doLayout();\r\n            }\r\n            else if (this._isCommon && this._numerator === 4 && this._denominator === 4) {\r\n                let common = new MusicFontGlyph(0, 0, this.commonScale, MusicFontSymbol.TimeSigCommon);\r\n                common.width = 14 * this.scale;\r\n                this.addGlyph(common);\r\n                super.doLayout();\r\n            }\r\n            else {\r\n                const numberHeight = NumberGlyph.numberHeight * this.scale;\r\n                let numerator = new NumberGlyph(0, -numberHeight / 2, this._numerator, this.numberScale);\r\n                let denominator = new NumberGlyph(0, numberHeight / 2, this._denominator, this.numberScale);\r\n                this.addGlyph(numerator);\r\n                this.addGlyph(denominator);\r\n                super.doLayout();\r\n                for (let i = 0, j = this.glyphs.length; i < j; i++) {\r\n                    let g = this.glyphs[i];\r\n                    g.x = (this.width - g.width) / 2;\r\n                }\r\n            }\r\n        }\r\n    }\n\n    class ScoreTimeSignatureGlyph extends TimeSignatureGlyph {\r\n        get commonScale() {\r\n            return 1;\r\n        }\r\n        get numberScale() {\r\n            return 1;\r\n        }\r\n    }\n\n    class ScoreBendGlyph extends ScoreHelperNotesBaseGlyph {\r\n        constructor(beat) {\r\n            super(0, 0);\r\n            this._notes = [];\r\n            this._endNoteGlyph = null;\r\n            this._middleNoteGlyph = null;\r\n            this._beat = beat;\r\n        }\r\n        addBends(note) {\r\n            this._notes.push(note);\r\n            if (note.isTieOrigin) {\r\n                return;\r\n            }\r\n            switch (note.bendType) {\r\n                case BendType.Bend:\r\n                case BendType.PrebendRelease:\r\n                case BendType.PrebendBend:\r\n                    {\r\n                        let endGlyphs = this._endNoteGlyph;\r\n                        if (!endGlyphs) {\r\n                            endGlyphs = this._endNoteGlyph = new BendNoteHeadGroupGlyph(note.beat, false);\r\n                            endGlyphs.renderer = this.renderer;\r\n                            this.BendNoteHeads.push(endGlyphs);\r\n                        }\r\n                        let lastBendPoint = note.bendPoints[note.bendPoints.length - 1];\r\n                        endGlyphs.addGlyph(this.getBendNoteValue(note, lastBendPoint), lastBendPoint.value % 2 !== 0);\r\n                    }\r\n                    break;\r\n                case BendType.Release:\r\n                    {\r\n                        if (!note.isTieOrigin) {\r\n                            let endGlyphs = this._endNoteGlyph;\r\n                            if (!endGlyphs) {\r\n                                endGlyphs = this._endNoteGlyph = new BendNoteHeadGroupGlyph(note.beat, false);\r\n                                endGlyphs.renderer = this.renderer;\r\n                                this.BendNoteHeads.push(endGlyphs);\r\n                            }\r\n                            let lastBendPoint = note.bendPoints[note.bendPoints.length - 1];\r\n                            endGlyphs.addGlyph(this.getBendNoteValue(note, lastBendPoint), lastBendPoint.value % 2 !== 0);\r\n                        }\r\n                    }\r\n                    break;\r\n                case BendType.BendRelease:\r\n                    {\r\n                        let middleGlyphs = this._middleNoteGlyph;\r\n                        if (!middleGlyphs) {\r\n                            middleGlyphs = this._middleNoteGlyph = new BendNoteHeadGroupGlyph(note.beat, false);\r\n                            middleGlyphs.renderer = this.renderer;\r\n                            this.BendNoteHeads.push(middleGlyphs);\r\n                        }\r\n                        let middleBendPoint = note.bendPoints[1];\r\n                        middleGlyphs.addGlyph(this.getBendNoteValue(note, note.bendPoints[1]), middleBendPoint.value % 2 !== 0);\r\n                        let endGlyphs = this._endNoteGlyph;\r\n                        if (!endGlyphs) {\r\n                            endGlyphs = this._endNoteGlyph = new BendNoteHeadGroupGlyph(note.beat, false);\r\n                            endGlyphs.renderer = this.renderer;\r\n                            this.BendNoteHeads.push(endGlyphs);\r\n                        }\r\n                        let lastBendPoint = note.bendPoints[note.bendPoints.length - 1];\r\n                        endGlyphs.addGlyph(this.getBendNoteValue(note, lastBendPoint), lastBendPoint.value % 2 !== 0);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            // Draw note heads\r\n            let startNoteRenderer = this.renderer.scoreRenderer.layout.getRendererForBar(this.renderer.staff.staveId, this._beat.voice.bar);\r\n            let startX = cx + startNoteRenderer.x + startNoteRenderer.getBeatX(this._beat, BeatXPosition.MiddleNotes);\r\n            let endBeatX = cx + startNoteRenderer.x;\r\n            if (this._beat.isLastOfVoice) {\r\n                endBeatX += startNoteRenderer.postBeatGlyphsStart;\r\n            }\r\n            else {\r\n                endBeatX += startNoteRenderer.getBeatX(this._beat.nextBeat, BeatXPosition.PreNotes);\r\n            }\r\n            endBeatX -= 8 * this.scale;\r\n            let middleX = (startX + endBeatX) / 2;\r\n            if (this._middleNoteGlyph) {\r\n                this._middleNoteGlyph.x = middleX - this._middleNoteGlyph.noteHeadOffset;\r\n                this._middleNoteGlyph.y = cy + startNoteRenderer.y;\r\n                this._middleNoteGlyph.paint(0, 0, canvas);\r\n            }\r\n            if (this._endNoteGlyph) {\r\n                this._endNoteGlyph.x = endBeatX - this._endNoteGlyph.noteHeadOffset;\r\n                this._endNoteGlyph.y = cy + startNoteRenderer.y;\r\n                this._endNoteGlyph.paint(0, 0, canvas);\r\n            }\r\n            this._notes.sort((a, b) => {\r\n                return b.displayValue - a.displayValue;\r\n            });\r\n            let directionBeat = this._beat.graceType === GraceType.BendGrace ? this._beat.nextBeat : this._beat;\r\n            let direction = this._notes.length === 1 ? this.getTieDirection(directionBeat, startNoteRenderer) : BeamDirection.Up;\r\n            // draw slurs\r\n            for (let i = 0; i < this._notes.length; i++) {\r\n                let note = this._notes[i];\r\n                if (i > 0 && i >= ((this._notes.length / 2) | 0)) {\r\n                    direction = BeamDirection.Down;\r\n                }\r\n                let startY = cy + startNoteRenderer.y + startNoteRenderer.getNoteY(note, NoteYPosition.Top);\r\n                let heightOffset = NoteHeadGlyph.NoteHeadHeight * this.scale * NoteHeadGlyph.GraceScale * 0.5;\r\n                if (direction === BeamDirection.Down) {\r\n                    startY += NoteHeadGlyph.NoteHeadHeight * this.scale;\r\n                }\r\n                let slurText = note.bendStyle === BendStyle.Gradual ? 'grad.' : '';\r\n                if (note.isTieOrigin) {\r\n                    let endNote = note.tieDestination;\r\n                    let endNoteRenderer = !endNote\r\n                        ? null\r\n                        : this.renderer.scoreRenderer.layout.getRendererForBar(this.renderer.staff.staveId, endNote.beat.voice.bar);\r\n                    // if we have a line break we draw only a line until the end\r\n                    if (!endNoteRenderer || endNoteRenderer.staff !== startNoteRenderer.staff) {\r\n                        let endX = cx + startNoteRenderer.x + startNoteRenderer.width;\r\n                        let noteValueToDraw = note.tieDestination.realValue;\r\n                        startNoteRenderer.accidentalHelper.applyAccidentalForValue(note.beat, noteValueToDraw, false, true);\r\n                        let endY = cy +\r\n                            startNoteRenderer.y +\r\n                            startNoteRenderer.getScoreY(startNoteRenderer.accidentalHelper.getNoteLineForValue(noteValueToDraw, false));\r\n                        if (note.bendType === BendType.Hold || note.bendType === BendType.Prebend) {\r\n                            TieGlyph.paintTie(canvas, this.scale, startX, startY, endX, endY, direction === BeamDirection.Down, 22, 4);\r\n                        }\r\n                        else {\r\n                            this.drawBendSlur(canvas, startX, startY, endX, endY, direction === BeamDirection.Down, this.scale, slurText);\r\n                        }\r\n                    }\r\n                    else {\r\n                        let endX = cx + endNoteRenderer.x + endNoteRenderer.getBeatX(endNote.beat, BeatXPosition.MiddleNotes);\r\n                        let endY = cy + endNoteRenderer.y + endNoteRenderer.getNoteY(endNote, NoteYPosition.Top);\r\n                        if (direction === BeamDirection.Down) {\r\n                            endY += NoteHeadGlyph.NoteHeadHeight * this.scale;\r\n                        }\r\n                        if (note.bendType === BendType.Hold || note.bendType === BendType.Prebend) {\r\n                            TieGlyph.paintTie(canvas, this.scale, startX, startY, endX, endY, direction === BeamDirection.Down, 22, 4);\r\n                        }\r\n                        else {\r\n                            this.drawBendSlur(canvas, startX, startY, endX, endY, direction === BeamDirection.Down, this.scale, slurText);\r\n                        }\r\n                    }\r\n                    switch (note.bendType) {\r\n                        case BendType.Prebend:\r\n                        case BendType.PrebendBend:\r\n                        case BendType.PrebendRelease:\r\n                            let preX = cx + startNoteRenderer.x + startNoteRenderer.getBeatX(note.beat, BeatXPosition.PreNotes);\r\n                            preX += startNoteRenderer.getPreNotesGlyphForBeat(note.beat)\r\n                                .prebendNoteHeadOffset;\r\n                            let preY = cy +\r\n                                startNoteRenderer.y +\r\n                                startNoteRenderer.getScoreY(startNoteRenderer.accidentalHelper.getNoteLineForValue(note.displayValue - ((note.bendPoints[0].value / 2) | 0), false)) +\r\n                                heightOffset;\r\n                            this.drawBendSlur(canvas, preX, preY, startX, startY, direction === BeamDirection.Down, this.scale);\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    if (direction === BeamDirection.Up) {\r\n                        heightOffset = -heightOffset;\r\n                    }\r\n                    let endValue = 0;\r\n                    let endY = 0;\r\n                    switch (note.bendType) {\r\n                        case BendType.Bend:\r\n                            endValue = this.getBendNoteValue(note, note.bendPoints[note.bendPoints.length - 1]);\r\n                            endY = this._endNoteGlyph.getNoteValueY(endValue) + heightOffset;\r\n                            this.drawBendSlur(canvas, startX, startY, endBeatX, endY, direction === BeamDirection.Down, this.scale, slurText);\r\n                            break;\r\n                        case BendType.BendRelease:\r\n                            let middleValue = this.getBendNoteValue(note, note.bendPoints[1]);\r\n                            let middleY = this._middleNoteGlyph.getNoteValueY(middleValue) + heightOffset;\r\n                            this.drawBendSlur(canvas, startX, startY, middleX, middleY, direction === BeamDirection.Down, this.scale, slurText);\r\n                            endValue = this.getBendNoteValue(note, note.bendPoints[note.bendPoints.length - 1]);\r\n                            endY = this._endNoteGlyph.getNoteValueY(endValue) + heightOffset;\r\n                            this.drawBendSlur(canvas, middleX, middleY, endBeatX, endY, direction === BeamDirection.Down, this.scale, slurText);\r\n                            break;\r\n                        case BendType.Release:\r\n                            if (this.BendNoteHeads.length > 0) {\r\n                                endValue = this.getBendNoteValue(note, note.bendPoints[note.bendPoints.length - 1]);\r\n                                endY = this.BendNoteHeads[0].getNoteValueY(endValue) + heightOffset;\r\n                                this.drawBendSlur(canvas, startX, startY, endBeatX, endY, direction === BeamDirection.Down, this.scale, slurText);\r\n                            }\r\n                            break;\r\n                        case BendType.Prebend:\r\n                        case BendType.PrebendBend:\r\n                        case BendType.PrebendRelease:\r\n                            let preX = cx + startNoteRenderer.x + startNoteRenderer.getBeatX(note.beat, BeatXPosition.PreNotes);\r\n                            preX += startNoteRenderer.getPreNotesGlyphForBeat(note.beat)\r\n                                .prebendNoteHeadOffset;\r\n                            let preY = cy +\r\n                                startNoteRenderer.y +\r\n                                startNoteRenderer.getScoreY(startNoteRenderer.accidentalHelper.getNoteLineForValue(note.displayValue - ((note.bendPoints[0].value / 2) | 0), false)) +\r\n                                heightOffset;\r\n                            this.drawBendSlur(canvas, preX, preY, startX, startY, direction === BeamDirection.Down, this.scale);\r\n                            if (this.BendNoteHeads.length > 0) {\r\n                                endValue = this.getBendNoteValue(note, note.bendPoints[note.bendPoints.length - 1]);\r\n                                endY = this.BendNoteHeads[0].getNoteValueY(endValue) + heightOffset;\r\n                                this.drawBendSlur(canvas, startX, startY, endBeatX, endY, direction === BeamDirection.Down, this.scale, slurText);\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        getBendNoteValue(note, bendPoint) {\r\n            // NOTE: bendpoints are in 1/4 tones, but the note values are in 1/2 notes.\r\n            return note.displayValueWithoutBend + ((bendPoint.value / 2) | 0);\r\n        }\r\n    }\n\n    class ScoreLegatoGlyph extends TieGlyph {\r\n        constructor(startBeat, endBeat, forEnd = false) {\r\n            super(startBeat, endBeat, forEnd);\r\n        }\r\n        doLayout() {\r\n            super.doLayout();\r\n        }\r\n        getBeamDirection(beat, noteRenderer) {\r\n            if (beat.isRest) {\r\n                return BeamDirection.Up;\r\n            }\r\n            // invert direction (if stems go up, ties go down to not cross them)\r\n            switch (noteRenderer.getBeatDirection(beat)) {\r\n                case BeamDirection.Up:\r\n                    return BeamDirection.Down;\r\n                default:\r\n                    return BeamDirection.Up;\r\n            }\r\n        }\r\n        getStartY() {\r\n            if (this.startBeat.isRest) {\r\n                // below all lines\r\n                return this.startNoteRenderer.getScoreY(9);\r\n            }\r\n            switch (this.tieDirection) {\r\n                case BeamDirection.Up:\r\n                    // below lowest note\r\n                    return this.startNoteRenderer.getNoteY(this.startBeat.maxNote, NoteYPosition.Top);\r\n                default:\r\n                    return this.startNoteRenderer.getNoteY(this.startBeat.minNote, NoteYPosition.Bottom);\r\n            }\r\n        }\r\n        getEndY() {\r\n            const endNoteScoreRenderer = this.endNoteRenderer;\r\n            if (this.endBeat.isRest) {\r\n                switch (this.tieDirection) {\r\n                    case BeamDirection.Up:\r\n                        return endNoteScoreRenderer.getScoreY(9);\r\n                    default:\r\n                        return endNoteScoreRenderer.getScoreY(0);\r\n                }\r\n            }\r\n            const startBeamDirection = this.startNoteRenderer.getBeatDirection(this.startBeat);\r\n            const endBeamDirection = endNoteScoreRenderer.getBeatDirection(this.endBeat);\r\n            if (startBeamDirection !== endBeamDirection && this.startBeat.graceType === GraceType.None) {\r\n                if (endBeamDirection === this.tieDirection) {\r\n                    switch (this.tieDirection) {\r\n                        case BeamDirection.Up:\r\n                            // stem upper end\r\n                            return endNoteScoreRenderer.getNoteY(this.endBeat.maxNote, NoteYPosition.TopWithStem);\r\n                        default:\r\n                            // stem lower end\r\n                            return endNoteScoreRenderer.getNoteY(this.endBeat.minNote, NoteYPosition.BottomWithStem);\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this.tieDirection) {\r\n                        case BeamDirection.Up:\r\n                            // stem upper end\r\n                            return endNoteScoreRenderer.getNoteY(this.endBeat.maxNote, NoteYPosition.BottomWithStem);\r\n                        default:\r\n                            // stem lower end\r\n                            return endNoteScoreRenderer.getNoteY(this.endBeat.minNote, NoteYPosition.TopWithStem);\r\n                    }\r\n                }\r\n            }\r\n            switch (this.tieDirection) {\r\n                case BeamDirection.Up:\r\n                    // below lowest note\r\n                    return endNoteScoreRenderer.getNoteY(this.endBeat.maxNote, NoteYPosition.Top);\r\n                default:\r\n                    // above highest note\r\n                    return endNoteScoreRenderer.getNoteY(this.endBeat.minNote, NoteYPosition.Bottom);\r\n            }\r\n        }\r\n        getStartX() {\r\n            return this.startNoteRenderer.getBeatX(this.startBeat, BeatXPosition.MiddleNotes);\r\n        }\r\n        getEndX() {\r\n            const endBeamDirection = this.endNoteRenderer.getBeatDirection(this.endBeat);\r\n            return this.endNoteRenderer.getBeatX(this.endBeat, this.endBeat.duration > Duration.Whole &&\r\n                endBeamDirection === this.tieDirection ? BeatXPosition.Stem : BeatXPosition.MiddleNotes);\r\n        }\r\n    }\n\n    class ScoreSlideLineGlyph extends Glyph {\r\n        constructor(inType, outType, startNote, parent) {\r\n            super(0, 0);\r\n            this._outType = outType;\r\n            this._inType = inType;\r\n            this._startNote = startNote;\r\n            this._parent = parent;\r\n        }\r\n        doLayout() {\r\n            this.width = 0;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            this.paintSlideIn(cx, cy, canvas);\r\n            this.drawSlideOut(cx, cy, canvas);\r\n        }\r\n        paintSlideIn(cx, cy, canvas) {\r\n            let startNoteRenderer = this.renderer;\r\n            let sizeX = 12 * this.scale;\r\n            let endX = cx + startNoteRenderer.x + startNoteRenderer.getNoteX(this._startNote, NoteXPosition.Left) - 2 * this.scale;\r\n            let endY = cy + startNoteRenderer.y + startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Center);\r\n            let startX = endX - sizeX;\r\n            let startY = cy + startNoteRenderer.y;\r\n            switch (this._inType) {\r\n                case SlideInType.IntoFromBelow:\r\n                    startY += startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Bottom);\r\n                    break;\r\n                case SlideInType.IntoFromAbove:\r\n                    startY += startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Top);\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            let accidentalsWidth = this.getAccidentalsWidth(startNoteRenderer, this._startNote.beat);\r\n            startX -= accidentalsWidth;\r\n            endX -= accidentalsWidth;\r\n            this.paintSlideLine(canvas, false, startX, endX, startY, endY);\r\n        }\r\n        getAccidentalsWidth(renderer, beat) {\r\n            let preNotes = renderer.getPreNotesGlyphForBeat(beat);\r\n            if (preNotes && preNotes.accidentals) {\r\n                return preNotes.accidentals.width;\r\n            }\r\n            return 0;\r\n        }\r\n        drawSlideOut(cx, cy, canvas) {\r\n            let startNoteRenderer = this.renderer;\r\n            let sizeX = 12 * this.scale;\r\n            let startOffsetX = 3 * this.scale;\r\n            let endOffsetX = 1 * this.scale;\r\n            let offsetY = 2 * this.scale;\r\n            let startX = 0;\r\n            let startY = 0;\r\n            let endX = 0;\r\n            let endY = 0;\r\n            let waves = false;\r\n            switch (this._outType) {\r\n                case SlideOutType.Shift:\r\n                case SlideOutType.Legato:\r\n                    startX =\r\n                        cx +\r\n                            startNoteRenderer.x +\r\n                            startNoteRenderer.getBeatX(this._startNote.beat, BeatXPosition.PostNotes) +\r\n                            startOffsetX;\r\n                    startY = cy + startNoteRenderer.y + startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Center);\r\n                    if (this._startNote.slideTarget) {\r\n                        let endNoteRenderer = this.renderer.scoreRenderer.layout.getRendererForBar(this.renderer.staff.staveId, this._startNote.slideTarget.beat.voice.bar);\r\n                        if (!endNoteRenderer || endNoteRenderer.staff !== startNoteRenderer.staff) {\r\n                            endX = cx + startNoteRenderer.x + this._parent.x;\r\n                            endY = startY;\r\n                        }\r\n                        else {\r\n                            endX =\r\n                                cx +\r\n                                    endNoteRenderer.x +\r\n                                    endNoteRenderer.getBeatX(this._startNote.slideTarget.beat, BeatXPosition.PreNotes) -\r\n                                    endOffsetX;\r\n                            endY = cy + endNoteRenderer.y + endNoteRenderer.getNoteY(this._startNote.slideTarget, NoteYPosition.Center);\r\n                        }\r\n                        if (this._startNote.slideTarget.realValue > this._startNote.realValue) {\r\n                            startY += offsetY;\r\n                            endY -= offsetY;\r\n                        }\r\n                        else {\r\n                            startY -= offsetY;\r\n                            endY += offsetY;\r\n                        }\r\n                    }\r\n                    else {\r\n                        endX = cx + startNoteRenderer.x + this._parent.x;\r\n                        endY = startY;\r\n                    }\r\n                    break;\r\n                case SlideOutType.OutUp:\r\n                    startX = cx + startNoteRenderer.x + startNoteRenderer.getNoteX(this._startNote, NoteXPosition.Right);\r\n                    startY = cy + startNoteRenderer.y + startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Center);\r\n                    endX = startX + sizeX;\r\n                    endY = cy + startNoteRenderer.y + startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Top);\r\n                    break;\r\n                case SlideOutType.OutDown:\r\n                    startX = cx + startNoteRenderer.x + startNoteRenderer.getNoteX(this._startNote, NoteXPosition.Right);\r\n                    startY = cy + startNoteRenderer.y + startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Center);\r\n                    endX = startX + sizeX;\r\n                    endY = cy + startNoteRenderer.y + startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Bottom);\r\n                    break;\r\n                case SlideOutType.PickSlideUp:\r\n                    startX = cx + startNoteRenderer.x + startNoteRenderer.getNoteX(this._startNote, NoteXPosition.Right) + startOffsetX;\r\n                    startY = cy + startNoteRenderer.y + startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Center);\r\n                    endY = cy + startNoteRenderer.y + startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Top);\r\n                    endX = cx + startNoteRenderer.x + startNoteRenderer.width;\r\n                    if (this._startNote.beat.nextBeat &&\r\n                        this._startNote.beat.nextBeat.voice === this._startNote.beat.voice) {\r\n                        endX =\r\n                            cx +\r\n                                startNoteRenderer.x +\r\n                                startNoteRenderer.getBeatX(this._startNote.beat.nextBeat, BeatXPosition.PreNotes);\r\n                    }\r\n                    waves = true;\r\n                    break;\r\n                case SlideOutType.PickSlideDown:\r\n                    startX = cx + startNoteRenderer.x + startNoteRenderer.getNoteX(this._startNote, NoteXPosition.Right) + startOffsetX;\r\n                    startY = cy + startNoteRenderer.y + startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Center);\r\n                    endY = cy + startNoteRenderer.y + startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Bottom);\r\n                    endX = cx + startNoteRenderer.x + startNoteRenderer.width;\r\n                    if (this._startNote.beat.nextBeat &&\r\n                        this._startNote.beat.nextBeat.voice === this._startNote.beat.voice) {\r\n                        endX =\r\n                            cx +\r\n                                startNoteRenderer.x +\r\n                                startNoteRenderer.getBeatX(this._startNote.beat.nextBeat, BeatXPosition.PreNotes);\r\n                    }\r\n                    waves = true;\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            this.paintSlideLine(canvas, waves, startX, endX, startY, endY);\r\n        }\r\n        paintSlideLine(canvas, waves, startX, endX, startY, endY) {\r\n            if (waves) {\r\n                let glyph = new NoteVibratoGlyph(0, 0, VibratoType.Slight, 1.2);\r\n                glyph.renderer = this.renderer;\r\n                glyph.doLayout();\r\n                startY -= glyph.height / 2;\r\n                endY -= glyph.height / 2;\r\n                let b = endX - startX;\r\n                let a = endY - startY;\r\n                let c = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\r\n                glyph.width = b;\r\n                let angle = Math.asin(a / c) * (180 / Math.PI);\r\n                canvas.beginRotate(startX, startY, angle);\r\n                glyph.paint(0, 0, canvas);\r\n                canvas.endRotate();\r\n            }\r\n            else {\r\n                canvas.beginPath();\r\n                canvas.moveTo(startX, startY);\r\n                canvas.lineTo(endX, endY);\r\n                canvas.stroke();\r\n            }\r\n        }\r\n    }\n\n    class ScoreSlurGlyph extends ScoreLegatoGlyph {\r\n        constructor(startNote, endNote, forEnd = false) {\r\n            super(startNote.beat, endNote.beat, forEnd);\r\n            this._startNote = startNote;\r\n            this._endNote = endNote;\r\n        }\r\n        getTieHeight(startX, startY, endX, endY) {\r\n            return Math.log2(endX - startX + 1) * this.renderer.settings.notation.slurHeight;\r\n        }\r\n        getStartY() {\r\n            if (this.isStartCentered()) {\r\n                switch (this.tieDirection) {\r\n                    case BeamDirection.Up:\r\n                        // below lowest note\r\n                        return this.startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Top);\r\n                    default:\r\n                        return this.startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Bottom);\r\n                }\r\n            }\r\n            return this.startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Center);\r\n        }\r\n        getEndY() {\r\n            if (this.isEndCentered()) {\r\n                if (this.isEndOnStem()) {\r\n                    switch (this.tieDirection) {\r\n                        case BeamDirection.Up:\r\n                            return this.endNoteRenderer.getNoteY(this._endNote, NoteYPosition.TopWithStem);\r\n                        default:\r\n                            return this.endNoteRenderer.getNoteY(this._endNote, NoteYPosition.BottomWithStem);\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this.tieDirection) {\r\n                        case BeamDirection.Up:\r\n                            return this.endNoteRenderer.getNoteY(this._endNote, NoteYPosition.Top);\r\n                        default:\r\n                            return this.endNoteRenderer.getNoteY(this._endNote, NoteYPosition.Bottom);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                return this.endNoteRenderer.getNoteY(this._endNote, NoteYPosition.Center);\r\n            }\r\n        }\r\n        isStartCentered() {\r\n            return ((this._startNote === this._startNote.beat.maxNote && this.tieDirection === BeamDirection.Up) ||\r\n                (this._startNote === this._startNote.beat.minNote && this.tieDirection === BeamDirection.Down));\r\n        }\r\n        isEndCentered() {\r\n            return this._startNote.beat.graceType === GraceType.None && ((this._endNote === this._endNote.beat.maxNote && this.tieDirection === BeamDirection.Up) ||\r\n                (this._endNote === this._endNote.beat.minNote && this.tieDirection === BeamDirection.Down));\r\n        }\r\n        isEndOnStem() {\r\n            const endNoteScoreRenderer = this.endNoteRenderer;\r\n            const startBeamDirection = this.startNoteRenderer.getBeatDirection(this.startBeat);\r\n            const endBeamDirection = endNoteScoreRenderer.getBeatDirection(this.endBeat);\r\n            return startBeamDirection !== endBeamDirection && this.startBeat.graceType === GraceType.None;\r\n        }\r\n        getStartX() {\r\n            return this.isStartCentered()\r\n                ? this.startNoteRenderer.getBeatX(this._startNote.beat, BeatXPosition.MiddleNotes)\r\n                : this.startNoteRenderer.getNoteX(this._startNote, NoteXPosition.Right);\r\n        }\r\n        getEndX() {\r\n            if (this.isEndCentered()) {\r\n                if (this.isEndOnStem()) {\r\n                    return this.endNoteRenderer.getBeatX(this._endNote.beat, BeatXPosition.Stem);\r\n                }\r\n                else {\r\n                    return this.endNoteRenderer.getNoteX(this._endNote, NoteXPosition.Center);\r\n                }\r\n            }\r\n            else {\r\n                return this.endNoteRenderer.getBeatX(this._endNote.beat, BeatXPosition.PreNotes);\r\n            }\r\n        }\r\n    }\n\n    class ScoreTieGlyph extends TieGlyph {\r\n        constructor(startNote, endNote, forEnd = false) {\r\n            super(!startNote ? null : startNote.beat, !endNote ? null : endNote.beat, forEnd);\r\n            this.startNote = startNote;\r\n            this.endNote = endNote;\r\n        }\r\n        shouldDrawBendSlur() {\r\n            return this.renderer.settings.notation.extendBendArrowsOnTiedNotes && !!this.startNote.bendOrigin && this.startNote.isTieOrigin;\r\n        }\r\n        doLayout() {\r\n            super.doLayout();\r\n        }\r\n        getBeamDirection(beat, noteRenderer) {\r\n            // invert direction (if stems go up, ties go down to not cross them)\r\n            switch (noteRenderer.getBeatDirection(beat)) {\r\n                case BeamDirection.Up:\r\n                    return BeamDirection.Down;\r\n                default:\r\n                    return BeamDirection.Up;\r\n            }\r\n        }\r\n        getStartY() {\r\n            if (this.startBeat.isRest) {\r\n                // below all lines\r\n                return this.startNoteRenderer.getScoreY(9);\r\n            }\r\n            switch (this.tieDirection) {\r\n                case BeamDirection.Up:\r\n                    // below lowest note\r\n                    return this.startNoteRenderer.getNoteY(this.startNote, NoteYPosition.Top);\r\n                default:\r\n                    return this.startNoteRenderer.getNoteY(this.startNote, NoteYPosition.Bottom);\r\n            }\r\n        }\r\n        getEndY() {\r\n            const endNoteScoreRenderer = this.endNoteRenderer;\r\n            if (this.endBeat.isRest) {\r\n                switch (this.tieDirection) {\r\n                    case BeamDirection.Up:\r\n                        return endNoteScoreRenderer.getScoreY(9);\r\n                    default:\r\n                        return endNoteScoreRenderer.getScoreY(0);\r\n                }\r\n            }\r\n            switch (this.tieDirection) {\r\n                case BeamDirection.Up:\r\n                    return endNoteScoreRenderer.getNoteY(this.endNote, NoteYPosition.Top);\r\n                default:\r\n                    return endNoteScoreRenderer.getNoteY(this.endNote, NoteYPosition.Bottom);\r\n            }\r\n        }\r\n        getStartX() {\r\n            return this.startNoteRenderer.getBeatX(this.startNote.beat, BeatXPosition.PostNotes);\r\n        }\r\n        getEndX() {\r\n            return this.endNoteRenderer.getBeatX(this.endNote.beat, BeatXPosition.PreNotes);\r\n        }\r\n    }\n\n    class ScoreBeatContainerGlyph extends BeatContainerGlyph {\r\n        constructor(beat, voiceContainer) {\r\n            super(beat, voiceContainer);\r\n            this._bend = null;\r\n            this._effectSlur = null;\r\n            this._effectEndSlur = null;\r\n        }\r\n        doLayout() {\r\n            this._effectSlur = null;\r\n            this._effectEndSlur = null;\r\n            super.doLayout();\r\n            if (this.beat.isLegatoOrigin) {\r\n                // only create slur for very first origin of \"group\"\r\n                if (!this.beat.previousBeat || !this.beat.previousBeat.isLegatoOrigin) {\r\n                    // tie with end beat\r\n                    let destination = this.beat.nextBeat;\r\n                    while (destination.nextBeat && destination.nextBeat.isLegatoDestination) {\r\n                        destination = destination.nextBeat;\r\n                    }\r\n                    this.ties.push(new ScoreLegatoGlyph(this.beat, destination, false));\r\n                }\r\n            }\r\n            else if (this.beat.isLegatoDestination) {\r\n                // only create slur for last destination of \"group\"\r\n                if (!this.beat.isLegatoOrigin) {\r\n                    let origin = this.beat.previousBeat;\r\n                    while (origin.previousBeat && origin.previousBeat.isLegatoOrigin) {\r\n                        origin = origin.previousBeat;\r\n                    }\r\n                    this.ties.push(new ScoreLegatoGlyph(origin, this.beat, true));\r\n                }\r\n            }\r\n            if (this._bend) {\r\n                this._bend.renderer = this.renderer;\r\n                this._bend.doLayout();\r\n                this.updateWidth();\r\n            }\r\n        }\r\n        createTies(n) {\r\n            // create a tie if any effect requires it\r\n            if (!n.isVisible) {\r\n                return;\r\n            }\r\n            // NOTE: we create 2 tie glyphs if we have a line break inbetween\r\n            // the two notes\r\n            if (n.isTieOrigin &&\r\n                !n.hasBend &&\r\n                !n.beat.hasWhammyBar &&\r\n                n.beat.graceType !== GraceType.BendGrace &&\r\n                n.tieDestination &&\r\n                n.tieDestination.isVisible) {\r\n                let tie = new ScoreTieGlyph(n, n.tieDestination, false);\r\n                this.ties.push(tie);\r\n            }\r\n            if (n.isTieDestination && !n.tieOrigin.hasBend && !n.beat.hasWhammyBar) {\r\n                let tie = new ScoreTieGlyph(n.tieOrigin, n, true);\r\n                this.ties.push(tie);\r\n            }\r\n            // TODO: depending on the type we have other positioning\r\n            // we should place glyphs in the preNotesGlyph or postNotesGlyph if needed\r\n            if (n.slideInType !== SlideInType.None || n.slideOutType !== SlideOutType.None) {\r\n                let l = new ScoreSlideLineGlyph(n.slideInType, n.slideOutType, n, this);\r\n                this.ties.push(l);\r\n            }\r\n            if (n.isSlurOrigin && n.slurDestination && n.slurDestination.isVisible) {\r\n                let tie = new ScoreSlurGlyph(n, n.slurDestination, false);\r\n                this.ties.push(tie);\r\n            }\r\n            if (n.isSlurDestination) {\r\n                let tie = new ScoreSlurGlyph(n.slurOrigin, n, true);\r\n                this.ties.push(tie);\r\n            }\r\n            // start effect slur on first beat\r\n            if (!this._effectSlur && n.isEffectSlurOrigin && n.effectSlurDestination) {\r\n                this._effectSlur = new ScoreSlurGlyph(n, n.effectSlurDestination, false);\r\n                this.ties.push(this._effectSlur);\r\n            }\r\n            // end effect slur on last beat\r\n            if (!this._effectEndSlur && n.beat.isEffectSlurDestination && n.beat.effectSlurOrigin) {\r\n                let direction = this.onNotes.beamingHelper.direction;\r\n                let startNote = direction === BeamDirection.Up ? n.beat.effectSlurOrigin.minNote : n.beat.effectSlurOrigin.maxNote;\r\n                let endNote = direction === BeamDirection.Up ? n.beat.minNote : n.beat.maxNote;\r\n                this._effectEndSlur = new ScoreSlurGlyph(startNote, endNote, true);\r\n                this.ties.push(this._effectEndSlur);\r\n            }\r\n            if (n.hasBend) {\r\n                if (!this._bend) {\r\n                    this._bend = new ScoreBendGlyph(n.beat);\r\n                    this._bend.renderer = this.renderer;\r\n                    this.ties.push(this._bend);\r\n                }\r\n                this._bend.addBends(n);\r\n            }\r\n        }\r\n    }\n\n    /**\r\n     * This BarRenderer renders a bar using standard music notation.\r\n     */\r\n    class ScoreBarRenderer extends BarRendererBase {\r\n        constructor(renderer, bar) {\r\n            super(renderer, bar);\r\n            this.simpleWhammyOverflow = 0;\r\n            this._firstLineY = 0;\r\n            this._startSpacing = false;\r\n            this.accidentalHelper = new AccidentalHelper(this);\r\n        }\r\n        getBeatDirection(beat) {\r\n            return this.helpers.getBeamingHelperForBeat(beat).direction;\r\n        }\r\n        get lineOffset() {\r\n            return (BarRendererBase.LineSpacing + 1) * this.scale;\r\n        }\r\n        updateSizes() {\r\n            let res = this.resources;\r\n            let glyphOverflow = res.tablatureFont.size / 2 + res.tablatureFont.size * 0.2;\r\n            this.topPadding = glyphOverflow * this.scale;\r\n            this.bottomPadding = glyphOverflow * this.scale;\r\n            this.height = this.lineOffset * 4 + this.topPadding + this.bottomPadding;\r\n            this.updateFirstLineY();\r\n            super.updateSizes();\r\n        }\r\n        updateFirstLineY() {\r\n            let fullLineHeight = this.lineOffset * 4;\r\n            let actualLineHeight = (this.bar.staff.standardNotationLineCount - 1) * this.lineOffset;\r\n            this._firstLineY = (fullLineHeight - actualLineHeight) / 2;\r\n        }\r\n        doLayout() {\r\n            this.updateFirstLineY();\r\n            super.doLayout();\r\n            if (!this.bar.isEmpty && this.accidentalHelper.maxLineBeat) {\r\n                let top = this.getScoreY(-2);\r\n                let bottom = this.getScoreY(6);\r\n                let whammyOffset = this.simpleWhammyOverflow;\r\n                this.registerOverflowTop(whammyOffset);\r\n                let maxNoteY = this.getScoreY(this.accidentalHelper.maxLine);\r\n                let maxNoteHelper = this.helpers.getBeamingHelperForBeat(this.accidentalHelper.maxLineBeat);\r\n                if (maxNoteHelper.direction === BeamDirection.Up) {\r\n                    maxNoteY -= this.getStemSize(maxNoteHelper);\r\n                    maxNoteY -= maxNoteHelper.fingeringCount * this.resources.graceFont.size;\r\n                    if (maxNoteHelper.hasTuplet) {\r\n                        maxNoteY -= this.resources.effectFont.size * 2;\r\n                    }\r\n                }\r\n                if (maxNoteHelper.hasTuplet) {\r\n                    maxNoteY -= this.resources.effectFont.size * 1.5;\r\n                }\r\n                if (maxNoteY < top) {\r\n                    this.registerOverflowTop(Math.abs(maxNoteY) + whammyOffset);\r\n                }\r\n                let minNoteY = this.getScoreY(this.accidentalHelper.minLine);\r\n                let minNoteHelper = this.helpers.getBeamingHelperForBeat(this.accidentalHelper.minLineBeat);\r\n                if (minNoteHelper.direction === BeamDirection.Down) {\r\n                    minNoteY += this.getStemSize(minNoteHelper);\r\n                    minNoteY += minNoteHelper.fingeringCount * this.resources.graceFont.size;\r\n                }\r\n                if (minNoteY > bottom) {\r\n                    this.registerOverflowBottom(Math.abs(minNoteY) - bottom);\r\n                }\r\n            }\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            super.paint(cx, cy, canvas);\r\n            this.paintBeams(cx, cy, canvas);\r\n            this.paintTuplets(cx, cy, canvas);\r\n        }\r\n        paintTuplets(cx, cy, canvas) {\r\n            for (let voice of this.bar.voices) {\r\n                if (this.hasVoiceContainer(voice)) {\r\n                    let container = this.getVoiceContainer(voice);\r\n                    for (let tupletGroup of container.tupletGroups) {\r\n                        this.paintTupletHelper(cx + this.beatGlyphsStart, cy, canvas, tupletGroup);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        paintBeams(cx, cy, canvas) {\r\n            for (let i = 0, j = this.helpers.beamHelpers.length; i < j; i++) {\r\n                let v = this.helpers.beamHelpers[i];\r\n                for (let k = 0, l = v.length; k < l; k++) {\r\n                    let h = v[k];\r\n                    this.paintBeamHelper(cx + this.beatGlyphsStart, cy, canvas, h);\r\n                }\r\n            }\r\n        }\r\n        paintBeamHelper(cx, cy, canvas, h) {\r\n            canvas.color = h.voice.index === 0 ? this.resources.mainGlyphColor : this.resources.secondaryGlyphColor;\r\n            // TODO: draw stem at least at the center of the score staff.\r\n            // check if we need to paint simple footer\r\n            if (!h.isRestBeamHelper) {\r\n                if (h.beats.length === 1) {\r\n                    this.paintFlag(cx, cy, canvas, h);\r\n                }\r\n                else {\r\n                    this.paintBar(cx, cy, canvas, h);\r\n                }\r\n            }\r\n        }\r\n        paintTupletHelper(cx, cy, canvas, h) {\r\n            let res = this.resources;\r\n            let oldAlign = canvas.textAlign;\r\n            let oldBaseLine = canvas.textBaseline;\r\n            canvas.color = h.voice.index === 0 ? this.resources.mainGlyphColor : this.resources.secondaryGlyphColor;\r\n            canvas.textAlign = TextAlign.Center;\r\n            canvas.textBaseline = TextBaseline.Middle;\r\n            let s;\r\n            let num = h.beats[0].tupletNumerator;\r\n            let den = h.beats[0].tupletDenominator;\r\n            // list as in Guitar Pro 7. for certain tuplets only the numerator is shown\r\n            if (num === 2 && den === 3) {\r\n                s = '2';\r\n            }\r\n            else if (num === 3 && den === 2) {\r\n                s = '3';\r\n            }\r\n            else if (num === 4 && den === 6) {\r\n                s = '4';\r\n            }\r\n            else if (num === 5 && den === 4) {\r\n                s = '5';\r\n            }\r\n            else if (num === 6 && den === 4) {\r\n                s = '6';\r\n            }\r\n            else if (num === 7 && den === 4) {\r\n                s = '7';\r\n            }\r\n            else if (num === 9 && den === 8) {\r\n                s = '9';\r\n            }\r\n            else if (num === 10 && den === 8) {\r\n                s = '10';\r\n            }\r\n            else if (num === 11 && den === 8) {\r\n                s = '11';\r\n            }\r\n            else if (num === 12 && den === 8) {\r\n                s = '12';\r\n            }\r\n            else if (num === 13 && den === 8) {\r\n                s = '13';\r\n            }\r\n            else {\r\n                s = num + ':' + den;\r\n            }\r\n            // check if we need to paint simple footer\r\n            let offset = 10 * this.scale;\r\n            let size = 5 * this.scale;\r\n            if (h.beats.length === 1 || !h.isFull) {\r\n                for (let i = 0, j = h.beats.length; i < j; i++) {\r\n                    let beat = h.beats[i];\r\n                    let beamingHelper = this.helpers.beamHelperLookup[h.voice.index].get(beat.index);\r\n                    if (!beamingHelper) {\r\n                        continue;\r\n                    }\r\n                    let direction = beamingHelper.direction;\r\n                    let tupletX = beamingHelper.getBeatLineX(beat);\r\n                    let tupletY = this.calculateBeamYWithDirection(beamingHelper, tupletX, direction);\r\n                    if (direction === BeamDirection.Down) {\r\n                        offset *= -1;\r\n                        size *= -1;\r\n                    }\r\n                    canvas.font = res.effectFont;\r\n                    canvas.fillText(s, cx + this.x + tupletX, cy + this.y + tupletY - offset - size);\r\n                }\r\n            }\r\n            else {\r\n                let firstBeat = h.beats[0];\r\n                let lastBeat = h.beats[h.beats.length - 1];\r\n                let firstNonRestBeat = null;\r\n                let lastNonRestBeat = null;\r\n                for (let i = 0; i < h.beats.length; i++) {\r\n                    if (!h.beats[i].isRest) {\r\n                        firstNonRestBeat = h.beats[i];\r\n                        break;\r\n                    }\r\n                }\r\n                for (let i = h.beats.length - 1; i >= 0; i--) {\r\n                    if (!h.beats[i].isRest) {\r\n                        lastNonRestBeat = h.beats[i];\r\n                        break;\r\n                    }\r\n                }\r\n                let isRestOnly = false;\r\n                if (!firstNonRestBeat) {\r\n                    firstNonRestBeat = firstBeat;\r\n                    isRestOnly = true;\r\n                }\r\n                if (!lastNonRestBeat) {\r\n                    lastNonRestBeat = lastBeat;\r\n                }\r\n                //\r\n                // Calculate the overall area of the tuplet bracket\r\n                let firstBeamingHelper = this.helpers.beamHelperLookup[h.voice.index].get(firstBeat.index);\r\n                let lastBeamingHelper = this.helpers.beamHelperLookup[h.voice.index].get(lastBeat.index);\r\n                let startX = firstBeamingHelper.getBeatLineX(firstBeat);\r\n                let endX = lastBeamingHelper.getBeatLineX(lastBeat);\r\n                //\r\n                // calculate the y positions for our bracket\r\n                let firstNonRestBeamingHelper = this.helpers.beamHelperLookup[h.voice.index].get(firstNonRestBeat.index);\r\n                let lastNonRestBeamingHelper = this.helpers.beamHelperLookup[h.voice.index].get(lastNonRestBeat.index);\r\n                let direction = firstBeamingHelper.direction;\r\n                let startY = this.calculateBeamYWithDirection(firstNonRestBeamingHelper, startX, direction);\r\n                let endY = this.calculateBeamYWithDirection(lastNonRestBeamingHelper, endX, direction);\r\n                if (isRestOnly) {\r\n                    startY = Math.max(startY, endY);\r\n                    endY = startY;\r\n                }\r\n                //\r\n                // Calculate how many space the text will need\r\n                canvas.font = res.effectFont;\r\n                let sw = canvas.measureText(s);\r\n                let sp = 3 * this.scale;\r\n                //\r\n                // Calculate the offsets where to break the bracket\r\n                let middleX = (startX + endX) / 2;\r\n                let offset1X = middleX - sw / 2 - sp;\r\n                let offset2X = middleX + sw / 2 + sp;\r\n                let k = (endY - startY) / (endX - startX);\r\n                let d = startY - k * startX;\r\n                let offset1Y = k * offset1X + d;\r\n                let middleY = k * middleX + d;\r\n                let offset2Y = k * offset2X + d;\r\n                if (direction === BeamDirection.Down) {\r\n                    offset *= -1;\r\n                    size *= -1;\r\n                }\r\n                //\r\n                // draw the bracket\r\n                canvas.beginPath();\r\n                canvas.moveTo(cx + this.x + startX, (cy + this.y + startY - offset) | 0);\r\n                canvas.lineTo(cx + this.x + startX, (cy + this.y + startY - offset - size) | 0);\r\n                canvas.lineTo(cx + this.x + offset1X, (cy + this.y + offset1Y - offset - size) | 0);\r\n                canvas.stroke();\r\n                canvas.beginPath();\r\n                canvas.moveTo(cx + this.x + offset2X, (cy + this.y + offset2Y - offset - size) | 0);\r\n                canvas.lineTo(cx + this.x + endX, (cy + this.y + endY - offset - size) | 0);\r\n                canvas.lineTo(cx + this.x + endX, (cy + this.y + endY - offset) | 0);\r\n                canvas.stroke();\r\n                //\r\n                // Draw the string\r\n                canvas.fillText(s, cx + this.x + middleX, cy + this.y + middleY - offset - size);\r\n            }\r\n            canvas.textAlign = oldAlign;\r\n            canvas.textBaseline = oldBaseLine;\r\n        }\r\n        getStemSize(helper) {\r\n            let size = helper.beats.length === 1\r\n                ? this.getFlagStemSize(helper.shortestDuration)\r\n                : this.getBarStemSize(helper.shortestDuration);\r\n            if (helper.isGrace) {\r\n                size = size * NoteHeadGlyph.GraceScale;\r\n            }\r\n            return size;\r\n        }\r\n        getBarStemSize(duration) {\r\n            let size = 0;\r\n            switch (duration) {\r\n                case Duration.QuadrupleWhole:\r\n                case Duration.Half:\r\n                case Duration.Quarter:\r\n                case Duration.Eighth:\r\n                case Duration.Sixteenth:\r\n                    size = 6;\r\n                    break;\r\n                case Duration.ThirtySecond:\r\n                    size = 8;\r\n                    break;\r\n                case Duration.SixtyFourth:\r\n                    size = 9;\r\n                    break;\r\n                case Duration.OneHundredTwentyEighth:\r\n                    size = 9;\r\n                    break;\r\n                case Duration.TwoHundredFiftySixth:\r\n                    size = 10;\r\n                    break;\r\n                default:\r\n                    size = 0;\r\n                    break;\r\n            }\r\n            return this.getScoreHeight(size);\r\n        }\r\n        getFlagStemSize(duration) {\r\n            let size = 0;\r\n            switch (duration) {\r\n                case Duration.QuadrupleWhole:\r\n                case Duration.Half:\r\n                case Duration.Quarter:\r\n                case Duration.Eighth:\r\n                case Duration.Sixteenth:\r\n                case Duration.ThirtySecond:\r\n                case Duration.SixtyFourth:\r\n                case Duration.OneHundredTwentyEighth:\r\n                case Duration.TwoHundredFiftySixth:\r\n                    size = 6;\r\n                    break;\r\n                default:\r\n                    size = 0;\r\n                    break;\r\n            }\r\n            return this.getScoreHeight(size);\r\n        }\r\n        get middleYPosition() {\r\n            return this.getScoreY(this.bar.staff.standardNotationLineCount - 1);\r\n        }\r\n        getNoteY(note, requestedPosition) {\r\n            let y = super.getNoteY(note, requestedPosition);\r\n            if (isNaN(y)) {\r\n                // NOTE: some might request the note position before the glyphs have been created\r\n                // e.g. the beaming helper, for these we just need a rough\r\n                // estimate on the position\r\n                const line = AccidentalHelper.computeLineWithoutAccidentals(this.bar, note);\r\n                y = this.getScoreY(line);\r\n            }\r\n            return y;\r\n        }\r\n        calculateBeamY(h, x) {\r\n            return this.calculateBeamYWithDirection(h, x, h.direction);\r\n        }\r\n        applyLayoutingInfo() {\r\n            const result = super.applyLayoutingInfo();\r\n            if (result && this.bar.isMultiVoice) {\r\n                // consider rest overflows\r\n                let top = this.getScoreY(-2);\r\n                let bottom = this.getScoreY(6);\r\n                let minMax = this.helpers.collisionHelper.getBeatMinMaxY();\r\n                if (minMax[0] < top) {\r\n                    this.registerOverflowTop(Math.abs(minMax[0]));\r\n                }\r\n                if (minMax[1] > bottom) {\r\n                    this.registerOverflowBottom(Math.abs(minMax[1]) - bottom);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        calculateBeamYWithDirection(h, x, direction) {\r\n            let stemSize = this.getStemSize(h);\r\n            if (!h.drawingInfos.has(direction)) {\r\n                let drawingInfo = new BeamingHelperDrawInfo();\r\n                h.drawingInfos.set(direction, drawingInfo);\r\n                // the beaming logic works like this: \r\n                // 1. we take the first and last note, add the stem, and put a diagnal line between them. \r\n                // 2. the height of the diagonal line must not exceed a max height, \r\n                //    - if this is the case, the line on the more distant note just gets longer\r\n                // 3. any middle elements (notes or rests) shift this diagonal line up/down to avoid overlaps\r\n                const firstBeat = h.beats[0];\r\n                const lastBeat = h.beats[h.beats.length - 1];\r\n                let isRest = h.isRestBeamHelper;\r\n                // 1. put direct diagonal line.\r\n                drawingInfo.startBeat = firstBeat;\r\n                drawingInfo.startX = h.getBeatLineX(firstBeat);\r\n                if (isRest) {\r\n                    drawingInfo.startY = direction === BeamDirection.Up\r\n                        ? this.getScoreY(h.minRestLine)\r\n                        : this.getScoreY(h.maxRestLine);\r\n                }\r\n                else {\r\n                    drawingInfo.startY = direction === BeamDirection.Up\r\n                        ? this.getScoreY(this.accidentalHelper.getMinLine(firstBeat)) - stemSize\r\n                        : this.getScoreY(this.accidentalHelper.getMaxLine(firstBeat)) + stemSize;\r\n                }\r\n                drawingInfo.endBeat = lastBeat;\r\n                drawingInfo.endX = h.getBeatLineX(lastBeat);\r\n                if (isRest) {\r\n                    drawingInfo.endY = direction === BeamDirection.Up\r\n                        ? this.getScoreY(h.minRestLine)\r\n                        : this.getScoreY(h.maxRestLine);\r\n                }\r\n                else {\r\n                    drawingInfo.endY =\r\n                        direction === BeamDirection.Up\r\n                            ? this.getScoreY(this.accidentalHelper.getMinLine(lastBeat)) - stemSize\r\n                            : this.getScoreY(this.accidentalHelper.getMaxLine(lastBeat)) + stemSize;\r\n                }\r\n                // 2. ensure max height\r\n                // we use the min/max notes to place the beam along their real position\r\n                // we only want a maximum of 10 offset for their gradient\r\n                let maxDistance = 10 * this.scale;\r\n                if (direction === BeamDirection.Down && drawingInfo.startY > drawingInfo.endY && drawingInfo.startY - drawingInfo.endY > maxDistance) {\r\n                    drawingInfo.endY = drawingInfo.startY - maxDistance;\r\n                }\r\n                if (direction === BeamDirection.Down && drawingInfo.endY > drawingInfo.startY && drawingInfo.endY - drawingInfo.startY > maxDistance) {\r\n                    drawingInfo.startY = drawingInfo.endY - maxDistance;\r\n                }\r\n                if (direction === BeamDirection.Up && drawingInfo.startY < drawingInfo.endY && drawingInfo.endY - drawingInfo.startY > maxDistance) {\r\n                    drawingInfo.endY = drawingInfo.startY + maxDistance;\r\n                }\r\n                if (direction === BeamDirection.Up && drawingInfo.endY < drawingInfo.startY && drawingInfo.startY - drawingInfo.endY > maxDistance) {\r\n                    drawingInfo.startY = drawingInfo.endY + maxDistance;\r\n                }\r\n                // 3. let middle elements shift up/down\r\n                if (h.beats.length > 1) {\r\n                    // check if highest note shifts bar up or down\r\n                    if (direction === BeamDirection.Up) {\r\n                        let yNeededForHighestNote = this.getScoreY(this.accidentalHelper.getMinLine(h.beatOfHighestNote)) - stemSize;\r\n                        const yGivenByCurrentValues = drawingInfo.calcY(h.getBeatLineX(h.beatOfHighestNote));\r\n                        const diff = yGivenByCurrentValues - yNeededForHighestNote;\r\n                        if (diff > 0) {\r\n                            drawingInfo.startY -= diff;\r\n                            drawingInfo.endY -= diff;\r\n                        }\r\n                    }\r\n                    else {\r\n                        let yNeededForLowestNote = this.getScoreY(this.accidentalHelper.getMaxLine(h.beatOfLowestNote)) + stemSize;\r\n                        const yGivenByCurrentValues = drawingInfo.calcY(h.getBeatLineX(h.beatOfLowestNote));\r\n                        const diff = yNeededForLowestNote - yGivenByCurrentValues;\r\n                        if (diff > 0) {\r\n                            drawingInfo.startY += diff;\r\n                            drawingInfo.endY += diff;\r\n                        }\r\n                    }\r\n                    // check if rest shifts bar up or down\r\n                    if (h.minRestLine !== null || h.maxRestLine !== null) {\r\n                        const barCount = ModelUtils.getIndex(h.shortestDuration) - 2;\r\n                        let scaleMod = h.isGrace ? NoteHeadGlyph.GraceScale : 1;\r\n                        let barSpacing = barCount *\r\n                            (BarRendererBase.BeamSpacing + BarRendererBase.BeamThickness) * this.scale * scaleMod;\r\n                        barSpacing += BarRendererBase.BeamSpacing;\r\n                        if (direction === BeamDirection.Up && h.minRestLine !== null) {\r\n                            let yNeededForRest = this.getScoreY(h.minRestLine) - barSpacing;\r\n                            const yGivenByCurrentValues = drawingInfo.calcY(h.getBeatLineX(h.beatOfMinRestLine));\r\n                            const diff = yGivenByCurrentValues - yNeededForRest;\r\n                            if (diff > 0) {\r\n                                drawingInfo.startY -= diff;\r\n                                drawingInfo.endY -= diff;\r\n                            }\r\n                        }\r\n                        else if (direction === BeamDirection.Down && h.maxRestLine !== null) {\r\n                            let yNeededForRest = this.getScoreY(h.maxRestLine) + barSpacing;\r\n                            const yGivenByCurrentValues = drawingInfo.calcY(h.getBeatLineX(h.beatOfMaxRestLine));\r\n                            const diff = yNeededForRest - yGivenByCurrentValues;\r\n                            if (diff > 0) {\r\n                                drawingInfo.startY += diff;\r\n                                drawingInfo.endY += diff;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return h.drawingInfos.get(direction).calcY(x);\r\n        }\r\n        paintBar(cx, cy, canvas, h) {\r\n            for (let i = 0, j = h.beats.length; i < j; i++) {\r\n                let beat = h.beats[i];\r\n                let isGrace = beat.graceType !== GraceType.None;\r\n                let scaleMod = isGrace ? NoteHeadGlyph.GraceScale : 1;\r\n                //\r\n                // draw line\r\n                //\r\n                let beatLineX = h.getBeatLineX(beat);\r\n                let direction = h.direction;\r\n                let y1 = cy + this.y;\r\n                y1 +=\r\n                    direction === BeamDirection.Up\r\n                        ? this.getScoreY(this.accidentalHelper.getMaxLine(beat))\r\n                        : this.getScoreY(this.accidentalHelper.getMinLine(beat));\r\n                let y2 = cy + this.y;\r\n                y2 += this.calculateBeamY(h, beatLineX);\r\n                canvas.lineWidth = ScoreBarRenderer.StemWidth * this.scale;\r\n                canvas.beginPath();\r\n                canvas.moveTo(cx + this.x + beatLineX, y1);\r\n                canvas.lineTo(cx + this.x + beatLineX, y2);\r\n                canvas.stroke();\r\n                canvas.lineWidth = this.scale;\r\n                let fingeringY = y2;\r\n                if (direction === BeamDirection.Down) {\r\n                    fingeringY += canvas.font.size * 2;\r\n                }\r\n                else if (i !== 0) {\r\n                    fingeringY -= canvas.font.size * 1.5;\r\n                }\r\n                this.paintFingering(canvas, beat, cx + this.x + beatLineX, direction, fingeringY);\r\n                let brokenBarOffset = 6 * this.scale * scaleMod;\r\n                let barSpacing = (BarRendererBase.BeamSpacing + BarRendererBase.BeamThickness) * this.scale * scaleMod;\r\n                let barSize = BarRendererBase.BeamThickness * this.scale * scaleMod;\r\n                let barCount = ModelUtils.getIndex(beat.duration) - 2;\r\n                let barStart = cy + this.y;\r\n                if (direction === BeamDirection.Down) {\r\n                    barSpacing = -barSpacing;\r\n                    barSize = -barSize;\r\n                }\r\n                for (let barIndex = 0; barIndex < barCount; barIndex++) {\r\n                    let barStartX = 0;\r\n                    let barEndX = 0;\r\n                    let barStartY = 0;\r\n                    let barEndY = 0;\r\n                    let barY = barStart + barIndex * barSpacing;\r\n                    //\r\n                    // Bar to Next?\r\n                    //\r\n                    if (i < h.beats.length - 1) {\r\n                        // full bar?\r\n                        if (BeamingHelper.isFullBarJoin(beat, h.beats[i + 1], barIndex)) {\r\n                            barStartX = beatLineX;\r\n                            barEndX = h.getBeatLineX(h.beats[i + 1]);\r\n                        }\r\n                        else if (i === 0 || !BeamingHelper.isFullBarJoin(h.beats[i - 1], beat, barIndex)) {\r\n                            barStartX = beatLineX;\r\n                            barEndX = barStartX + brokenBarOffset;\r\n                        }\r\n                        else {\r\n                            continue;\r\n                        }\r\n                        barStartY = barY + this.calculateBeamY(h, barStartX);\r\n                        barEndY = barY + this.calculateBeamY(h, barEndX);\r\n                        ScoreBarRenderer.paintSingleBar(canvas, cx + this.x + barStartX, barStartY, cx + this.x + barEndX, barEndY, barSize);\r\n                    }\r\n                    else if (i > 0 && !BeamingHelper.isFullBarJoin(beat, h.beats[i - 1], barIndex)) {\r\n                        barStartX = beatLineX - brokenBarOffset;\r\n                        barEndX = beatLineX;\r\n                        barStartY = barY + this.calculateBeamY(h, barStartX);\r\n                        barEndY = barY + this.calculateBeamY(h, barEndX);\r\n                        ScoreBarRenderer.paintSingleBar(canvas, cx + this.x + barStartX, barStartY, cx + this.x + barEndX, barEndY, barSize);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        static paintSingleBar(canvas, x1, y1, x2, y2, size) {\r\n            canvas.beginPath();\r\n            canvas.moveTo(x1, y1);\r\n            canvas.lineTo(x2, y2);\r\n            canvas.lineTo(x2, y2 + size);\r\n            canvas.lineTo(x1, y1 + size);\r\n            canvas.closePath();\r\n            canvas.fill();\r\n        }\r\n        paintFlag(cx, cy, canvas, h) {\r\n            let beat = h.beats[0];\r\n            if (beat.graceType === GraceType.BendGrace ||\r\n                (beat.graceType !== GraceType.None && this.settings.notation.notationMode === exports.NotationMode.SongBook)) {\r\n                return;\r\n            }\r\n            let isGrace = beat.graceType !== GraceType.None;\r\n            let scaleMod = isGrace ? NoteHeadGlyph.GraceScale : 1;\r\n            //\r\n            // draw line\r\n            //\r\n            let stemSize = this.getFlagStemSize(h.shortestDuration);\r\n            let beatLineX = h.getBeatLineX(beat);\r\n            let direction = h.direction;\r\n            let topY = this.getScoreY(this.accidentalHelper.getMinLine(beat));\r\n            let bottomY = this.getScoreY(this.accidentalHelper.getMaxLine(beat));\r\n            let beamY = 0;\r\n            let fingeringY = 0;\r\n            if (direction === BeamDirection.Down) {\r\n                bottomY += stemSize * scaleMod;\r\n                beamY = bottomY;\r\n                fingeringY = cy + this.y + bottomY;\r\n            }\r\n            else {\r\n                topY -= stemSize * scaleMod;\r\n                beamY = topY;\r\n                fingeringY = cy + this.y + topY;\r\n            }\r\n            this.paintFingering(canvas, beat, cx + this.x + beatLineX, direction, fingeringY);\r\n            if (!h.hasLine) {\r\n                return;\r\n            }\r\n            canvas.lineWidth = BarRendererBase.StemWidth * this.scale;\r\n            canvas.beginPath();\r\n            canvas.moveTo(cx + this.x + beatLineX, cy + this.y + topY);\r\n            canvas.lineTo(cx + this.x + beatLineX, cy + this.y + bottomY);\r\n            canvas.stroke();\r\n            canvas.lineWidth = this.scale;\r\n            if (beat.graceType === GraceType.BeforeBeat) {\r\n                let graceSizeY = 15 * this.scale;\r\n                let graceSizeX = 12 * this.scale;\r\n                canvas.beginPath();\r\n                if (direction === BeamDirection.Down) {\r\n                    canvas.moveTo(cx + this.x + beatLineX - graceSizeX / 2, cy + this.y + bottomY - graceSizeY);\r\n                    canvas.lineTo(cx + this.x + beatLineX + graceSizeX / 2, cy + this.y + bottomY);\r\n                }\r\n                else {\r\n                    canvas.moveTo(cx + this.x + beatLineX - graceSizeX / 2, cy + this.y + topY + graceSizeY);\r\n                    canvas.lineTo(cx + this.x + beatLineX + graceSizeX / 2, cy + this.y + topY);\r\n                }\r\n                canvas.stroke();\r\n            }\r\n            //\r\n            // Draw flag\r\n            //\r\n            if (h.hasFlag) {\r\n                let glyph = new FlagGlyph(beatLineX - this.scale / 2, beamY, beat.duration, direction, isGrace);\r\n                glyph.renderer = this;\r\n                glyph.doLayout();\r\n                glyph.paint(cx + this.x, cy + this.y, canvas);\r\n            }\r\n        }\r\n        paintFingering(canvas, beat, beatLineX, direction, topY) {\r\n            let settings = this.settings;\r\n            if (settings.notation.fingeringMode !== exports.FingeringMode.ScoreDefault &&\r\n                settings.notation.fingeringMode !== exports.FingeringMode.ScoreForcePiano) {\r\n                return;\r\n            }\r\n            if (direction === BeamDirection.Up) {\r\n                beatLineX -= 10 * this.scale;\r\n            }\r\n            else {\r\n                beatLineX += 3 * this.scale;\r\n            }\r\n            // sort notes ascending in their value to ensure\r\n            // we are drawing the numbers according to their order on the stave\r\n            let noteList = beat.notes.slice(0);\r\n            noteList.sort((a, b) => {\r\n                return a.realValue - b.realValue;\r\n            });\r\n            for (let n = 0; n < noteList.length; n++) {\r\n                let note = noteList[n];\r\n                let text = null;\r\n                if (note.leftHandFinger !== Fingers.Unknown) {\r\n                    text = ModelUtils.fingerToString(settings, beat, note.leftHandFinger, true);\r\n                }\r\n                else if (note.rightHandFinger !== Fingers.Unknown) {\r\n                    text = ModelUtils.fingerToString(settings, beat, note.rightHandFinger, false);\r\n                }\r\n                if (!text) {\r\n                    continue;\r\n                }\r\n                canvas.fillText(text, beatLineX, topY);\r\n                topY -= canvas.font.size | 0;\r\n            }\r\n        }\r\n        createPreBeatGlyphs() {\r\n            super.createPreBeatGlyphs();\r\n            if (this.bar.masterBar.isRepeatStart) {\r\n                this.addPreBeatGlyph(new RepeatOpenGlyph(0, 0, 1.5, 3));\r\n            }\r\n            // Clef\r\n            if (this.isFirstOfLine ||\r\n                this.bar.clef !== this.bar.previousBar.clef ||\r\n                this.bar.clefOttava !== this.bar.previousBar.clefOttava) {\r\n                let offset = 0;\r\n                switch (this.bar.clef) {\r\n                    case Clef.Neutral:\r\n                        offset = this.bar.staff.standardNotationLineCount - 1;\r\n                        break;\r\n                    case Clef.F4:\r\n                        offset = 2;\r\n                        break;\r\n                    case Clef.C3:\r\n                        offset = 4;\r\n                        break;\r\n                    case Clef.C4:\r\n                        offset = 2;\r\n                        break;\r\n                    case Clef.G2:\r\n                        offset = 6;\r\n                        break;\r\n                }\r\n                this.createStartSpacing();\r\n                this.addPreBeatGlyph(new ClefGlyph(0, this.getScoreY(offset) + 0.5 * BarRendererBase.StaffLineThickness, this.bar.clef, this.bar.clefOttava));\r\n            }\r\n            // Key signature\r\n            if ((this.index === 0 && this.bar.masterBar.keySignature !== 0) ||\r\n                (this.bar.previousBar && this.bar.masterBar.keySignature !== this.bar.previousBar.masterBar.keySignature)) {\r\n                this.createStartSpacing();\r\n                this.createKeySignatureGlyphs();\r\n            }\r\n            // Time Signature\r\n            if (!this.bar.previousBar ||\r\n                (this.bar.previousBar &&\r\n                    this.bar.masterBar.timeSignatureNumerator !== this.bar.previousBar.masterBar.timeSignatureNumerator) ||\r\n                (this.bar.previousBar &&\r\n                    this.bar.masterBar.timeSignatureDenominator !== this.bar.previousBar.masterBar.timeSignatureDenominator)) {\r\n                this.createStartSpacing();\r\n                this.createTimeSignatureGlyphs();\r\n            }\r\n            this.addPreBeatGlyph(new BarNumberGlyph(0, this.getScoreHeight(-0.5), this.bar.index + 1));\r\n        }\r\n        createBeatGlyphs() {\r\n            for (let v = 0; v < this.bar.voices.length; v++) {\r\n                let voice = this.bar.voices[v];\r\n                if (this.hasVoiceContainer(voice)) {\r\n                    this.createVoiceGlyphs(voice);\r\n                }\r\n            }\r\n        }\r\n        createPostBeatGlyphs() {\r\n            super.createPostBeatGlyphs();\r\n            if (this.bar.masterBar.isRepeatEnd) {\r\n                this.addPostBeatGlyph(new RepeatCloseGlyph(this.x, 0));\r\n                if (this.bar.masterBar.repeatCount > 2) {\r\n                    this.addPostBeatGlyph(new RepeatCountGlyph(0, this.getScoreHeight(-0.5), this.bar.masterBar.repeatCount));\r\n                }\r\n            }\r\n            else {\r\n                this.addPostBeatGlyph(new BarSeperatorGlyph(0, 0));\r\n            }\r\n        }\r\n        createStartSpacing() {\r\n            if (this._startSpacing) {\r\n                return;\r\n            }\r\n            this.addPreBeatGlyph(new SpacingGlyph(0, 0, 2 * this.scale));\r\n            this._startSpacing = true;\r\n        }\r\n        createKeySignatureGlyphs() {\r\n            let offsetClef = 0;\r\n            let currentKey = this.bar.masterBar.keySignature;\r\n            let previousKey = !this.bar.previousBar ? 0 : this.bar.previousBar.masterBar.keySignature;\r\n            switch (this.bar.clef) {\r\n                case Clef.Neutral:\r\n                    offsetClef = 0;\r\n                    break;\r\n                case Clef.G2:\r\n                    offsetClef = 1;\r\n                    break;\r\n                case Clef.F4:\r\n                    offsetClef = 2;\r\n                    break;\r\n                case Clef.C3:\r\n                    offsetClef = -1;\r\n                    break;\r\n                case Clef.C4:\r\n                    offsetClef = 1;\r\n                    break;\r\n            }\r\n            let newLines = new Map();\r\n            let newGlyphs = [];\r\n            // how many symbols do we need to get from a C-keysignature\r\n            // to the new one\r\n            // var offsetSymbols = (currentKey <= 7) ? currentKey : currentKey - 7;\r\n            // a sharp keysignature\r\n            if (ModelUtils.keySignatureIsSharp(currentKey)) {\r\n                for (let i = 0; i < Math.abs(currentKey); i++) {\r\n                    let step = ScoreBarRenderer.SharpKsSteps[i] + offsetClef;\r\n                    newGlyphs.push(new AccidentalGlyph(0, this.getScoreY(step), AccidentalType.Sharp, false));\r\n                    newLines.set(step, true);\r\n                }\r\n            }\r\n            else {\r\n                for (let i = 0; i < Math.abs(currentKey); i++) {\r\n                    let step = ScoreBarRenderer.FlatKsSteps[i] + offsetClef;\r\n                    newGlyphs.push(new AccidentalGlyph(0, this.getScoreY(step), AccidentalType.Flat, false));\r\n                    newLines.set(step, true);\r\n                }\r\n            }\r\n            // naturalize previous key\r\n            let naturalizeSymbols = Math.abs(previousKey);\r\n            let previousKeyPositions = ModelUtils.keySignatureIsSharp(previousKey)\r\n                ? ScoreBarRenderer.SharpKsSteps\r\n                : ScoreBarRenderer.FlatKsSteps;\r\n            for (let i = 0; i < naturalizeSymbols; i++) {\r\n                let step = previousKeyPositions[i] + offsetClef;\r\n                if (!newLines.has(step)) {\r\n                    this.addPreBeatGlyph(new AccidentalGlyph(0, this.getScoreY(previousKeyPositions[i] + offsetClef), AccidentalType.Natural, false));\r\n                }\r\n            }\r\n            for (let newGlyph of newGlyphs) {\r\n                this.addPreBeatGlyph(newGlyph);\r\n            }\r\n        }\r\n        createTimeSignatureGlyphs() {\r\n            this.addPreBeatGlyph(new SpacingGlyph(0, 0, 5 * this.scale));\r\n            const lines = this.bar.staff.standardNotationLineCount - 1;\r\n            this.addPreBeatGlyph(new ScoreTimeSignatureGlyph(0, this.getScoreY(lines), this.bar.masterBar.timeSignatureNumerator, this.bar.masterBar.timeSignatureDenominator, this.bar.masterBar.timeSignatureCommon));\r\n        }\r\n        createVoiceGlyphs(v) {\r\n            for (let i = 0, j = v.beats.length; i < j; i++) {\r\n                let b = v.beats[i];\r\n                let container = new ScoreBeatContainerGlyph(b, this.getVoiceContainer(v));\r\n                container.preNotes = new ScoreBeatPreNotesGlyph();\r\n                container.onNotes = new ScoreBeatGlyph();\r\n                this.addBeatGlyph(container);\r\n            }\r\n        }\r\n        getNoteLine(n) {\r\n            return this.accidentalHelper.getNoteLine(n);\r\n        }\r\n        /**\r\n         * Gets the relative y position of the given steps relative to first line.\r\n         * @param steps the amount of steps while 2 steps are one line\r\n         * @returns\r\n         */\r\n        getScoreY(steps) {\r\n            return (this._firstLineY +\r\n                this.lineOffset +\r\n                this.getScoreHeight(steps));\r\n        }\r\n        /**\r\n         * Gets the height of an element that spans the given amount of steps.\r\n         * @param steps the amount of steps while 2 steps are one line\r\n         * @param correction\r\n         * @returns\r\n         */\r\n        getScoreHeight(steps) {\r\n            return (this.lineOffset / 2) * steps;\r\n        }\r\n        // private static readonly Random Random = new Random();\r\n        paintBackground(cx, cy, canvas) {\r\n            super.paintBackground(cx, cy, canvas);\r\n            let res = this.resources;\r\n            // canvas.color = Color.random(100);\r\n            // canvas.fillRect(cx + this.x, cy + this.y, this.width, this.height);\r\n            //\r\n            // draw string lines\r\n            //\r\n            canvas.color = res.staffLineColor;\r\n            for (let i = 0; i < this.bar.staff.standardNotationLineCount; i++) {\r\n                const lineY = cy + this.y + this.getScoreY(i * 2);\r\n                canvas.fillRect(cx + this.x, lineY | 0, this.width, this.scale * BarRendererBase.StaffLineThickness);\r\n            }\r\n            canvas.color = res.mainGlyphColor;\r\n            this.paintSimileMark(cx, cy, canvas);\r\n        }\r\n        completeBeamingHelper(helper) {\r\n            // for multi-voice bars we need to register the positions \r\n            // for multi-voice rest displacement to avoid collisions\r\n            if (this.bar.isMultiVoice && helper.highestNoteInHelper && helper.lowestNoteInHelper) {\r\n                let highestNotePosition = this.getNoteY(helper.highestNoteInHelper, NoteYPosition.Center);\r\n                let lowestNotePosition = this.getNoteY(helper.lowestNoteInHelper, NoteYPosition.Center);\r\n                let offset = this.getStemSize(helper);\r\n                if (helper.hasTuplet) {\r\n                    offset += this.resources.effectFont.size * 2;\r\n                }\r\n                if (helper.direction == BeamDirection.Up) {\r\n                    highestNotePosition -= offset;\r\n                }\r\n                else {\r\n                    lowestNotePosition += offset;\r\n                }\r\n                for (const beat of helper.beats) {\r\n                    this.helpers.collisionHelper.reserveBeatSlot(beat, highestNotePosition, lowestNotePosition);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ScoreBarRenderer.StaffId = 'score';\r\n    ScoreBarRenderer.SharpKsSteps = [-1, 2, -2, 1, 4, 0, 3];\r\n    ScoreBarRenderer.FlatKsSteps = [3, 0, 4, 1, 5, 2, 6];\n\n    /**\r\n     * This Factory procudes ScoreBarRenderer instances\r\n     */\r\n    class ScoreBarRendererFactory extends BarRendererFactory {\r\n        get staffId() {\r\n            return ScoreBarRenderer.StaffId;\r\n        }\r\n        create(renderer, bar) {\r\n            return new ScoreBarRenderer(renderer, bar);\r\n        }\r\n        constructor() {\r\n            super();\r\n        }\r\n    }\n\n    class TabSlideLineGlyph extends Glyph {\r\n        constructor(inType, outType, startNote, parent) {\r\n            super(0, 0);\r\n            this._inType = inType;\r\n            this._outType = outType;\r\n            this._startNote = startNote;\r\n            this._parent = parent;\r\n        }\r\n        doLayout() {\r\n            this.width = 0;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            this.paintSlideIn(cx, cy, canvas);\r\n            this.paintSlideOut(cx, cy, canvas);\r\n        }\r\n        paintSlideIn(cx, cy, canvas) {\r\n            let startNoteRenderer = this.renderer;\r\n            let sizeX = 12 * this.scale;\r\n            let sizeY = 3 * this.scale;\r\n            let startX = 0;\r\n            let startY = 0;\r\n            let endX = 0;\r\n            let endY = 0;\r\n            switch (this._inType) {\r\n                case SlideInType.IntoFromBelow:\r\n                    endX = cx + startNoteRenderer.x + startNoteRenderer.getNoteX(this._startNote, NoteXPosition.Left);\r\n                    endY = cy + startNoteRenderer.y + startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Center);\r\n                    startX = endX - sizeX;\r\n                    startY = cy + startNoteRenderer.y + startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Center) + sizeY;\r\n                    break;\r\n                case SlideInType.IntoFromAbove:\r\n                    endX = cx + startNoteRenderer.x + startNoteRenderer.getNoteX(this._startNote, NoteXPosition.Left);\r\n                    endY = cy + startNoteRenderer.y + startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Center);\r\n                    startX = endX - sizeX;\r\n                    startY = cy + startNoteRenderer.y + startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Center) - sizeY;\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            this.paintSlideLine(canvas, false, startX, endX, startY, endY);\r\n        }\r\n        paintSlideOut(cx, cy, canvas) {\r\n            let startNoteRenderer = this.renderer;\r\n            let sizeX = 12 * this.scale;\r\n            let sizeY = 3 * this.scale;\r\n            let startX = 0;\r\n            let startY = 0;\r\n            let endX = 0;\r\n            let endY = 0;\r\n            let waves = false;\r\n            const endXOffset = 2 * this.scale;\r\n            switch (this._outType) {\r\n                case SlideOutType.Shift:\r\n                case SlideOutType.Legato:\r\n                    startX =\r\n                        cx +\r\n                            startNoteRenderer.x +\r\n                            startNoteRenderer.getBeatX(this._startNote.beat, BeatXPosition.PostNotes);\r\n                    startY = cy + startNoteRenderer.y + startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Center);\r\n                    if (this._startNote.slideTarget) {\r\n                        let endNoteRenderer = this.renderer.scoreRenderer.layout.getRendererForBar(this.renderer.staff.staveId, this._startNote.slideTarget.beat.voice.bar);\r\n                        if (!endNoteRenderer || endNoteRenderer.staff !== startNoteRenderer.staff) {\r\n                            endX = cx + startNoteRenderer.x + this._parent.x;\r\n                            endY = startY;\r\n                        }\r\n                        else {\r\n                            endX =\r\n                                cx +\r\n                                    endNoteRenderer.x +\r\n                                    endNoteRenderer.getBeatX(this._startNote.slideTarget.beat, BeatXPosition.OnNotes)\r\n                                    - endXOffset;\r\n                            endY =\r\n                                cy +\r\n                                    endNoteRenderer.y +\r\n                                    endNoteRenderer.getNoteY(this._startNote.slideTarget, NoteYPosition.Center);\r\n                        }\r\n                        if (this._startNote.slideTarget.fret > this._startNote.fret) {\r\n                            startY += sizeY;\r\n                            endY -= sizeY;\r\n                        }\r\n                        else {\r\n                            startY -= sizeY;\r\n                            endY += sizeY;\r\n                        }\r\n                    }\r\n                    else {\r\n                        endX = cx + startNoteRenderer.x + this._parent.x;\r\n                        endY = startY;\r\n                    }\r\n                    break;\r\n                case SlideOutType.OutUp:\r\n                    startX = cx + startNoteRenderer.x + startNoteRenderer.getNoteX(this._startNote, NoteXPosition.Right);\r\n                    startY = cy + startNoteRenderer.y + startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Center);\r\n                    endX = startX + sizeX - endXOffset;\r\n                    endY = cy + startNoteRenderer.y + startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Center) - sizeY;\r\n                    break;\r\n                case SlideOutType.OutDown:\r\n                    startX = cx + startNoteRenderer.x + startNoteRenderer.getNoteX(this._startNote, NoteXPosition.Right);\r\n                    startY = cy + startNoteRenderer.y + startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Center);\r\n                    endX = startX + sizeX - endXOffset;\r\n                    endY = cy + startNoteRenderer.y + startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Center) + sizeY;\r\n                    break;\r\n                case SlideOutType.PickSlideDown:\r\n                    startX = cx + startNoteRenderer.x + startNoteRenderer.getNoteX(this._startNote, NoteXPosition.Right);\r\n                    startY = cy + startNoteRenderer.y + startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Center);\r\n                    endX =\r\n                        cx + startNoteRenderer.x + startNoteRenderer.getBeatX(this._startNote.beat, BeatXPosition.EndBeat);\r\n                    endY = startY + sizeY * 3;\r\n                    waves = true;\r\n                    break;\r\n                case SlideOutType.PickSlideUp:\r\n                    startX = cx + startNoteRenderer.x + startNoteRenderer.getNoteX(this._startNote, NoteXPosition.Right);\r\n                    startY = cy + startNoteRenderer.y + startNoteRenderer.getNoteY(this._startNote, NoteYPosition.Center);\r\n                    endX =\r\n                        cx + startNoteRenderer.x + startNoteRenderer.getBeatX(this._startNote.beat, BeatXPosition.EndBeat);\r\n                    endY = startY - sizeY * 3;\r\n                    waves = true;\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            this.paintSlideLine(canvas, waves, startX, endX, startY, endY);\r\n        }\r\n        paintSlideLine(canvas, waves, startX, endX, startY, endY) {\r\n            if (waves) {\r\n                let glyph = new NoteVibratoGlyph(0, 0, VibratoType.Slight, 1.2);\r\n                glyph.renderer = this.renderer;\r\n                glyph.doLayout();\r\n                startY -= glyph.height / 2;\r\n                endY -= glyph.height / 2;\r\n                let b = endX - startX;\r\n                let a = endY - startY;\r\n                let c = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\r\n                glyph.width = b;\r\n                let angle = Math.asin(a / c) * (180 / Math.PI);\r\n                canvas.beginRotate(startX, startY, angle);\r\n                glyph.paint(0, 0, canvas);\r\n                canvas.endRotate();\r\n            }\r\n            else {\r\n                canvas.beginPath();\r\n                canvas.moveTo(startX, startY);\r\n                canvas.lineTo(endX, endY);\r\n                canvas.stroke();\r\n            }\r\n        }\r\n    }\n\n    class TabTieGlyph extends TieGlyph {\r\n        constructor(startNote, endNote, forEnd = false) {\r\n            super(startNote.beat, endNote.beat, forEnd);\r\n            this.startNote = startNote;\r\n            this.endNote = endNote;\r\n        }\r\n        getTieHeight(startX, startY, endX, endY) {\r\n            if (this.startNote === this.endNote) {\r\n                return 15;\r\n            }\r\n            return super.getTieHeight(startX, startY, endX, endY);\r\n        }\r\n        getBeamDirection(beat, noteRenderer) {\r\n            if (this.startNote === this.endNote) {\r\n                return BeamDirection.Up;\r\n            }\r\n            return TabTieGlyph.getBeamDirectionForNote(this.startNote);\r\n        }\r\n        static getBeamDirectionForNote(note) {\r\n            return note.string > 3 ? BeamDirection.Up : BeamDirection.Down;\r\n        }\r\n        getStartY() {\r\n            if (this.startNote === this.endNote) {\r\n                return this.startNoteRenderer.getNoteY(this.startNote, NoteYPosition.Center);\r\n            }\r\n            if (this.tieDirection === BeamDirection.Up) {\r\n                return this.startNoteRenderer.getNoteY(this.startNote, NoteYPosition.Top);\r\n            }\r\n            return this.startNoteRenderer.getNoteY(this.startNote, NoteYPosition.Bottom);\r\n        }\r\n        getEndY() {\r\n            return this.getStartY();\r\n        }\r\n        getStartX() {\r\n            if (this.startNote === this.endNote) {\r\n                return this.getEndX() - 20 * this.scale;\r\n            }\r\n            return this.startNoteRenderer.getNoteX(this.startNote, NoteXPosition.Center);\r\n        }\r\n        getEndX() {\r\n            if (this.startNote === this.endNote) {\r\n                return this.endNoteRenderer.getNoteX(this.endNote, NoteXPosition.Left);\r\n            }\r\n            return this.endNoteRenderer.getNoteX(this.endNote, NoteXPosition.Center);\r\n        }\r\n    }\n\n    class TabSlurGlyph extends TabTieGlyph {\r\n        constructor(startNote, endNote, forSlide, forEnd = false) {\r\n            super(startNote, endNote, forEnd);\r\n            this._direction = TabTieGlyph.getBeamDirectionForNote(startNote);\r\n            this._forSlide = forSlide;\r\n        }\r\n        getTieHeight(startX, startY, endX, endY) {\r\n            return Math.log(endX - startX + 1) * this.renderer.settings.notation.slurHeight;\r\n        }\r\n        tryExpand(startNote, endNote, forSlide, forEnd) {\r\n            // same type required\r\n            if (this._forSlide !== forSlide) {\r\n                return false;\r\n            }\r\n            if (this.forEnd !== forEnd) {\r\n                return false;\r\n            }\r\n            // same start and endbeat\r\n            if (this.startNote.beat.id !== startNote.beat.id) {\r\n                return false;\r\n            }\r\n            if (this.endNote.beat.id !== endNote.beat.id) {\r\n                return false;\r\n            }\r\n            // same draw direction\r\n            if (this._direction !== TabTieGlyph.getBeamDirectionForNote(startNote)) {\r\n                return false;\r\n            }\r\n            // if we can expand, expand in correct direction\r\n            switch (this._direction) {\r\n                case BeamDirection.Up:\r\n                    if (startNote.realValue > this.startNote.realValue) {\r\n                        this.startNote = startNote;\r\n                        this.startBeat = startNote.beat;\r\n                    }\r\n                    if (endNote.realValue > this.endNote.realValue) {\r\n                        this.endNote = endNote;\r\n                        this.endBeat = endNote.beat;\r\n                    }\r\n                    break;\r\n                case BeamDirection.Down:\r\n                    if (startNote.realValue < this.startNote.realValue) {\r\n                        this.startNote = startNote;\r\n                        this.startBeat = startNote.beat;\r\n                    }\r\n                    if (endNote.realValue < this.endNote.realValue) {\r\n                        this.endNote = endNote;\r\n                        this.endBeat = endNote.beat;\r\n                    }\r\n                    break;\r\n            }\r\n            return true;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            let startNoteRenderer = this.renderer.scoreRenderer.layout.getRendererForBar(this.renderer.staff.staveId, this.startBeat.voice.bar);\r\n            let direction = this.getBeamDirection(this.startBeat, startNoteRenderer);\r\n            let slurId = 'tab.slur.' + this.startNote.beat.id + '.' + this.endNote.beat.id + '.' + direction;\r\n            let renderer = this.renderer;\r\n            let isSlurRendered = renderer.staff.getSharedLayoutData(slurId, false);\r\n            if (!isSlurRendered) {\r\n                renderer.staff.setSharedLayoutData(slurId, true);\r\n                super.paint(cx, cy, canvas);\r\n            }\r\n        }\r\n    }\n\n    class TabBeatContainerGlyph extends BeatContainerGlyph {\r\n        constructor(beat, voiceContainer) {\r\n            super(beat, voiceContainer);\r\n            this._bend = null;\r\n            this._effectSlurs = [];\r\n        }\r\n        doLayout() {\r\n            this._effectSlurs = [];\r\n            super.doLayout();\r\n            if (this._bend) {\r\n                this._bend.renderer = this.renderer;\r\n                this._bend.doLayout();\r\n                this.updateWidth();\r\n            }\r\n        }\r\n        createTies(n) {\r\n            if (!n.isVisible) {\r\n                return;\r\n            }\r\n            let renderer = this.renderer;\r\n            if (n.isTieOrigin && renderer.showTiedNotes && n.tieDestination.isVisible) {\r\n                let tie = new TabTieGlyph(n, n.tieDestination, false);\r\n                this.ties.push(tie);\r\n            }\r\n            if (n.isTieDestination && renderer.showTiedNotes) {\r\n                let tie = new TabTieGlyph(n.tieOrigin, n, true);\r\n                this.ties.push(tie);\r\n            }\r\n            if (n.isLeftHandTapped && !n.isHammerPullDestination) {\r\n                let tapSlur = new TabTieGlyph(n, n, false);\r\n                this.ties.push(tapSlur);\r\n            }\r\n            // start effect slur on first beat\r\n            if (n.isEffectSlurOrigin && n.effectSlurDestination) {\r\n                let expanded = false;\r\n                for (let slur of this._effectSlurs) {\r\n                    if (slur.tryExpand(n, n.effectSlurDestination, false, false)) {\r\n                        expanded = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!expanded) {\r\n                    let effectSlur = new TabSlurGlyph(n, n.effectSlurDestination, false, false);\r\n                    this._effectSlurs.push(effectSlur);\r\n                    this.ties.push(effectSlur);\r\n                }\r\n            }\r\n            // end effect slur on last beat\r\n            if (n.isEffectSlurDestination && n.effectSlurOrigin) {\r\n                let expanded = false;\r\n                for (let slur of this._effectSlurs) {\r\n                    if (slur.tryExpand(n.effectSlurOrigin, n, false, true)) {\r\n                        expanded = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!expanded) {\r\n                    let effectSlur = new TabSlurGlyph(n.effectSlurOrigin, n, false, true);\r\n                    this._effectSlurs.push(effectSlur);\r\n                    this.ties.push(effectSlur);\r\n                }\r\n            }\r\n            if (n.slideInType !== SlideInType.None || n.slideOutType !== SlideOutType.None) {\r\n                let l = new TabSlideLineGlyph(n.slideInType, n.slideOutType, n, this);\r\n                this.ties.push(l);\r\n            }\r\n            if (n.hasBend) {\r\n                if (!this._bend) {\r\n                    this._bend = new TabBendGlyph();\r\n                    this._bend.renderer = this.renderer;\r\n                    this.ties.push(this._bend);\r\n                }\r\n                this._bend.addBends(n);\r\n            }\r\n        }\r\n    }\n\n    class NoteNumberGlyph extends Glyph {\r\n        constructor(x, y, note) {\r\n            super(x, y);\r\n            this._noteString = null;\r\n            this._trillNoteString = null;\r\n            this._trillNoteStringWidth = 0;\r\n            this.isEmpty = false;\r\n            this.noteStringWidth = 0;\r\n            this._note = note;\r\n        }\r\n        doLayout() {\r\n            let n = this._note;\r\n            let fret = n.fret - n.beat.voice.bar.staff.transpositionPitch;\r\n            if (n.harmonicType === HarmonicType.Natural && n.harmonicValue !== 0) {\r\n                fret = n.harmonicValue - n.beat.voice.bar.staff.transpositionPitch;\r\n            }\r\n            if (!n.isTieDestination) {\r\n                this._noteString = n.isDead ? 'x' : fret.toString();\r\n                if (n.isGhost) {\r\n                    this._noteString = '(' + this._noteString + ')';\r\n                }\r\n                else if (n.harmonicType === HarmonicType.Natural) {\r\n                    // only first decimal char\r\n                    let i = this._noteString.indexOf(String.fromCharCode(46));\r\n                    if (i >= 0) {\r\n                        this._noteString = this._noteString.substr(0, i + 2);\r\n                    }\r\n                    this._noteString = '<' + this._noteString + '>';\r\n                }\r\n            }\r\n            else if ((n.beat.index === 0 && this.renderer.settings.notation.notationMode == exports.NotationMode.GuitarPro) ||\r\n                ((n.bendType === BendType.Bend || n.bendType === BendType.BendRelease) &&\r\n                    this.renderer.settings.notation.isNotationElementVisible(NotationElement.TabNotesOnTiedBends))) {\r\n                this._noteString = '(' + (n.tieOrigin.fret - n.beat.voice.bar.staff.transpositionPitch) + ')';\r\n            }\r\n            else {\r\n                this._noteString = '';\r\n            }\r\n            if (n.isTrill) {\r\n                this._trillNoteString = '(' + (n.trillFret - n.beat.voice.bar.staff.transpositionPitch) + ')';\r\n            }\r\n            else if (!ModelUtils.isAlmostEqualTo(n.harmonicValue, 0)) {\r\n                switch (n.harmonicType) {\r\n                    case HarmonicType.Artificial:\r\n                    case HarmonicType.Pinch:\r\n                    case HarmonicType.Tap:\r\n                    case HarmonicType.Semi:\r\n                    case HarmonicType.Feedback:\r\n                        let s = (fret + n.harmonicValue).toString();\r\n                        // only first decimal char\r\n                        let i = s.indexOf(String.fromCharCode(46));\r\n                        if (i >= 0) {\r\n                            s = s.substr(0, i + 2);\r\n                        }\r\n                        this._trillNoteString = '<' + s + '>';\r\n                        break;\r\n                    default:\r\n                        this._trillNoteString = '';\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                this._trillNoteString = '';\r\n            }\r\n            this.isEmpty = !this._noteString;\r\n            if (!this.isEmpty) {\r\n                this.renderer.scoreRenderer.canvas.font = this.renderer.resources.tablatureFont;\r\n                this.width = this.noteStringWidth = this.renderer.scoreRenderer.canvas.measureText(this._noteString) * this.scale;\r\n                this.height = this.renderer.scoreRenderer.canvas.font.size;\r\n                let hasTrill = !!this._trillNoteString;\r\n                if (hasTrill) {\r\n                    this.renderer.scoreRenderer.canvas.font = this.renderer.resources.graceFont;\r\n                    this._trillNoteStringWidth =\r\n                        3 * this.scale + this.renderer.scoreRenderer.canvas.measureText(this._trillNoteString);\r\n                    this.width += this._trillNoteStringWidth;\r\n                }\r\n            }\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            if (this.isEmpty) {\r\n                return;\r\n            }\r\n            let textWidth = this.noteStringWidth + this._trillNoteStringWidth;\r\n            let x = cx + this.x + (this.width - textWidth) / 2;\r\n            let prevFont = this.renderer.scoreRenderer.canvas.font;\r\n            this.renderer.scoreRenderer.canvas.font = this.renderer.resources.graceFont;\r\n            canvas.fillText(this._trillNoteString, x + this.noteStringWidth + 3 * this.scale, cy + this.y);\r\n            this.renderer.scoreRenderer.canvas.font = prevFont;\r\n            canvas.fillText(this._noteString, x, cy + this.y);\r\n        }\r\n        buildBoundingsLookup(beatBounds, cx, cy) {\r\n            let noteBounds = new NoteBounds();\r\n            noteBounds.note = this._note;\r\n            noteBounds.noteHeadBounds = new Bounds();\r\n            noteBounds.noteHeadBounds.x = cx + this.x;\r\n            noteBounds.noteHeadBounds.y = cy + this.y - this.height / 2;\r\n            noteBounds.noteHeadBounds.w = this.width;\r\n            noteBounds.noteHeadBounds.h = this.height;\r\n            this.renderer.scoreRenderer.boundsLookup.addNote(noteBounds);\r\n        }\r\n    }\n\n    class TabNoteChordGlyph extends Glyph {\r\n        constructor(x, y, isGrace) {\r\n            super(x, y);\r\n            this._notes = [];\r\n            this.minStringNote = null;\r\n            this.beatEffects = new Map();\r\n            this.notesPerString = new Map();\r\n            this.noteStringWidth = 0;\r\n            this._isGrace = isGrace;\r\n        }\r\n        buildBoundingsLookup(beatBounds, cx, cy) {\r\n            for (const note of this._notes) {\r\n                note.buildBoundingsLookup(beatBounds, cx + this.x, cy + this.y);\r\n            }\r\n        }\r\n        getNoteX(note, requestedPosition) {\r\n            if (this.notesPerString.has(note.string)) {\r\n                let n = this.notesPerString.get(note.string);\r\n                let pos = this.x + n.x;\r\n                switch (requestedPosition) {\r\n                    case NoteXPosition.Left:\r\n                        break;\r\n                    case NoteXPosition.Center:\r\n                        pos += n.noteStringWidth / 2;\r\n                        break;\r\n                    case NoteXPosition.Right:\r\n                        pos += n.width;\r\n                        break;\r\n                }\r\n                return pos;\r\n            }\r\n            return 0;\r\n        }\r\n        getNoteY(note, requestedPosition) {\r\n            if (this.notesPerString.has(note.string)) {\r\n                const n = this.notesPerString.get(note.string);\r\n                let pos = this.y + n.y;\r\n                switch (requestedPosition) {\r\n                    case NoteYPosition.Top:\r\n                    case NoteYPosition.TopWithStem:\r\n                        pos -= n.height / 2 + 2 * this.scale;\r\n                        break;\r\n                    case NoteYPosition.Center:\r\n                        break;\r\n                    case NoteYPosition.Bottom:\r\n                    case NoteYPosition.BottomWithStem:\r\n                        pos += n.height / 2;\r\n                        break;\r\n                }\r\n                return pos;\r\n            }\r\n            return 0;\r\n        }\r\n        doLayout() {\r\n            let w = 0;\r\n            let noteStringWidth = 0;\r\n            for (let i = 0, j = this._notes.length; i < j; i++) {\r\n                let g = this._notes[i];\r\n                g.renderer = this.renderer;\r\n                g.doLayout();\r\n                if (g.width > w) {\r\n                    w = g.width;\r\n                }\r\n                if (g.noteStringWidth > noteStringWidth) {\r\n                    noteStringWidth = g.noteStringWidth;\r\n                }\r\n            }\r\n            this.noteStringWidth = noteStringWidth;\r\n            let tabHeight = this.renderer.resources.tablatureFont.size;\r\n            let effectY = this.getNoteY(this.minStringNote, NoteYPosition.Center) + tabHeight / 2;\r\n            // TODO: take care of actual glyph height\r\n            let effectSpacing = 7 * this.scale;\r\n            for (const g of this.beatEffects.values()) {\r\n                g.y += effectY;\r\n                g.x += this.width / 2;\r\n                g.renderer = this.renderer;\r\n                effectY += effectSpacing;\r\n                g.doLayout();\r\n            }\r\n            this.width = w;\r\n        }\r\n        addNoteGlyph(noteGlyph, note) {\r\n            this._notes.push(noteGlyph);\r\n            this.notesPerString.set(note.string, noteGlyph);\r\n            if (!this.minStringNote || note.string < this.minStringNote.string) {\r\n                this.minStringNote = note;\r\n            }\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            cx += this.x;\r\n            cy += this.y;\r\n            let res = this.renderer.resources;\r\n            let oldBaseLine = canvas.textBaseline;\r\n            canvas.textBaseline = TextBaseline.Middle;\r\n            canvas.font = this._isGrace ? res.graceFont : res.tablatureFont;\r\n            let notes = this._notes;\r\n            let w = this.width;\r\n            for (let g of notes) {\r\n                g.renderer = this.renderer;\r\n                g.width = w;\r\n                g.paint(cx, cy, canvas);\r\n            }\r\n            canvas.textBaseline = oldBaseLine;\r\n            for (const g of this.beatEffects.values()) {\r\n                g.paint(cx, cy, canvas);\r\n            }\r\n        }\r\n        updateBeamingHelper(cx) {\r\n            if (this.beamingHelper && this.beamingHelper.isPositionFrom('tab', this.beat)) {\r\n                this.beamingHelper.registerBeatLineX('tab', this.beat, cx + this.x + this.width / 2, cx + this.x + this.width / 2);\r\n            }\r\n        }\r\n    }\n\n    class TabRestGlyph extends MusicFontGlyph {\r\n        constructor(x, y, isVisibleRest, duration) {\r\n            super(x, y, 1, ScoreRestGlyph.getSymbol(duration));\r\n            this._isVisibleRest = isVisibleRest;\r\n            this._duration = duration;\r\n        }\r\n        doLayout() {\r\n            if (this._isVisibleRest) {\r\n                this.width = ScoreRestGlyph.getSize(this._duration) * this.scale;\r\n            }\r\n            else {\r\n                this.width = 10 * this.scale;\r\n            }\r\n        }\r\n        updateBeamingHelper(cx) {\r\n            if (this.beamingHelper && this.beamingHelper.isPositionFrom('tab', this.beat)) {\r\n                this.beamingHelper.registerBeatLineX('tab', this.beat, cx + this.x + this.width / 2, cx + this.x + this.width / 2);\r\n            }\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            if (this._isVisibleRest) {\r\n                super.paint(cx, cy, canvas);\r\n            }\r\n        }\r\n    }\n\n    class TabBeatGlyph extends BeatOnNoteGlyphBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.noteNumbers = null;\r\n            this.restGlyph = null;\r\n        }\r\n        getNoteX(note, requestedPosition) {\r\n            return this.noteNumbers ? this.noteNumbers.getNoteX(note, requestedPosition) : 0;\r\n        }\r\n        getNoteY(note, requestedPosition) {\r\n            return this.noteNumbers ? this.noteNumbers.getNoteY(note, requestedPosition) : 0;\r\n        }\r\n        buildBoundingsLookup(beatBounds, cx, cy) {\r\n            if (this.noteNumbers) {\r\n                this.noteNumbers.buildBoundingsLookup(beatBounds, cx + this.x, cy + this.y);\r\n            }\r\n        }\r\n        doLayout() {\r\n            let tabRenderer = this.renderer;\r\n            if (!this.container.beat.isRest) {\r\n                //\r\n                // Note numbers\r\n                let isGrace = this.renderer.settings.notation.smallGraceTabNotes && this.container.beat.graceType !== GraceType.None;\r\n                this.noteNumbers = new TabNoteChordGlyph(0, 0, isGrace);\r\n                this.noteNumbers.beat = this.container.beat;\r\n                this.noteNumbers.beamingHelper = this.beamingHelper;\r\n                for (let note of this.container.beat.notes) {\r\n                    if (note.isVisible) {\r\n                        this.createNoteGlyph(note);\r\n                    }\r\n                }\r\n                this.addGlyph(this.noteNumbers);\r\n                //\r\n                // Whammy Bar\r\n                if (this.container.beat.hasWhammyBar) {\r\n                    let whammy = new TabWhammyBarGlyph(this.container.beat);\r\n                    whammy.renderer = this.renderer;\r\n                    whammy.doLayout();\r\n                    this.container.ties.push(whammy);\r\n                }\r\n                //\r\n                // Tremolo Picking\r\n                if (this.container.beat.isTremolo && !this.noteNumbers.beatEffects.has('tremolo')) {\r\n                    let offset = 0;\r\n                    let speed = this.container.beat.tremoloSpeed;\r\n                    switch (speed) {\r\n                        case Duration.ThirtySecond:\r\n                            offset = 10;\r\n                            break;\r\n                        case Duration.Sixteenth:\r\n                            offset = 5;\r\n                            break;\r\n                        case Duration.Eighth:\r\n                            offset = 0;\r\n                            break;\r\n                    }\r\n                    this.noteNumbers.beatEffects.set('tremolo', new TremoloPickingGlyph(5 * this.scale, offset * this.scale, speed));\r\n                }\r\n                //\r\n                // Note dots\r\n                //\r\n                if (this.container.beat.dots > 0 && tabRenderer.settings.notation.rhythmMode !== exports.TabRhythmMode.Hidden) {\r\n                    this.addGlyph(new SpacingGlyph(0, 0, 5 * this.scale));\r\n                    for (let i = 0; i < this.container.beat.dots; i++) {\r\n                        this.addGlyph(new CircleGlyph(0, tabRenderer.lineOffset * tabRenderer.bar.staff.tuning.length +\r\n                            tabRenderer.settings.notation.rhythmHeight * tabRenderer.scale, 1.5 * this.scale));\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                let line = Math.floor((this.renderer.bar.staff.tuning.length - 1) / 2);\r\n                let y = tabRenderer.getTabY(line);\r\n                this.restGlyph = new TabRestGlyph(0, y, tabRenderer.showRests, this.container.beat.duration);\r\n                this.restGlyph.beat = this.container.beat;\r\n                this.restGlyph.beamingHelper = this.beamingHelper;\r\n                this.addGlyph(this.restGlyph);\r\n                //\r\n                // Note dots\r\n                //\r\n                if (this.container.beat.dots > 0 && tabRenderer.showRests) {\r\n                    this.addGlyph(new SpacingGlyph(0, 0, 5 * this.scale));\r\n                    for (let i = 0; i < this.container.beat.dots; i++) {\r\n                        this.addGlyph(new CircleGlyph(0, y, 1.5 * this.scale));\r\n                    }\r\n                }\r\n            }\r\n            // left to right layout\r\n            if (!this.glyphs) {\r\n                return;\r\n            }\r\n            let w = 0;\r\n            for (let i = 0, j = this.glyphs.length; i < j; i++) {\r\n                let g = this.glyphs[i];\r\n                g.x = w;\r\n                g.renderer = this.renderer;\r\n                g.doLayout();\r\n                w += g.width;\r\n            }\r\n            this.width = w;\r\n            if (this.container.beat.isEmpty) {\r\n                this.centerX = this.width / 2;\r\n            }\r\n            else if (this.container.beat.isRest) {\r\n                this.centerX = this.restGlyph.x + this.restGlyph.width / 2;\r\n            }\r\n            else {\r\n                this.centerX = this.noteNumbers.x + this.noteNumbers.noteStringWidth / 2;\r\n            }\r\n        }\r\n        updateBeamingHelper() {\r\n            if (!this.container.beat.isRest) {\r\n                this.noteNumbers.updateBeamingHelper(this.container.x + this.x);\r\n            }\r\n            else {\r\n                this.restGlyph.updateBeamingHelper(this.container.x + this.x);\r\n            }\r\n        }\r\n        createNoteGlyph(n) {\r\n            let tr = this.renderer;\r\n            let noteNumberGlyph = new NoteNumberGlyph(0, 0, n);\r\n            let l = n.beat.voice.bar.staff.tuning.length - n.string;\r\n            noteNumberGlyph.y = tr.getTabY(l);\r\n            noteNumberGlyph.renderer = this.renderer;\r\n            noteNumberGlyph.doLayout();\r\n            this.noteNumbers.addNoteGlyph(noteNumberGlyph, n);\r\n            let topY = noteNumberGlyph.y - noteNumberGlyph.height / 2;\r\n            let bottomY = topY + noteNumberGlyph.height;\r\n            this.renderer.helpers.collisionHelper.reserveBeatSlot(this.container.beat, topY, bottomY);\r\n        }\r\n    }\n\n    class TabBrushGlyph extends Glyph {\r\n        constructor(beat) {\r\n            super(0, 0);\r\n            this._beat = beat;\r\n        }\r\n        doLayout() {\r\n            this.width = 10 * this.scale;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            let tabBarRenderer = this.renderer;\r\n            let startY = cy + this.x + (tabBarRenderer.getNoteY(this._beat.maxNote, NoteYPosition.Top));\r\n            let endY = cy + this.y + tabBarRenderer.getNoteY(this._beat.minNote, NoteYPosition.Bottom);\r\n            let arrowX = (cx + this.x + this.width / 2) | 0;\r\n            let arrowSize = 8 * this.scale;\r\n            if (this._beat.brushType !== BrushType.None) {\r\n                if (this._beat.brushType === BrushType.BrushUp || this._beat.brushType === BrushType.BrushDown) {\r\n                    canvas.beginPath();\r\n                    canvas.moveTo(arrowX, startY);\r\n                    canvas.lineTo(arrowX, endY);\r\n                    canvas.stroke();\r\n                }\r\n                else if (this._beat.brushType === BrushType.ArpeggioUp) {\r\n                    let glyph = new NoteVibratoGlyph(0, 0, VibratoType.Slight, 1.2, true);\r\n                    glyph.renderer = this.renderer;\r\n                    glyph.doLayout();\r\n                    let lineStartY = startY;\r\n                    let lineEndY = endY - arrowSize;\r\n                    glyph.width = Math.abs(lineEndY - lineStartY);\r\n                    canvas.beginRotate(cx + this.x + 4 * this.scale, lineEndY, -90);\r\n                    glyph.paint(0, -glyph.height / 2, canvas);\r\n                    canvas.endRotate();\r\n                }\r\n                else if (this._beat.brushType === BrushType.ArpeggioDown) {\r\n                    let glyph = new NoteVibratoGlyph(0, 0, VibratoType.Slight, 1.2, true);\r\n                    glyph.renderer = this.renderer;\r\n                    glyph.doLayout();\r\n                    let lineStartY = startY + arrowSize;\r\n                    let lineEndY = endY;\r\n                    glyph.width = Math.abs(lineEndY - lineStartY);\r\n                    canvas.beginRotate(cx + this.x + 4 * this.scale, lineStartY, 90);\r\n                    glyph.paint(0, -glyph.height / 2, canvas);\r\n                    canvas.endRotate();\r\n                }\r\n                if (this._beat.brushType === BrushType.BrushUp || this._beat.brushType === BrushType.ArpeggioUp) {\r\n                    canvas.beginPath();\r\n                    canvas.moveTo(arrowX, endY);\r\n                    canvas.lineTo(arrowX + arrowSize / 2, endY - arrowSize);\r\n                    canvas.lineTo(arrowX - arrowSize / 2, endY - arrowSize);\r\n                    canvas.closePath();\r\n                    canvas.fill();\r\n                }\r\n                else {\r\n                    canvas.beginPath();\r\n                    canvas.moveTo(arrowX, startY);\r\n                    canvas.lineTo(arrowX + arrowSize / 2, startY + arrowSize);\r\n                    canvas.lineTo(arrowX - arrowSize / 2, startY + arrowSize);\r\n                    canvas.closePath();\r\n                    canvas.fill();\r\n                }\r\n            }\r\n        }\r\n    }\n\n    class TabBeatPreNotesGlyph extends BeatGlyphBase {\r\n        doLayout() {\r\n            if (this.container.beat.brushType !== BrushType.None && !this.container.beat.isRest) {\r\n                this.addGlyph(new TabBrushGlyph(this.container.beat));\r\n                this.addGlyph(new SpacingGlyph(0, 0, 4 * this.scale));\r\n            }\r\n            super.doLayout();\r\n        }\r\n        constructor() {\r\n            super();\r\n        }\r\n    }\n\n    class TabClefGlyph extends Glyph {\r\n        constructor(x, y) {\r\n            super(x, y);\r\n        }\r\n        doLayout() {\r\n            this.width = 28 * this.scale;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            let strings = this.renderer.bar.staff.tuning.length;\r\n            let symbol = strings <= 4 ? MusicFontSymbol.FourStringTabClef : MusicFontSymbol.SixStringTabClef;\r\n            let scale = strings <= 4 ? strings / 4.5 : strings / 6.5;\r\n            canvas.fillMusicFontSymbol(cx + this.x + 5 * this.scale, cy + this.y, scale * this.scale, symbol, false);\r\n        }\r\n    }\n\n    class TabTimeSignatureGlyph extends TimeSignatureGlyph {\r\n        get commonScale() {\r\n            return 1;\r\n        }\r\n        get numberScale() {\r\n            let renderer = this.renderer;\r\n            if (renderer.bar.staff.tuning.length <= 4) {\r\n                return NoteHeadGlyph.GraceScale;\r\n            }\r\n            return 1;\r\n        }\r\n    }\n\n    /**\r\n     * This BarRenderer renders a bar using guitar tablature notation\r\n     */\r\n    class TabBarRenderer extends BarRendererBase {\r\n        constructor(renderer, bar) {\r\n            super(renderer, bar);\r\n            this._firstLineY = 0;\r\n            this._tupletSize = 0;\r\n            this.showTimeSignature = false;\r\n            this.showRests = false;\r\n            this.showTiedNotes = false;\r\n            this._startSpacing = false;\r\n        }\r\n        get lineOffset() {\r\n            return (TabBarRenderer.TabLineSpacing + 1) * this.scale;\r\n        }\r\n        updateSizes() {\r\n            let res = this.resources;\r\n            let numberOverflow = (res.tablatureFont.size / 2 + res.tablatureFont.size * 0.2) * this.scale;\r\n            this.topPadding = numberOverflow;\r\n            this.bottomPadding = numberOverflow;\r\n            this.height = this.lineOffset * (this.bar.staff.tuning.length - 1) + numberOverflow * 2;\r\n            if (this.settings.notation.rhythmMode !== exports.TabRhythmMode.Hidden) {\r\n                this.height += this.settings.notation.rhythmHeight * this.settings.display.scale;\r\n                this.bottomPadding += this.settings.notation.rhythmHeight * this.settings.display.scale;\r\n            }\r\n            this.updateFirstLineY();\r\n            super.updateSizes();\r\n        }\r\n        updateFirstLineY() {\r\n            let res = this.resources;\r\n            this._firstLineY = (res.tablatureFont.size / 2 + res.tablatureFont.size * 0.2) * this.scale;\r\n        }\r\n        doLayout() {\r\n            this.updateFirstLineY();\r\n            super.doLayout();\r\n            if (this.settings.notation.rhythmMode !== exports.TabRhythmMode.Hidden) {\r\n                let hasTuplets = false;\r\n                for (let voice of this.bar.voices) {\r\n                    if (this.hasVoiceContainer(voice)) {\r\n                        let c = this.getVoiceContainer(voice);\r\n                        if (c.tupletGroups.length > 0) {\r\n                            hasTuplets = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (hasTuplets) {\r\n                    this._tupletSize = this.resources.effectFont.size * 0.8;\r\n                    this.registerOverflowBottom(this._tupletSize);\r\n                }\r\n            }\r\n        }\r\n        createPreBeatGlyphs() {\r\n            super.createPreBeatGlyphs();\r\n            if (this.bar.masterBar.isRepeatStart) {\r\n                this.addPreBeatGlyph(new RepeatOpenGlyph(0, 0, 1.5, 3));\r\n            }\r\n            // Clef\r\n            if (this.isFirstOfLine) {\r\n                let center = (this.bar.staff.tuning.length - 1) / 2;\r\n                this.addPreBeatGlyph(new TabClefGlyph(5 * this.scale, this.getTabY(center)));\r\n            }\r\n            // Time Signature\r\n            if (this.showTimeSignature &&\r\n                (!this.bar.previousBar ||\r\n                    (this.bar.previousBar &&\r\n                        this.bar.masterBar.timeSignatureNumerator !==\r\n                            this.bar.previousBar.masterBar.timeSignatureNumerator) ||\r\n                    (this.bar.previousBar &&\r\n                        this.bar.masterBar.timeSignatureDenominator !==\r\n                            this.bar.previousBar.masterBar.timeSignatureDenominator))) {\r\n                this.createStartSpacing();\r\n                this.createTimeSignatureGlyphs();\r\n            }\r\n            this.addPreBeatGlyph(new BarNumberGlyph(0, this.getTabHeight(-0.5), this.bar.index + 1));\r\n        }\r\n        createStartSpacing() {\r\n            if (this._startSpacing) {\r\n                return;\r\n            }\r\n            this.addPreBeatGlyph(new SpacingGlyph(0, 0, 2 * this.scale));\r\n            this._startSpacing = true;\r\n        }\r\n        createTimeSignatureGlyphs() {\r\n            this.addPreBeatGlyph(new SpacingGlyph(0, 0, 5 * this.scale));\r\n            const lines = ((this.bar.staff.tuning.length + 1) / 2) - 1;\r\n            this.addPreBeatGlyph(new TabTimeSignatureGlyph(0, this.getTabY(lines), this.bar.masterBar.timeSignatureNumerator, this.bar.masterBar.timeSignatureDenominator, this.bar.masterBar.timeSignatureCommon));\r\n        }\r\n        createVoiceGlyphs(v) {\r\n            for (let i = 0, j = v.beats.length; i < j; i++) {\r\n                let b = v.beats[i];\r\n                let container = new TabBeatContainerGlyph(b, this.getVoiceContainer(v));\r\n                container.preNotes = new TabBeatPreNotesGlyph();\r\n                container.onNotes = new TabBeatGlyph();\r\n                this.addBeatGlyph(container);\r\n            }\r\n        }\r\n        createPostBeatGlyphs() {\r\n            super.createPostBeatGlyphs();\r\n            if (this.bar.masterBar.isRepeatEnd) {\r\n                this.addPostBeatGlyph(new RepeatCloseGlyph(this.x, 0));\r\n                if (this.bar.masterBar.repeatCount > 2) {\r\n                    this.addPostBeatGlyph(new RepeatCountGlyph(0, this.getTabY(-1), this.bar.masterBar.repeatCount));\r\n                }\r\n            }\r\n            else {\r\n                this.addPostBeatGlyph(new BarSeperatorGlyph(0, 0));\r\n            }\r\n        }\r\n        /**\r\n         * Gets the relative y position of the given steps relative to first line.\r\n         * @param line the line of the particular string where 0 is the most top line\r\n         * @param correction\r\n         * @returns\r\n         */\r\n        getTabY(line) {\r\n            return this._firstLineY + this.getTabHeight(line);\r\n        }\r\n        getTabHeight(line) {\r\n            return this.lineOffset * line;\r\n        }\r\n        get middleYPosition() {\r\n            return this.getTabY(this.bar.staff.tuning.length - 1);\r\n        }\r\n        paintBackground(cx, cy, canvas) {\r\n            super.paintBackground(cx, cy, canvas);\r\n            let res = this.resources;\r\n            //\r\n            // draw string lines\r\n            //\r\n            canvas.color = res.staffLineColor;\r\n            let padding = this.scale;\r\n            // collect tab note position for spaces\r\n            let tabNotes = [];\r\n            for (let i = 0, j = this.bar.staff.tuning.length; i < j; i++) {\r\n                tabNotes.push([]);\r\n            }\r\n            for (let voice of this.bar.voices) {\r\n                if (this.hasVoiceContainer(voice)) {\r\n                    let vc = this.getVoiceContainer(voice);\r\n                    for (let bg of vc.beatGlyphs) {\r\n                        let notes = bg.onNotes;\r\n                        let noteNumbers = notes.noteNumbers;\r\n                        if (noteNumbers) {\r\n                            for (const [str, noteNumber] of noteNumbers.notesPerString) {\r\n                                if (!noteNumber.isEmpty) {\r\n                                    tabNotes[this.bar.staff.tuning.length - str].push(new Float32Array([\r\n                                        vc.x + bg.x + notes.x + noteNumbers.x,\r\n                                        noteNumbers.width + padding\r\n                                    ]));\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // if we have multiple voices we need to sort by X-position, otherwise have a wild mix in the list\r\n            // but painting relies on ascending X-position\r\n            for (let line of tabNotes) {\r\n                line.sort((a, b) => {\r\n                    return a[0] > b[0] ? 1 : a[0] < b[0] ? -1 : 0;\r\n                });\r\n            }\r\n            for (let i = 0, j = this.bar.staff.tuning.length; i < j; i++) {\r\n                const lineY = this.getTabY(i);\r\n                let lineX = 0;\r\n                for (let line of tabNotes[i]) {\r\n                    canvas.fillRect(cx + this.x + lineX, cy + this.y + lineY | 0, line[0] - lineX, this.scale * BarRendererBase.StaffLineThickness);\r\n                    lineX = line[0] + line[1];\r\n                }\r\n                canvas.fillRect(cx + this.x + lineX, cy + this.y + lineY | 0, this.width - lineX, this.scale * BarRendererBase.StaffLineThickness);\r\n            }\r\n            canvas.color = res.mainGlyphColor;\r\n            this.paintSimileMark(cx, cy, canvas);\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            super.paint(cx, cy, canvas);\r\n            if (this.settings.notation.rhythmMode !== exports.TabRhythmMode.Hidden) {\r\n                this.paintBeams(cx, cy, canvas);\r\n                this.paintTuplets(cx, cy, canvas);\r\n            }\r\n        }\r\n        paintBeams(cx, cy, canvas) {\r\n            for (let i = 0, j = this.helpers.beamHelpers.length; i < j; i++) {\r\n                let v = this.helpers.beamHelpers[i];\r\n                for (let k = 0, l = v.length; k < l; k++) {\r\n                    let h = v[k];\r\n                    this.paintBeamHelper(cx + this.beatGlyphsStart, cy, canvas, h);\r\n                }\r\n            }\r\n        }\r\n        paintTuplets(cx, cy, canvas) {\r\n            for (let voice of this.bar.voices) {\r\n                if (this.hasVoiceContainer(voice)) {\r\n                    let container = this.getVoiceContainer(voice);\r\n                    for (let tupletGroup of container.tupletGroups) {\r\n                        this.paintTupletHelper(cx + this.beatGlyphsStart, cy, canvas, tupletGroup);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        paintBeamHelper(cx, cy, canvas, h) {\r\n            canvas.color = h.voice.index === 0 ? this.resources.mainGlyphColor : this.resources.secondaryGlyphColor;\r\n            // check if we need to paint simple footer\r\n            if (!h.isRestBeamHelper) {\r\n                if (h.beats.length === 1 || this.settings.notation.rhythmMode === exports.TabRhythmMode.ShowWithBeams) {\r\n                    this.paintFooter(cx, cy, canvas, h);\r\n                }\r\n                else {\r\n                    this.paintBar(cx, cy, canvas, h);\r\n                }\r\n            }\r\n        }\r\n        paintBar(cx, cy, canvas, h) {\r\n            for (let i = 0, j = h.beats.length; i < j; i++) {\r\n                let beat = h.beats[i];\r\n                if (h.hasBeatLineX(beat)) {\r\n                    //\r\n                    // draw line\r\n                    //\r\n                    let beatLineX = h.getBeatLineX(beat);\r\n                    let y1 = cy + this.y;\r\n                    let y2 = cy + this.y + this.height - this._tupletSize;\r\n                    let startGlyph = this.getOnNotesGlyphForBeat(beat);\r\n                    if (!startGlyph.noteNumbers) {\r\n                        y1 +=\r\n                            this.height -\r\n                                this.settings.notation.rhythmHeight * this.settings.display.scale -\r\n                                this._tupletSize;\r\n                    }\r\n                    else {\r\n                        y1 +=\r\n                            startGlyph.noteNumbers.getNoteY(startGlyph.noteNumbers.minStringNote, NoteYPosition.Bottom) +\r\n                                this.lineOffset / 2;\r\n                    }\r\n                    this.paintBeamingStem(beat, cy + this.y, cx + this.x + beatLineX, y1, y2, canvas);\r\n                    let brokenBarOffset = 6 * this.scale;\r\n                    let barSpacing = -6 * this.scale;\r\n                    let barSize = 3 * this.scale;\r\n                    let barCount = ModelUtils.getIndex(beat.duration) - 2;\r\n                    let barStart = y2;\r\n                    for (let barIndex = 0; barIndex < barCount; barIndex++) {\r\n                        let barStartX = 0;\r\n                        let barEndX = 0;\r\n                        let barStartY = 0;\r\n                        let barEndY = 0;\r\n                        let barY = barStart + barIndex * barSpacing;\r\n                        //\r\n                        // Broken Bar to Next\r\n                        //\r\n                        if (h.beats.length === 1) {\r\n                            barStartX = beatLineX;\r\n                            barEndX = beatLineX + brokenBarOffset;\r\n                            barStartY = barY;\r\n                            barEndY = barY;\r\n                            TabBarRenderer.paintSingleBar(canvas, cx + this.x + barStartX, barStartY, cx + this.x + barEndX, barEndY, barSize);\r\n                        }\r\n                        else if (i < h.beats.length - 1) {\r\n                            // full bar?\r\n                            if (BeamingHelper.isFullBarJoin(beat, h.beats[i + 1], barIndex)) {\r\n                                barStartX = beatLineX;\r\n                                barEndX = h.getBeatLineX(h.beats[i + 1]);\r\n                            }\r\n                            else if (i === 0 || !BeamingHelper.isFullBarJoin(h.beats[i - 1], beat, barIndex)) {\r\n                                barStartX = beatLineX;\r\n                                barEndX = barStartX + brokenBarOffset;\r\n                            }\r\n                            else {\r\n                                continue;\r\n                            }\r\n                            barStartY = barY;\r\n                            barEndY = barY;\r\n                            TabBarRenderer.paintSingleBar(canvas, cx + this.x + barStartX, barStartY, cx + this.x + barEndX, barEndY, barSize);\r\n                        }\r\n                        else if (i > 0 && !BeamingHelper.isFullBarJoin(beat, h.beats[i - 1], barIndex)) {\r\n                            barStartX = beatLineX - brokenBarOffset;\r\n                            barEndX = beatLineX;\r\n                            barStartY = barY;\r\n                            barEndY = barY;\r\n                            TabBarRenderer.paintSingleBar(canvas, cx + this.x + barStartX, barStartY, cx + this.x + barEndX, barEndY, barSize);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        paintTupletHelper(cx, cy, canvas, h) {\r\n            let res = this.resources;\r\n            let oldAlign = canvas.textAlign;\r\n            let oldBaseLine = canvas.textBaseline;\r\n            canvas.color = h.voice.index === 0 ? this.resources.mainGlyphColor : this.resources.secondaryGlyphColor;\r\n            canvas.textAlign = TextAlign.Center;\r\n            canvas.textBaseline = TextBaseline.Middle;\r\n            let s;\r\n            let num = h.beats[0].tupletNumerator;\r\n            let den = h.beats[0].tupletDenominator;\r\n            // list as in Guitar Pro 7. for certain tuplets only the numerator is shown\r\n            if (num === 2 && den === 3) {\r\n                s = '2';\r\n            }\r\n            else if (num === 3 && den === 2) {\r\n                s = '3';\r\n            }\r\n            else if (num === 4 && den === 6) {\r\n                s = '4';\r\n            }\r\n            else if (num === 5 && den === 4) {\r\n                s = '5';\r\n            }\r\n            else if (num === 6 && den === 4) {\r\n                s = '6';\r\n            }\r\n            else if (num === 7 && den === 4) {\r\n                s = '7';\r\n            }\r\n            else if (num === 9 && den === 8) {\r\n                s = '9';\r\n            }\r\n            else if (num === 10 && den === 8) {\r\n                s = '10';\r\n            }\r\n            else if (num === 11 && den === 8) {\r\n                s = '11';\r\n            }\r\n            else if (num === 12 && den === 8) {\r\n                s = '12';\r\n            }\r\n            else if (num === 13 && den === 8) {\r\n                s = '13';\r\n            }\r\n            else {\r\n                s = num + ':' + den;\r\n            }\r\n            // check if we need to paint simple footer\r\n            if (h.beats.length === 1 || !h.isFull) {\r\n                for (let i = 0, j = h.beats.length; i < j; i++) {\r\n                    let beat = h.beats[i];\r\n                    let beamingHelper = this.helpers.beamHelperLookup[h.voice.index].get(beat.index);\r\n                    if (!beamingHelper) {\r\n                        continue;\r\n                    }\r\n                    let tupletX = beamingHelper.getBeatLineX(beat);\r\n                    let tupletY = cy + this.y + this.height - this._tupletSize + res.effectFont.size * 0.5;\r\n                    canvas.font = res.effectFont;\r\n                    canvas.fillText(s, cx + this.x + tupletX, tupletY);\r\n                }\r\n            }\r\n            else {\r\n                let firstBeat = h.beats[0];\r\n                let lastBeat = h.beats[h.beats.length - 1];\r\n                let firstBeamingHelper = this.helpers.beamHelperLookup[h.voice.index].get(firstBeat.index);\r\n                let lastBeamingHelper = this.helpers.beamHelperLookup[h.voice.index].get(lastBeat.index);\r\n                if (firstBeamingHelper && lastBeamingHelper) {\r\n                    //\r\n                    // Calculate the overall area of the tuplet bracket\r\n                    let startX = firstBeamingHelper.getBeatLineX(firstBeat);\r\n                    let endX = lastBeamingHelper.getBeatLineX(lastBeat);\r\n                    //\r\n                    // Calculate how many space the text will need\r\n                    canvas.font = res.effectFont;\r\n                    let sw = canvas.measureText(s);\r\n                    let sp = 3 * this.scale;\r\n                    //\r\n                    // Calculate the offsets where to break the bracket\r\n                    let middleX = (startX + endX) / 2;\r\n                    let offset1X = middleX - sw / 2 - sp;\r\n                    let offset2X = middleX + sw / 2 + sp;\r\n                    //\r\n                    // calculate the y positions for our bracket\r\n                    let startY = cy + this.y + this.height - this._tupletSize + res.effectFont.size * 0.5;\r\n                    let offset = -res.effectFont.size * 0.25;\r\n                    let size = -5 * this.scale;\r\n                    //\r\n                    // draw the bracket\r\n                    canvas.beginPath();\r\n                    canvas.moveTo(cx + this.x + startX, (startY - offset) | 0);\r\n                    canvas.lineTo(cx + this.x + startX, (startY - offset - size) | 0);\r\n                    canvas.lineTo(cx + this.x + offset1X, (startY - offset - size) | 0);\r\n                    canvas.stroke();\r\n                    canvas.beginPath();\r\n                    canvas.moveTo(cx + this.x + offset2X, (startY - offset - size) | 0);\r\n                    canvas.lineTo(cx + this.x + endX, (startY - offset - size) | 0);\r\n                    canvas.lineTo(cx + this.x + endX, (startY - offset) | 0);\r\n                    canvas.stroke();\r\n                    //\r\n                    // Draw the string\r\n                    canvas.fillText(s, cx + this.x + middleX, startY - offset - size);\r\n                }\r\n            }\r\n            canvas.textAlign = oldAlign;\r\n            canvas.textBaseline = oldBaseLine;\r\n        }\r\n        static paintSingleBar(canvas, x1, y1, x2, y2, size) {\r\n            canvas.beginPath();\r\n            canvas.moveTo(x1, y1);\r\n            canvas.lineTo(x2, y2);\r\n            canvas.lineTo(x2, y2 - size);\r\n            canvas.lineTo(x1, y1 - size);\r\n            canvas.closePath();\r\n            canvas.fill();\r\n        }\r\n        paintBeamingStem(beat, cy, x, topY, bottomY, canvas) {\r\n            canvas.beginPath();\r\n            let holes = [];\r\n            if (this.helpers.collisionHelper.reservedLayoutAreasByDisplayTime.has(beat.displayStart)) {\r\n                holes = this.helpers.collisionHelper.reservedLayoutAreasByDisplayTime.get(beat.displayStart).slots.slice();\r\n                holes.sort((a, b) => a.topY - b.topY);\r\n            }\r\n            let y = bottomY;\r\n            while (y > topY) {\r\n                canvas.moveTo(x, y);\r\n                let lineY = topY;\r\n                // draw until next hole\r\n                if (holes.length > 0) {\r\n                    const bottomHole = holes.pop();\r\n                    lineY = cy + bottomHole.bottomY;\r\n                    canvas.lineTo(x, lineY);\r\n                    y = cy + bottomHole.topY;\r\n                }\r\n                else {\r\n                    canvas.lineTo(x, topY);\r\n                    break;\r\n                }\r\n            }\r\n            canvas.stroke();\r\n        }\r\n        paintFooter(cx, cy, canvas, h) {\r\n            for (let beat of h.beats) {\r\n                if (beat.graceType !== GraceType.None ||\r\n                    beat.duration === Duration.Whole ||\r\n                    beat.duration === Duration.DoubleWhole ||\r\n                    beat.duration === Duration.QuadrupleWhole) {\r\n                    return;\r\n                }\r\n                //\r\n                // draw line\r\n                //\r\n                let beatLineX = h.getBeatLineX(beat);\r\n                let y1 = cy + this.y;\r\n                let y2 = cy + this.y + this.height - this._tupletSize;\r\n                let startGlyph = this.getOnNotesGlyphForBeat(beat);\r\n                if (!startGlyph.noteNumbers) {\r\n                    y1 +=\r\n                        this.height - this.settings.notation.rhythmHeight * this.settings.display.scale - this._tupletSize;\r\n                }\r\n                else {\r\n                    y1 +=\r\n                        startGlyph.noteNumbers.getNoteY(startGlyph.noteNumbers.minStringNote, NoteYPosition.Bottom);\r\n                }\r\n                this.paintBeamingStem(beat, cy + this.y, cx + this.x + beatLineX, y1, y2, canvas);\r\n                //\r\n                // Draw Flag\r\n                //\r\n                if (beat.duration > Duration.Quarter) {\r\n                    let glyph = new FlagGlyph(0, 0, beat.duration, BeamDirection.Down, false);\r\n                    glyph.renderer = this;\r\n                    glyph.doLayout();\r\n                    glyph.paint(cx + this.x + beatLineX, y2, canvas);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    TabBarRenderer.StaffId = 'tab';\r\n    TabBarRenderer.TabLineSpacing = 10;\n\n    /**\r\n     * This Factory produces TabBarRenderer instances\r\n     */\r\n    class TabBarRendererFactory extends BarRendererFactory {\r\n        constructor(showTimeSignature, showRests, showTiedNotes) {\r\n            super();\r\n            this._showTimeSignature = showTimeSignature;\r\n            this._showRests = showRests;\r\n            this._showTiedNotes = showTiedNotes;\r\n            this.hideOnPercussionTrack = true;\r\n        }\r\n        get staffId() {\r\n            return TabBarRenderer.StaffId;\r\n        }\r\n        canCreate(track, staff) {\r\n            return staff.tuning.length > 0 && super.canCreate(track, staff);\r\n        }\r\n        create(renderer, bar) {\r\n            let tabBarRenderer = new TabBarRenderer(renderer, bar);\r\n            tabBarRenderer.showRests = this._showRests;\r\n            tabBarRenderer.showTimeSignature = this._showTimeSignature;\r\n            tabBarRenderer.showTiedNotes = this._showTiedNotes;\r\n            return tabBarRenderer;\r\n        }\r\n    }\n\n    class LeftHandTapGlyph extends EffectGlyph {\r\n        constructor() {\r\n            super(0, 0);\r\n        }\r\n        doLayout() {\r\n            super.doLayout();\r\n            const font = this.renderer.resources.effectFont;\r\n            this.height = font.size + LeftHandTapGlyph.Padding * this.scale;\r\n        }\r\n        paint(cx, cy, canvas) {\r\n            let res = this.renderer.resources;\r\n            canvas.font = res.effectFont;\r\n            let old = canvas.textAlign;\r\n            canvas.textAlign = TextAlign.Center;\r\n            canvas.fillText('T', cx + this.x, cy + this.y + canvas.font.size / 2);\r\n            canvas.textAlign = old;\r\n            canvas.strokeCircle(cx + this.x, cy + this.y + canvas.font.size / 2 + (LeftHandTapGlyph.Padding - 1) * this.scale, canvas.font.size / 1.6);\r\n        }\r\n    }\r\n    LeftHandTapGlyph.Padding = 4;\n\n    class LeftHandTapEffectInfo extends NoteEffectInfoBase {\r\n        get notationElement() {\r\n            return NotationElement.EffectTap;\r\n        }\r\n        get sizingMode() {\r\n            return EffectBarGlyphSizing.SingleOnBeat;\r\n        }\r\n        shouldCreateGlyphForNote(note) {\r\n            return note.isLeftHandTapped;\r\n        }\r\n        createNewGlyph(renderer, beat) {\r\n            return new LeftHandTapGlyph();\r\n        }\r\n    }\n\n    class DrawObject {\r\n        constructor() {\r\n            this.noteRange = 1;\r\n            this.x = 0;\r\n            this.y = 0;\r\n        }\r\n    }\r\n    var FrameType;\r\n    (function (FrameType) {\r\n        FrameType[FrameType[\"None\"] = 0] = \"None\";\r\n        FrameType[FrameType[\"Rectangle\"] = 1] = \"Rectangle\";\r\n        FrameType[FrameType[\"Ellipse\"] = 2] = \"Ellipse\";\r\n        FrameType[FrameType[\"Circle\"] = 3] = \"Circle\";\r\n    })(FrameType || (FrameType = {}));\r\n    class TextDrawObject extends DrawObject {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.align = TextAlign.Left;\r\n            this.frame = FrameType.None;\r\n            this.text = '';\r\n            this.fontFace = '';\r\n            this.weight = 0;\r\n            this.height = 0;\r\n        }\r\n    }\r\n    class GuitarDrawObject extends DrawObject {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.chord = new Chord();\r\n        }\r\n    }\r\n    class SlurDrawObject extends DrawObject {\r\n    }\r\n    class WavyLineDrawObject extends DrawObject {\r\n    }\r\n    class TupletBracketDrawObject extends DrawObject {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.number = 0;\r\n        }\r\n    }\r\n    class WedgeDrawObject extends DrawObject {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.decrescendo = false;\r\n        }\r\n    }\r\n    class VoltaDrawObject extends DrawObject {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.allNumbers = false;\r\n            this.firstNumber = 0;\r\n            this.lastNumber = 0;\r\n        }\r\n    }\r\n    class OctaveClefDrawObject extends DrawObject {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.octave = 1;\r\n        }\r\n    }\r\n    class TrillDrawObject extends DrawObject {\r\n    }\r\n    class StaffLayout {\r\n        constructor() {\r\n            this.defaultClef = Clef.G2;\r\n            this.description = '';\r\n            this.percussion = false;\r\n            this.instrument = 0;\r\n            this.volume = 0;\r\n            this.transpose = 0;\r\n            this.index = 0;\r\n        }\r\n    }\r\n    class Bracket {\r\n        constructor() {\r\n            this.from = 0;\r\n            this.to = 0;\r\n            this.curly = false;\r\n        }\r\n    }\r\n    class CapellaVoiceState {\r\n        constructor() {\r\n            this.currentBarIndex = -1;\r\n            this.currentBarComplete = true;\r\n            this.currentBarDuration = 0;\r\n            this.currentPosition = 0;\r\n            this.voiceStemDir = null;\r\n            this.repeatCount = 0;\r\n            this.repeatEnd = null;\r\n        }\r\n    }\r\n    class CapellaParser {\r\n        constructor() {\r\n            this._trackChannel = 0;\r\n            this._beamingMode = BeatBeamingMode.Auto;\r\n            this._isFirstSystem = true;\r\n            this._staffLookup = new Map();\r\n            this._brackets = [];\r\n            this._staffLayoutLookup = new Map();\r\n            this._staffLayouts = [];\r\n            this._timeSignature = new MasterBar();\r\n            this._voiceStates = new Map();\r\n        }\r\n        parseXml(xml, settings) {\r\n            this._galleryObjects = new Map();\r\n            this._tieStarts = [];\r\n            this._tieStartIds = new Map();\r\n            this._voiceCounts = new Map();\r\n            this._slurs = new Map();\r\n            this._crescendo = new Map();\r\n            this._isFirstSystem = true;\r\n            let dom = new XmlDocument();\r\n            try {\r\n                dom.parse(xml);\r\n            }\r\n            catch (e) {\r\n                throw new UnsupportedFormatError('Could not parse XML', e);\r\n            }\r\n            this.parseDom(dom);\r\n            this.consolidate();\r\n            this.score.finish(settings);\r\n        }\r\n        consolidate() {\r\n            // voice counts and contents might be inconsistent\r\n            // we need to ensure we have an equal amount of voices across all bars\r\n            // and voices must contain an empty beat at minimum\r\n            let tempo = this.score.tempo;\r\n            for (const track of this.score.tracks) {\r\n                const trackVoiceCount = this._voiceCounts.get(track.index);\r\n                for (const staff of track.staves) {\r\n                    while (staff.bars.length < this.score.masterBars.length) {\r\n                        this.addNewBar(staff);\r\n                    }\r\n                    for (const bar of staff.bars) {\r\n                        while (bar.voices.length < trackVoiceCount) {\r\n                            bar.addVoice(new Voice());\r\n                        }\r\n                        for (const voice of bar.voices) {\r\n                            if (voice.beats.length === 0) {\r\n                                const emptyBeat = new Beat();\r\n                                emptyBeat.isEmpty = true;\r\n                                voice.addBeat(emptyBeat);\r\n                            }\r\n                        }\r\n                        const mb = bar.masterBar;\r\n                        if (mb.tempoAutomation) {\r\n                            if (mb.tempoAutomation.value !== tempo) {\r\n                                tempo = mb.tempoAutomation.value;\r\n                            }\r\n                            else {\r\n                                mb.tempoAutomation = null;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            CapellaParser.applyEffectRange(this._slurs, (_, beat) => {\r\n                beat.isLegatoOrigin = true;\r\n            });\r\n            CapellaParser.applyEffectRange(this._crescendo, (cre, beat) => {\r\n                beat.crescendo = cre.decrescendo ? CrescendoType.Decrescendo : CrescendoType.Crescendo;\r\n            });\r\n        }\r\n        static applyEffectRange(effects, applyEffect) {\r\n            for (const [startBeat, effect] of effects) {\r\n                const noteRange = effect.noteRange;\r\n                let endBeat = startBeat;\r\n                for (let i = 0; i < noteRange; i++) {\r\n                    applyEffect(effect, endBeat);\r\n                    // advance to next\r\n                    if (endBeat.index + 1 < endBeat.voice.beats.length) {\r\n                        endBeat = endBeat.voice.beats[endBeat.index + 1];\r\n                    }\r\n                    else if (endBeat.voice.bar.index + 1 < endBeat.voice.bar.staff.bars.length) {\r\n                        const nextBar = endBeat.voice.bar.staff.bars[endBeat.voice.bar.index + 1];\r\n                        endBeat = nextBar.voices[endBeat.voice.index].beats[0];\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseDom(dom) {\r\n            let root = dom.firstElement;\r\n            if (!root) {\r\n                return;\r\n            }\r\n            if (root.localName === 'score') {\r\n                this.score = new Score();\r\n                this.score.tempo = 120;\r\n                // parse all children\r\n                for (let n of root.childNodes) {\r\n                    if (n.nodeType === XmlNodeType.Element) {\r\n                        switch (n.localName) {\r\n                            case 'info':\r\n                                this.parseInfo(n);\r\n                                break;\r\n                            case 'layout':\r\n                                this.parseLayout(n);\r\n                                break;\r\n                            case 'gallery':\r\n                                this.parseGallery(n);\r\n                                break;\r\n                            case 'pageObjects':\r\n                                this.parsePageObjects(n);\r\n                                break;\r\n                            // barCount ignored\r\n                            case 'systems':\r\n                                this.parseSystems(n);\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                throw new UnsupportedFormatError('Root node of XML was not GPIF');\r\n            }\r\n        }\r\n        parseLayout(element) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'staves':\r\n                            this.parseLayoutStaves(c);\r\n                            break;\r\n                        case 'brackets':\r\n                            this.parseBrackets(c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            // after the layout is parsed we can build up the\r\n            // track > staff structure for later use\r\n            // curly brackets define which staves go together into a track\r\n            const curlyBrackets = this._brackets.filter(b => b.curly);\r\n            curlyBrackets.sort((a, b) => a.from - b.from);\r\n            let currentBracketIndex = 0;\r\n            let currentTrack = null;\r\n            for (let i = 0; i < this._staffLayouts.length; i++) {\r\n                const staffLayout = this._staffLayouts[i];\r\n                // advance to next bracket according to the staff index\r\n                while (currentBracketIndex < curlyBrackets.length && i > curlyBrackets[currentBracketIndex].to) {\r\n                    currentBracketIndex++;\r\n                }\r\n                if (currentTrack &&\r\n                    currentBracketIndex < curlyBrackets.length &&\r\n                    i > curlyBrackets[currentBracketIndex].from &&\r\n                    i <= curlyBrackets[currentBracketIndex].to) {\r\n                    // if we still fit into the current bracket, we just add another staff to the\r\n                    // track\r\n                    currentTrack.ensureStaveCount(currentTrack.staves.length + 1);\r\n                }\r\n                else {\r\n                    currentTrack = new Track();\r\n                    currentTrack.ensureStaveCount(1);\r\n                    currentTrack.name = staffLayout.description;\r\n                    currentTrack.playbackInfo.volume = Math.floor((staffLayout.volume / 128) * 16);\r\n                    currentTrack.playbackInfo.program = staffLayout.instrument;\r\n                    if (staffLayout.percussion) {\r\n                        currentTrack.playbackInfo.primaryChannel = 9;\r\n                        currentTrack.playbackInfo.secondaryChannel = 9;\r\n                    }\r\n                    else {\r\n                        currentTrack.playbackInfo.primaryChannel = this._trackChannel++;\r\n                        currentTrack.playbackInfo.secondaryChannel = this._trackChannel++;\r\n                    }\r\n                    this.score.addTrack(currentTrack);\r\n                }\r\n                const staff = currentTrack.staves[currentTrack.staves.length - 1];\r\n                staff.isPercussion = staffLayout.percussion;\r\n                staff.transpositionPitch = staffLayout.transpose;\r\n                staff.displayTranspositionPitch = 0;\r\n                staff.showTablature = false; // capella does not have tabs\r\n                this._staffLookup.set(staffLayout.index, staff);\r\n            }\r\n        }\r\n        parseBrackets(element) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'bracket':\r\n                            this.parseBracket(c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseBracket(element) {\r\n            const bracket = new Bracket();\r\n            bracket.from = parseInt(element.getAttribute('from'));\r\n            bracket.to = parseInt(element.getAttribute('to'));\r\n            if (element.attributes.has('curly')) {\r\n                bracket.curly = element.attributes.get('curly') === 'true';\r\n            }\r\n            this._brackets.push(bracket);\r\n        }\r\n        parseLayoutStaves(element) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'staffLayout':\r\n                            this.parseStaffLayout(c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseStaffLayout(element) {\r\n            const layout = new StaffLayout();\r\n            layout.description = element.getAttribute('description');\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'notation':\r\n                            if (c.attributes.has('defaultClef')) {\r\n                                layout.defaultClef = this.parseClef(c.attributes.get('defaultClef'));\r\n                            }\r\n                            break;\r\n                        case 'sound':\r\n                            if (c.attributes.has('percussion')) {\r\n                                layout.percussion = c.attributes.get('percussion') === 'true';\r\n                            }\r\n                            if (c.attributes.has('instr')) {\r\n                                layout.instrument = parseInt(c.attributes.get('instr'));\r\n                            }\r\n                            if (c.attributes.has('volume')) {\r\n                                layout.volume = parseInt(c.attributes.get('volume'));\r\n                            }\r\n                            if (c.attributes.has('transpose')) {\r\n                                layout.transpose = parseInt(c.attributes.get('transpose'));\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            this._staffLayoutLookup.set(layout.description, layout);\r\n            layout.index = this._staffLayouts.length;\r\n            this._staffLayouts.push(layout);\r\n        }\r\n        parseClef(v) {\r\n            switch (v) {\r\n                case 'treble':\r\n                    return Clef.G2;\r\n                case 'bass':\r\n                    return Clef.F4;\r\n                case 'alto':\r\n                    return Clef.C4;\r\n                case 'tenor':\r\n                    return Clef.C4;\r\n            }\r\n            return Clef.G2;\r\n        }\r\n        parseClefOttava(v) {\r\n            if (v.endsWith('-')) {\r\n                return Ottavia._8vb;\r\n            }\r\n            else if (v.endsWith('+')) {\r\n                return Ottavia._8va;\r\n            }\r\n            return Ottavia.Regular;\r\n        }\r\n        parseSystems(element) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'system':\r\n                            this.parseSystem(c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseSystem(element) {\r\n            if (element.attributes.has('tempo')) {\r\n                if (this.score.masterBars.length === 0) {\r\n                    this.score.tempo = parseInt(element.attributes.get('tempo'));\r\n                }\r\n            }\r\n            if (element.getAttribute('beamGrouping') === '0') {\r\n                this._beamingMode = BeatBeamingMode.ForceSplitToNext;\r\n            }\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'staves':\r\n                            this.parseStaves(element, c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            this._isFirstSystem = false;\r\n        }\r\n        parseStaves(systemElement, element) {\r\n            let firstBarIndex = this.score.masterBars.length;\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'staff':\r\n                            this.parseStaff(systemElement, firstBarIndex, c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseStaff(systemElement, firstBarIndex, element) {\r\n            const staffId = element.getAttribute('layout');\r\n            this._currentStaffLayout = this._staffLayoutLookup.get(staffId);\r\n            this._timeSignature.timeSignatureNumerator = 4;\r\n            this._timeSignature.timeSignatureDenominator = 4;\r\n            this._timeSignature.timeSignatureCommon = false;\r\n            this.parseTime(element.getAttribute('defaultTime'));\r\n            const staff = this._staffLookup.get(this._currentStaffLayout.index);\r\n            // there might be systems where this staff is not contained\r\n            // so we create bars until the current staff to ensure the right\r\n            // alignment\r\n            while (staff.bars.length < firstBarIndex) {\r\n                this.addNewBar(staff);\r\n            }\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'voices':\r\n                            this.parseVoices(staffId, staff, systemElement, firstBarIndex, c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseTime(value) {\r\n            switch (value) {\r\n                case 'allaBreve':\r\n                case 'C':\r\n                    this._timeSignature.timeSignatureNumerator = 2;\r\n                    this._timeSignature.timeSignatureDenominator = 2;\r\n                    this._timeSignature.timeSignatureCommon = true;\r\n                    break;\r\n                case 'longAllaBreve':\r\n                    this._timeSignature.timeSignatureNumerator = 4;\r\n                    this._timeSignature.timeSignatureDenominator = 4;\r\n                    this._timeSignature.timeSignatureCommon = true;\r\n                    break;\r\n                default:\r\n                    if (value.indexOf('/') > 0) {\r\n                        const parts = value.split('/');\r\n                        this._timeSignature.timeSignatureNumerator = parseInt(parts[0]);\r\n                        this._timeSignature.timeSignatureDenominator = parseInt(parts[1]);\r\n                        this._timeSignature.timeSignatureCommon = false;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        parseVoices(staffId, staff, systemElement, firstBarIndex, element) {\r\n            let voiceIndex = 0;\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'voice':\r\n                            this.parseVoice(staffId, staff, systemElement, voiceIndex, firstBarIndex, c);\r\n                            voiceIndex++;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        getOrCreateBar(staff, barIndex) {\r\n            if (barIndex < staff.bars.length) {\r\n                return staff.bars[barIndex];\r\n            }\r\n            return this.addNewBar(staff);\r\n        }\r\n        addNewBar(staff) {\r\n            // voice tags always start a new bar\r\n            let currentBar = new Bar();\r\n            if (staff.bars.length > 0) {\r\n                currentBar.clef = staff.bars[staff.bars.length - 1].clef;\r\n                currentBar.clefOttava = staff.bars[staff.bars.length - 1].clefOttava;\r\n            }\r\n            else {\r\n                currentBar.clef = this._currentStaffLayout.defaultClef;\r\n            }\r\n            staff.addBar(currentBar);\r\n            // create masterbar if needed\r\n            if (staff.bars.length > this.score.masterBars.length) {\r\n                let master = new MasterBar();\r\n                this.score.addMasterBar(master);\r\n                if (master.index > 0) {\r\n                    master.keySignature = master.previousMasterBar.keySignature;\r\n                    master.keySignatureType = master.previousMasterBar.keySignatureType;\r\n                    master.tripletFeel = master.previousMasterBar.tripletFeel;\r\n                }\r\n                master.timeSignatureDenominator = this._timeSignature.timeSignatureDenominator;\r\n                master.timeSignatureNumerator = this._timeSignature.timeSignatureNumerator;\r\n                master.timeSignatureCommon = this._timeSignature.timeSignatureCommon;\r\n            }\r\n            return currentBar;\r\n        }\r\n        newBar(staff, voiceIndex) {\r\n            this._currentVoiceState.currentBarIndex++;\r\n            this._currentBar = this.getOrCreateBar(staff, this._currentVoiceState.currentBarIndex);\r\n            this._currentVoiceState.currentBarDuration = this._currentBar.masterBar.calculateDuration(false);\r\n            this._currentVoiceState.currentBarComplete = false;\r\n            this._currentVoiceState.currentPosition = 0;\r\n            this.ensureVoice(staff, voiceIndex);\r\n        }\r\n        parseVoice(staffId, staff, systemElement, voiceIndex, firstBarIndex, element) {\r\n            const voiceStateKey = staffId + '_' + voiceIndex;\r\n            if (this._currentVoiceState && !this._currentVoiceState.currentBarComplete) {\r\n                this._currentBar.masterBar.isAnacrusis = true;\r\n            }\r\n            if (!this._voiceStates.has(voiceStateKey)) {\r\n                this._currentVoiceState = new CapellaVoiceState();\r\n                this._currentVoiceState.currentBarIndex = firstBarIndex - 1;\r\n                this._voiceStates.set(voiceStateKey, this._currentVoiceState);\r\n                this.newBar(staff, voiceIndex);\r\n            }\r\n            else {\r\n                this._currentVoiceState = this._voiceStates.get(voiceStateKey);\r\n                this._currentBar = this.getOrCreateBar(staff, this._currentVoiceState.currentBarIndex);\r\n                this.ensureVoice(staff, voiceIndex);\r\n            }\r\n            // voice tags always start a new bar\r\n            if (element.attributes.has('stemDir')) {\r\n                switch (element.attributes.get('stemDir')) {\r\n                    case 'up':\r\n                        this._currentVoiceState.voiceStemDir = BeamDirection.Up;\r\n                        break;\r\n                    case 'down':\r\n                        this._currentVoiceState.voiceStemDir = BeamDirection.Down;\r\n                        break;\r\n                    default:\r\n                        this._currentVoiceState.voiceStemDir = null;\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                this._currentVoiceState.voiceStemDir = null;\r\n            }\r\n            const noteObjects = element.findChildElement('noteObjects');\r\n            if (systemElement.attributes.has('tempo')) {\r\n                this._currentBar.masterBar.tempoAutomation = new Automation();\r\n                this._currentBar.masterBar.tempoAutomation.isLinear = true;\r\n                this._currentBar.masterBar.tempoAutomation.type = AutomationType.Tempo;\r\n                this._currentBar.masterBar.tempoAutomation.value = parseInt(systemElement.attributes.get('tempo'));\r\n            }\r\n            if (noteObjects) {\r\n                for (let c of noteObjects.childNodes) {\r\n                    if (c.nodeType === XmlNodeType.Element) {\r\n                        if (this._currentVoiceState.currentBarComplete && c.localName !== 'barline') {\r\n                            this.newBar(staff, voiceIndex);\r\n                        }\r\n                        switch (c.localName) {\r\n                            case 'clefSign':\r\n                                this._currentBar.clef = this.parseClef(c.getAttribute('clef'));\r\n                                this._currentBar.clefOttava = this.parseClefOttava(c.getAttribute('clef'));\r\n                                break;\r\n                            case 'keySign':\r\n                                this._currentBar.masterBar.keySignature = parseInt(c.getAttribute('fifths'));\r\n                                break;\r\n                            case 'timeSign':\r\n                                this.parseTime(c.getAttribute('time'));\r\n                                this._currentBar.masterBar.timeSignatureDenominator = this._timeSignature.timeSignatureDenominator;\r\n                                this._currentBar.masterBar.timeSignatureNumerator = this._timeSignature.timeSignatureNumerator;\r\n                                this._currentBar.masterBar.timeSignatureCommon = this._timeSignature.timeSignatureCommon;\r\n                                // NOTE: capella resets the current bar position to 0 whenever a timeSign is placed\r\n                                this._currentVoiceState.currentPosition = 0;\r\n                                this._currentVoiceState.currentBarDuration = this._currentBar.masterBar.calculateDuration(false);\r\n                                break;\r\n                            case 'barline':\r\n                                switch (c.getAttribute('type')) {\r\n                                    case 'double':\r\n                                        this._currentBar.masterBar.isDoubleBar = true;\r\n                                        if (!this._currentVoiceState.currentBarComplete) {\r\n                                            this._currentBar.masterBar.isAnacrusis = true;\r\n                                        }\r\n                                        this._currentVoiceState.currentBarComplete = true;\r\n                                        break;\r\n                                    case 'end':\r\n                                        if (!this._currentVoiceState.currentBarComplete) {\r\n                                            this._currentBar.masterBar.isAnacrusis = true;\r\n                                        }\r\n                                        break;\r\n                                    case 'repEnd':\r\n                                        this._currentVoiceState.repeatEnd = this._currentBar.masterBar;\r\n                                        if (this._currentBar.masterBar.repeatCount < this._currentVoiceState.repeatCount) {\r\n                                            this._currentBar.masterBar.repeatCount = this._currentVoiceState.repeatCount;\r\n                                        }\r\n                                        this.parseBarDrawObject(c);\r\n                                        if (!this._currentVoiceState.currentBarComplete) {\r\n                                            this._currentBar.masterBar.isAnacrusis = true;\r\n                                        }\r\n                                        this._currentVoiceState.currentBarComplete = true;\r\n                                        break;\r\n                                    case 'repBegin':\r\n                                        this.newBar(staff, voiceIndex); // repeat-start requires instant new bar\r\n                                        this._currentBar.masterBar.isRepeatStart = true;\r\n                                        this._currentVoiceState.repeatEnd = null;\r\n                                        this._currentVoiceState.repeatCount = 0;\r\n                                        break;\r\n                                    case 'repEndBegin':\r\n                                        this._currentVoiceState.repeatEnd = this._currentBar.masterBar;\r\n                                        if (this._currentBar.masterBar.repeatCount < this._currentVoiceState.repeatCount) {\r\n                                            this._currentBar.masterBar.repeatCount = this._currentVoiceState.repeatCount;\r\n                                        }\r\n                                        this.parseBarDrawObject(c);\r\n                                        this.newBar(staff, voiceIndex); // end-begin requires instant new bar\r\n                                        this._currentBar.masterBar.isRepeatStart = true;\r\n                                        break;\r\n                                    case 'dashed':\r\n                                        if (!this._currentVoiceState.currentBarComplete) {\r\n                                            this._currentBar.masterBar.isAnacrusis = true;\r\n                                        }\r\n                                        this._currentVoiceState.currentBarComplete = true;\r\n                                        break;\r\n                                    case 'single':\r\n                                    default:\r\n                                        if (!this._currentVoiceState.currentBarComplete) {\r\n                                            this._currentBar.masterBar.isAnacrusis = true;\r\n                                        }\r\n                                        this._currentVoiceState.currentBarComplete = true;\r\n                                        break;\r\n                                }\r\n                                break;\r\n                            case 'chord':\r\n                                let chordBeat = new Beat();\r\n                                this.initFromPreviousBeat(chordBeat, this._currentVoice);\r\n                                chordBeat.beamingMode = this._beamingMode;\r\n                                if (this._currentVoiceState.voiceStemDir) {\r\n                                    chordBeat.preferredBeamDirection = this._currentVoiceState.voiceStemDir;\r\n                                }\r\n                                this.parseDuration(this._currentBar, chordBeat, c.findChildElement('duration'));\r\n                                chordBeat.updateDurations();\r\n                                this._currentVoiceState.currentPosition += chordBeat.playbackDuration;\r\n                                this._currentVoice.addBeat(chordBeat);\r\n                                this.parseChord(chordBeat, c);\r\n                                if (this._currentVoiceState.currentPosition >= this._currentVoiceState.currentBarDuration) {\r\n                                    this._currentVoiceState.currentBarComplete = true;\r\n                                }\r\n                                break;\r\n                            case 'rest':\r\n                                const restBeat = this.parseRestDurations(this._currentBar, c.findChildElement('duration'));\r\n                                if (restBeat) {\r\n                                    this.initFromPreviousBeat(restBeat, this._currentVoice);\r\n                                    restBeat.updateDurations();\r\n                                    this._currentVoiceState.currentPosition += restBeat.playbackDuration;\r\n                                    this._currentVoice.addBeat(restBeat);\r\n                                    if (this._currentVoiceState.currentPosition >=\r\n                                        this._currentVoiceState.currentBarDuration) {\r\n                                        this._currentVoiceState.currentBarComplete = true;\r\n                                    }\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        initFromPreviousBeat(chordBeat, currentVoice) {\r\n            let previousBeat = this.getLastBeat(currentVoice);\r\n            if (previousBeat) {\r\n                chordBeat.dynamics = previousBeat.dynamics;\r\n            }\r\n        }\r\n        getLastBeat(voice) {\r\n            if (voice.beats.length > 0) {\r\n                return voice.beats[voice.beats.length - 1];\r\n            }\r\n            else if (voice.bar.index > 0) {\r\n                const previousBar = voice.bar.staff.bars[voice.bar.index - 1];\r\n                if (voice.index < previousBar.voices.length) {\r\n                    const previousVoice = previousBar.voices[voice.index];\r\n                    return this.getLastBeat(previousVoice);\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        ensureVoice(staff, voiceIndex) {\r\n            while (this._currentBar.voices.length < voiceIndex + 1) {\r\n                this._currentBar.addVoice(new Voice());\r\n            }\r\n            if (!this._voiceCounts.has(staff.track.index) ||\r\n                this._voiceCounts.get(staff.track.index) < this._currentBar.voices.length) {\r\n                this._voiceCounts.set(staff.track.index, this._currentBar.voices.length);\r\n            }\r\n            this._currentVoice = this._currentBar.voices[voiceIndex];\r\n        }\r\n        parseChord(beat, element) {\r\n            const articulation = new Note();\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'stem':\r\n                            switch (c.getAttribute('dir')) {\r\n                                case 'up':\r\n                                    beat.preferredBeamDirection = BeamDirection.Up;\r\n                                    break;\r\n                                case 'down':\r\n                                    beat.preferredBeamDirection = BeamDirection.Down;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                        case 'articulation':\r\n                            switch (c.getAttribute('type')) {\r\n                                case 'staccato':\r\n                                    articulation.isStaccato = true;\r\n                                    break;\r\n                                case 'normalAccent':\r\n                                    articulation.accentuated = AccentuationType.Normal;\r\n                                    break;\r\n                                case 'strongAccent':\r\n                                    articulation.accentuated = AccentuationType.Heavy;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                        case 'lyric':\r\n                            this.parseLyric(beat, c);\r\n                            break;\r\n                        case 'drawObjects':\r\n                            this.parseBeatDrawObject(beat, c);\r\n                            break;\r\n                        case 'heads':\r\n                            this.parseHeads(beat, articulation, c);\r\n                            break;\r\n                        case 'beam':\r\n                            switch (c.getAttribute('group')) {\r\n                                case 'force':\r\n                                    beat.beamingMode = BeatBeamingMode.ForceMergeWithNext;\r\n                                    break;\r\n                                case 'divide':\r\n                                    beat.beamingMode = BeatBeamingMode.ForceSplitToNext;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseHeads(beat, articulation, element) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'head':\r\n                            this.parseHead(beat, articulation, c);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseHead(beat, articulation, element) {\r\n            const note = new Note();\r\n            const pitch = ModelUtils.parseTuning(element.getAttribute('pitch'));\r\n            note.octave = pitch.octave - 1;\r\n            note.tone = pitch.noteValue;\r\n            note.isStaccato = articulation.isStaccato;\r\n            note.accentuated = articulation.accentuated;\r\n            beat.addNote(note);\r\n            // TODO: based on the shape attribute apply effects or\r\n            // right percussion value\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'alter':\r\n                            if (c.attributes.has('step')) {\r\n                                note.tone += parseInt(c.attributes.get('step'));\r\n                            }\r\n                            break;\r\n                        case 'tie':\r\n                            if (c.attributes.has('begin')) {\r\n                                if (!this._tieStartIds.has(note.id)) {\r\n                                    this._tieStartIds.set(note.id, true);\r\n                                    this._tieStarts.push(note);\r\n                                }\r\n                            }\r\n                            else if (c.attributes.has('end') && this._tieStarts.length > 0 && !note.isTieDestination) {\r\n                                note.isTieDestination = true;\r\n                                note.tieOriginNoteId = this._tieStarts[0].id;\r\n                                this._tieStarts.splice(0, 1);\r\n                                this._tieStartIds.delete(note.id);\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseBeatDrawObject(beat, element) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'drawObj':\r\n                            const obj = this.parseDrawObj(c);\r\n                            if (obj) {\r\n                                if (obj instanceof TextDrawObject) {\r\n                                    if (obj.fontFace.startsWith('capella')) {\r\n                                        if (obj.text === 'u') {\r\n                                            beat.fermata = new Fermata();\r\n                                            beat.fermata.type = FermataType.Medium;\r\n                                        }\r\n                                        else if (obj.text === 'f') {\r\n                                            beat.dynamics = DynamicValue.F;\r\n                                        }\r\n                                        else if (obj.text === 'j') {\r\n                                            beat.dynamics = DynamicValue.MF;\r\n                                        }\r\n                                    }\r\n                                    else if (this._isFirstSystem &&\r\n                                        this.score.title === '' &&\r\n                                        obj.align === TextAlign.Center &&\r\n                                        obj.height > 16 &&\r\n                                        obj.weight > 400) {\r\n                                        // bold large centered text is very likely the title\r\n                                        this.score.title = obj.text;\r\n                                    }\r\n                                    else if (this._isFirstSystem &&\r\n                                        this.score.artist === '' &&\r\n                                        obj.align === TextAlign.Center &&\r\n                                        obj.y < 0) {\r\n                                        this.score.artist = obj.text;\r\n                                    }\r\n                                    else if (this._isFirstSystem &&\r\n                                        this.score.music === '' &&\r\n                                        obj.align === TextAlign.Right &&\r\n                                        obj.y < 0) {\r\n                                        this.score.music = obj.text;\r\n                                    }\r\n                                    else if (!obj.text.startsWith('by capella')) {\r\n                                        beat.text = obj.text;\r\n                                    }\r\n                                }\r\n                                else if (obj instanceof GuitarDrawObject) ;\r\n                                else if (obj instanceof WavyLineDrawObject) {\r\n                                    beat.vibrato = VibratoType.Slight;\r\n                                }\r\n                                else if (obj instanceof WedgeDrawObject) {\r\n                                    beat.crescendo = obj.decrescendo ? CrescendoType.Decrescendo : CrescendoType.Crescendo;\r\n                                    obj.noteRange++;\r\n                                    this._crescendo.set(beat, obj);\r\n                                }\r\n                                else if (obj instanceof SlurDrawObject) {\r\n                                    // NOTE: casting needed for C#\r\n                                    const slur = obj;\r\n                                    this._slurs.set(beat, slur);\r\n                                }\r\n                                else if (obj instanceof VoltaDrawObject) {\r\n                                    this.applyVolta(obj);\r\n                                }\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseBarDrawObject(element) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'drawObj':\r\n                            const obj = this.parseDrawObj(c);\r\n                            if (obj) {\r\n                                if (obj instanceof VoltaDrawObject) {\r\n                                    this.applyVolta(obj);\r\n                                }\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        applyVolta(obj) {\r\n            if (obj.lastNumber > 0) {\r\n                this._currentVoiceState.repeatCount = obj.lastNumber;\r\n                if (this._currentVoiceState.repeatEnd &&\r\n                    this._currentVoiceState.repeatEnd.repeatCount < this._currentVoiceState.repeatCount) {\r\n                    this._currentVoiceState.repeatEnd.repeatCount = this._currentVoiceState.repeatCount;\r\n                }\r\n            }\r\n            else if (obj.firstNumber > 0) {\r\n                this._currentVoiceState.repeatCount = obj.firstNumber;\r\n                if (this._currentVoiceState.repeatEnd &&\r\n                    this._currentVoiceState.repeatEnd.repeatCount < this._currentVoiceState.repeatCount) {\r\n                    this._currentVoiceState.repeatEnd.repeatCount = this._currentVoiceState.repeatCount;\r\n                }\r\n            }\r\n            if (obj.lastNumber > 0 && obj.firstNumber > 0) {\r\n                let alternateEndings = 0;\r\n                for (let i = obj.firstNumber; i <= obj.lastNumber; i++) {\r\n                    alternateEndings |= 0x01 << (i - 1);\r\n                }\r\n                this._currentBar.masterBar.alternateEndings = alternateEndings;\r\n            }\r\n            else if (obj.lastNumber > 0) {\r\n                this._currentBar.masterBar.alternateEndings = 0x01 << (obj.lastNumber - 1);\r\n            }\r\n            else if (obj.firstNumber > 0) {\r\n                this._currentBar.masterBar.alternateEndings = 0x01 << (obj.firstNumber - 1);\r\n            }\r\n        }\r\n        parseLyric(beat, element) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'verse':\r\n                            if (!beat.lyrics) {\r\n                                beat.lyrics = [];\r\n                            }\r\n                            let text = c.innerText;\r\n                            if (c.getAttribute('hyphen') === 'true') {\r\n                                text += '-';\r\n                            }\r\n                            beat.lyrics.push(text);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseRestDurations(bar, element) {\r\n            const durationBase = element.getAttribute('base');\r\n            if (durationBase.indexOf('/') !== -1) {\r\n                let restBeat = new Beat();\r\n                restBeat.beamingMode = this._beamingMode;\r\n                this.parseDuration(bar, restBeat, element);\r\n                return restBeat;\r\n            }\r\n            // for\r\n            const fullBars = parseInt(durationBase);\r\n            if (fullBars === 1) {\r\n                let restBeat = new Beat();\r\n                restBeat.beamingMode = this._beamingMode;\r\n                restBeat.duration = Duration.Whole;\r\n                return restBeat;\r\n            }\r\n            else {\r\n                // TODO: multibar rests\r\n                Logger.warning('Importer', `Multi-Bar rests are not supported`);\r\n                return null;\r\n            }\r\n        }\r\n        parseDurationValue(s) {\r\n            switch (s) {\r\n                case '2/1':\r\n                    return Duration.DoubleWhole;\r\n                case '1/1':\r\n                    return Duration.Whole;\r\n                case '1/2':\r\n                    return Duration.Half;\r\n                case '1/4':\r\n                    return Duration.Quarter;\r\n                case '1/8':\r\n                    return Duration.Eighth;\r\n                case '1/16':\r\n                    return Duration.Sixteenth;\r\n                case '1/32':\r\n                    return Duration.ThirtySecond;\r\n                case '1/64':\r\n                    return Duration.SixtyFourth;\r\n                case '1/128':\r\n                    return Duration.OneHundredTwentyEighth;\r\n                default:\r\n                    Logger.warning('Importer', 'Unsupported duration');\r\n                    return Duration.Quarter;\r\n            }\r\n        }\r\n        parseDuration(bar, beat, element) {\r\n            const durationBase = element.getAttribute('base');\r\n            beat.duration = this.parseDurationValue(durationBase);\r\n            if (element.attributes.has('dots')) {\r\n                beat.dots = parseInt(element.attributes.get('dots'));\r\n            }\r\n            const tuplet = element.findChildElement('tuplet');\r\n            if (tuplet) {\r\n                beat.tupletNumerator = parseInt(tuplet.getAttribute('count'));\r\n                const tripartiteMultiplicator = tuplet.getAttribute('tripartite') === 'true' ? 3 : 1;\r\n                const prolongDiff = tuplet.getAttribute('prolong') === 'true' ? 0 : 1;\r\n                let power = 0;\r\n                while (tripartiteMultiplicator * Math.pow(2, power + prolongDiff) < beat.tupletNumerator) {\r\n                    power++;\r\n                }\r\n                beat.tupletDenominator = tripartiteMultiplicator * Math.pow(2, power);\r\n            }\r\n        }\r\n        parsePageObjects(element) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'drawObj':\r\n                            const obj = this.parseDrawObj(c);\r\n                            if (obj) {\r\n                                if (obj instanceof TextDrawObject) {\r\n                                    switch (obj.align) {\r\n                                        case TextAlign.Center:\r\n                                            if (!this.score.title) {\r\n                                                this.score.title = c.innerText;\r\n                                            }\r\n                                            else if (!this.score.subTitle) {\r\n                                                this.score.subTitle = c.innerText;\r\n                                            }\r\n                                            break;\r\n                                        case TextAlign.Right:\r\n                                            if (!this.score.artist) {\r\n                                                this.score.artist = c.innerText;\r\n                                            }\r\n                                            break;\r\n                                    }\r\n                                }\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseGallery(element) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'drawObj':\r\n                            const obj = this.parseDrawObj(c);\r\n                            if (obj) {\r\n                                this._galleryObjects.set(c.getAttribute('name'), obj);\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parseDrawObj(element) {\r\n            let obj = null;\r\n            let noteRange = 1;\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        case 'text':\r\n                            obj = this.parseText(c);\r\n                            break;\r\n                        case 'guitar':\r\n                            obj = this.parseGuitar(c);\r\n                            break;\r\n                        case 'slur':\r\n                            obj = this.parseSlur(c);\r\n                            break;\r\n                        case 'wavyLine':\r\n                            obj = this.parseWavyLine(c);\r\n                            break;\r\n                        case 'bracket':\r\n                            obj = this.parseTupletBracket(c);\r\n                            break;\r\n                        case 'wedge':\r\n                            obj = this.parseWedge(c);\r\n                            break;\r\n                        case 'volta':\r\n                            obj = this.parseVolta(c);\r\n                            break;\r\n                        case 'octaveClef':\r\n                            obj = this.parseOctaveClef(c);\r\n                            break;\r\n                        case 'trill':\r\n                            obj = this.parseTrill(c);\r\n                            break;\r\n                        case 'basic':\r\n                            if (c.attributes.has('noteRange')) {\r\n                                noteRange = parseInt(c.attributes.get('noteRange'));\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (obj) {\r\n                obj.noteRange = noteRange;\r\n            }\r\n            return obj;\r\n        }\r\n        parseTrill(_) {\r\n            const obj = new TrillDrawObject();\r\n            return obj;\r\n        }\r\n        parseOctaveClef(element) {\r\n            const obj = new OctaveClefDrawObject();\r\n            if (element.attributes.has('octave')) {\r\n                obj.octave = parseInt(element.attributes.get('octave'));\r\n            }\r\n            return obj;\r\n        }\r\n        parseVolta(element) {\r\n            const obj = new VoltaDrawObject();\r\n            obj.allNumbers = element.attributes.get('allNumbers') === 'true';\r\n            if (element.attributes.has('firstNumber')) {\r\n                obj.firstNumber = parseInt(element.attributes.get('firstNumber'));\r\n            }\r\n            if (element.attributes.has('lastNumber')) {\r\n                obj.lastNumber = parseInt(element.attributes.get('lastNumber'));\r\n            }\r\n            return obj;\r\n        }\r\n        parseWedge(element) {\r\n            const obj = new WedgeDrawObject();\r\n            obj.decrescendo = element.attributes.get('decrescendo') === 'true';\r\n            return obj;\r\n        }\r\n        parseTupletBracket(element) {\r\n            const obj = new TupletBracketDrawObject();\r\n            if (element.attributes.has('number')) {\r\n                obj.number = parseInt(element.attributes.get('number'));\r\n            }\r\n            return obj;\r\n        }\r\n        parseWavyLine(_) {\r\n            const obj = new WavyLineDrawObject();\r\n            return obj;\r\n        }\r\n        parseSlur(_) {\r\n            const obj = new SlurDrawObject();\r\n            return obj;\r\n        }\r\n        parseGuitar(element) {\r\n            const obj = new GuitarDrawObject();\r\n            const strings = element.innerText.trim();\r\n            for (let i = 0; i < strings.length; i++) {\r\n                if (strings.charAt(i) === '/') {\r\n                    obj.chord.strings.push(0);\r\n                }\r\n                else {\r\n                    obj.chord.strings.push(parseInt(strings.charAt(i)));\r\n                }\r\n            }\r\n            return obj;\r\n        }\r\n        parseText(element) {\r\n            const obj = new TextDrawObject();\r\n            if (element.attributes.has('x')) {\r\n                obj.x = parseFloat(element.attributes.get('x'));\r\n            }\r\n            if (element.attributes.has('x')) {\r\n                obj.y = parseFloat(element.attributes.get('y'));\r\n            }\r\n            switch (element.getAttribute('align')) {\r\n                case 'left':\r\n                    obj.align = TextAlign.Left;\r\n                    break;\r\n                case 'center':\r\n                    obj.align = TextAlign.Center;\r\n                    break;\r\n                case 'right':\r\n                    obj.align = TextAlign.Right;\r\n                    break;\r\n            }\r\n            switch (element.getAttribute('frame')) {\r\n                case 'rectangle':\r\n                    obj.frame = FrameType.Rectangle;\r\n                    break;\r\n                case 'ellipse':\r\n                    obj.frame = FrameType.Ellipse;\r\n                    break;\r\n                case 'circle':\r\n                    obj.frame = FrameType.Circle;\r\n                    break;\r\n                case 'none':\r\n                    obj.frame = FrameType.None;\r\n                    break;\r\n            }\r\n            if (element.firstElement) {\r\n                for (let c of element.childNodes) {\r\n                    if (c.nodeType === XmlNodeType.Element) {\r\n                        switch (c.localName) {\r\n                            case 'font':\r\n                                obj.fontFace = c.getAttribute('face');\r\n                                if (c.attributes.has('weight')) {\r\n                                    obj.weight = parseInt(c.attributes.get('weight'));\r\n                                }\r\n                                if (c.attributes.has('height')) {\r\n                                    obj.height = parseInt(c.attributes.get('height'));\r\n                                }\r\n                                break;\r\n                            case 'content':\r\n                                obj.text = c.innerText;\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                obj.text = element.innerText;\r\n            }\r\n            return obj;\r\n        }\r\n        parseInfo(element) {\r\n            for (let c of element.childNodes) {\r\n                if (c.nodeType === XmlNodeType.Element) {\r\n                    switch (c.localName) {\r\n                        // encodingSoftware ignored\r\n                        case 'author':\r\n                            this.score.tab = c.firstChild.innerText;\r\n                            break;\r\n                        // keywords ignored\r\n                        case 'comment':\r\n                            this.score.notices = c.firstChild.innerText;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\n\n    /**\r\n     * This ScoreImporter can read Capella (cap/capx) files.\r\n     */\r\n    class CapellaImporter extends ScoreImporter {\r\n        get name() {\r\n            return 'Capella';\r\n        }\r\n        constructor() {\r\n            super();\r\n        }\r\n        readScore() {\r\n            Logger.debug(this.name, 'Loading ZIP entries');\r\n            let fileSystem = new ZipReader(this.data);\r\n            let entries;\r\n            let xml = null;\r\n            entries = fileSystem.read();\r\n            Logger.debug(this.name, 'Zip entries loaded');\r\n            if (entries.length > 0) {\r\n                for (let entry of entries) {\r\n                    switch (entry.fileName) {\r\n                        case 'score.xml':\r\n                            xml = IOHelper.toString(entry.data, this.settings.importer.encoding);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.data.reset();\r\n                xml = IOHelper.toString(this.data.readAll(), this.settings.importer.encoding);\r\n            }\r\n            if (!xml) {\r\n                throw new UnsupportedFormatError('No valid capella file');\r\n            }\r\n            Logger.debug(this.name, 'Start Parsing score.xml');\r\n            try {\r\n                let capellaParser = new CapellaParser();\r\n                capellaParser.parseXml(xml, this.settings);\r\n                Logger.debug(this.name, 'score.xml parsed');\r\n                let score = capellaParser.score;\r\n                return score;\r\n            }\r\n            catch (e) {\r\n                throw new UnsupportedFormatError('Failed to parse CapXML', e);\r\n            }\r\n        }\r\n    }\n\n    /**\r\n     * A very basic polyfill of the ResizeObserver which triggers\r\n     * a the callback on window resize for all registered targets.\r\n     * @target web\r\n     */\r\n    class ResizeObserverPolyfill {\r\n        constructor(callback) {\r\n            this._targets = new Set();\r\n            this._callback = callback;\r\n            window.addEventListener('resize', this.onWindowResize.bind(this), false);\r\n        }\r\n        observe(target) {\r\n            this._targets.add(target);\r\n        }\r\n        unobserve(target) {\r\n            this._targets.delete(target);\r\n        }\r\n        disconnect() {\r\n            this._targets.clear();\r\n        }\r\n        onWindowResize() {\r\n            const entries = [];\r\n            for (const t of this._targets) {\r\n                entries.push({\r\n                    target: t,\r\n                    // not used by alphaTab\r\n                    contentRect: undefined,\r\n                    borderBoxSize: undefined,\r\n                    contentBoxSize: []\r\n                });\r\n            }\r\n            this._callback(entries, this);\r\n        }\r\n    }\n\n    /**\r\n     * A polyfill of the InsersectionObserver\r\n     * @target web\r\n     */\r\n    class IntersectionObserverPolyfill {\r\n        constructor(callback) {\r\n            this._elements = [];\r\n            let timer = null;\r\n            const oldCheck = this._check.bind(this);\r\n            this._check = () => {\r\n                if (!timer) {\r\n                    timer = setTimeout(() => {\r\n                        oldCheck();\r\n                        timer = null;\r\n                    }, 100);\r\n                }\r\n            };\r\n            this._callback = callback;\r\n            window.addEventListener('resize', this._check, true);\r\n            document.addEventListener('scroll', this._check, true);\r\n        }\r\n        observe(target) {\r\n            if (this._elements.indexOf(target) >= 0) {\r\n                return;\r\n            }\r\n            this._elements.push(target);\r\n            this._check();\r\n        }\r\n        unobserve(target) {\r\n            this._elements = this._elements.filter(item => {\r\n                return item != target;\r\n            });\r\n        }\r\n        ;\r\n        _check() {\r\n            const entries = [];\r\n            this._elements.forEach(element => {\r\n                const rect = element.getBoundingClientRect();\r\n                const isVisible = (rect.top + rect.height >= 0 &&\r\n                    rect.top <= window.innerHeight &&\r\n                    rect.left + rect.width >= 0 &&\r\n                    rect.left <= window.innerWidth);\r\n                if (isVisible) {\r\n                    entries.push({\r\n                        target: element,\r\n                        isIntersecting: true\r\n                    });\r\n                }\r\n            });\r\n            if (entries.length) {\r\n                this._callback(entries, this);\r\n            }\r\n        }\r\n    }\n\n    class LayoutEngineFactory {\r\n        constructor(vertical, createLayout) {\r\n            this.vertical = vertical;\r\n            this.createLayout = createLayout;\r\n        }\r\n    }\r\n    class RenderEngineFactory {\r\n        constructor(supportsWorkers, canvas) {\r\n            this.supportsWorkers = supportsWorkers;\r\n            this.createCanvas = canvas;\r\n        }\r\n    }\r\n    /**\r\n     * This public class represents the global alphaTab environment where\r\n     * alphaTab looks for information like available layout engines\r\n     * staves etc.\r\n     * This public class represents the global alphaTab environment where\r\n     * alphaTab looks for information like available layout engines\r\n     * staves etc.\r\n     * @partial\r\n     */\r\n    class Environment {\r\n        /**\r\n         * @target web\r\n         */\r\n        static createStyleElement(elementDocument, fontDirectory) {\r\n            let styleElement = elementDocument.getElementById('alphaTabStyle');\r\n            if (!styleElement) {\r\n                if (!fontDirectory) {\r\n                    Logger.error('AlphaTab', 'Font directory could not be detected, cannot create style element');\r\n                    return;\r\n                }\r\n                styleElement = elementDocument.createElement('style');\r\n                styleElement.id = 'alphaTabStyle';\r\n                let css = `\r\n            @font-face {\r\n                font-family: 'alphaTab';\r\n                 src: url('${fontDirectory}Bravura.eot');\r\n                 src: url('${fontDirectory}Bravura.eot?#iefix') format('embedded-opentype')\r\n                      , url('${fontDirectory}Bravura.woff') format('woff')\r\n                      , url('${fontDirectory}Bravura.otf') format('opentype')\r\n                      , url('${fontDirectory}Bravura.svg#Bravura') format('svg');\r\n                 font-weight: normal;\r\n                 font-style: normal;\r\n            }\r\n            .at-surface * {\r\n                cursor: default;\r\n                vertical-align: top;\r\n                overflow: visible;\r\n            }\r\n            .at-surface-svg text {\r\n                dominant-baseline: central;\r\n            }             \r\n            .at {\r\n                 font-family: 'alphaTab';\r\n                 speak: none;\r\n                 font-style: normal;\r\n                 font-weight: normal;\r\n                 font-variant: normal;\r\n                 text-transform: none;\r\n                 line-height: 1;\r\n                 line-height: 1;\r\n                 -webkit-font-smoothing: antialiased;\r\n                 -moz-osx-font-smoothing: grayscale;\r\n                 font-size: ${Environment.MusicFontSize}px;\r\n                 overflow: visible !important;\r\n            }`;\r\n                styleElement.innerHTML = css;\r\n                elementDocument.getElementsByTagName('head').item(0).appendChild(styleElement);\r\n                Environment.bravuraFontChecker.checkForFontAvailability();\r\n            }\r\n        }\r\n        /**\r\n         * @target web\r\n         */\r\n        static get globalThis() {\r\n            if (Environment._globalThis === undefined) {\r\n                try {\r\n                    Environment._globalThis = globalThis;\r\n                }\r\n                catch (e) {\r\n                    // global this not available\r\n                }\r\n                if (typeof Environment._globalThis === 'undefined') {\r\n                    Environment._globalThis = self;\r\n                }\r\n                if (typeof Environment._globalThis === 'undefined') {\r\n                    Environment._globalThis = window;\r\n                }\r\n                if (typeof Environment._globalThis === 'undefined') {\r\n                    Environment._globalThis = Function('return this')();\r\n                }\r\n            }\r\n            return this._globalThis;\r\n        }\r\n        /**\r\n         * @target web\r\n         */\r\n        static get isRunningInWorker() {\r\n            return 'WorkerGlobalScope' in Environment.globalThis;\r\n        }\r\n        /**\r\n         * @target web\r\n         */\r\n        static throttle(action, delay) {\r\n            let timeoutId = 0;\r\n            return () => {\r\n                window.clearTimeout(timeoutId);\r\n                timeoutId = window.setTimeout(action, delay);\r\n            };\r\n        }\r\n        /**\r\n         * @target web\r\n         */\r\n        static detectScriptFile() {\r\n            if (Environment.isRunningInWorker) {\r\n                return null;\r\n            }\r\n            return document.currentScript.src;\r\n        }\r\n        /**\r\n         * @target web\r\n         */\r\n        static registerJQueryPlugin() {\r\n            if (!Environment.isRunningInWorker && Environment.globalThis && 'jQuery' in Environment.globalThis) {\r\n                let jquery = Environment.globalThis['jQuery'];\r\n                let api = new JQueryAlphaTab();\r\n                jquery.fn.alphaTab = function (method) {\r\n                    const args = Array.prototype.slice.call(arguments, 1);\r\n                    // if only a single element is affected, we use this\r\n                    if (this.length === 1) {\r\n                        return api.exec(this[0], method, args);\r\n                    }\r\n                    // if multiple elements are affected we provide chaining\r\n                    return this.each((_i, e) => {\r\n                        api.exec(e, method, args);\r\n                    });\r\n                };\r\n                jquery.alphaTab = {\r\n                    restore: JQueryAlphaTab.restore\r\n                };\r\n                jquery.fn.alphaTab.fn = api;\r\n            }\r\n        }\r\n        static createScoreRenderer(settings) {\r\n            return new ScoreRenderer(settings);\r\n        }\r\n        static getRenderEngineFactory(settings) {\r\n            if (!settings.core.engine || !Environment.renderEngines.has(settings.core.engine)) {\r\n                return Environment.renderEngines.get('default');\r\n            }\r\n            return Environment.renderEngines.get(settings.core.engine);\r\n        }\r\n        static getLayoutEngineFactory(settings) {\r\n            if (!settings.display.layoutMode || !Environment.layoutEngines.has(settings.display.layoutMode)) {\r\n                return Environment.layoutEngines.get(exports.LayoutMode.Page);\r\n            }\r\n            return Environment.layoutEngines.get(settings.display.layoutMode);\r\n        }\r\n        /**\r\n         * Gets all default ScoreImporters\r\n         * @returns\r\n         */\r\n        static buildImporters() {\r\n            return [\r\n                new Gp3To5Importer(),\r\n                new GpxImporter(),\r\n                new Gp7Importer(),\r\n                new MusicXmlImporter(),\r\n                new CapellaImporter(),\r\n                new AlphaTexImporter()\r\n            ];\r\n        }\r\n        static createDefaultRenderEngines() {\r\n            const renderEngines = new Map();\r\n            renderEngines.set('svg', new RenderEngineFactory(true, () => {\r\n                return new CssFontSvgCanvas();\r\n            }));\r\n            renderEngines.set('default', renderEngines.get('svg'));\r\n            Environment.createPlatformSpecificRenderEngines(renderEngines);\r\n            return renderEngines;\r\n        }\r\n        /**\r\n         * @target web\r\n         */\r\n        static createPlatformSpecificRenderEngines(renderEngines) {\r\n            renderEngines.set('html5', new RenderEngineFactory(false, () => {\r\n                return new Html5Canvas();\r\n            }));\r\n        }\r\n        static createDefaultStaveProfiles() {\r\n            const staveProfiles = new Map();\r\n            // default combinations of stave textprofiles\r\n            staveProfiles.set(exports.StaveProfile.ScoreTab, [\r\n                new EffectBarRendererFactory('score-effects', [\r\n                    new TempoEffectInfo(),\r\n                    new TripletFeelEffectInfo(),\r\n                    new MarkerEffectInfo(),\r\n                    new TextEffectInfo(),\r\n                    new ChordsEffectInfo(),\r\n                    new FermataEffectInfo(),\r\n                    new WhammyBarEffectInfo(),\r\n                    new TrillEffectInfo(),\r\n                    new OttaviaEffectInfo(true),\r\n                    new WideBeatVibratoEffectInfo(),\r\n                    new SlightBeatVibratoEffectInfo(),\r\n                    new WideNoteVibratoEffectInfo(),\r\n                    new SlightNoteVibratoEffectInfo(),\r\n                    new LeftHandTapEffectInfo(),\r\n                    new AlternateEndingsEffectInfo()\r\n                ]),\r\n                new ScoreBarRendererFactory(),\r\n                new EffectBarRendererFactory('tab-effects', [\r\n                    new CrescendoEffectInfo(),\r\n                    new OttaviaEffectInfo(false),\r\n                    new DynamicsEffectInfo(),\r\n                    new LyricsEffectInfo(),\r\n                    new TrillEffectInfo(),\r\n                    new WideBeatVibratoEffectInfo(),\r\n                    new SlightBeatVibratoEffectInfo(),\r\n                    new WideNoteVibratoEffectInfo(),\r\n                    new SlightNoteVibratoEffectInfo(),\r\n                    new TapEffectInfo(),\r\n                    new FadeInEffectInfo(),\r\n                    new HarmonicsEffectInfo(HarmonicType.Natural),\r\n                    new HarmonicsEffectInfo(HarmonicType.Artificial),\r\n                    new HarmonicsEffectInfo(HarmonicType.Pinch),\r\n                    new HarmonicsEffectInfo(HarmonicType.Tap),\r\n                    new HarmonicsEffectInfo(HarmonicType.Semi),\r\n                    new HarmonicsEffectInfo(HarmonicType.Feedback),\r\n                    new LetRingEffectInfo(),\r\n                    new CapoEffectInfo(),\r\n                    new FingeringEffectInfo(),\r\n                    new PalmMuteEffectInfo(),\r\n                    new PickStrokeEffectInfo(),\r\n                    new PickSlideEffectInfo(),\r\n                    new LeftHandTapEffectInfo()\r\n                ]),\r\n                new TabBarRendererFactory(false, false, false)\r\n            ]);\r\n            staveProfiles.set(exports.StaveProfile.Score, [\r\n                new EffectBarRendererFactory('score-effects', [\r\n                    new TempoEffectInfo(),\r\n                    new TripletFeelEffectInfo(),\r\n                    new MarkerEffectInfo(),\r\n                    new TextEffectInfo(),\r\n                    new ChordsEffectInfo(),\r\n                    new FermataEffectInfo(),\r\n                    new WhammyBarEffectInfo(),\r\n                    new TrillEffectInfo(),\r\n                    new OttaviaEffectInfo(true),\r\n                    new WideBeatVibratoEffectInfo(),\r\n                    new SlightBeatVibratoEffectInfo(),\r\n                    new WideNoteVibratoEffectInfo(),\r\n                    new SlightNoteVibratoEffectInfo(),\r\n                    new FadeInEffectInfo(),\r\n                    new LetRingEffectInfo(),\r\n                    new PalmMuteEffectInfo(),\r\n                    new PickStrokeEffectInfo(),\r\n                    new PickSlideEffectInfo(),\r\n                    new LeftHandTapEffectInfo(),\r\n                    new AlternateEndingsEffectInfo()\r\n                ]),\r\n                new ScoreBarRendererFactory(),\r\n                new EffectBarRendererFactory('score-bottom-effects', [\r\n                    new CrescendoEffectInfo(),\r\n                    new OttaviaEffectInfo(false),\r\n                    new DynamicsEffectInfo(),\r\n                    new LyricsEffectInfo()\r\n                ])\r\n            ]);\r\n            let tabEffectInfos = [\r\n                new TempoEffectInfo(),\r\n                new TripletFeelEffectInfo(),\r\n                new MarkerEffectInfo(),\r\n                new TextEffectInfo(),\r\n                new ChordsEffectInfo(),\r\n                new FermataEffectInfo(),\r\n                new TrillEffectInfo(),\r\n                new WideBeatVibratoEffectInfo(),\r\n                new SlightBeatVibratoEffectInfo(),\r\n                new WideNoteVibratoEffectInfo(),\r\n                new SlightNoteVibratoEffectInfo(),\r\n                new TapEffectInfo(),\r\n                new FadeInEffectInfo(),\r\n                new HarmonicsEffectInfo(HarmonicType.Artificial),\r\n                new HarmonicsEffectInfo(HarmonicType.Pinch),\r\n                new HarmonicsEffectInfo(HarmonicType.Tap),\r\n                new HarmonicsEffectInfo(HarmonicType.Semi),\r\n                new HarmonicsEffectInfo(HarmonicType.Feedback),\r\n                new LetRingEffectInfo(),\r\n                new CapoEffectInfo(),\r\n                new FingeringEffectInfo(),\r\n                new PalmMuteEffectInfo(),\r\n                new PickStrokeEffectInfo(),\r\n                new PickSlideEffectInfo(),\r\n                new LeftHandTapEffectInfo(),\r\n                new AlternateEndingsEffectInfo()\r\n            ];\r\n            staveProfiles.set(exports.StaveProfile.Tab, [\r\n                new EffectBarRendererFactory('tab-effects', tabEffectInfos),\r\n                new TabBarRendererFactory(true, true, true),\r\n                new EffectBarRendererFactory('tab-bottom-effects', [new LyricsEffectInfo()])\r\n            ]);\r\n            staveProfiles.set(exports.StaveProfile.TabMixed, [\r\n                new EffectBarRendererFactory('tab-effects', tabEffectInfos),\r\n                new TabBarRendererFactory(false, false, false),\r\n                new EffectBarRendererFactory('tab-bottom-effects', [new LyricsEffectInfo()])\r\n            ]);\r\n            return staveProfiles;\r\n        }\r\n        static createDefaultLayoutEngines() {\r\n            const engines = new Map();\r\n            // default layout engines\r\n            engines.set(exports.LayoutMode.Page, new LayoutEngineFactory(true, r => {\r\n                return new PageViewLayout(r);\r\n            }));\r\n            engines.set(exports.LayoutMode.Horizontal, new LayoutEngineFactory(false, r => {\r\n                return new HorizontalScreenLayout(r);\r\n            }));\r\n            return engines;\r\n        }\r\n        /**\r\n         * @target web\r\n         */\r\n        static platformInit() {\r\n            Environment.registerJQueryPlugin();\r\n            if (!Environment.isRunningInWorker) {\r\n                Environment.HighDpiFactor = window.devicePixelRatio;\r\n                // ResizeObserver API does not yet exist so long on Safari (only start 2020 with iOS Safari 13.7 and Desktop 13.1)\r\n                // so we better add a polyfill for it \r\n                if (!('ResizeObserver' in globalThis)) {\r\n                    globalThis.ResizeObserver = ResizeObserverPolyfill;\r\n                }\r\n                // IntersectionObserver API does not on older iOS versions\r\n                // so we better add a polyfill for it\r\n                if (!('IntersectionObserver' in Environment.globalThis)) {\r\n                    Environment.globalThis.IntersectionObserver = IntersectionObserverPolyfill;\r\n                }\r\n            }\r\n            else {\r\n                AlphaTabWebWorker.init();\r\n                AlphaSynthWebWorker.init();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * The font size of the music font in pixel.\r\n     */\r\n    Environment.MusicFontSize = 34;\r\n    /**\r\n     * The scaling factor to use when rending raster graphics for sharper rendering on high-dpi displays.\r\n     */\r\n    Environment.HighDpiFactor = 1;\r\n    /**\r\n     * @target web\r\n     */\r\n    Environment._globalThis = undefined;\r\n    /**\r\n     * @target web\r\n     */\r\n    Environment.scriptFile = Environment.detectScriptFile();\r\n    /**\r\n     * @target web\r\n     */\r\n    Environment.bravuraFontChecker = new FontLoadingChecker('alphaTab');\r\n    Environment.renderEngines = Environment.createDefaultRenderEngines();\r\n    Environment.layoutEngines = Environment.createDefaultLayoutEngines();\r\n    Environment.staveProfiles = Environment.createDefaultStaveProfiles();\r\n    Environment.platformInit();\n\n    /**\r\n     * @json\r\n     */\r\n    class CoreSettings {\r\n        /**\r\n         * @target web\r\n         */\r\n        constructor() {\r\n            /**\r\n             * Gets or sets the script file url that will be used to spawn the workers.\r\n             * @target web\r\n             */\r\n            this.scriptFile = null;\r\n            /**\r\n             * Gets or sets the url to the fonts that will be used to generate the alphaTab font style.\r\n             * @target web\r\n             */\r\n            this.fontDirectory = null;\r\n            /**\r\n             * Gets or sets the file to load directly after initializing alphaTab.\r\n             * @target web\r\n             */\r\n            this.file = null;\r\n            /**\r\n             * Gets or sets whether the UI element contains alphaTex code that should be\r\n             * used to initialize alphaTab.\r\n             * @target web\r\n             */\r\n            this.tex = false;\r\n            /**\r\n             * Gets or sets the initial tracks that should be loaded for the score.\r\n             * @target web\r\n             */\r\n            this.tracks = null;\r\n            /**\r\n             * Gets or sets whether lazy loading for displayed elements is enabled.\r\n             */\r\n            this.enableLazyLoading = true;\r\n            /**\r\n             * The engine which should be used to render the the tablature.\r\n             *\r\n             * - **default**- Platform specific default engine\r\n             * - **html5**- HTML5 Canvas\r\n             * - **svg**- SVG\r\n             */\r\n            this.engine = 'default';\r\n            /**\r\n             * The log level to use within alphaTab\r\n             */\r\n            this.logLevel = exports.LogLevel.Info;\r\n            /**\r\n             * Gets or sets whether the rendering should be done in a worker if possible.\r\n             */\r\n            this.useWorkers = true;\r\n            /**\r\n             * Gets or sets whether in the {@link BoundsLookup} also the\r\n             * position and area of each individual note is provided.\r\n             */\r\n            this.includeNoteBounds = false;\r\n            if (!Environment.isRunningInWorker && Environment.globalThis.ALPHATAB_ROOT) {\r\n                this.scriptFile = Environment.globalThis.ALPHATAB_ROOT;\r\n                this.scriptFile = CoreSettings.ensureFullUrl(this.scriptFile);\r\n                this.scriptFile = CoreSettings.appendScriptName(this.scriptFile);\r\n            }\r\n            else {\r\n                this.scriptFile = Environment.scriptFile;\r\n            }\r\n            if (!Environment.isRunningInWorker && Environment.globalThis.ALPHATAB_FONT) {\r\n                this.fontDirectory = Environment.globalThis['ALPHATAB_FONT'];\r\n                this.fontDirectory = CoreSettings.ensureFullUrl(this.fontDirectory);\r\n            }\r\n            else {\r\n                this.fontDirectory = this.scriptFile;\r\n                if (this.fontDirectory) {\r\n                    let lastSlash = this.fontDirectory.lastIndexOf(String.fromCharCode(47));\r\n                    if (lastSlash >= 0) {\r\n                        this.fontDirectory = this.fontDirectory.substr(0, lastSlash) + '/font/';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * @target web\r\n         */\r\n        static ensureFullUrl(relativeUrl) {\r\n            var _a, _b, _c;\r\n            if (!relativeUrl) {\r\n                return '';\r\n            }\r\n            if (!relativeUrl.startsWith('http') && !relativeUrl.startsWith('https') && !relativeUrl.startsWith('file')) {\r\n                let root = '';\r\n                let location = Environment.globalThis['location'];\r\n                root += (_a = location.protocol) === null || _a === void 0 ? void 0 : _a.toString();\r\n                root +=  '//'.toString();\r\n                if (location.hostname) {\r\n                    root += (_b = location.hostname) === null || _b === void 0 ? void 0 : _b.toString();\r\n                }\r\n                if (location.port) {\r\n                    root +=  ':'.toString();\r\n                    root += (_c = location.port) === null || _c === void 0 ? void 0 : _c.toString();\r\n                }\r\n                // as it is not clearly defined how slashes are treated in the location object\r\n                // better be safe than sorry here\r\n                if (!relativeUrl.startsWith('/')) {\r\n                    let directory = location.pathname.split('/').slice(0, -1).join('/');\r\n                    if (directory.length > 0) {\r\n                        if (!directory.startsWith('/')) {\r\n                            root +=  '/'.toString();\r\n                        }\r\n                        root += directory === null || directory === void 0 ? void 0 : directory.toString();\r\n                    }\r\n                }\r\n                if (!relativeUrl.startsWith('/')) {\r\n                    root +=  '/'.toString();\r\n                }\r\n                root += relativeUrl === null || relativeUrl === void 0 ? void 0 : relativeUrl.toString();\r\n                return root;\r\n            }\r\n            return relativeUrl;\r\n        }\r\n        static appendScriptName(url) {\r\n            // append script name\r\n            if (url && !url.endsWith('.js')) {\r\n                if (!url.endsWith('/')) {\r\n                    url += '/';\r\n                }\r\n                url += 'alphaTab.js';\r\n            }\r\n            return url;\r\n        }\r\n    }\n\n    /**\r\n     * Represents the progress of any data being loaded.\r\n     */\r\n    class ProgressEventArgs {\r\n        /**\r\n         * Initializes a new instance of the {@link ProgressEventArgs} class.\r\n         * @param loaded\r\n         * @param total\r\n         */\r\n        constructor(loaded, total) {\r\n            this.loaded = loaded;\r\n            this.total = total;\r\n        }\r\n    }\n\n    // <auto-generated>\r\n    // This code was auto-generated.\r\n    // Changes to this file may cause incorrect behavior and will be lost if\r\n    // the code is regenerated.\r\n    // </auto-generated>\r\n    class VersionInfo {\r\n    }\r\n    VersionInfo.version = '1.2.1';\r\n    VersionInfo.date = '2021-04-02T17:52:30.858Z';\n\n    /**\r\n     * This is the base class for creating new song exporters which\r\n     * enable writing scores to a binary datasink.\r\n     */\r\n    class ScoreExporter {\r\n        /**\r\n         * Initializes the importer with the given data and settings.\r\n         */\r\n        init(data, settings) {\r\n            this.data = data;\r\n            this.settings = settings;\r\n        }\r\n        /**\r\n         * Exports the given score to a binary buffer.\r\n         * @param score The score to serialize\r\n         * @param settings  The settings to use during serialization\r\n         * @returns A byte buffer with the serialized score.\r\n         */\r\n        export(score, settings = null) {\r\n            const writable = ByteBuffer.withCapacity(1024);\r\n            this.init(writable, settings !== null && settings !== void 0 ? settings : new Settings());\r\n            this.writeScore(score);\r\n            return writable.toArray();\r\n        }\r\n    }\n\n    // Grabbed via Icon Picker beside track name in GP7\r\n    var GpifIconIds;\r\n    (function (GpifIconIds) {\r\n        // Guitar & Basses\r\n        GpifIconIds[GpifIconIds[\"SteelGuitar\"] = 1] = \"SteelGuitar\";\r\n        GpifIconIds[GpifIconIds[\"AcousticGuitar\"] = 2] = \"AcousticGuitar\";\r\n        GpifIconIds[GpifIconIds[\"TwelveStringGuitar\"] = 3] = \"TwelveStringGuitar\";\r\n        GpifIconIds[GpifIconIds[\"ElectricGuitar\"] = 4] = \"ElectricGuitar\";\r\n        GpifIconIds[GpifIconIds[\"Bass\"] = 5] = \"Bass\";\r\n        GpifIconIds[GpifIconIds[\"ClassicalGuitar\"] = 23] = \"ClassicalGuitar\";\r\n        GpifIconIds[GpifIconIds[\"UprightBass\"] = 6] = \"UprightBass\";\r\n        GpifIconIds[GpifIconIds[\"Ukulele\"] = 7] = \"Ukulele\";\r\n        GpifIconIds[GpifIconIds[\"Banjo\"] = 8] = \"Banjo\";\r\n        GpifIconIds[GpifIconIds[\"Mandolin\"] = 9] = \"Mandolin\";\r\n        // Orchestral\r\n        GpifIconIds[GpifIconIds[\"Piano\"] = 10] = \"Piano\";\r\n        GpifIconIds[GpifIconIds[\"Synth\"] = 12] = \"Synth\";\r\n        GpifIconIds[GpifIconIds[\"Strings\"] = 11] = \"Strings\";\r\n        GpifIconIds[GpifIconIds[\"Brass\"] = 13] = \"Brass\";\r\n        GpifIconIds[GpifIconIds[\"Reed\"] = 14] = \"Reed\";\r\n        GpifIconIds[GpifIconIds[\"Woodwind\"] = 15] = \"Woodwind\";\r\n        GpifIconIds[GpifIconIds[\"Vocal\"] = 16] = \"Vocal\";\r\n        GpifIconIds[GpifIconIds[\"PitchedIdiophone\"] = 17] = \"PitchedIdiophone\";\r\n        GpifIconIds[GpifIconIds[\"Fx\"] = 21] = \"Fx\";\r\n        // Percussions\r\n        GpifIconIds[GpifIconIds[\"PercussionKit\"] = 18] = \"PercussionKit\";\r\n        GpifIconIds[GpifIconIds[\"Idiophone\"] = 19] = \"Idiophone\";\r\n        GpifIconIds[GpifIconIds[\"Membraphone\"] = 20] = \"Membraphone\";\r\n    })(GpifIconIds || (GpifIconIds = {}));\r\n    class GpifMidiProgramInfo {\r\n        constructor(icon, instrumentSetName, instrumentSetType = null) {\r\n            this.icon = GpifIconIds.Piano;\r\n            this.icon = icon;\r\n            this.instrumentSetName = instrumentSetName;\r\n            if (!instrumentSetType) {\r\n                const parts = instrumentSetName.split(' ');\r\n                parts[0] = parts[0].substr(0, 1).toLowerCase() + parts[0].substr(1);\r\n                this.instrumentSetType = parts.join('');\r\n            }\r\n            else {\r\n                this.instrumentSetType = instrumentSetType;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * This class can write a score.gpif XML from a given score model.\r\n     */\r\n    class GpifWriter {\r\n        constructor() {\r\n            this._rhythmIdLookup = new Map();\r\n        }\r\n        writeXml(score) {\r\n            const xmlDocument = new XmlDocument();\r\n            this._rhythmIdLookup = new Map();\r\n            this.writeDom(xmlDocument, score);\r\n            return xmlDocument.toString('', true);\r\n        }\r\n        writeDom(parent, score) {\r\n            const gpif = parent.addElement('GPIF');\r\n            // just some values at the time this was implemented, \r\n            gpif.addElement('GPVersion').innerText = '7';\r\n            const gpRevision = gpif.addElement('GPRevision');\r\n            gpRevision.innerText = '7';\r\n            gpRevision.attributes.set('required', '12021');\r\n            gpRevision.attributes.set('recommended', '12023');\r\n            gpRevision.innerText = '12025';\r\n            gpif.addElement('Encoding').addElement('EncodingDescription').innerText = 'GP7';\r\n            this.writeScoreNode(gpif, score);\r\n            this.writeMasterTrackNode(gpif, score);\r\n            this.writeAudioTracksNode(gpif, score);\r\n            this.writeTracksNode(gpif, score);\r\n            this.writeMasterBarsNode(gpif, score);\r\n            const bars = gpif.addElement('Bars');\r\n            const voices = gpif.addElement('Voices');\r\n            const beats = gpif.addElement('Beats');\r\n            const notes = gpif.addElement('Notes');\r\n            const rhythms = gpif.addElement('Rhythms');\r\n            for (const tracks of score.tracks) {\r\n                for (const staff of tracks.staves) {\r\n                    for (const bar of staff.bars) {\r\n                        this.writeBarNode(bars, bar);\r\n                        for (const voice of bar.voices) {\r\n                            this.writeVoiceNode(voices, voice);\r\n                            for (const beat of voice.beats) {\r\n                                this.writeBeatNode(beats, beat, rhythms);\r\n                                for (const note of beat.notes) {\r\n                                    this.writeNoteNode(notes, note);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        writeNoteNode(parent, note) {\r\n            const noteNode = parent.addElement('Note');\r\n            noteNode.attributes.set('id', note.id.toString());\r\n            this.writeNoteProperties(noteNode, note);\r\n            if (note.isGhost) {\r\n                noteNode.addElement('AntiAccent').innerText = 'normal';\r\n            }\r\n            if (note.isLetRing) {\r\n                noteNode.addElement('LetRing');\r\n            }\r\n            if (note.isTrill) {\r\n                noteNode.addElement('Trill').innerText = note.trillValue.toString();\r\n            }\r\n            let accentFlags = 0;\r\n            if (note.isStaccato) {\r\n                accentFlags |= 1;\r\n            }\r\n            switch (note.accentuated) {\r\n                case AccentuationType.Normal:\r\n                    accentFlags |= 0x08;\r\n                    break;\r\n                case AccentuationType.Heavy:\r\n                    accentFlags |= 0x04;\r\n                    break;\r\n            }\r\n            if (accentFlags > 0) {\r\n                noteNode.addElement('Accent').innerText = accentFlags.toString();\r\n            }\r\n            if (note.isTieOrigin || note.isTieDestination) {\r\n                const tie = noteNode.addElement('Tie');\r\n                tie.attributes.set('origin', note.isTieOrigin ? 'true' : 'false');\r\n                tie.attributes.set('destination', note.isTieDestination ? 'true' : 'false');\r\n            }\r\n            switch (note.vibrato) {\r\n                case VibratoType.Slight:\r\n                    noteNode.addElement('Vibrato').innerText = 'Slight';\r\n                    break;\r\n                case VibratoType.Wide:\r\n                    noteNode.addElement('Vibrato').innerText = 'Wide';\r\n                    break;\r\n            }\r\n            if (note.isFingering) {\r\n                switch (note.leftHandFinger) {\r\n                    case Fingers.Thumb:\r\n                        noteNode.addElement('LeftFingering').innerText = 'P';\r\n                        break;\r\n                    case Fingers.IndexFinger:\r\n                        noteNode.addElement('LeftFingering').innerText = 'I';\r\n                        break;\r\n                    case Fingers.MiddleFinger:\r\n                        noteNode.addElement('LeftFingering').innerText = 'M';\r\n                        break;\r\n                    case Fingers.AnnularFinger:\r\n                        noteNode.addElement('LeftFingering').innerText = 'A';\r\n                        break;\r\n                    case Fingers.LittleFinger:\r\n                        noteNode.addElement('LeftFingering').innerText = 'C';\r\n                        break;\r\n                }\r\n                switch (note.rightHandFinger) {\r\n                    case Fingers.Thumb:\r\n                        noteNode.addElement('RightFingering').innerText = 'P';\r\n                        break;\r\n                    case Fingers.IndexFinger:\r\n                        noteNode.addElement('RightFingering').innerText = 'I';\r\n                        break;\r\n                    case Fingers.MiddleFinger:\r\n                        noteNode.addElement('RightFingering').innerText = 'M';\r\n                        break;\r\n                    case Fingers.AnnularFinger:\r\n                        noteNode.addElement('RightFingering').innerText = 'A';\r\n                        break;\r\n                    case Fingers.LittleFinger:\r\n                        noteNode.addElement('RightFingering').innerText = 'C';\r\n                        break;\r\n                }\r\n            }\r\n            if (note.percussionArticulation >= 0) {\r\n                noteNode.addElement('InstrumentArticulation').innerText = note.percussionArticulation.toString();\r\n            }\r\n            else {\r\n                noteNode.addElement('InstrumentArticulation').innerText = '0';\r\n            }\r\n        }\r\n        writeNoteProperties(parent, note) {\r\n            const properties = parent.addElement('Properties');\r\n            this.writeConcertPitch(properties, note);\r\n            this.writeTransposedPitch(properties, note);\r\n            if (note.isStringed) {\r\n                this.writeSimplePropertyNode(properties, 'String', 'String', (note.string - 1).toString());\r\n                this.writeSimplePropertyNode(properties, 'Fret', 'Fret', note.fret.toString());\r\n                this.writeSimplePropertyNode(properties, 'Midi', 'Number', note.realValue.toString());\r\n            }\r\n            if (note.isPiano) {\r\n                this.writeSimplePropertyNode(properties, 'Octave', 'Number', note.octave.toString());\r\n                this.writeSimplePropertyNode(properties, 'Tone', 'Step', note.tone.toString());\r\n                this.writeSimplePropertyNode(properties, 'Midi', 'Number', note.realValue.toString());\r\n            }\r\n            if (note.beat.tap) {\r\n                this.writeSimplePropertyNode(properties, 'Tapped', 'Enable', null);\r\n            }\r\n            if (note.harmonicType !== HarmonicType.None) {\r\n                switch (note.harmonicType) {\r\n                    case HarmonicType.Natural:\r\n                        this.writeSimplePropertyNode(properties, 'HarmonicType', 'HType', 'Natural');\r\n                        break;\r\n                    case HarmonicType.Artificial:\r\n                        this.writeSimplePropertyNode(properties, 'HarmonicType', 'HType', 'Artificial');\r\n                        break;\r\n                    case HarmonicType.Pinch:\r\n                        this.writeSimplePropertyNode(properties, 'HarmonicType', 'HType', 'Pinch');\r\n                        break;\r\n                    case HarmonicType.Tap:\r\n                        this.writeSimplePropertyNode(properties, 'HarmonicType', 'HType', 'Tap');\r\n                        break;\r\n                    case HarmonicType.Semi:\r\n                        this.writeSimplePropertyNode(properties, 'HarmonicType', 'HType', 'Semi');\r\n                        break;\r\n                    case HarmonicType.Feedback:\r\n                        this.writeSimplePropertyNode(properties, 'HarmonicType', 'HType', 'Feedback');\r\n                        break;\r\n                }\r\n                if (note.harmonicValue !== 0) {\r\n                    this.writeSimplePropertyNode(properties, 'HarmonicFret', 'HFret', note.harmonicValue.toString());\r\n                }\r\n            }\r\n            if (note.isDead) {\r\n                this.writeSimplePropertyNode(properties, 'Muted', 'Enable', null);\r\n            }\r\n            if (note.isPalmMute) {\r\n                this.writeSimplePropertyNode(properties, 'PalmMuted', 'Enable', null);\r\n            }\r\n            if (note.hasBend) {\r\n                this.writeBend(properties, note);\r\n            }\r\n            if (note.isHammerPullOrigin) {\r\n                this.writeSimplePropertyNode(properties, 'HopoOrigin', 'Enable', null);\r\n            }\r\n            if (note.isHammerPullDestination) {\r\n                this.writeSimplePropertyNode(properties, 'HopoDestination', 'Enable', null);\r\n            }\r\n            if (note.isLeftHandTapped) {\r\n                this.writeSimplePropertyNode(properties, 'LeftHandTapped', 'Enable', null);\r\n            }\r\n            let slideFlags = 0;\r\n            switch (note.slideInType) {\r\n                case SlideInType.IntoFromAbove:\r\n                    slideFlags |= 32;\r\n                    break;\r\n                case SlideInType.IntoFromBelow:\r\n                    slideFlags |= 16;\r\n                    break;\r\n            }\r\n            switch (note.slideOutType) {\r\n                case SlideOutType.Shift:\r\n                    slideFlags |= 1;\r\n                    break;\r\n                case SlideOutType.Legato:\r\n                    slideFlags |= 2;\r\n                    break;\r\n                case SlideOutType.OutDown:\r\n                    slideFlags |= 4;\r\n                    break;\r\n                case SlideOutType.OutUp:\r\n                    slideFlags |= 8;\r\n                    break;\r\n                case SlideOutType.PickSlideDown:\r\n                    slideFlags |= 64;\r\n                    break;\r\n                case SlideOutType.PickSlideUp:\r\n                    slideFlags |= 128;\r\n                    break;\r\n            }\r\n            if (slideFlags > 0) {\r\n                this.writeSimplePropertyNode(properties, 'Slide', 'Flags', slideFlags.toString());\r\n            }\r\n        }\r\n        writeTransposedPitch(properties, note) {\r\n            if (note.isPercussion) {\r\n                this.writePitch(properties, \"ConcertPitch\", \"C\", \"-1\", '');\r\n            }\r\n            else {\r\n                this.writePitchForValue(properties, \"TransposedPitch\", note.displayValueWithoutBend, note.accidentalMode);\r\n            }\r\n        }\r\n        writeConcertPitch(properties, note) {\r\n            if (note.isPercussion) {\r\n                this.writePitch(properties, \"ConcertPitch\", \"C\", \"-1\", '');\r\n            }\r\n            else {\r\n                this.writePitchForValue(properties, \"ConcertPitch\", note.realValueWithoutHarmonic, note.accidentalMode);\r\n            }\r\n        }\r\n        writePitchForValue(properties, propertyName, value, accidentalMode) {\r\n            let index = 0;\r\n            let octave = 0;\r\n            let step = '';\r\n            let accidental = '';\r\n            const updateParts = () => {\r\n                index = value % 12;\r\n                octave = (value / 12) | 0;\r\n                step = Tuning.defaultSteps[index];\r\n                accidental = Tuning.defaultAccidentals[index];\r\n            };\r\n            updateParts();\r\n            switch (accidentalMode) {\r\n                case NoteAccidentalMode.Default:\r\n                    break;\r\n                case NoteAccidentalMode.ForceNone:\r\n                    accidental = '';\r\n                    break;\r\n                case NoteAccidentalMode.ForceNatural:\r\n                    accidental = '';\r\n                    break;\r\n                case NoteAccidentalMode.ForceSharp:\r\n                    accidental = '#';\r\n                    break;\r\n                case NoteAccidentalMode.ForceDoubleSharp:\r\n                    if (accidental === '#') {\r\n                        value -= 2;\r\n                        updateParts();\r\n                    }\r\n                    accidental = 'x';\r\n                    break;\r\n                case NoteAccidentalMode.ForceFlat:\r\n                    if (accidental === '#') {\r\n                        value += 1;\r\n                        updateParts();\r\n                    }\r\n                    accidental = 'b';\r\n                    break;\r\n                case NoteAccidentalMode.ForceDoubleFlat:\r\n                    if (accidental === '#') {\r\n                        value += 2;\r\n                        updateParts();\r\n                    }\r\n                    accidental = 'bb';\r\n                    break;\r\n            }\r\n            this.writePitch(properties, propertyName, step, octave.toString(), accidental);\r\n        }\r\n        writePitch(properties, propertyName, step, octave, accidental) {\r\n            const property = properties.addElement('Property');\r\n            property.attributes.set('name', propertyName);\r\n            const pitch = property.addElement('Pitch');\r\n            pitch.addElement('Step').innerText = step;\r\n            pitch.addElement('Accidental').innerText = accidental;\r\n            pitch.addElement('Octave').innerText = octave;\r\n        }\r\n        writeBend(properties, note) {\r\n            if (note.hasBend && note.bendPoints.length <= 4) {\r\n                this.writeStandardBend(properties, note.bendPoints);\r\n            }\r\n        }\r\n        writeStandardBend(properties, bendPoints) {\r\n            this.writeSimplePropertyNode(properties, 'Bended', 'Enable', null);\r\n            var bendOrigin = bendPoints[0];\r\n            var bendDestination = bendPoints[bendPoints.length - 1];\r\n            var bendMiddle1;\r\n            var bendMiddle2;\r\n            switch (bendPoints.length) {\r\n                case 4:\r\n                    bendMiddle1 = bendPoints[1];\r\n                    bendMiddle2 = bendPoints[2];\r\n                    break;\r\n                case 3:\r\n                    bendMiddle1 = bendPoints[1];\r\n                    bendMiddle2 = bendPoints[1];\r\n                    break;\r\n                case 2:\r\n                default:\r\n                    bendMiddle1 = new BendPoint((bendOrigin.offset + bendDestination.offset) / 2, (bendOrigin.value + bendDestination.value) / 2);\r\n                    bendMiddle2 = bendMiddle1;\r\n                    break;\r\n            }\r\n            this.writeSimplePropertyNode(properties, 'BendDestinationOffset', 'Float', this.toBendOffset(bendDestination.offset).toString());\r\n            this.writeSimplePropertyNode(properties, 'BendDestinationValue', 'Float', this.toBendValue(bendDestination.value).toString());\r\n            this.writeSimplePropertyNode(properties, 'BendMiddleOffset1', 'Float', this.toBendOffset(bendMiddle1.offset).toString());\r\n            this.writeSimplePropertyNode(properties, 'BendMiddleOffset2', 'Float', this.toBendOffset(bendMiddle2.offset).toString());\r\n            this.writeSimplePropertyNode(properties, 'BendMiddleValue', 'Float', this.toBendValue(bendMiddle1.value).toString());\r\n            this.writeSimplePropertyNode(properties, 'BendOriginOffset', 'Float', this.toBendOffset(bendOrigin.offset).toString());\r\n            this.writeSimplePropertyNode(properties, 'BendOriginValue', 'Float', this.toBendValue(bendOrigin.value).toString());\r\n        }\r\n        toBendValue(value) {\r\n            // GPIF: 25 per quarternote\r\n            return value * 25;\r\n        }\r\n        toBendOffset(value) {\r\n            // GPIF range: 0-100\r\n            return (value / BendPoint.MaxPosition) * 100.0;\r\n        }\r\n        writeBeatNode(parent, beat, rhythms) {\r\n            const beatNode = parent.addElement('Beat');\r\n            beatNode.attributes.set('id', beat.id.toString());\r\n            beatNode.addElement('Dynamic').innerText = DynamicValue[beat.dynamics];\r\n            if (beat.fadeIn) {\r\n                beatNode.addElement('Fadding').innerText = 'FadeIn';\r\n            }\r\n            if (beat.isTremolo) {\r\n                switch (beat.tremoloSpeed) {\r\n                    case Duration.Eighth:\r\n                        beatNode.addElement('Tremolo').innerText = '1/2';\r\n                        break;\r\n                    case Duration.Sixteenth:\r\n                        beatNode.addElement('Tremolo').innerText = '1/4';\r\n                        break;\r\n                    case Duration.ThirtySecond:\r\n                        beatNode.addElement('Tremolo').innerText = '1/8';\r\n                        break;\r\n                }\r\n            }\r\n            if (beat.hasChord) {\r\n                beatNode.addElement('Chord').setCData(beat.chordId);\r\n            }\r\n            if (beat.crescendo !== CrescendoType.None) {\r\n                beatNode.addElement('Hairpin').innerText = CrescendoType[beat.crescendo];\r\n            }\r\n            switch (beat.brushType) {\r\n                case BrushType.ArpeggioUp:\r\n                    beatNode.addElement('Arpeggio').innerText = 'Up';\r\n                    break;\r\n                case BrushType.ArpeggioDown:\r\n                    beatNode.addElement('Arpeggio').innerText = 'Down';\r\n                    break;\r\n            }\r\n            if (beat.text) {\r\n                beatNode.addElement('FreeText').setCData(beat.text);\r\n            }\r\n            switch (beat.graceType) {\r\n                case GraceType.OnBeat:\r\n                case GraceType.BeforeBeat:\r\n                    beatNode.addElement('GraceNotes').innerText = GraceType[beat.graceType];\r\n                    break;\r\n            }\r\n            if (beat.ottava !== Ottavia.Regular) {\r\n                beatNode.addElement('Ottavia').innerText = Ottavia[beat.ottava].substr(1);\r\n            }\r\n            if (beat.hasWhammyBar) {\r\n                this.writeWhammyNode(beatNode, beat);\r\n            }\r\n            if (beat.isLegatoOrigin || beat.isLegatoDestination) {\r\n                const legato = beatNode.addElement('Legato');\r\n                legato.attributes.set('origin', beat.isLegatoOrigin ? 'true' : 'false');\r\n                legato.attributes.set('destination', beat.isLegatoDestination ? 'true' : 'false');\r\n            }\r\n            this.writeRhythm(beatNode, beat, rhythms);\r\n            if (beat.preferredBeamDirection !== null) {\r\n                switch (beat.preferredBeamDirection) {\r\n                    case BeamDirection.Up:\r\n                        beatNode.addElement('TransposedPitchStemOrientation').innerText = 'Upward';\r\n                        break;\r\n                    case BeamDirection.Down:\r\n                        beatNode.addElement('TransposedPitchStemOrientation').innerText = 'Downward';\r\n                        break;\r\n                }\r\n            }\r\n            beatNode.addElement('ConcertPitchStemOrientation').innerText = 'Undefined';\r\n            if (!beat.isRest) {\r\n                beatNode.addElement('Notes').innerText = beat.notes.map(n => n.id).join(' ');\r\n            }\r\n            this.writeBeatProperties(beatNode, beat);\r\n            this.writeBeatXProperties(beatNode, beat);\r\n            if (beat.lyrics && beat.lyrics.length > 0) {\r\n                this.writeBeatLyrics(beatNode, beat.lyrics);\r\n            }\r\n        }\r\n        writeBeatLyrics(beatNode, lyrics) {\r\n            const lyricsNode = beatNode.addElement('Lyrics');\r\n            for (const l of lyrics) {\r\n                const line = lyricsNode.addElement('Line');\r\n                line.setCData(l);\r\n            }\r\n        }\r\n        writeBeatXProperties(beatNode, beat) {\r\n            const beatProperties = beatNode.addElement('XProperties');\r\n            if (beat.brushDuration > 0) {\r\n                this.writeSimpleXPropertyNode(beatProperties, '687935489', 'Int', beat.brushDuration.toString());\r\n            }\r\n        }\r\n        writeBeatProperties(beatNode, beat) {\r\n            const beatProperties = beatNode.addElement('Properties');\r\n            switch (beat.brushType) {\r\n                case BrushType.BrushUp:\r\n                    this.writeSimplePropertyNode(beatProperties, 'Brush', 'Direction', 'Up');\r\n                    break;\r\n                case BrushType.BrushDown:\r\n                    this.writeSimplePropertyNode(beatProperties, 'Brush', 'Direction', 'Down');\r\n                    break;\r\n            }\r\n            switch (beat.pickStroke) {\r\n                case PickStroke.Up:\r\n                    this.writeSimplePropertyNode(beatProperties, 'PickStroke', 'Direction', 'Up');\r\n                    break;\r\n                case PickStroke.Down:\r\n                    this.writeSimplePropertyNode(beatProperties, 'PickStroke', 'Direction', 'Down');\r\n                    break;\r\n            }\r\n            if (beat.slap) {\r\n                this.writeSimplePropertyNode(beatProperties, 'Slapped', 'Enable', null);\r\n            }\r\n            if (beat.pop) {\r\n                this.writeSimplePropertyNode(beatProperties, 'Popped', 'Enable', null);\r\n            }\r\n            switch (beat.vibrato) {\r\n                case VibratoType.Wide:\r\n                    this.writeSimplePropertyNode(beatProperties, 'VibratoWTremBar', 'Strength', 'Wide');\r\n                    break;\r\n                case VibratoType.Slight:\r\n                    this.writeSimplePropertyNode(beatProperties, 'VibratoWTremBar', 'Strength', 'Slight');\r\n                    break;\r\n            }\r\n        }\r\n        writeRhythm(parent, beat, rhythms) {\r\n            const rhythmId = `${beat.duration}_${beat.dots}_${beat.tupletNumerator}_${beat.tupletDenominator}';`;\r\n            let rhythm;\r\n            if (!this._rhythmIdLookup.has(rhythmId)) {\r\n                rhythm = this._rhythmIdLookup.size.toString();\r\n                this._rhythmIdLookup.set(rhythmId, rhythm);\r\n                const rhythmNode = rhythms.addElement('Rhythm');\r\n                rhythmNode.attributes.set('id', rhythm);\r\n                if (beat.hasTuplet) {\r\n                    const tupletNode = rhythmNode.addElement('PrimaryTuplet');\r\n                    tupletNode.attributes.set('num', beat.tupletNumerator.toString());\r\n                    tupletNode.attributes.set('den', beat.tupletDenominator.toString());\r\n                }\r\n                if (beat.dots > 0) {\r\n                    rhythmNode.addElement('AugmentationDot').attributes.set('count', beat.dots.toString());\r\n                }\r\n                let noteValue = 'Quarter';\r\n                switch (beat.duration) {\r\n                    case Duration.QuadrupleWhole:\r\n                        noteValue = 'Long';\r\n                        break;\r\n                    case Duration.DoubleWhole:\r\n                        noteValue = 'DoubleWhole';\r\n                        break;\r\n                    case Duration.Whole:\r\n                        noteValue = 'Whole';\r\n                        break;\r\n                    case Duration.Half:\r\n                        noteValue = 'Half';\r\n                        break;\r\n                    case Duration.Quarter:\r\n                        noteValue = 'Quarter';\r\n                        break;\r\n                    case Duration.Eighth:\r\n                        noteValue = 'Eighth';\r\n                        break;\r\n                    case Duration.Sixteenth:\r\n                        noteValue = '16th';\r\n                        break;\r\n                    case Duration.ThirtySecond:\r\n                        noteValue = '32nd';\r\n                        break;\r\n                    case Duration.SixtyFourth:\r\n                        noteValue = '64th';\r\n                        break;\r\n                    case Duration.OneHundredTwentyEighth:\r\n                        noteValue = '128th';\r\n                        break;\r\n                    case Duration.TwoHundredFiftySixth:\r\n                        noteValue = '256th';\r\n                        break;\r\n                }\r\n                rhythmNode.addElement('NoteValue').innerText = noteValue;\r\n            }\r\n            else {\r\n                rhythm = this._rhythmIdLookup.get(rhythmId);\r\n            }\r\n            parent.addElement('Rhythm').attributes.set('ref', rhythm);\r\n        }\r\n        writeWhammyNode(parent, beat) {\r\n            if (beat.hasWhammyBar && beat.whammyBarPoints.length <= 4) {\r\n                this.writeStandardWhammy(parent, beat.whammyBarPoints);\r\n            }\r\n        }\r\n        writeStandardWhammy(parent, whammyBarPoints) {\r\n            const whammyNode = parent.addElement('Whammy');\r\n            var whammyOrigin = whammyBarPoints[0];\r\n            var whammyDestination = whammyBarPoints[whammyBarPoints.length - 1];\r\n            var whammyMiddle1;\r\n            var whammyMiddle2;\r\n            switch (whammyBarPoints.length) {\r\n                case 4:\r\n                    whammyMiddle1 = whammyBarPoints[1];\r\n                    whammyMiddle2 = whammyBarPoints[2];\r\n                    break;\r\n                case 3:\r\n                    whammyMiddle1 = whammyBarPoints[1];\r\n                    whammyMiddle2 = whammyBarPoints[1];\r\n                    break;\r\n                case 2:\r\n                default:\r\n                    whammyMiddle1 = new BendPoint((whammyOrigin.offset + whammyDestination.offset) / 2, (whammyOrigin.value + whammyDestination.value) / 2);\r\n                    whammyMiddle2 = whammyMiddle1;\r\n                    break;\r\n            }\r\n            whammyNode.attributes.set('destinationOffset', this.toBendOffset(whammyDestination.offset).toString());\r\n            whammyNode.attributes.set('destinationValue', this.toBendValue(whammyDestination.value).toString());\r\n            whammyNode.attributes.set('middleOffset1', this.toBendOffset(whammyMiddle1.offset).toString());\r\n            whammyNode.attributes.set('middleOffset2', this.toBendOffset(whammyMiddle2.offset).toString());\r\n            whammyNode.attributes.set('middleValue', this.toBendValue(whammyMiddle1.value).toString());\r\n            whammyNode.attributes.set('originOffset', this.toBendOffset(whammyOrigin.offset).toString());\r\n            whammyNode.attributes.set('originValue', this.toBendValue(whammyOrigin.value).toString());\r\n        }\r\n        writeScoreNode(parent, score) {\r\n            const scoreNode = parent.addElement('Score');\r\n            scoreNode.addElement('Title').setCData(score.title);\r\n            scoreNode.addElement('SubTitle').setCData(score.subTitle);\r\n            scoreNode.addElement('Artist').setCData(score.artist);\r\n            scoreNode.addElement('Album').setCData(score.album);\r\n            scoreNode.addElement('Words').setCData(score.words);\r\n            scoreNode.addElement('Music').setCData(score.music);\r\n            scoreNode.addElement('WordsAndMusic').setCData(score.words === score.music ? score.words : '');\r\n            scoreNode.addElement('Copyright').setCData(score.copyright);\r\n            scoreNode.addElement('Tabber').setCData(score.tab);\r\n            scoreNode.addElement('Instructions').setCData(score.instructions);\r\n            scoreNode.addElement('Notices').setCData(score.notices);\r\n            scoreNode.addElement('FirstPageHeader').setCData('');\r\n            scoreNode.addElement('FirstPageFooter').setCData('');\r\n            scoreNode.addElement('PageHeader').setCData('');\r\n            scoreNode.addElement('PageFooter').setCData('');\r\n            scoreNode.addElement('ScoreSystemsDefaultLayout').setCData('4');\r\n            scoreNode.addElement('ScoreSystemsLayout').setCData('4');\r\n            scoreNode.addElement('ScoreZoomPolicy').innerText = 'Value';\r\n            scoreNode.addElement('ScoreZoom').innerText = '1';\r\n            // not fully clear at this point so we rather activate it\r\n            scoreNode.addElement('MultiVoice').innerText = '1>';\r\n        }\r\n        writeMasterTrackNode(parent, score) {\r\n            const masterTrackNode = parent.addElement('MasterTrack');\r\n            masterTrackNode.addElement('Tracks').innerText = score.tracks.map(t => t.index).join(' ');\r\n            const automations = masterTrackNode.addElement('Automations');\r\n            if (score.masterBars.length > 0 && score.masterBars[0].isAnacrusis) {\r\n                masterTrackNode.addElement('Anacrusis');\r\n            }\r\n            const initialTempoAutomation = automations.addElement('Automation');\r\n            initialTempoAutomation.addElement('Type').innerText = 'Tempo';\r\n            initialTempoAutomation.addElement('Linear').innerText = 'false';\r\n            initialTempoAutomation.addElement('Bar').innerText = \"0\";\r\n            initialTempoAutomation.addElement('Position').innerText = \"0\";\r\n            initialTempoAutomation.addElement('Visible').innerText = 'true';\r\n            initialTempoAutomation.addElement('Value').innerText = `${score.tempo} 2`;\r\n            if (score.tempoLabel) {\r\n                initialTempoAutomation.addElement('Text').innerText = score.tempoLabel;\r\n            }\r\n            for (const mb of score.masterBars) {\r\n                if (mb.index > 0 && mb.tempoAutomation) {\r\n                    const tempoAutomation = automations.addElement('Automation');\r\n                    tempoAutomation.addElement('Type').innerText = 'Tempo';\r\n                    tempoAutomation.addElement('Linear').innerText = mb.tempoAutomation.isLinear ? 'true' : 'false';\r\n                    tempoAutomation.addElement('Bar').innerText = mb.index.toString();\r\n                    tempoAutomation.addElement('Position').innerText = mb.tempoAutomation.ratioPosition.toString();\r\n                    tempoAutomation.addElement('Visible').innerText = 'true';\r\n                    tempoAutomation.addElement('Value').innerText = `${mb.tempoAutomation.value} 2`;\r\n                    if (mb.tempoAutomation.text) {\r\n                        tempoAutomation.addElement('Text').innerText = mb.tempoAutomation.text;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        writeAudioTracksNode(parent, score) {\r\n            parent.addElement('AudioTracks');\r\n        }\r\n        writeTracksNode(parent, score) {\r\n            const tracksNode = parent.addElement('Tracks');\r\n            for (const track of score.tracks) {\r\n                this.writeTrackNode(tracksNode, track);\r\n            }\r\n        }\r\n        writeTrackNode(parent, track) {\r\n            const trackNode = parent.addElement('Track');\r\n            trackNode.attributes.set('id', track.index.toString());\r\n            trackNode.addElement('Name').setCData(track.name);\r\n            trackNode.addElement('ShortName').setCData(track.shortName);\r\n            trackNode.addElement('Color').innerText = `${track.color.r} ${track.color.g} ${track.color.b}`;\r\n            // Note: unclear what these values mean, various combinations in GP7 lead to these values\r\n            trackNode.addElement('SystemsDefautLayout').innerText = \"3\";\r\n            trackNode.addElement('SystemsLayout').innerText = \"1\";\r\n            trackNode.addElement('AutoBrush');\r\n            trackNode.addElement('PalmMute').innerText = '0';\r\n            trackNode.addElement('PlayingStyle').innerText = GeneralMidi.isGuitar(track.playbackInfo.program)\r\n                ? 'StringedPick'\r\n                : 'Default';\r\n            trackNode.addElement('UseOneChannelPerString');\r\n            trackNode.addElement('IconId').innerText = GpifWriter.getIconId(track.playbackInfo).toString();\r\n            this.writeInstrumentSetNode(trackNode, track);\r\n            this.writeTransposeNode(trackNode, track);\r\n            this.writeRseNode(trackNode, track);\r\n            trackNode.addElement('ForcedSound').innerText = '-1';\r\n            this.writeMidiConnectionNode(trackNode, track);\r\n            if (track.playbackInfo.isSolo) {\r\n                trackNode.addElement('PlaybackState').innerText = 'Solo';\r\n            }\r\n            else if (track.playbackInfo.isMute) {\r\n                trackNode.addElement('PlaybackState').innerText = 'Mute';\r\n            }\r\n            else {\r\n                trackNode.addElement('PlaybackState').innerText = 'Default';\r\n            }\r\n            trackNode.addElement('AudioEngineState').innerText = 'MIDI';\r\n            this.writeLyricsNode(trackNode, track);\r\n            this.writeStavesNode(trackNode, track);\r\n            this.writeSoundsAndAutomations(trackNode, track);\r\n        }\r\n        static getIconId(playbackInfo) {\r\n            if (playbackInfo.primaryChannel === 9) {\r\n                return GpifWriter.DrumKitProgramInfo.icon;\r\n            }\r\n            if (GpifWriter.MidiProgramInfoLookup.has(playbackInfo.program)) {\r\n                return GpifWriter.MidiProgramInfoLookup.get(playbackInfo.program).icon;\r\n            }\r\n            return GpifIconIds.SteelGuitar;\r\n        }\r\n        writeSoundAndAutomation(soundsNode, automationsNode, name, path, role, barIndex, program, ratioPosition = 0) {\r\n            const soundNode = soundsNode.addElement('Sound');\r\n            soundNode.addElement('Name').setCData(name);\r\n            soundNode.addElement('Label').setCData(name);\r\n            soundNode.addElement('Path').setCData(path);\r\n            soundNode.addElement('Role').setCData(role);\r\n            const midi = soundNode.addElement('MIDI');\r\n            midi.addElement('LSB').innerText = '0';\r\n            midi.addElement('MSB').innerText = '0';\r\n            midi.addElement('Program').innerText = program.toString();\r\n            const automationNode = automationsNode.addElement('Automation');\r\n            automationNode.addElement('Type').innerText = 'Sound';\r\n            automationNode.addElement('Linear').innerText = 'false';\r\n            automationNode.addElement('Bar').innerText = barIndex.toString();\r\n            automationNode.addElement('Position').innerText = ratioPosition.toString();\r\n            automationNode.addElement('Visible').innerText = \"true\";\r\n            automationNode.addElement('Value').setCData(`${path};${name};${role}`);\r\n        }\r\n        writeSoundsAndAutomations(trackNode, track) {\r\n            const soundsNode = trackNode.addElement('Sounds');\r\n            const automationsNode = trackNode.addElement('Automations');\r\n            if (track.staves.length > 0 && track.staves[0].bars.length > 0) {\r\n                const trackSoundName = `Track_${track.index}_Initial`;\r\n                const trackSoundPath = `Midi/${track.playbackInfo.program}`;\r\n                const trackSoundRole = 'Factory';\r\n                let trackSoundWritten = false;\r\n                for (const staff of track.staves) {\r\n                    for (const bar of staff.bars) {\r\n                        for (const voice of bar.voices) {\r\n                            for (const beat of voice.beats) {\r\n                                const soundAutomation = beat.getAutomation(AutomationType.Instrument);\r\n                                const isTrackSound = bar.index === 0 && beat.index === 0;\r\n                                if (soundAutomation) {\r\n                                    const name = isTrackSound ? trackSoundName : `ProgramChange_${beat.id}`;\r\n                                    const path = isTrackSound ? trackSoundPath : `Midi/${soundAutomation.value}`;\r\n                                    const role = isTrackSound ? trackSoundRole : 'User';\r\n                                    if (!isTrackSound && !trackSoundWritten) {\r\n                                        this.writeSoundAndAutomation(soundsNode, automationsNode, trackSoundName, trackSoundPath, trackSoundRole, track.staves[0].bars[0].index, track.playbackInfo.program);\r\n                                        trackSoundWritten = true;\r\n                                    }\r\n                                    this.writeSoundAndAutomation(soundsNode, automationsNode, name, path, role, bar.index, soundAutomation.value, soundAutomation.ratioPosition);\r\n                                    if (isTrackSound) {\r\n                                        trackSoundWritten = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        writeMidiConnectionNode(trackNode, track) {\r\n            const midiConnection = trackNode.addElement('MidiConnection');\r\n            midiConnection.addElement('Port').innerText = track.playbackInfo.port.toString();\r\n            midiConnection.addElement('PrimaryChannel').innerText = track.playbackInfo.primaryChannel.toString();\r\n            midiConnection.addElement('SecondaryChannel').innerText = track.playbackInfo.secondaryChannel.toString();\r\n            midiConnection.addElement('ForeOneChannelPerString').innerText = 'false';\r\n        }\r\n        writeRseNode(trackNode, track) {\r\n            const rse = trackNode.addElement('RSE');\r\n            const channelStrip = rse.addElement('ChannelStrip');\r\n            channelStrip.attributes.set('version', 'E56');\r\n            const channelStripParameters = channelStrip.addElement('Parameters');\r\n            channelStripParameters.innerText = `0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 1 0.5 ${track.playbackInfo.balance / 16} ${track.playbackInfo.volume / 16} 0.5 0.5 0.5`;\r\n        }\r\n        writeStavesNode(trackNode, track) {\r\n            const staves = trackNode.addElement('Staves');\r\n            for (const staff of track.staves) {\r\n                this.writeStaffNode(staves, staff);\r\n            }\r\n        }\r\n        writeStaffNode(parent, staff) {\r\n            const staffNode = parent.addElement('Staff');\r\n            const properties = staffNode.addElement('Properties');\r\n            this.writeSimplePropertyNode(properties, 'CapoFret', 'Fret', staff.capo.toString());\r\n            this.writeSimplePropertyNode(properties, 'FretCount', 'Fret', \"24\");\r\n            if (staff.tuning.length > 0) {\r\n                const tuningProperty = properties.addElement('Property');\r\n                tuningProperty.attributes.set('name', 'Tuning');\r\n                tuningProperty.addElement('Pitches').innerText = staff.tuning.slice().reverse().join(' ');\r\n                tuningProperty.addElement('Label').setCData(staff.tuningName);\r\n                tuningProperty.addElement('LabelVisible').innerText = staff.tuningName ? \"true\" : \"false\";\r\n                tuningProperty.addElement('Flat');\r\n                switch (staff.tuning.length) {\r\n                    case 3:\r\n                        tuningProperty.addElement('Instrument').innerText = 'Shamisen';\r\n                        break;\r\n                    case 4:\r\n                        if (staff.track.playbackInfo.program === 105) {\r\n                            tuningProperty.addElement('Instrument').innerText = 'Banjo';\r\n                        }\r\n                        else if (staff.track.playbackInfo.program == 42) {\r\n                            tuningProperty.addElement('Instrument').innerText = 'Cello';\r\n                        }\r\n                        else if (staff.track.playbackInfo.program == 43) {\r\n                            tuningProperty.addElement('Instrument').innerText = 'Contrabass';\r\n                        }\r\n                        else if (staff.track.playbackInfo.program == 40) {\r\n                            tuningProperty.addElement('Instrument').innerText = 'Violin';\r\n                        }\r\n                        else if (staff.track.playbackInfo.program == 41) {\r\n                            tuningProperty.addElement('Instrument').innerText = 'Viola';\r\n                        }\r\n                        else {\r\n                            tuningProperty.addElement('Instrument').innerText = 'Bass';\r\n                        }\r\n                        break;\r\n                    case 5:\r\n                        if (staff.track.playbackInfo.program === 105) {\r\n                            tuningProperty.addElement('Instrument').innerText = 'Banjo';\r\n                        }\r\n                        else {\r\n                            tuningProperty.addElement('Instrument').innerText = 'Bass';\r\n                        }\r\n                        break;\r\n                    case 6:\r\n                        if (staff.track.playbackInfo.program === 105) {\r\n                            tuningProperty.addElement('Instrument').innerText = 'Banjo';\r\n                        }\r\n                        else if (staff.track.playbackInfo.program <= 39) {\r\n                            tuningProperty.addElement('Instrument').innerText = 'Bass';\r\n                        }\r\n                        else {\r\n                            tuningProperty.addElement('Instrument').innerText = 'Guitar';\r\n                        }\r\n                        break;\r\n                    case 7:\r\n                        if (staff.track.playbackInfo.program <= 39) {\r\n                            tuningProperty.addElement('Instrument').innerText = 'Bass';\r\n                        }\r\n                        else {\r\n                            tuningProperty.addElement('Instrument').innerText = 'Guitar';\r\n                        }\r\n                        break;\r\n                    default:\r\n                        tuningProperty.addElement('Instrument').innerText = 'Guitar';\r\n                        break;\r\n                }\r\n            }\r\n            this.writeSimplePropertyNode(properties, 'PartialCapoFret', 'Fret', \"0\");\r\n            this.writeSimplePropertyNode(properties, 'PartialCapoStringFlags', 'Bitset', staff.tuning.map(_ => '0').join(''));\r\n            this.writeSimplePropertyNode(properties, 'TuningFlat', 'Enable', null);\r\n            this.writeDiagramCollection(properties, staff, 'DiagramCollection');\r\n            this.writeDiagramCollection(properties, staff, 'DiagramWorkingSet');\r\n        }\r\n        writeDiagramCollection(properties, staff, name) {\r\n            const diagramCollectionProperty = properties.addElement('Property');\r\n            diagramCollectionProperty.attributes.set('name', name);\r\n            const diagramCollectionItems = diagramCollectionProperty.addElement('Items');\r\n            for (const [id, chord] of staff.chords) {\r\n                const diagramCollectionItem = diagramCollectionItems.addElement('Item');\r\n                diagramCollectionItem.attributes.set('id', id);\r\n                diagramCollectionItem.attributes.set('name', chord.name);\r\n                const diagram = diagramCollectionItem.addElement('Diagram');\r\n                diagram.attributes.set('stringCount', chord.strings.length.toString());\r\n                diagram.attributes.set('fretCount', '5');\r\n                diagram.attributes.set('baseFret', (chord.firstFret - 1).toString());\r\n                diagram.attributes.set('barStates', chord.strings.map(_ => '1').join(' '));\r\n                const frets = [];\r\n                const fretToStrings = new Map();\r\n                for (let i = 0; i < chord.strings.length; i++) {\r\n                    let chordFret = chord.strings[i];\r\n                    if (chordFret !== -1) {\r\n                        const fretNode = diagram.addElement('Fret');\r\n                        const chordString = (chord.strings.length - 1 - i);\r\n                        fretNode.attributes.set('string', chordString.toString());\r\n                        fretNode.attributes.set('fret', (chordFret - chord.firstFret + 1).toString());\r\n                        if (!fretToStrings.has(chordFret)) {\r\n                            fretToStrings.set(chordFret, []);\r\n                            frets.push(chordFret);\r\n                        }\r\n                        fretToStrings.get(chordFret).push(chordString);\r\n                    }\r\n                }\r\n                frets.sort();\r\n                // try to rebuild the barre frets\r\n                const fingering = diagram.addElement('Fingering');\r\n                if (chord.barreFrets.length > 0) {\r\n                    const fingers = [\r\n                        Fingers.LittleFinger,\r\n                        Fingers.AnnularFinger,\r\n                        Fingers.MiddleFinger,\r\n                        Fingers.IndexFinger,\r\n                    ];\r\n                    for (const fret of frets) {\r\n                        const fretStrings = fretToStrings.get(fret);\r\n                        if (fretStrings.length > 1 && chord.barreFrets.indexOf(fret) >= 0) {\r\n                            const finger = fingers.length > 0 ? fingers.pop() : Fingers.IndexFinger;\r\n                            for (const fretString of fretStrings) {\r\n                                const position = fingering.addElement('Position');\r\n                                switch (finger) {\r\n                                    case Fingers.LittleFinger:\r\n                                        position.attributes.set('finger', 'Pinky');\r\n                                        break;\r\n                                    case Fingers.AnnularFinger:\r\n                                        position.attributes.set('finger', 'Ring');\r\n                                        break;\r\n                                    case Fingers.MiddleFinger:\r\n                                        position.attributes.set('finger', 'Middle');\r\n                                        break;\r\n                                    case Fingers.IndexFinger:\r\n                                        position.attributes.set('finger', 'Index');\r\n                                        break;\r\n                                }\r\n                                position.attributes.set('fret', (fret - chord.firstFret + 1).toString());\r\n                                position.attributes.set('string', fretString.toString());\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                const showName = diagram.addElement('Property');\r\n                showName.attributes.set('name', 'ShowName');\r\n                showName.attributes.set('type', 'bool');\r\n                showName.attributes.set('value', chord.showName ? \"true\" : \"false\");\r\n                const showDiagram = diagram.addElement('Property');\r\n                showDiagram.attributes.set('name', 'ShowDiagram');\r\n                showDiagram.attributes.set('type', 'bool');\r\n                showDiagram.attributes.set('value', chord.showDiagram ? \"true\" : \"false\");\r\n                const showFingering = diagram.addElement('Property');\r\n                showFingering.attributes.set('name', 'ShowFingering');\r\n                showFingering.attributes.set('type', 'bool');\r\n                showFingering.attributes.set('value', chord.showFingering ? \"true\" : \"false\");\r\n                // TODO Chord details\r\n                const chordNode = diagram.addElement('Chord');\r\n                const keyNoteNode = chordNode.addElement('KeyNote');\r\n                keyNoteNode.attributes.set('step', 'C');\r\n                keyNoteNode.attributes.set('accidental', 'Natural');\r\n                const bassNoteNode = chordNode.addElement('BassNote');\r\n                bassNoteNode.attributes.set('step', 'C');\r\n                bassNoteNode.attributes.set('accidental', 'Natural');\r\n                const degree1Node = chordNode.addElement('Degree');\r\n                degree1Node.attributes.set('interval', 'Third');\r\n                degree1Node.attributes.set('alteration', 'Major');\r\n                degree1Node.attributes.set('omitted', 'false');\r\n                const degree2Node = chordNode.addElement('Degree');\r\n                degree2Node.attributes.set('interval', 'Fifth');\r\n                degree2Node.attributes.set('alteration', 'Perfect');\r\n                degree2Node.attributes.set('omitted', 'false');\r\n            }\r\n        }\r\n        writeSimplePropertyNode(parent, propertyName, propertyValueTagName, propertyValue) {\r\n            const prop = parent.addElement('Property');\r\n            prop.attributes.set('name', propertyName);\r\n            const propertyValueTag = prop.addElement(propertyValueTagName);\r\n            if (propertyValue !== null) {\r\n                propertyValueTag.innerText = propertyValue;\r\n            }\r\n            return prop;\r\n        }\r\n        writeSimpleXPropertyNode(parent, propertyId, propertyValueTagName, propertyValue) {\r\n            const prop = parent.addElement('XProperty');\r\n            prop.attributes.set('id', propertyId);\r\n            const propertyValueTag = prop.addElement(propertyValueTagName);\r\n            if (propertyValue !== null) {\r\n                propertyValueTag.innerText = propertyValue;\r\n            }\r\n            return prop;\r\n        }\r\n        writeLyricsNode(trackNode, track) {\r\n            const lyrics = trackNode.addElement('Lyrics');\r\n            lyrics.attributes.set('dispatched', 'true');\r\n            let lines = [];\r\n            for (const bar of track.staves[0].bars) {\r\n                for (const voice of bar.voices) {\r\n                    if (!voice.isEmpty) {\r\n                        for (const beat of voice.beats) {\r\n                            if (beat.lyrics) {\r\n                                for (let l = 0; l < beat.lyrics.length; l++) {\r\n                                    // initial create of the lines\r\n                                    while (l >= lines.length) {\r\n                                        const newLyrics = new Lyrics();\r\n                                        newLyrics.startBar = bar.index;\r\n                                        newLyrics.text = '[Empty]';\r\n                                        lines.push(newLyrics);\r\n                                    }\r\n                                    const line = lines[l];\r\n                                    line.text = line.text == '[Empty]'\r\n                                        ? beat.lyrics[l]\r\n                                        : line.text + ' ' + beat.lyrics[l].split(' ').join('+');\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            for (let i = 0; i < lines.length; i++) {\r\n                const line = lyrics.addElement('Line');\r\n                line.addElement('Text').setCData(lines[i].text);\r\n                line.addElement('Offset').innerText = lines[i].startBar.toString();\r\n            }\r\n        }\r\n        writeTransposeNode(trackNode, track) {\r\n            const transpose = trackNode.addElement('Transpose');\r\n            const octaveTranspose = Math.floor(track.staves[0].displayTranspositionPitch / 12);\r\n            const chromaticTranspose = track.staves[0].displayTranspositionPitch - (octaveTranspose * 12);\r\n            transpose.addElement('Chromatic').innerText = chromaticTranspose.toString();\r\n            transpose.addElement('Octave').innerText = octaveTranspose.toString();\r\n        }\r\n        writeInstrumentSetNode(trackNode, track) {\r\n            const instrumentSet = trackNode.addElement('InstrumentSet');\r\n            const firstStaff = track.staves[0];\r\n            instrumentSet.addElement('LineCount').innerText = firstStaff.standardNotationLineCount.toString();\r\n            if (track.percussionArticulations.length > 0 || firstStaff.isPercussion) {\r\n                const articulations = track.percussionArticulations.length > 0\r\n                    ? track.percussionArticulations\r\n                    : Array.from(PercussionMapper.instrumentArticulations.values());\r\n                instrumentSet.addElement('Name').innerText = GpifWriter.DrumKitProgramInfo.instrumentSetName;\r\n                instrumentSet.addElement('Type').innerText = GpifWriter.DrumKitProgramInfo.instrumentSetType;\r\n                let currentElementName = \"\";\r\n                let currentArticulations = null;\r\n                let counterPerType = new Map();\r\n                const elements = instrumentSet.addElement('Elements');\r\n                for (const articulation of articulations) {\r\n                    {\r\n                        var currentElement = elements.addElement('Element');\r\n                        let name = articulation.elementType;\r\n                        if (counterPerType.has(name)) {\r\n                            const counter = counterPerType.get(name);\r\n                            name += ' ' + counter;\r\n                            counterPerType.set(name, counter + 1);\r\n                        }\r\n                        else {\r\n                            counterPerType.set(name, 1);\r\n                        }\r\n                        currentElementName = name;\r\n                        currentElement.addElement('Name').innerText = name;\r\n                        currentElement.addElement('Type').innerText = articulation.elementType;\r\n                        currentArticulations = currentElement.addElement('Articulations');\r\n                    }\r\n                    const articulationNode = currentArticulations.addElement('Articulation');\r\n                    articulationNode.addElement('Name').innerText = currentElementName + ' ' + currentArticulations.childNodes.length;\r\n                    articulationNode.addElement('StaffLine').innerText = articulation.staffLine.toString();\r\n                    articulationNode.addElement('Noteheads').innerText = [\r\n                        this.mapMusicSymbol(articulation.noteHeadDefault),\r\n                        this.mapMusicSymbol(articulation.noteHeadHalf),\r\n                        this.mapMusicSymbol(articulation.noteHeadWhole)\r\n                    ].join(' ');\r\n                    switch (articulation.techniqueSymbolPlacement) {\r\n                        case TextBaseline.Top:\r\n                            articulationNode.addElement('TechniquePlacement').innerText = \"below\";\r\n                            break;\r\n                        case TextBaseline.Middle:\r\n                            articulationNode.addElement('TechniquePlacement').innerText = \"inside\";\r\n                            break;\r\n                        case TextBaseline.Bottom:\r\n                            articulationNode.addElement('TechniquePlacement').innerText = \"above\";\r\n                            break;\r\n                    }\r\n                    articulationNode.addElement('TechniqueSymbol').innerText = this.mapMusicSymbol(articulation.techniqueSymbol);\r\n                    articulationNode.addElement('InputMidiNumbers').innerText = '';\r\n                    articulationNode.addElement('OutputMidiNumber').innerText = articulation.outputMidiNumber.toString();\r\n                }\r\n            }\r\n            else {\r\n                const programInfo = GpifWriter.MidiProgramInfoLookup.has(track.playbackInfo.program)\r\n                    ? GpifWriter.MidiProgramInfoLookup.get(track.playbackInfo.program)\r\n                    : GpifWriter.MidiProgramInfoLookup.get(0);\r\n                instrumentSet.addElement('Name').innerText = programInfo.instrumentSetName;\r\n                instrumentSet.addElement('Type').innerText = programInfo.instrumentSetType;\r\n                // Only the simple pitched element for normal instruments\r\n                const elements = instrumentSet.addElement('Elements');\r\n                const element = elements.addElement('Element');\r\n                element.addElement('Pitched').innerText = 'Pitched';\r\n                element.addElement('Type').innerText = 'pitched';\r\n                element.addElement('SoundbankName').innerText = '';\r\n                const articulations = element.addElement('Articulations');\r\n                const articulation = articulations.addElement('Articulation');\r\n                articulation.addElement('Name').innerText = '';\r\n                articulation.addElement('StaffLine').innerText = '0';\r\n                articulation.addElement('Noteheads').innerText = 'noteheadBlack noteheadHalf noteheadWhole';\r\n                articulation.addElement('TechniquePlacement').innerText = 'outside';\r\n                articulation.addElement('TechniqueSymbol').innerText = '';\r\n                articulation.addElement('InputMidiNumbers').innerText = '';\r\n                articulation.addElement('OutputRSESound').innerText = '';\r\n                articulation.addElement('OutputMidiNumber').innerText = '0';\r\n            }\r\n        }\r\n        mapMusicSymbol(symbol) {\r\n            if (symbol === MusicFontSymbol.None) {\r\n                return '';\r\n            }\r\n            let s = MusicFontSymbol[symbol];\r\n            return s.substring(0, 1).toLowerCase() + s.substring(1);\r\n        }\r\n        writeMasterBarsNode(parent, score) {\r\n            const masterBars = parent.addElement('MasterBars');\r\n            for (const masterBar of score.masterBars) {\r\n                this.writeMasterBarNode(masterBars, masterBar);\r\n            }\r\n        }\r\n        writeMasterBarNode(parent, masterBar) {\r\n            const masterBarNode = parent.addElement('MasterBar');\r\n            const key = masterBarNode.addElement('Key');\r\n            key.addElement('AccidentalCount').innerText = masterBar.keySignature.toString();\r\n            key.addElement('Mode').innerText = KeySignatureType[masterBar.keySignatureType];\r\n            key.addElement('Sharps').innerText = 'Sharps';\r\n            masterBarNode.addElement('Time').innerText = `${masterBar.timeSignatureNumerator}/${masterBar.timeSignatureDenominator}`;\r\n            let bars = [];\r\n            for (const tracks of masterBar.score.tracks) {\r\n                for (const staves of tracks.staves) {\r\n                    bars.push(staves.bars[masterBar.index].id.toString());\r\n                }\r\n            }\r\n            masterBarNode.addElement('Bars').innerText = bars.join(' ');\r\n            if (masterBar.isDoubleBar) {\r\n                masterBarNode.addElement('DoubleBar');\r\n            }\r\n            if (masterBar.isSectionStart) {\r\n                const section = masterBarNode.addElement('Section');\r\n                section.addElement('Letter').setCData(masterBar.section.marker);\r\n                section.addElement('Text').setCData(masterBar.section.text);\r\n            }\r\n            if (masterBar.isRepeatStart || masterBar.isRepeatEnd) {\r\n                const repeat = masterBarNode.addElement('Repeat');\r\n                repeat.attributes.set('start', masterBar.isRepeatStart ? \"true\" : \"false\");\r\n                repeat.attributes.set('end', masterBar.isRepeatEnd ? \"true\" : \"false\");\r\n                if (masterBar.isRepeatEnd) {\r\n                    repeat.attributes.set('count', masterBar.repeatCount.toString());\r\n                }\r\n            }\r\n            if (masterBar.alternateEndings > 0) {\r\n                let remainingBits = masterBar.alternateEndings;\r\n                const alternateEndings = [];\r\n                let bit = 0;\r\n                while (remainingBits > 0) {\r\n                    if (((remainingBits >> bit) & 0x01) == 0x01) {\r\n                        alternateEndings.push(bit + 1);\r\n                        // clear bit\r\n                        remainingBits &= ~(1 << bit);\r\n                    }\r\n                    bit++;\r\n                }\r\n                masterBarNode.addElement('AlternateEndings').innerText = alternateEndings.join(' ');\r\n            }\r\n            if (masterBar.tripletFeel !== TripletFeel.NoTripletFeel) {\r\n                masterBarNode.addElement('TripletFeel').innerText = TripletFeel[masterBar.tripletFeel];\r\n            }\r\n            this.writeFermatas(masterBarNode, masterBar);\r\n        }\r\n        writeFermatas(parent, masterBar) {\r\n            if (masterBar.fermata.size === 0) {\r\n                return;\r\n            }\r\n            if (masterBar.fermata.size > 0) {\r\n                const fermatas = parent.addElement('Fermatas');\r\n                for (const [offset, fermata] of masterBar.fermata) {\r\n                    this.writeFermata(fermatas, offset, fermata);\r\n                }\r\n            }\r\n        }\r\n        writeFermata(parent, offset, fermata) {\r\n            let numerator = -1;\r\n            let denominator = 1;\r\n            if (offset > 0) {\r\n                while (denominator < 10) {\r\n                    // Offset = (numerator / denominator) * QuarterTime\r\n                    // (Offset / QuarterTime) * denominator = numerator\r\n                    numerator = (offset / MidiUtils.QuarterTime) * denominator;\r\n                    // found a full digit match\r\n                    if (numerator === Math.floor(numerator)) {\r\n                        break;\r\n                    }\r\n                    numerator = -1;\r\n                    denominator++;\r\n                }\r\n            }\r\n            else {\r\n                numerator = 0;\r\n                denominator = 1;\r\n            }\r\n            if (numerator === -1) {\r\n                // No split found\r\n                return;\r\n            }\r\n            const fermataNode = parent.addElement('Fermata');\r\n            fermataNode.addElement('Type').innerText = FermataType[fermata.type];\r\n            fermataNode.addElement('Length').innerText = fermata.length.toString();\r\n            fermataNode.addElement('Offset').innerText = `${numerator}/${denominator}`;\r\n        }\r\n        writeBarNode(parent, bar) {\r\n            const barNode = parent.addElement('Bar');\r\n            barNode.attributes.set('id', bar.id.toString());\r\n            barNode.addElement('Voices').innerText = bar.voices.map(v => v.isEmpty ? '-1' : v.id.toString()).join(' ');\r\n            barNode.addElement('Clef').innerText = Clef[bar.clef];\r\n            if (bar.clefOttava !== Ottavia.Regular) {\r\n                barNode.addElement('Ottavia').innerText = Ottavia[bar.clefOttava].substr(1);\r\n            }\r\n            if (bar.simileMark !== SimileMark.None) {\r\n                barNode.addElement('SimileMark').innerText = SimileMark[bar.simileMark];\r\n            }\r\n        }\r\n        writeVoiceNode(parent, voice) {\r\n            if (voice.isEmpty) {\r\n                return;\r\n            }\r\n            const voiceNode = parent.addElement('Voice');\r\n            voiceNode.attributes.set('id', voice.id.toString());\r\n            voiceNode.addElement('Beats').innerText = voice.beats.map(v => v.id).join(' ');\r\n        }\r\n    }\r\n    GpifWriter.MidiProgramInfoLookup = new Map([\r\n        [0, new GpifMidiProgramInfo(GpifIconIds.Piano, \"Acoustic Piano\")],\r\n        [1, new GpifMidiProgramInfo(GpifIconIds.Piano, \"Acoustic Piano\")],\r\n        [2, new GpifMidiProgramInfo(GpifIconIds.Piano, \"Electric Piano\")],\r\n        [3, new GpifMidiProgramInfo(GpifIconIds.Piano, \"Acoustic Piano\")],\r\n        [4, new GpifMidiProgramInfo(GpifIconIds.Piano, \"Electric Piano\")],\r\n        [5, new GpifMidiProgramInfo(GpifIconIds.Piano, \"Electric Piano\")],\r\n        [6, new GpifMidiProgramInfo(GpifIconIds.Piano, \"Harpsichord\")],\r\n        [7, new GpifMidiProgramInfo(GpifIconIds.Piano, \"Harpsichord\")],\r\n        [8, new GpifMidiProgramInfo(GpifIconIds.PitchedIdiophone, \"Celesta\")],\r\n        [9, new GpifMidiProgramInfo(GpifIconIds.PitchedIdiophone, \"Vibraphone\")],\r\n        [10, new GpifMidiProgramInfo(GpifIconIds.PitchedIdiophone, \"Vibraphone\")],\r\n        [11, new GpifMidiProgramInfo(GpifIconIds.PitchedIdiophone, \"Vibraphone\")],\r\n        [12, new GpifMidiProgramInfo(GpifIconIds.PitchedIdiophone, \"Xylophone\")],\r\n        [13, new GpifMidiProgramInfo(GpifIconIds.PitchedIdiophone, \"Xylophone\")],\r\n        [14, new GpifMidiProgramInfo(GpifIconIds.PitchedIdiophone, \"Vibraphone\")],\r\n        [15, new GpifMidiProgramInfo(GpifIconIds.Banjo, \"Banjo\")],\r\n        [16, new GpifMidiProgramInfo(GpifIconIds.Piano, \"Electric Organ\")],\r\n        [17, new GpifMidiProgramInfo(GpifIconIds.Piano, \"Electric Organ\")],\r\n        [18, new GpifMidiProgramInfo(GpifIconIds.Piano, \"Electric Organ\")],\r\n        [19, new GpifMidiProgramInfo(GpifIconIds.Piano, \"Electric Organ\")],\r\n        [20, new GpifMidiProgramInfo(GpifIconIds.Piano, \"Electric Organ\")],\r\n        [21, new GpifMidiProgramInfo(GpifIconIds.Piano, \"Electric Organ\")],\r\n        [22, new GpifMidiProgramInfo(GpifIconIds.Woodwind, \"Recorder\")],\r\n        [23, new GpifMidiProgramInfo(GpifIconIds.Piano, \"Electric Organ\")],\r\n        [24, new GpifMidiProgramInfo(GpifIconIds.ClassicalGuitar, \"Nylon Guitar\")],\r\n        [25, new GpifMidiProgramInfo(GpifIconIds.SteelGuitar, \"Steel Guitar\")],\r\n        [26, new GpifMidiProgramInfo(GpifIconIds.SteelGuitar, \"Electric Guitar\")],\r\n        [27, new GpifMidiProgramInfo(GpifIconIds.ElectricGuitar, \"Electric Guitar\")],\r\n        [28, new GpifMidiProgramInfo(GpifIconIds.ElectricGuitar, \"Electric Guitar\")],\r\n        [29, new GpifMidiProgramInfo(GpifIconIds.ElectricGuitar, \"Electric Guitar\")],\r\n        [30, new GpifMidiProgramInfo(GpifIconIds.SteelGuitar, \"Electric Guitar\")],\r\n        [31, new GpifMidiProgramInfo(GpifIconIds.SteelGuitar, \"Electric Guitar\")],\r\n        [32, new GpifMidiProgramInfo(GpifIconIds.Bass, \"Acoustic Bass\")],\r\n        [33, new GpifMidiProgramInfo(GpifIconIds.Bass, \"Electric Bass\")],\r\n        [34, new GpifMidiProgramInfo(GpifIconIds.Bass, \"Electric Bass\")],\r\n        [35, new GpifMidiProgramInfo(GpifIconIds.Bass, \"Acoustic Bass\")],\r\n        [36, new GpifMidiProgramInfo(GpifIconIds.Bass, \"Electric Bass\")],\r\n        [37, new GpifMidiProgramInfo(GpifIconIds.Bass, \"Electric Bass\")],\r\n        [38, new GpifMidiProgramInfo(GpifIconIds.Synth, \"Synth Bass\")],\r\n        [39, new GpifMidiProgramInfo(GpifIconIds.Synth, \"Synth Bass\")],\r\n        [40, new GpifMidiProgramInfo(GpifIconIds.Strings, \"Violin\")],\r\n        [41, new GpifMidiProgramInfo(GpifIconIds.Strings, \"Viola\")],\r\n        [42, new GpifMidiProgramInfo(GpifIconIds.Strings, \"Cello\")],\r\n        [43, new GpifMidiProgramInfo(GpifIconIds.Strings, \"Contrabass\")],\r\n        [44, new GpifMidiProgramInfo(GpifIconIds.Strings, \"Violin\")],\r\n        [45, new GpifMidiProgramInfo(GpifIconIds.Strings, \"Violin\")],\r\n        [46, new GpifMidiProgramInfo(GpifIconIds.Piano, \"Harp\")],\r\n        [47, new GpifMidiProgramInfo(GpifIconIds.Membraphone, \"Timpani\")],\r\n        [48, new GpifMidiProgramInfo(GpifIconIds.Strings, \"Violin\")],\r\n        [49, new GpifMidiProgramInfo(GpifIconIds.Strings, \"Violin\")],\r\n        [50, new GpifMidiProgramInfo(GpifIconIds.Strings, \"Violin\")],\r\n        [51, new GpifMidiProgramInfo(GpifIconIds.Strings, \"Violin\")],\r\n        [52, new GpifMidiProgramInfo(GpifIconIds.Vocal, \"Voice\")],\r\n        [53, new GpifMidiProgramInfo(GpifIconIds.Vocal, \"Voice\")],\r\n        [54, new GpifMidiProgramInfo(GpifIconIds.Vocal, \"Voice\")],\r\n        [55, new GpifMidiProgramInfo(GpifIconIds.Synth, \"Pad Synthesizer\")],\r\n        [56, new GpifMidiProgramInfo(GpifIconIds.Brass, \"Trumpet\")],\r\n        [57, new GpifMidiProgramInfo(GpifIconIds.Brass, \"Trombone\")],\r\n        [58, new GpifMidiProgramInfo(GpifIconIds.Brass, \"Tuba\")],\r\n        [59, new GpifMidiProgramInfo(GpifIconIds.Brass, \"Trumpet\")],\r\n        [60, new GpifMidiProgramInfo(GpifIconIds.Brass, \"French Horn\")],\r\n        [61, new GpifMidiProgramInfo(GpifIconIds.Brass, \"Trumpet\")],\r\n        [62, new GpifMidiProgramInfo(GpifIconIds.Brass, \"Trumpet\")],\r\n        [63, new GpifMidiProgramInfo(GpifIconIds.Brass, \"Trumpet\")],\r\n        [64, new GpifMidiProgramInfo(GpifIconIds.Reed, \"Saxophone\")],\r\n        [65, new GpifMidiProgramInfo(GpifIconIds.Reed, \"Saxophone\")],\r\n        [66, new GpifMidiProgramInfo(GpifIconIds.Reed, \"Saxophone\")],\r\n        [67, new GpifMidiProgramInfo(GpifIconIds.Reed, \"Saxophone\")],\r\n        [68, new GpifMidiProgramInfo(GpifIconIds.Reed, \"Oboe\")],\r\n        [69, new GpifMidiProgramInfo(GpifIconIds.Reed, \"English Horn\")],\r\n        [70, new GpifMidiProgramInfo(GpifIconIds.Reed, \"Bassoon\")],\r\n        [71, new GpifMidiProgramInfo(GpifIconIds.Reed, \"Clarinet\")],\r\n        [72, new GpifMidiProgramInfo(GpifIconIds.Reed, \"Piccolo\")],\r\n        [73, new GpifMidiProgramInfo(GpifIconIds.Woodwind, \"Flute\")],\r\n        [74, new GpifMidiProgramInfo(GpifIconIds.Woodwind, \"Recorder\")],\r\n        [75, new GpifMidiProgramInfo(GpifIconIds.Woodwind, \"Flute\")],\r\n        [76, new GpifMidiProgramInfo(GpifIconIds.Woodwind, \"Recorder\")],\r\n        [77, new GpifMidiProgramInfo(GpifIconIds.Woodwind, \"Flute\")],\r\n        [78, new GpifMidiProgramInfo(GpifIconIds.Woodwind, \"Recorder\")],\r\n        [79, new GpifMidiProgramInfo(GpifIconIds.Woodwind, \"Flute\")],\r\n        [80, new GpifMidiProgramInfo(GpifIconIds.Synth, \"Lead Synthesizer\")],\r\n        [81, new GpifMidiProgramInfo(GpifIconIds.Synth, \"Lead Synthesizer\")],\r\n        [82, new GpifMidiProgramInfo(GpifIconIds.Synth, \"Lead Synthesizer\")],\r\n        [83, new GpifMidiProgramInfo(GpifIconIds.Synth, \"Lead Synthesizer\")],\r\n        [84, new GpifMidiProgramInfo(GpifIconIds.Synth, \"Lead Synthesizer\")],\r\n        [85, new GpifMidiProgramInfo(GpifIconIds.Synth, \"Lead Synthesizer\")],\r\n        [86, new GpifMidiProgramInfo(GpifIconIds.Synth, \"Lead Synthesizer\")],\r\n        [87, new GpifMidiProgramInfo(GpifIconIds.Synth, \"Lead Synthesizer\")],\r\n        [88, new GpifMidiProgramInfo(GpifIconIds.Synth, \"Pad Synthesizer\")],\r\n        [89, new GpifMidiProgramInfo(GpifIconIds.Synth, \"Pad Synthesizer\")],\r\n        [90, new GpifMidiProgramInfo(GpifIconIds.Synth, \"Pad Synthesizer\")],\r\n        [91, new GpifMidiProgramInfo(GpifIconIds.Synth, \"Pad Synthesizer\")],\r\n        [92, new GpifMidiProgramInfo(GpifIconIds.Synth, \"Pad Synthesizer\")],\r\n        [93, new GpifMidiProgramInfo(GpifIconIds.Synth, \"Pad Synthesizer\")],\r\n        [94, new GpifMidiProgramInfo(GpifIconIds.Synth, \"Pad Synthesizer\")],\r\n        [95, new GpifMidiProgramInfo(GpifIconIds.Synth, \"Pad Synthesizer\")],\r\n        [96, new GpifMidiProgramInfo(GpifIconIds.Fx, \"Pad Synthesizer\")],\r\n        [97, new GpifMidiProgramInfo(GpifIconIds.Fx, \"Pad Synthesizer\")],\r\n        [98, new GpifMidiProgramInfo(GpifIconIds.Fx, \"Pad Synthesizer\")],\r\n        [99, new GpifMidiProgramInfo(GpifIconIds.Fx, \"Pad Synthesizer\")],\r\n        [100, new GpifMidiProgramInfo(GpifIconIds.Fx, \"Lead Synthesizer\")],\r\n        [101, new GpifMidiProgramInfo(GpifIconIds.Fx, \"Lead Synthesizer\")],\r\n        [102, new GpifMidiProgramInfo(GpifIconIds.Fx, \"Lead Synthesizer\")],\r\n        [103, new GpifMidiProgramInfo(GpifIconIds.Fx, \"Trumpet\")],\r\n        [104, new GpifMidiProgramInfo(GpifIconIds.ElectricGuitar, \"Banjo\")],\r\n        [105, new GpifMidiProgramInfo(GpifIconIds.Banjo, \"Banjo\")],\r\n        [106, new GpifMidiProgramInfo(GpifIconIds.Ukulele, \"Ukulele\")],\r\n        [107, new GpifMidiProgramInfo(GpifIconIds.Banjo, \"Banjo\")],\r\n        [108, new GpifMidiProgramInfo(GpifIconIds.PitchedIdiophone, \"Xylophone\")],\r\n        [109, new GpifMidiProgramInfo(GpifIconIds.Reed, \"Bassoon\")],\r\n        [110, new GpifMidiProgramInfo(GpifIconIds.Strings, \"Violin\")],\r\n        [111, new GpifMidiProgramInfo(GpifIconIds.Woodwind, \"Flute\")],\r\n        [112, new GpifMidiProgramInfo(GpifIconIds.PitchedIdiophone, \"Xylophone\")],\r\n        [113, new GpifMidiProgramInfo(GpifIconIds.Idiophone, \"Celesta\")],\r\n        [114, new GpifMidiProgramInfo(GpifIconIds.PitchedIdiophone, \"Vibraphone\")],\r\n        [115, new GpifMidiProgramInfo(GpifIconIds.Idiophone, \"Xylophone\")],\r\n        [116, new GpifMidiProgramInfo(GpifIconIds.Membraphone, \"Xylophone\")],\r\n        [117, new GpifMidiProgramInfo(GpifIconIds.Membraphone, \"Xylophone\")],\r\n        [118, new GpifMidiProgramInfo(GpifIconIds.Membraphone, \"Xylophone\")],\r\n        [119, new GpifMidiProgramInfo(GpifIconIds.Idiophone, \"Celesta\")],\r\n        [120, new GpifMidiProgramInfo(GpifIconIds.Fx, \"Steel Guitar\")],\r\n        [121, new GpifMidiProgramInfo(GpifIconIds.Fx, \"Recorder\")],\r\n        [122, new GpifMidiProgramInfo(GpifIconIds.Fx, \"Recorder\")],\r\n        [123, new GpifMidiProgramInfo(GpifIconIds.Fx, \"Recorder\")],\r\n        [124, new GpifMidiProgramInfo(GpifIconIds.Fx, \"Recorder\")],\r\n        [125, new GpifMidiProgramInfo(GpifIconIds.Fx, \"Recorder\")],\r\n        [126, new GpifMidiProgramInfo(GpifIconIds.Fx, \"Recorder\")],\r\n        [127, new GpifMidiProgramInfo(GpifIconIds.Fx, \"Timpani\")]\r\n    ]);\r\n    GpifWriter.DrumKitProgramInfo = new GpifMidiProgramInfo(GpifIconIds.PercussionKit, \"Drums\", \"drumKit\");\n\n    /**\r\n     * CRC-32 with reversed data and unreversed output\r\n     */\r\n    class Crc32 {\r\n        /**\r\n         * Initialise a default instance of Crc32.\r\n         */\r\n        constructor() {\r\n            /**\r\n             * The CRC data checksum so far.\r\n             */\r\n            this._checkValue = Crc32.CrcInit;\r\n            this.reset();\r\n        }\r\n        static buildCrc32Lookup() {\r\n            const poly = 0xedb88320;\r\n            const lookup = new Uint32Array(256);\r\n            for (let i = 0; i < lookup.length; i++) {\r\n                let crc = i;\r\n                for (let bit = 0; bit < 8; bit++) {\r\n                    crc = (crc & 1) === 1 ? (crc >>> 1) ^ poly : crc >>> 1;\r\n                }\r\n                lookup[i] = crc;\r\n            }\r\n            return lookup;\r\n        }\r\n        /**\r\n         * Returns the CRC data checksum computed so far.\r\n         */\r\n        get value() {\r\n            return ~this._checkValue;\r\n        }\r\n        /**\r\n         * Update CRC data checksum based on a portion of a block of data\r\n         * @param data The array containing the data to add\r\n         * @param offset Range start for data (inclusive)\r\n         * @param count The number of bytes to checksum starting from offset\r\n         */\r\n        update(data, offset, count) {\r\n            for (let i = 0; i < count; i++) {\r\n                this._checkValue = Crc32.Crc32Lookup[(this._checkValue ^ data[offset + i]) & 0xff] ^ (this._checkValue >>> 8);\r\n            }\r\n        }\r\n        /**\r\n         * Resets the CRC data checksum as if no update was ever called.\r\n         */\r\n        reset() {\r\n            this._checkValue = Crc32.CrcInit;\r\n        }\r\n    }\r\n    Crc32.Crc32Lookup = Crc32.buildCrc32Lookup();\r\n    Crc32.CrcInit = 0xFFFFFFFF;\n\n    // This Deflate algorithm is based on the Deflater class of the SharpZipLib (MIT)\r\n    // https://github.com/icsharpcode/SharpZipLib\r\n    /*\r\n     * Copyright © 2000-2018 SharpZipLib Contributors\r\n     * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n     * software and associated documentation files (the \"Software\"), to deal in the Software\r\n     * without restriction, including without limitation the rights to use, copy, modify, merge,\r\n     * publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons\r\n     * to whom the Software is furnished to do so, subject to the following conditions:\r\n     *\r\n     * The above copyright notice and this permission notice shall be included in all copies or\r\n     * substantial portions of the Software.\r\n     *\r\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n     * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR\r\n     * PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE\r\n     * FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n     * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n     * DEALINGS IN THE SOFTWARE.\r\n     */\r\n    /**\r\n     * This class contains constants used for deflation.\r\n     */\r\n    class DeflaterConstants {\r\n    }\r\n    DeflaterConstants.MAX_WBITS = 15;\r\n    DeflaterConstants.WSIZE = 1 << DeflaterConstants.MAX_WBITS;\r\n    DeflaterConstants.WMASK = DeflaterConstants.WSIZE - 1;\r\n    DeflaterConstants.MIN_MATCH = 3;\r\n    DeflaterConstants.MAX_MATCH = 258;\r\n    DeflaterConstants.DEFAULT_MEM_LEVEL = 8;\r\n    DeflaterConstants.PENDING_BUF_SIZE = 1 << (DeflaterConstants.DEFAULT_MEM_LEVEL + 8);\r\n    DeflaterConstants.HASH_BITS = DeflaterConstants.DEFAULT_MEM_LEVEL + 7;\r\n    DeflaterConstants.HASH_SIZE = 1 << DeflaterConstants.HASH_BITS;\r\n    DeflaterConstants.HASH_SHIFT = (DeflaterConstants.HASH_BITS + DeflaterConstants.MIN_MATCH - 1) / DeflaterConstants.MIN_MATCH;\r\n    DeflaterConstants.HASH_MASK = DeflaterConstants.HASH_SIZE - 1;\r\n    DeflaterConstants.MIN_LOOKAHEAD = DeflaterConstants.MAX_MATCH + DeflaterConstants.MIN_MATCH + 1;\r\n    DeflaterConstants.MAX_DIST = DeflaterConstants.WSIZE - DeflaterConstants.MIN_LOOKAHEAD;\n\n    // This Deflate algorithm is based on the Deflater class of the SharpZipLib (MIT)\r\n    class Tree {\r\n        constructor(dh, elems, minCodes, maxLength) {\r\n            this.length = null;\r\n            this.numCodes = 0;\r\n            this.codes = null;\r\n            this.huffman = dh;\r\n            this.minNumCodes = minCodes;\r\n            this.maxLength = maxLength;\r\n            this.freqs = new Int16Array(elems);\r\n            this.bitLengthCounts = new Int32Array(maxLength);\r\n        }\r\n        /**\r\n         * Resets the internal state of the tree\r\n         */\r\n        reset() {\r\n            for (let i = 0; i < this.freqs.length; i++) {\r\n                this.freqs[i] = 0;\r\n            }\r\n            this.codes = null;\r\n            this.length = null;\r\n        }\r\n        buildTree() {\r\n            let numSymbols = this.freqs.length;\r\n            /* heap is a priority queue, sorted by frequency, least frequent\r\n            * nodes first.  The heap is a binary tree, with the property, that\r\n            * the parent node is smaller than both child nodes.  This assures\r\n            * that the smallest node is the first parent.\r\n            *\r\n            * The binary tree is encoded in an array:  0 is root node and\r\n            * the nodes 2*n+1, 2*n+2 are the child nodes of node n.\r\n            */\r\n            let heap = new Int32Array(numSymbols);\r\n            let heapLen = 0;\r\n            let maxCode = 0;\r\n            for (let n = 0; n < numSymbols; n++) {\r\n                let freq = this.freqs[n];\r\n                if (freq != 0) {\r\n                    // Insert n into heap\r\n                    let pos = heapLen++;\r\n                    let ppos;\r\n                    while (pos > 0 && this.freqs[heap[ppos = Math.floor((pos - 1) / 2)]] > freq) {\r\n                        heap[pos] = heap[ppos];\r\n                        pos = ppos;\r\n                    }\r\n                    heap[pos] = n;\r\n                    maxCode = n;\r\n                }\r\n            }\r\n            /* We could encode a single literal with 0 bits but then we\r\n            * don't see the literals.  Therefore we force at least two\r\n            * literals to avoid this case.  We don't care about order in\r\n            * this case, both literals get a 1 bit code.\r\n            */\r\n            while (heapLen < 2) {\r\n                let node = maxCode < 2 ? ++maxCode : 0;\r\n                heap[heapLen++] = node;\r\n            }\r\n            this.numCodes = Math.max(maxCode + 1, this.minNumCodes);\r\n            let numLeafs = heapLen;\r\n            let childs = new Int32Array(4 * heapLen - 2);\r\n            let values = new Int32Array(2 * heapLen - 1);\r\n            let numNodes = numLeafs;\r\n            for (let i = 0; i < heapLen; i++) {\r\n                let node = heap[i];\r\n                childs[2 * i] = node;\r\n                childs[2 * i + 1] = -1;\r\n                values[i] = this.freqs[node] << 8;\r\n                heap[i] = i;\r\n            }\r\n            /* Construct the Huffman tree by repeatedly combining the least two\r\n            * frequent nodes.\r\n            */\r\n            do {\r\n                let first = heap[0];\r\n                let last = heap[--heapLen];\r\n                // Propagate the hole to the leafs of the heap\r\n                let ppos = 0;\r\n                let path = 1;\r\n                while (path < heapLen) {\r\n                    if (path + 1 < heapLen && values[heap[path]] > values[heap[path + 1]]) {\r\n                        path++;\r\n                    }\r\n                    heap[ppos] = heap[path];\r\n                    ppos = path;\r\n                    path = path * 2 + 1;\r\n                }\r\n                /* Now propagate the last element down along path.  Normally\r\n                * it shouldn't go too deep.\r\n                */\r\n                let lastVal = values[last];\r\n                while ((path = ppos) > 0 && values[heap[ppos = Math.floor((path - 1) / 2)]] > lastVal) {\r\n                    heap[path] = heap[ppos];\r\n                }\r\n                heap[path] = last;\r\n                let second = heap[0];\r\n                // Create a new node father of first and second\r\n                last = numNodes++;\r\n                childs[2 * last] = first;\r\n                childs[2 * last + 1] = second;\r\n                let mindepth = Math.min(values[first] & 0xff, values[second] & 0xff);\r\n                values[last] = lastVal = values[first] + values[second] - mindepth + 1;\r\n                // Again, propagate the hole to the leafs\r\n                ppos = 0;\r\n                path = 1;\r\n                while (path < heapLen) {\r\n                    if (path + 1 < heapLen && values[heap[path]] > values[heap[path + 1]]) {\r\n                        path++;\r\n                    }\r\n                    heap[ppos] = heap[path];\r\n                    ppos = path;\r\n                    path = ppos * 2 + 1;\r\n                }\r\n                // Now propagate the new element down along path\r\n                while ((path = ppos) > 0 && values[heap[ppos = Math.floor((path - 1) / 2)]] > lastVal) {\r\n                    heap[path] = heap[ppos];\r\n                }\r\n                heap[path] = last;\r\n            } while (heapLen > 1);\r\n            this.buildLength(childs);\r\n        }\r\n        buildLength(childs) {\r\n            this.length = new Uint8Array(this.freqs.length);\r\n            let numNodes = Math.floor(childs.length / 2);\r\n            let numLeafs = Math.floor((numNodes + 1) / 2);\r\n            let overflow = 0;\r\n            for (let i = 0; i < this.maxLength; i++) {\r\n                this.bitLengthCounts[i] = 0;\r\n            }\r\n            // First calculate optimal bit lengths\r\n            let lengths = new Int32Array(numNodes);\r\n            lengths[numNodes - 1] = 0;\r\n            for (let i = numNodes - 1; i >= 0; i--) {\r\n                if (childs[2 * i + 1] != -1) {\r\n                    let bitLength = lengths[i] + 1;\r\n                    if (bitLength > this.maxLength) {\r\n                        bitLength = this.maxLength;\r\n                        overflow++;\r\n                    }\r\n                    lengths[childs[2 * i]] = lengths[childs[2 * i + 1]] = bitLength;\r\n                }\r\n                else {\r\n                    // A leaf node\r\n                    let bitLength = lengths[i];\r\n                    this.bitLengthCounts[bitLength - 1]++;\r\n                    this.length[childs[2 * i]] = lengths[i];\r\n                }\r\n            }\r\n            if (overflow == 0) {\r\n                return;\r\n            }\r\n            let incrBitLen = this.maxLength - 1;\r\n            do {\r\n                // Find the first bit length which could increase:\r\n                while (this.bitLengthCounts[--incrBitLen] == 0) {\r\n                }\r\n                // Move this node one down and remove a corresponding\r\n                // number of overflow nodes.\r\n                do {\r\n                    this.bitLengthCounts[incrBitLen]--;\r\n                    this.bitLengthCounts[++incrBitLen]++;\r\n                    overflow -= 1 << (this.maxLength - 1 - incrBitLen);\r\n                } while (overflow > 0 && incrBitLen < this.maxLength - 1);\r\n            } while (overflow > 0);\r\n            /* We may have overshot above.  Move some nodes from maxLength to\r\n            * maxLength-1 in that case.\r\n            */\r\n            this.bitLengthCounts[this.maxLength - 1] += overflow;\r\n            this.bitLengthCounts[this.maxLength - 2] -= overflow;\r\n            /* Now recompute all bit lengths, scanning in increasing\r\n            * frequency.  It is simpler to reconstruct all lengths instead of\r\n            * fixing only the wrong ones. This idea is taken from 'ar'\r\n            * written by Haruhiko Okumura.\r\n            *\r\n            * The nodes were inserted with decreasing frequency into the childs\r\n            * array.\r\n            */\r\n            let nodePtr = 2 * numLeafs;\r\n            for (let bits = this.maxLength; bits != 0; bits--) {\r\n                let n = this.bitLengthCounts[bits - 1];\r\n                while (n > 0) {\r\n                    let childPtr = 2 * childs[nodePtr++];\r\n                    if (childs[childPtr + 1] == -1) {\r\n                        // We found another leaf\r\n                        this.length[childs[childPtr]] = bits;\r\n                        n--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Get encoded length\r\n         * @returns Encoded length, the sum of frequencies * lengths\r\n         */\r\n        getEncodedLength() {\r\n            let len = 0;\r\n            for (let i = 0; i < this.freqs.length; i++) {\r\n                len += this.freqs[i] * this.length[i];\r\n            }\r\n            return len;\r\n        }\r\n        /**\r\n         * Scan a literal or distance tree to determine the frequencies of the codes\r\n         * in the bit length tree.\r\n         * @param blTree\r\n         */\r\n        calcBLFreq(blTree) {\r\n            let max_count; /* max repeat count */\r\n            let min_count; /* min repeat count */\r\n            let count; /* repeat count of the current code */\r\n            let curlen = -1; /* length of current code */\r\n            let i = 0;\r\n            while (i < this.numCodes) {\r\n                count = 1;\r\n                let nextlen = this.length[i];\r\n                if (nextlen == 0) {\r\n                    max_count = 138;\r\n                    min_count = 3;\r\n                }\r\n                else {\r\n                    max_count = 6;\r\n                    min_count = 3;\r\n                    if (curlen != nextlen) {\r\n                        blTree.freqs[nextlen]++;\r\n                        count = 0;\r\n                    }\r\n                }\r\n                curlen = nextlen;\r\n                i++;\r\n                while (i < this.numCodes && curlen == this.length[i]) {\r\n                    i++;\r\n                    if (++count >= max_count) {\r\n                        break;\r\n                    }\r\n                }\r\n                if (count < min_count) {\r\n                    blTree.freqs[curlen] += count;\r\n                }\r\n                else if (curlen != 0) {\r\n                    blTree.freqs[Tree.Repeat3To6]++;\r\n                }\r\n                else if (count <= 10) {\r\n                    blTree.freqs[Tree.Repeat3To10]++;\r\n                }\r\n                else {\r\n                    blTree.freqs[Tree.Repeat11To138]++;\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Set static codes and length\r\n         * @param staticCodes new codes\r\n         * @param staticLengths length for new codes\r\n         */\r\n        setStaticCodes(staticCodes, staticLengths) {\r\n            this.codes = staticCodes;\r\n            this.length = staticLengths;\r\n        }\r\n        /**\r\n         * Build dynamic codes and lengths\r\n         */\r\n        buildCodes() {\r\n            let nextCode = new Int32Array(this.maxLength);\r\n            let code = 0;\r\n            this.codes = new Int16Array(this.freqs.length);\r\n            for (let bits = 0; bits < this.maxLength; bits++) {\r\n                nextCode[bits] = code;\r\n                code += this.bitLengthCounts[bits] << (15 - bits);\r\n            }\r\n            for (let i = 0; i < this.numCodes; i++) {\r\n                let bits = this.length[i];\r\n                if (bits > 0) {\r\n                    this.codes[i] = DeflaterHuffman.bitReverse(nextCode[bits - 1]);\r\n                    nextCode[bits - 1] += 1 << (16 - bits);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Write tree values\r\n         * @param blTree Tree to write\r\n         */\r\n        writeTree(blTree) {\r\n            let maxCount; // max repeat count\r\n            let minCount; // min repeat count\r\n            let count; // repeat count of the current code\r\n            let curlen = -1; // length of current code\r\n            let i = 0;\r\n            while (i < this.numCodes) {\r\n                count = 1;\r\n                let nextlen = this.length[i];\r\n                if (nextlen == 0) {\r\n                    maxCount = 138;\r\n                    minCount = 3;\r\n                }\r\n                else {\r\n                    maxCount = 6;\r\n                    minCount = 3;\r\n                    if (curlen != nextlen) {\r\n                        blTree.writeSymbol(nextlen);\r\n                        count = 0;\r\n                    }\r\n                }\r\n                curlen = nextlen;\r\n                i++;\r\n                while (i < this.numCodes && curlen == this.length[i]) {\r\n                    i++;\r\n                    if (++count >= maxCount) {\r\n                        break;\r\n                    }\r\n                }\r\n                if (count < minCount) {\r\n                    while (count-- > 0) {\r\n                        blTree.writeSymbol(curlen);\r\n                    }\r\n                }\r\n                else if (curlen != 0) {\r\n                    blTree.writeSymbol(Tree.Repeat3To6);\r\n                    this.huffman.pending.writeBits(count - 3, 2);\r\n                }\r\n                else if (count <= 10) {\r\n                    blTree.writeSymbol(Tree.Repeat3To10);\r\n                    this.huffman.pending.writeBits(count - 3, 3);\r\n                }\r\n                else {\r\n                    blTree.writeSymbol(Tree.Repeat11To138);\r\n                    this.huffman.pending.writeBits(count - 11, 7);\r\n                }\r\n            }\r\n        }\r\n        writeSymbol(code) {\r\n            this.huffman.pending.writeBits(this.codes[code] & 0xffff, this.length[code]);\r\n        }\r\n    }\r\n    // repeat previous bit length 3-6 times (2 bits of repeat count)\r\n    Tree.Repeat3To6 = 16;\r\n    // repeat a zero length 3-10 times  (3 bits of repeat count)\r\n    Tree.Repeat3To10 = 17;\r\n    // repeat a zero length 11-138 times  (7 bits of repeat count)\r\n    Tree.Repeat11To138 = 18;\r\n    class DeflaterHuffman {\r\n        constructor(pending) {\r\n            this.last_lit = 0;\r\n            this.extra_bits = 0;\r\n            this.pending = pending;\r\n            this.literalTree = new Tree(this, DeflaterHuffman.LITERAL_NUM, 257, 15);\r\n            this.distTree = new Tree(this, DeflaterHuffman.DIST_NUM, 1, 15);\r\n            this.blTree = new Tree(this, DeflaterHuffman.BITLEN_NUM, 4, 7);\r\n            this.d_buf = new Int16Array(DeflaterHuffman.BUFSIZE);\r\n            this.l_buf = new Uint8Array(DeflaterHuffman.BUFSIZE);\r\n        }\r\n        static staticInit() {\r\n            // See RFC 1951 3.2.6\r\n            // Literal codes\r\n            DeflaterHuffman.staticLCodes = new Int16Array(DeflaterHuffman.LITERAL_NUM);\r\n            DeflaterHuffman.staticLLength = new Uint8Array(DeflaterHuffman.LITERAL_NUM);\r\n            let i = 0;\r\n            while (i < 144) {\r\n                DeflaterHuffman.staticLCodes[i] = DeflaterHuffman.bitReverse((0x030 + i) << 8);\r\n                DeflaterHuffman.staticLLength[i++] = 8;\r\n            }\r\n            while (i < 256) {\r\n                DeflaterHuffman.staticLCodes[i] = DeflaterHuffman.bitReverse((0x190 - 144 + i) << 7);\r\n                DeflaterHuffman.staticLLength[i++] = 9;\r\n            }\r\n            while (i < 280) {\r\n                DeflaterHuffman.staticLCodes[i] = DeflaterHuffman.bitReverse((0x000 - 256 + i) << 9);\r\n                DeflaterHuffman.staticLLength[i++] = 7;\r\n            }\r\n            while (i < DeflaterHuffman.LITERAL_NUM) {\r\n                DeflaterHuffman.staticLCodes[i] = DeflaterHuffman.bitReverse((0x0c0 - 280 + i) << 8);\r\n                DeflaterHuffman.staticLLength[i++] = 8;\r\n            }\r\n            // Distance codes\r\n            DeflaterHuffman.staticDCodes = new Int16Array(DeflaterHuffman.DIST_NUM);\r\n            DeflaterHuffman.staticDLength = new Uint8Array(DeflaterHuffman.DIST_NUM);\r\n            for (i = 0; i < DeflaterHuffman.DIST_NUM; i++) {\r\n                DeflaterHuffman.staticDCodes[i] = DeflaterHuffman.bitReverse(i << 11);\r\n                DeflaterHuffman.staticDLength[i] = 5;\r\n            }\r\n        }\r\n        /**\r\n         * Reverse the bits of a 16 bit value.\r\n         * @param toReverse Value to reverse bits\r\n         * @returns Value with bits reversed\r\n         */\r\n        static bitReverse(toReverse) {\r\n            return (DeflaterHuffman.bit4Reverse[toReverse & 0xF] << 12 |\r\n                DeflaterHuffman.bit4Reverse[(toReverse >> 4) & 0xF] << 8 |\r\n                DeflaterHuffman.bit4Reverse[(toReverse >> 8) & 0xF] << 4 |\r\n                DeflaterHuffman.bit4Reverse[toReverse >> 12]);\r\n        }\r\n        isFull() {\r\n            return this.last_lit >= DeflaterHuffman.BUFSIZE;\r\n        }\r\n        reset() {\r\n            this.last_lit = 0;\r\n            this.extra_bits = 0;\r\n            this.literalTree.reset();\r\n            this.distTree.reset();\r\n            this.blTree.reset();\r\n        }\r\n        flushStoredBlock(stored, storedOffset, storedLength, lastBlock) {\r\n            this.pending.writeBits((DeflaterHuffman.STORED_BLOCK << 1) + (lastBlock ? 1 : 0), 3);\r\n            this.pending.alignToByte();\r\n            this.pending.writeShort(storedLength);\r\n            this.pending.writeShort(~storedLength);\r\n            this.pending.writeBlock(stored, storedOffset, storedLength);\r\n            this.reset();\r\n        }\r\n        flushBlock(stored, storedOffset, storedLength, lastBlock) {\r\n            this.literalTree.freqs[DeflaterHuffman.EOF_SYMBOL]++;\r\n            // Build trees\r\n            this.literalTree.buildTree();\r\n            this.distTree.buildTree();\r\n            // Calculate bitlen frequency\r\n            this.literalTree.calcBLFreq(this.blTree);\r\n            this.distTree.calcBLFreq(this.blTree);\r\n            // Build bitlen tree\r\n            this.blTree.buildTree();\r\n            let blTreeCodes = 4;\r\n            for (let i = 18; i > blTreeCodes; i--) {\r\n                if (this.blTree.length[DeflaterHuffman.BL_ORDER[i]] > 0) {\r\n                    blTreeCodes = i + 1;\r\n                }\r\n            }\r\n            let opt_len = 14 + blTreeCodes * 3 + this.blTree.getEncodedLength() +\r\n                this.literalTree.getEncodedLength() + this.distTree.getEncodedLength() +\r\n                this.extra_bits;\r\n            let static_len = this.extra_bits;\r\n            for (let i = 0; i < DeflaterHuffman.LITERAL_NUM; i++) {\r\n                static_len += this.literalTree.freqs[i] * DeflaterHuffman.staticLLength[i];\r\n            }\r\n            for (let i = 0; i < DeflaterHuffman.DIST_NUM; i++) {\r\n                static_len += this.distTree.freqs[i] * DeflaterHuffman.staticDLength[i];\r\n            }\r\n            if (opt_len >= static_len) {\r\n                // Force static trees\r\n                opt_len = static_len;\r\n            }\r\n            if (storedOffset >= 0 && storedLength + 4 < opt_len >> 3) {\r\n                // Store Block\r\n                this.flushStoredBlock(stored, storedOffset, storedLength, lastBlock);\r\n            }\r\n            else if (opt_len == static_len) {\r\n                // Encode with static tree\r\n                this.pending.writeBits((DeflaterHuffman.STATIC_TREES << 1) + (lastBlock ? 1 : 0), 3);\r\n                this.literalTree.setStaticCodes(DeflaterHuffman.staticLCodes, DeflaterHuffman.staticLLength);\r\n                this.distTree.setStaticCodes(DeflaterHuffman.staticDCodes, DeflaterHuffman.staticDLength);\r\n                this.compressBlock();\r\n                this.reset();\r\n            }\r\n            else {\r\n                // Encode with dynamic tree\r\n                this.pending.writeBits((DeflaterHuffman.DYN_TREES << 1) + (lastBlock ? 1 : 0), 3);\r\n                this.sendAllTrees(blTreeCodes);\r\n                this.compressBlock();\r\n                this.reset();\r\n            }\r\n        }\r\n        /**\r\n         * Write all trees to pending buffer\r\n         * @param blTreeCodes The number/rank of treecodes to send.\r\n         */\r\n        sendAllTrees(blTreeCodes) {\r\n            this.blTree.buildCodes();\r\n            this.literalTree.buildCodes();\r\n            this.distTree.buildCodes();\r\n            this.pending.writeBits(this.literalTree.numCodes - 257, 5);\r\n            this.pending.writeBits(this.distTree.numCodes - 1, 5);\r\n            this.pending.writeBits(blTreeCodes - 4, 4);\r\n            for (let rank = 0; rank < blTreeCodes; rank++) {\r\n                this.pending.writeBits(this.blTree.length[DeflaterHuffman.BL_ORDER[rank]], 3);\r\n            }\r\n            this.literalTree.writeTree(this.blTree);\r\n            this.distTree.writeTree(this.blTree);\r\n        }\r\n        /**\r\n         * Compress current buffer writing data to pending buffer\r\n         */\r\n        compressBlock() {\r\n            for (let i = 0; i < this.last_lit; i++) {\r\n                let litlen = this.l_buf[i] & 0xff;\r\n                let dist = this.d_buf[i];\r\n                if (dist-- != 0) {\r\n                    let lc = DeflaterHuffman.Lcode(litlen);\r\n                    this.literalTree.writeSymbol(lc);\r\n                    let bits = Math.floor((lc - 261) / 4);\r\n                    if (bits > 0 && bits <= 5) {\r\n                        this.pending.writeBits(litlen & ((1 << bits) - 1), bits);\r\n                    }\r\n                    let dc = DeflaterHuffman.Dcode(dist);\r\n                    this.distTree.writeSymbol(dc);\r\n                    bits = Math.floor(dc / 2) - 1;\r\n                    if (bits > 0) {\r\n                        this.pending.writeBits(dist & ((1 << bits) - 1), bits);\r\n                    }\r\n                }\r\n                else {\r\n                    this.literalTree.writeSymbol(litlen);\r\n                }\r\n            }\r\n            this.literalTree.writeSymbol(DeflaterHuffman.EOF_SYMBOL);\r\n        }\r\n        /**\r\n         * Add distance code and length to literal and distance trees\r\n         * @param distance Distance code\r\n         * @param length Length\r\n         * @returns Value indicating if internal buffer is full\r\n         */\r\n        tallyDist(distance, length) {\r\n            this.d_buf[this.last_lit] = distance;\r\n            this.l_buf[this.last_lit++] = (length - 3);\r\n            let lc = DeflaterHuffman.Lcode(length - 3);\r\n            this.literalTree.freqs[lc]++;\r\n            if (lc >= 265 && lc < 285) {\r\n                this.extra_bits += Math.floor((lc - 261) / 4);\r\n            }\r\n            let dc = DeflaterHuffman.Dcode(distance - 1);\r\n            this.distTree.freqs[dc]++;\r\n            if (dc >= 4) {\r\n                this.extra_bits += Math.floor(dc / 2) - 1;\r\n            }\r\n            return this.isFull();\r\n        }\r\n        /**\r\n         * Add literal to buffer\r\n         * @param literal Literal value to add to buffer\r\n         * @returns Value indicating internal buffer is full\r\n         */\r\n        tallyLit(literal) {\r\n            this.d_buf[this.last_lit] = 0;\r\n            this.l_buf[this.last_lit++] = literal;\r\n            this.literalTree.freqs[literal]++;\r\n            return this.isFull();\r\n        }\r\n        static Lcode(length) {\r\n            if (length == 255) {\r\n                return 285;\r\n            }\r\n            let code = 257;\r\n            while (length >= 8) {\r\n                code += 4;\r\n                length >>= 1;\r\n            }\r\n            return code + length;\r\n        }\r\n        static Dcode(distance) {\r\n            let code = 0;\r\n            while (distance >= 4) {\r\n                code += 2;\r\n                distance >>= 1;\r\n            }\r\n            return code + distance;\r\n        }\r\n    }\r\n    DeflaterHuffman.BUFSIZE = 1 << (DeflaterConstants.DEFAULT_MEM_LEVEL + 6);\r\n    DeflaterHuffman.LITERAL_NUM = 286;\r\n    /**\r\n     * Written to Zip file to identify a stored block\r\n     */\r\n    DeflaterHuffman.STORED_BLOCK = 0;\r\n    /**\r\n     * Identifies static tree in Zip file\r\n     */\r\n    DeflaterHuffman.STATIC_TREES = 1;\r\n    /**\r\n     * Identifies dynamic tree in Zip file\r\n     */\r\n    DeflaterHuffman.DYN_TREES = 2;\r\n    // Number of distance codes\r\n    DeflaterHuffman.DIST_NUM = 30;\r\n    // The lengths of the bit length codes are sent in order of decreasing\r\n    // probability, to avoid transmitting the lengths for unused bit length codes.\r\n    DeflaterHuffman.BL_ORDER = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\r\n    DeflaterHuffman.bit4Reverse = new Uint8Array([\r\n        0,\r\n        8,\r\n        4,\r\n        12,\r\n        2,\r\n        10,\r\n        6,\r\n        14,\r\n        1,\r\n        9,\r\n        5,\r\n        13,\r\n        3,\r\n        11,\r\n        7,\r\n        15\r\n    ]);\r\n    // Number of codes used to transfer bit lengths\r\n    DeflaterHuffman.BITLEN_NUM = 19;\r\n    DeflaterHuffman.EOF_SYMBOL = 256;\r\n    DeflaterHuffman.staticInit();\n\n    // This Deflate algorithm is based on the Deflater class of the SharpZipLib (MIT)\r\n    /**\r\n     * Low level compression engine for deflate algorithm which uses a 32K sliding window\r\n     * with secondary compression from Huffman/Shannon-Fano codes.\r\n     */\r\n    class DeflaterEngine {\r\n        /**\r\n         * Construct instance with pending buffer\r\n         * @param pending Pending buffer to use\r\n         * @param noAdlerCalculation Pending buffer to use\r\n         */\r\n        constructor(pending) {\r\n            this.maxChain = 128;\r\n            this.niceLength = 128;\r\n            this.goodLength = 8;\r\n            /**\r\n             * Hash index of string to be inserted\r\n             */\r\n            this.insertHashIndex = 0;\r\n            /**\r\n             * lookahead is the number of characters starting at strstart in\r\n             * window that are valid.\r\n             * So window[strstart] until window[strstart+lookahead-1] are valid\r\n             * characters.\r\n             */\r\n            this.lookahead = 0;\r\n            /**\r\n             * The input data for compression.\r\n             */\r\n            this.inputBuf = null;\r\n            /**\r\n             * The offset into inputBuf, where input data starts.\r\n             */\r\n            this.inputOff = 0;\r\n            /**\r\n             * The end offset of the input data.\r\n             */\r\n            this.inputEnd = 0;\r\n            /**\r\n             * Set if previous match exists\r\n             */\r\n            this.prevAvailable = false;\r\n            this.matchStart = 0;\r\n            /**\r\n             * Length of best match\r\n             */\r\n            this.matchLen = 0;\r\n            this.pending = pending;\r\n            this.huffman = new DeflaterHuffman(pending);\r\n            this.inputCrc = new Crc32();\r\n            this.window = new Uint8Array(2 * DeflaterConstants.WSIZE);\r\n            this.head = new Int16Array(DeflaterConstants.HASH_SIZE);\r\n            this.prev = new Int16Array(DeflaterConstants.WSIZE);\r\n            // We start at index 1, to avoid an implementation deficiency, that\r\n            // we cannot build a repeat pattern at index 0.\r\n            this.blockStart = 1;\r\n            this.strstart = 1;\r\n        }\r\n        /**\r\n         * Reset internal state\r\n         */\r\n        reset() {\r\n            this.huffman.reset();\r\n            this.inputCrc.reset();\r\n            this.blockStart = 1;\r\n            this.strstart = 1;\r\n            this.lookahead = 0;\r\n            this.prevAvailable = false;\r\n            this.matchLen = DeflaterConstants.MIN_MATCH - 1;\r\n            for (let i = 0; i < DeflaterConstants.HASH_SIZE; i++) {\r\n                this.head[i] = 0;\r\n            }\r\n            for (let i = 0; i < DeflaterConstants.WSIZE; i++) {\r\n                this.prev[i] = 0;\r\n            }\r\n        }\r\n        updateHash() {\r\n            this.insertHashIndex = (this.window[this.strstart] << DeflaterConstants.HASH_SHIFT) ^ this.window[this.strstart + 1];\r\n        }\r\n        /**\r\n         * Determines if more input is needed.\r\n         * @returns Return true if input is needed via setInput\r\n         */\r\n        needsInput() {\r\n            return (this.inputEnd == this.inputOff);\r\n        }\r\n        /**\r\n         * Sets input data to be deflated.  Should only be called when <code>NeedsInput()</code>\r\n         * returns true\r\n         * @param buffer The buffer containing input data.\r\n         * @param offset The offset of the first byte of data.\r\n         * @param count The number of bytes of data to use as input.\r\n         */\r\n        setInput(buffer, offset, count) {\r\n            let end = offset + count;\r\n            this.inputBuf = buffer;\r\n            this.inputOff = offset;\r\n            this.inputEnd = end;\r\n        }\r\n        /**\r\n         * Deflate drives actual compression of data\r\n         * @param flush True to flush input buffers\r\n         * @param finish Finish deflation with the current input.\r\n         * @returns Returns true if progress has been made.\r\n         */\r\n        deflate(flush, finish) {\r\n            let progress;\r\n            do {\r\n                this.fillWindow();\r\n                let canFlush = flush && (this.inputOff == this.inputEnd);\r\n                progress = this.deflateSlow(canFlush, finish);\r\n            } while (this.pending.isFlushed && progress); // repeat while we have no pending output and progress was made\r\n            return progress;\r\n        }\r\n        deflateSlow(flush, finish) {\r\n            if (this.lookahead < DeflaterConstants.MIN_LOOKAHEAD && !flush) {\r\n                return false;\r\n            }\r\n            while (this.lookahead >= DeflaterConstants.MIN_LOOKAHEAD || flush) {\r\n                if (this.lookahead == 0) {\r\n                    if (this.prevAvailable) {\r\n                        this.huffman.tallyLit(this.window[this.strstart - 1] & 0xff);\r\n                    }\r\n                    this.prevAvailable = false;\r\n                    // We are flushing everything\r\n                    this.huffman.flushBlock(this.window, this.blockStart, this.strstart - this.blockStart, finish);\r\n                    this.blockStart = this.strstart;\r\n                    return false;\r\n                }\r\n                if (this.strstart >= 2 * DeflaterConstants.WSIZE - DeflaterConstants.MIN_LOOKAHEAD) {\r\n                    /* slide window, as FindLongestMatch needs this.\r\n                     * This should only happen when flushing and the window\r\n                     * is almost full.\r\n                     */\r\n                    this.slideWindow();\r\n                }\r\n                let prevMatch = this.matchStart;\r\n                let prevLen = this.matchLen;\r\n                if (this.lookahead >= DeflaterConstants.MIN_MATCH) {\r\n                    let hashHead = this.insertString();\r\n                    if (hashHead != 0 &&\r\n                        this.strstart - hashHead <= DeflaterConstants.MAX_DIST &&\r\n                        this.findLongestMatch(hashHead)) {\r\n                        // longestMatch sets matchStart and matchLen\r\n                        // Discard match if too small and too far away\r\n                        if (this.matchLen == DeflaterConstants.MIN_MATCH && this.strstart - this.matchStart > DeflaterEngine.TooFar) {\r\n                            this.matchLen = DeflaterConstants.MIN_MATCH - 1;\r\n                        }\r\n                    }\r\n                }\r\n                // previous match was better\r\n                if ((prevLen >= DeflaterConstants.MIN_MATCH) && (this.matchLen <= prevLen)) {\r\n                    this.huffman.tallyDist(this.strstart - 1 - prevMatch, prevLen);\r\n                    prevLen -= 2;\r\n                    do {\r\n                        this.strstart++;\r\n                        this.lookahead--;\r\n                        if (this.lookahead >= DeflaterConstants.MIN_MATCH) {\r\n                            this.insertString();\r\n                        }\r\n                    } while (--prevLen > 0);\r\n                    this.strstart++;\r\n                    this.lookahead--;\r\n                    this.prevAvailable = false;\r\n                    this.matchLen = DeflaterConstants.MIN_MATCH - 1;\r\n                }\r\n                else {\r\n                    if (this.prevAvailable) {\r\n                        this.huffman.tallyLit(this.window[this.strstart - 1] & 0xff);\r\n                    }\r\n                    this.prevAvailable = true;\r\n                    this.strstart++;\r\n                    this.lookahead--;\r\n                }\r\n                if (this.huffman.isFull()) {\r\n                    let len = this.strstart - this.blockStart;\r\n                    if (this.prevAvailable) {\r\n                        len--;\r\n                    }\r\n                    let lastBlock = (finish && (this.lookahead == 0) && !this.prevAvailable);\r\n                    this.huffman.flushBlock(this.window, this.blockStart, len, lastBlock);\r\n                    this.blockStart += len;\r\n                    return !lastBlock;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        /**\r\n         * Find the best (longest) string in the window matching the\r\n         * string starting at strstart.\r\n         * @param curMatch\r\n         * @returns True if a match greater than the minimum length is found\r\n         */\r\n        findLongestMatch(curMatch) {\r\n            let match;\r\n            let scan = this.strstart;\r\n            // scanMax is the highest position that we can look at\r\n            let scanMax = scan + Math.min(DeflaterConstants.MAX_MATCH, this.lookahead) - 1;\r\n            let limit = Math.max(scan - DeflaterConstants.MAX_DIST, 0);\r\n            let window = this.window;\r\n            let prev = this.prev;\r\n            let chainLength = this.maxChain;\r\n            let niceLength = Math.min(this.niceLength, this.lookahead);\r\n            this.matchLen = Math.max(this.matchLen, DeflaterConstants.MIN_MATCH - 1);\r\n            if (scan + this.matchLen > scanMax) {\r\n                return false;\r\n            }\r\n            let scan_end1 = window[scan + this.matchLen - 1];\r\n            let scan_end = window[scan + this.matchLen];\r\n            // Do not waste too much time if we already have a good match:\r\n            if (this.matchLen >= this.goodLength) {\r\n                chainLength >>= 2;\r\n            }\r\n            do {\r\n                match = curMatch;\r\n                scan = this.strstart;\r\n                if (window[match + this.matchLen] != scan_end\r\n                    || window[match + this.matchLen - 1] != scan_end1\r\n                    || window[match] != window[scan]\r\n                    || window[++match] != window[++scan]) {\r\n                    continue;\r\n                }\r\n                // scan is set to strstart+1 and the comparison passed, so\r\n                // scanMax - scan is the maximum number of bytes we can compare.\r\n                // below we compare 8 bytes at a time, so first we compare\r\n                // (scanMax - scan) % 8 bytes, so the remainder is a multiple of 8\r\n                switch ((scanMax - scan) % 8) {\r\n                    case 1:\r\n                        if (window[++scan] == window[++match])\r\n                            break;\r\n                        break;\r\n                    case 2:\r\n                        if (window[++scan] == window[++match]\r\n                            && window[++scan] == window[++match])\r\n                            break;\r\n                        break;\r\n                    case 3:\r\n                        if (window[++scan] == window[++match]\r\n                            && window[++scan] == window[++match]\r\n                            && window[++scan] == window[++match])\r\n                            break;\r\n                        break;\r\n                    case 4:\r\n                        if (window[++scan] == window[++match]\r\n                            && window[++scan] == window[++match]\r\n                            && window[++scan] == window[++match]\r\n                            && window[++scan] == window[++match])\r\n                            break;\r\n                        break;\r\n                    case 5:\r\n                        if (window[++scan] == window[++match]\r\n                            && window[++scan] == window[++match]\r\n                            && window[++scan] == window[++match]\r\n                            && window[++scan] == window[++match]\r\n                            && window[++scan] == window[++match])\r\n                            break;\r\n                        break;\r\n                    case 6:\r\n                        if (window[++scan] == window[++match]\r\n                            && window[++scan] == window[++match]\r\n                            && window[++scan] == window[++match]\r\n                            && window[++scan] == window[++match]\r\n                            && window[++scan] == window[++match]\r\n                            && window[++scan] == window[++match])\r\n                            break;\r\n                        break;\r\n                    case 7:\r\n                        if (window[++scan] == window[++match]\r\n                            && window[++scan] == window[++match]\r\n                            && window[++scan] == window[++match]\r\n                            && window[++scan] == window[++match]\r\n                            && window[++scan] == window[++match]\r\n                            && window[++scan] == window[++match]\r\n                            && window[++scan] == window[++match])\r\n                            break;\r\n                        break;\r\n                }\r\n                if (window[scan] == window[match]) {\r\n                    /* We check for insufficient lookahead only every 8th comparison;\r\n                     * the 256th check will be made at strstart + 258 unless lookahead is\r\n                     * exhausted first.\r\n                     */\r\n                    do {\r\n                        if (scan == scanMax) {\r\n                            ++scan; // advance to first position not matched\r\n                            ++match;\r\n                            break;\r\n                        }\r\n                    } while (window[++scan] == window[++match]\r\n                        && window[++scan] == window[++match]\r\n                        && window[++scan] == window[++match]\r\n                        && window[++scan] == window[++match]\r\n                        && window[++scan] == window[++match]\r\n                        && window[++scan] == window[++match]\r\n                        && window[++scan] == window[++match]\r\n                        && window[++scan] == window[++match]);\r\n                }\r\n                if (scan - this.strstart > this.matchLen) {\r\n                    this.matchStart = curMatch;\r\n                    this.matchLen = scan - this.strstart;\r\n                    if (this.matchLen >= niceLength) {\r\n                        break;\r\n                    }\r\n                    scan_end1 = window[scan - 1];\r\n                    scan_end = window[scan];\r\n                }\r\n            } while ((curMatch = (prev[curMatch & DeflaterConstants.WMASK] & 0xffff)) > limit && 0 != --chainLength);\r\n            return this.matchLen >= DeflaterConstants.MIN_MATCH;\r\n        }\r\n        /**\r\n         * Inserts the current string in the head hash and returns the previous\r\n         * value for this hash.\r\n         * @returns The previous hash value\r\n         */\r\n        insertString() {\r\n            let match;\r\n            let hash = ((this.insertHashIndex << DeflaterConstants.HASH_SHIFT) ^ this.window[this.strstart + (DeflaterConstants.MIN_MATCH - 1)]) & DeflaterConstants.HASH_MASK;\r\n            this.prev[this.strstart & DeflaterConstants.WMASK] = match = this.head[hash];\r\n            this.head[hash] = this.strstart;\r\n            this.insertHashIndex = hash;\r\n            return match & 0xffff;\r\n        }\r\n        /**\r\n         * Fill the window\r\n         */\r\n        fillWindow() {\r\n            /* If the window is almost full and there is insufficient lookahead,\r\n             * move the upper half to the lower one to make room in the upper half.\r\n             */\r\n            if (this.strstart >= DeflaterConstants.WSIZE + DeflaterConstants.MAX_DIST) {\r\n                this.slideWindow();\r\n            }\r\n            /* If there is not enough lookahead, but still some input left,\r\n             * read in the input\r\n             */\r\n            if (this.lookahead < DeflaterConstants.MIN_LOOKAHEAD && this.inputOff < this.inputEnd) {\r\n                let more = 2 * DeflaterConstants.WSIZE - this.lookahead - this.strstart;\r\n                if (more > this.inputEnd - this.inputOff) {\r\n                    more = this.inputEnd - this.inputOff;\r\n                }\r\n                this.window.set(this.inputBuf.subarray(this.inputOff, this.inputOff + more), this.strstart + this.lookahead);\r\n                this.inputCrc.update(this.inputBuf, this.inputOff, more);\r\n                this.inputOff += more;\r\n                // this.totalIn += more;\r\n                this.lookahead += more;\r\n            }\r\n            if (this.lookahead >= DeflaterConstants.MIN_MATCH) {\r\n                this.updateHash();\r\n            }\r\n        }\r\n        slideWindow() {\r\n            this.window.set(this.window.subarray(DeflaterConstants.WSIZE, DeflaterConstants.WSIZE + DeflaterConstants.WSIZE), 0);\r\n            this.matchStart -= DeflaterConstants.WSIZE;\r\n            this.strstart -= DeflaterConstants.WSIZE;\r\n            this.blockStart -= DeflaterConstants.WSIZE;\r\n            // Slide the hash table (could be avoided with 32 bit values\r\n            // at the expense of memory usage).\r\n            for (let i = 0; i < DeflaterConstants.HASH_SIZE; ++i) {\r\n                let m = this.head[i] & 0xffff;\r\n                this.head[i] = (m >= DeflaterConstants.WSIZE ? (m - DeflaterConstants.WSIZE) : 0);\r\n            }\r\n            // Slide the prev table.\r\n            for (let i = 0; i < DeflaterConstants.WSIZE; i++) {\r\n                let m = this.prev[i] & 0xffff;\r\n                this.prev[i] = (m >= DeflaterConstants.WSIZE ? (m - DeflaterConstants.WSIZE) : 0);\r\n            }\r\n        }\r\n    }\r\n    DeflaterEngine.TooFar = 4096;\n\n    // This Deflate algorithm is based on the Deflater class of the SharpZipLib (MIT)\r\n    // https://github.com/icsharpcode/SharpZipLib\r\n    /*\r\n     * Copyright © 2000-2018 SharpZipLib Contributors\r\n     * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n     * software and associated documentation files (the \"Software\"), to deal in the Software\r\n     * without restriction, including without limitation the rights to use, copy, modify, merge,\r\n     * publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons\r\n     * to whom the Software is furnished to do so, subject to the following conditions:\r\n     *\r\n     * The above copyright notice and this permission notice shall be included in all copies or\r\n     * substantial portions of the Software.\r\n     *\r\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n     * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR\r\n     * PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE\r\n     * FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n     * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n     * DEALINGS IN THE SOFTWARE.\r\n     */\r\n    /**\r\n     * This class is general purpose class for writing data to a buffer.\r\n     * It allows you to write bits as well as bytes\r\n     * Based on DeflaterPending.java\r\n     */\r\n    class PendingBuffer {\r\n        /**\r\n         * construct instance using specified buffer size\r\n         * @param bufferSize size to use for internal buffer\r\n         */\r\n        constructor(bufferSize) {\r\n            this._start = 0;\r\n            this._end = 0;\r\n            this._bits = 0;\r\n            /**\r\n             * The number of bits written to the buffer\r\n             */\r\n            this.bitCount = 0;\r\n            this._buffer = new Uint8Array(bufferSize);\r\n        }\r\n        /**\r\n         * Indicates if buffer has been flushed\r\n         */\r\n        get isFlushed() {\r\n            return this._end === 0;\r\n        }\r\n        /**\r\n         * Clear internal state/buffers\r\n         */\r\n        reset() {\r\n            this._start = 0;\r\n            this._end = 0;\r\n            this.bitCount = 0;\r\n        }\r\n        /**\r\n         * Write a short value to internal buffer most significant byte first\r\n         * @param s value to write\r\n         */\r\n        writeShortMSB(s) {\r\n            this._buffer[this._end++] = (s >> 8) & 0xFF;\r\n            this._buffer[this._end++] = s & 0xFF;\r\n        }\r\n        /**\r\n         * Write a short value to buffer LSB first\r\n         * @param value The value to write.\r\n         */\r\n        writeShort(value) {\r\n            this._buffer[this._end++] = value;\r\n            this._buffer[this._end++] = (value >> 8);\r\n        }\r\n        /**\r\n         * Write a block of data to buffer\r\n         * @param block data to write\r\n         * @param offset offset of first byte to write\r\n         * @param length number of bytes to write\r\n         */\r\n        writeBlock(block, offset, length) {\r\n            this._buffer.set(block.subarray(offset, offset + length), this._end);\r\n            this._end += length;\r\n        }\r\n        /**\r\n         * Flushes the pending buffer into the given output array.  If the\r\n         * output array is to small, only a partial flush is done.\r\n         * @param output The output array.\r\n         * @param offset The offset into output array.\r\n         * @param length The maximum number of bytes to store.\r\n         * @returns The number of bytes flushed.\r\n         */\r\n        flush(output, offset, length) {\r\n            if (this.bitCount >= 8) {\r\n                this._buffer[this._end++] = this._bits & 0xFF;\r\n                this._bits >>= 8;\r\n                this.bitCount -= 8;\r\n            }\r\n            if (length > this._end - this._start) {\r\n                length = this._end - this._start;\r\n                output.set(this._buffer.subarray(this._start, this._start + length), offset);\r\n                this._start = 0;\r\n                this._end = 0;\r\n            }\r\n            else {\r\n                output.set(this._buffer.subarray(this._start, this._start + length), offset);\r\n                this._start += length;\r\n            }\r\n            return length;\r\n        }\r\n        /**\r\n         * Write bits to internal buffer\r\n         * @param b source of bits\r\n         * @param count number of bits to write\r\n         */\r\n        writeBits(b, count) {\r\n            this._bits |= b << this.bitCount;\r\n            this.bitCount += count;\r\n            if (this.bitCount >= 16) {\r\n                this._buffer[this._end++] = this._bits & 0xFF;\r\n                this._buffer[this._end++] = (this._bits >> 8) & 0xFF;\r\n                this._bits >>= 16;\r\n                this.bitCount -= 16;\r\n            }\r\n        }\r\n        /**\r\n         * Align internal buffer on a byte boundary\r\n         */\r\n        alignToByte() {\r\n            if (this.bitCount > 0) {\r\n                this._buffer[this._end++] = this._bits & 0xFF;\r\n                if (this.bitCount > 8) {\r\n                    this._buffer[this._end++] = (this._bits >> 8) & 0xFF;\r\n                }\r\n            }\r\n            this._bits = 0;\r\n            this.bitCount = 0;\r\n        }\r\n    }\n\n    // This Deflate algorithm is based on the Deflater class of the SharpZipLib (MIT)\r\n    /**\r\n     * This is the Deflater class.  The deflater class compresses input\r\n     * with the deflate algorithm described in RFC 1951.  It has several\r\n     * compression levels and three different strategies described below.\r\n     *\r\n     * This class is <i>not</i> thread safe.  This is inherent in the API, due\r\n     * to the split of deflate and setInput.\r\n     *\r\n     * author of the original java version : Jochen Hoenicke\r\n     */\r\n    class Deflater {\r\n        /**\r\n         * Creates a new deflater with given compression level\r\n         * @param level the compression level, a value between NO_COMPRESSION and BEST_COMPRESSION.\r\n         * beginning and the adler checksum at the end of the output.  This is\r\n         * useful for the GZIP/PKZIP formats.\r\n         */\r\n        constructor() {\r\n            this._state = 0;\r\n            this._pending = new PendingBuffer(DeflaterConstants.PENDING_BUF_SIZE);\r\n            this._engine = new DeflaterEngine(this._pending);\r\n            this.reset();\r\n        }\r\n        get inputCrc() {\r\n            return this._engine.inputCrc.value;\r\n        }\r\n        /**\r\n         * Returns true, if the input buffer is empty.\r\n         * You should then call setInput().\r\n         * NOTE: This method can also return true when the stream\r\n         * was finished.\r\n         */\r\n        get isNeedingInput() {\r\n            return this._engine.needsInput();\r\n        }\r\n        /**\r\n         * Returns true if the stream was finished and no more output bytes\r\n         * are available.\r\n         */\r\n        get isFinished() {\r\n            return (this._state == Deflater.FinishedState) && this._pending.isFlushed;\r\n        }\r\n        /**\r\n         * Resets the deflater. The deflater acts afterwards as if it was\r\n         * just created with the same compression level and strategy as it\r\n         * had before.\r\n         */\r\n        reset() {\r\n            this._state = Deflater.BusyState;\r\n            this._pending.reset();\r\n            this._engine.reset();\r\n        }\r\n        /**\r\n         * Sets the data which should be compressed next.  This should be\r\n         * only called when needsInput indicates that more input is needed.\r\n         * The given byte array should not be changed, before needsInput() returns\r\n         * true again.\r\n         * @param input the buffer containing the input data.\r\n         * @param offset the start of the data.\r\n         * @param count the number of data bytes of input.\r\n         */\r\n        setInput(input, offset, count) {\r\n            this._engine.setInput(input, offset, count);\r\n        }\r\n        /**\r\n         * Deflates the current input block to the given array.\r\n         * @param output Buffer to store the compressed data.\r\n         * @param offset Offset into the output array.\r\n         * @param length The maximum number of bytes that may be stored.\r\n         * @returns The number of compressed bytes added to the output, or 0 if either\r\n         * needsInput() or finished() returns true or length is zero.\r\n         */\r\n        deflate(output, offset, length) {\r\n            let origLength = length;\r\n            for (;;) {\r\n                let count = this._pending.flush(output, offset, length);\r\n                offset += count;\r\n                length -= count;\r\n                if (length == 0 || this._state == Deflater.FinishedState) {\r\n                    break;\r\n                }\r\n                if (!this._engine.deflate((this._state & Deflater.IsFlushing) != 0, (this._state & Deflater.IsFinishing) != 0)) {\r\n                    switch (this._state) {\r\n                        case Deflater.BusyState:\r\n                            // We need more input now\r\n                            return origLength - length;\r\n                        case Deflater.FlushingState:\r\n                            /* We have to supply some lookahead.  8 bit lookahead\r\n                                * is needed by the zlib inflater, and we must fill\r\n                                * the next byte, so that all bits are flushed.\r\n                                */\r\n                            let neededbits = 8 + ((-this._pending.bitCount) & 7);\r\n                            while (neededbits > 0) {\r\n                                /* write a static tree block consisting solely of\r\n                                    * an EOF:\r\n                                    */\r\n                                this._pending.writeBits(2, 10);\r\n                                neededbits -= 10;\r\n                            }\r\n                            this._state = Deflater.BusyState;\r\n                            break;\r\n                        case Deflater.FinishingState:\r\n                            this._pending.alignToByte();\r\n                            this._state = Deflater.FinishedState;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            return origLength - length;\r\n        }\r\n        /**\r\n         * Finishes the deflater with the current input block.  It is an error\r\n         * to give more input after this method was called.  This method must\r\n         * be called to force all bytes to be flushed.\r\n         */\r\n        finish() {\r\n            this._state |= (Deflater.IsFlushing | Deflater.IsFinishing);\r\n        }\r\n    }\r\n    /*\r\n     * The Deflater can do the following state transitions:\r\n     *\r\n     * (1) -> INIT_STATE   ----> INIT_FINISHING_STATE ---.\r\n     *        /  | (2)      (5)                          |\r\n     *       /   v          (5)                          |\r\n     *   (3)| SETDICT_STATE ---> SETDICT_FINISHING_STATE |(3)\r\n     *       \\   | (3)                 |        ,--------'\r\n     *        |  |                     | (3)   /\r\n     *        v  v          (5)        v      v\r\n     * (1) -> BUSY_STATE   ----> FINISHING_STATE\r\n     *                                | (6)\r\n     *                                v\r\n     *                           FINISHED_STATE\r\n     *    \\_____________________________________/\r\n     *                    | (7)\r\n     *                    v\r\n     *               CLOSED_STATE\r\n     *\r\n     * (1) If we should produce a header we start in INIT_STATE, otherwise\r\n     *     we start in BUSY_STATE.\r\n     * (2) A dictionary may be set only when we are in INIT_STATE, then\r\n     *     we change the state as indicated.\r\n     * (3) Whether a dictionary is set or not, on the first call of deflate\r\n     *     we change to BUSY_STATE.\r\n     * (4) -- intentionally left blank -- :)\r\n     * (5) FINISHING_STATE is entered, when flush() is called to indicate that\r\n     *     there is no more INPUT.  There are also states indicating, that\r\n     *     the header wasn't written yet.\r\n     * (6) FINISHED_STATE is entered, when everything has been flushed to the\r\n     *     internal pending output buffer.\r\n     * (7) At any time (7)\r\n     *\r\n     */\r\n    Deflater.IsFlushing = 0x04;\r\n    Deflater.IsFinishing = 0x08;\r\n    Deflater.BusyState = 0x10;\r\n    Deflater.FlushingState = 0x14;\r\n    Deflater.FinishingState = 0x1c;\r\n    Deflater.FinishedState = 0x1e;\n\n    class ZipCentralDirectoryHeader {\r\n        constructor(entry, crc32, localHeaderOffset, compressionMode, compressedSize) {\r\n            this.entry = entry;\r\n            this.crc32 = crc32;\r\n            this.localHeaderOffset = localHeaderOffset;\r\n            this.compressionMode = compressionMode;\r\n            this.compressedSize = compressedSize;\r\n        }\r\n    }\r\n    class ZipWriter {\r\n        constructor(data) {\r\n            this._centralDirectoryHeaders = [];\r\n            this._deflater = new Deflater();\r\n            this._data = data;\r\n        }\r\n        writeEntry(entry) {\r\n            // 4.3.7 local file header\r\n            const compressionMode = ZipEntry.CompressionMethodDeflate;\r\n            const compressedData = ByteBuffer.empty();\r\n            const crc32 = this.compress(compressedData, entry.data, compressionMode);\r\n            const compressedDataArray = compressedData.toArray();\r\n            const directoryHeader = new ZipCentralDirectoryHeader(entry, crc32, this._data.bytesWritten, compressionMode, compressedData.length);\r\n            this._centralDirectoryHeaders.push(directoryHeader);\r\n            // Signature\r\n            IOHelper.writeInt32LE(this._data, ZipEntry.LocalFileHeaderSignature);\r\n            // Version\r\n            IOHelper.writeUInt16LE(this._data, 10);\r\n            // Flags\r\n            IOHelper.writeUInt16LE(this._data, 0x0800);\r\n            // Compression\r\n            IOHelper.writeUInt16LE(this._data, compressionMode);\r\n            // last mod file time\r\n            IOHelper.writeInt16LE(this._data, 0);\r\n            // last mod file date\r\n            IOHelper.writeInt16LE(this._data, 0);\r\n            // crc-32\r\n            IOHelper.writeInt32LE(this._data, crc32);\r\n            // compressed size\r\n            IOHelper.writeInt32LE(this._data, compressedDataArray.length);\r\n            // uncompressed size\r\n            IOHelper.writeInt32LE(this._data, entry.data.length);\r\n            // file name length\r\n            IOHelper.writeInt16LE(this._data, entry.fullName.length);\r\n            // extra field length\r\n            IOHelper.writeInt16LE(this._data, 0);\r\n            // file name (variable size)\r\n            const fileNameBuffer = IOHelper.stringToBytes(entry.fullName);\r\n            this._data.write(fileNameBuffer, 0, fileNameBuffer.length);\r\n            // extra field (variable size)\r\n            // <empty>\r\n            // 4.3.8 File Data\r\n            this._data.write(compressedDataArray, 0, compressedDataArray.length);\r\n        }\r\n        compress(output, data, compressionMode) {\r\n            if (compressionMode != ZipEntry.CompressionMethodDeflate) {\r\n                const crc = new Crc32();\r\n                crc.update(data, 0, data.length);\r\n                output.write(data, 0, data.length);\r\n                return crc.value;\r\n            }\r\n            else {\r\n                let buffer = new Uint8Array(512);\r\n                // init deflater\r\n                this._deflater.reset();\r\n                // write data\r\n                this._deflater.setInput(data, 0, data.length);\r\n                while (!this._deflater.isNeedingInput) {\r\n                    const len = this._deflater.deflate(buffer, 0, buffer.length);\r\n                    if (len <= 0) {\r\n                        break;\r\n                    }\r\n                    output.write(buffer, 0, len);\r\n                }\r\n                // let deflater finish up\r\n                this._deflater.finish();\r\n                while (!this._deflater.isFinished) {\r\n                    const len = this._deflater.deflate(buffer, 0, buffer.length);\r\n                    if (len <= 0) {\r\n                        break;\r\n                    }\r\n                    output.write(buffer, 0, len);\r\n                }\r\n                return this._deflater.inputCrc;\r\n            }\r\n        }\r\n        end() {\r\n            const startOfCentralDirectory = this._data.bytesWritten;\r\n            for (const header of this._centralDirectoryHeaders) {\r\n                this.writeCentralDirectoryHeader(header);\r\n            }\r\n            const endOfCentralDirectory = this._data.bytesWritten;\r\n            this.writeEndOfCentralDirectoryRecord(startOfCentralDirectory, endOfCentralDirectory);\r\n        }\r\n        writeEndOfCentralDirectoryRecord(startOfCentralDirectory, endOfCentralDirectory) {\r\n            // Signature\r\n            IOHelper.writeInt32LE(this._data, ZipEntry.EndOfCentralDirSignature);\r\n            // number of this disk             2 bytes\r\n            IOHelper.writeInt16LE(this._data, 0);\r\n            // number of the disk with the\r\n            // start of the central directory  2 bytes\r\n            IOHelper.writeInt16LE(this._data, 0);\r\n            // total number of entries in the\r\n            // central directory on this disk  2 bytes\r\n            IOHelper.writeInt16LE(this._data, this._centralDirectoryHeaders.length);\r\n            // total number of entries in\r\n            // the central directory           2 bytes\r\n            IOHelper.writeInt16LE(this._data, this._centralDirectoryHeaders.length);\r\n            // size of the central directory   4 bytes\r\n            IOHelper.writeInt32LE(this._data, endOfCentralDirectory - startOfCentralDirectory);\r\n            // offset of start of central\r\n            // directory with respect to\r\n            // the starting disk number        4 bytes\r\n            IOHelper.writeInt32LE(this._data, startOfCentralDirectory);\r\n            // .ZIP file comment length        2 bytes\r\n            IOHelper.writeInt16LE(this._data, 0);\r\n            // .ZIP file comment       (variable size)\r\n            // <empty>\r\n        }\r\n        writeCentralDirectoryHeader(header) {\r\n            // Signature\r\n            IOHelper.writeInt32LE(this._data, ZipEntry.CentralFileHeaderSignature);\r\n            // version made by\r\n            IOHelper.writeUInt16LE(this._data, 10);\r\n            // version needed to extract\r\n            IOHelper.writeUInt16LE(this._data, 10);\r\n            // Flags\r\n            IOHelper.writeUInt16LE(this._data, 0x0800);\r\n            // Compression\r\n            IOHelper.writeUInt16LE(this._data, header.compressionMode);\r\n            // last mod file time\r\n            IOHelper.writeInt16LE(this._data, 0);\r\n            // last mod file date\r\n            IOHelper.writeInt16LE(this._data, 0);\r\n            // crc-32\r\n            IOHelper.writeInt32LE(this._data, header.crc32);\r\n            // compressed size\r\n            IOHelper.writeInt32LE(this._data, header.compressedSize);\r\n            // uncompressed size\r\n            IOHelper.writeInt32LE(this._data, header.entry.data.length);\r\n            // file name length\r\n            IOHelper.writeInt16LE(this._data, header.entry.fullName.length);\r\n            // extra field length\r\n            IOHelper.writeInt16LE(this._data, 0);\r\n            // file comment length\r\n            IOHelper.writeInt16LE(this._data, 0);\r\n            // disk number start\r\n            IOHelper.writeInt16LE(this._data, 0);\r\n            // internal file attributes\r\n            IOHelper.writeInt16LE(this._data, 0);\r\n            // external file attributes\r\n            IOHelper.writeInt32LE(this._data, 0);\r\n            // relative offset of local header\r\n            IOHelper.writeInt32LE(this._data, header.localHeaderOffset);\r\n            // file name (variable size)\r\n            const fileNameBuffer = IOHelper.stringToBytes(header.entry.fullName);\r\n            this._data.write(fileNameBuffer, 0, fileNameBuffer.length);\r\n            // extra field (variable size)\r\n            // <empty>\r\n            // file comment (variable size)\r\n            // <empty>\r\n        }\r\n    }\n\n    /**\r\n     * This ScoreExporter can write Guitar Pro 7 (gp) files.\r\n     */\r\n    class Gp7Exporter extends ScoreExporter {\r\n        get name() {\r\n            return 'Guitar Pro 7';\r\n        }\r\n        constructor() {\r\n            super();\r\n        }\r\n        writeScore(score) {\r\n            Logger.debug(this.name, 'Writing data entries');\r\n            const gpifWriter = new GpifWriter();\r\n            const gpifXml = gpifWriter.writeXml(score);\r\n            const binaryStylesheet = BinaryStylesheet.writeForScore(score);\r\n            const partConfiguration = PartConfiguration.writeForScore(score);\r\n            Logger.debug(this.name, 'Writing ZIP entries');\r\n            let fileSystem = new ZipWriter(this.data);\r\n            fileSystem.writeEntry(new ZipEntry('VERSION', IOHelper.stringToBytes('7.0')));\r\n            fileSystem.writeEntry(new ZipEntry('Content/', new Uint8Array(0)));\r\n            fileSystem.writeEntry(new ZipEntry('Content/BinaryStylesheet', binaryStylesheet));\r\n            fileSystem.writeEntry(new ZipEntry('Content/PartConfiguration', partConfiguration));\r\n            fileSystem.writeEntry(new ZipEntry('Content/score.gpif', IOHelper.stringToBytes(gpifXml)));\r\n            fileSystem.end();\r\n        }\r\n    }\n\n    const meta = VersionInfo;\r\n    const importer = {\r\n        ScoreImporter,\r\n        ScoreLoader,\r\n        UnsupportedFormatError\r\n    };\r\n    const exporter = {\r\n        ScoreExporter,\r\n        Gp7Exporter\r\n    };\r\n    const midi = {\r\n        BeatTickLookup,\r\n        MasterBarTickLookup,\r\n        MidiTickLookup,\r\n        MidiTickLookupFindBeatResult,\r\n        MidiFile,\r\n        ControllerType,\r\n        MetaDataEvent,\r\n        MetaEvent,\r\n        MetaEventType,\r\n        MetaNumberEvent,\r\n        MidiEvent,\r\n        MidiEventType,\r\n        Midi20PerNotePitchBendEvent,\r\n        SystemCommonEvent,\r\n        SystemCommonType,\r\n        SystemExclusiveEvent,\r\n        MidiFileGenerator,\r\n        AlphaSynthMidiFileHandler\r\n    };\r\n    const model = {\r\n        AccentuationType,\r\n        AccidentalType,\r\n        AutomationType,\r\n        Automation,\r\n        Bar,\r\n        Beat,\r\n        BendPoint,\r\n        BendStyle,\r\n        BendType,\r\n        BrushType,\r\n        Chord,\r\n        Clef,\r\n        Color,\r\n        CrescendoType,\r\n        Duration,\r\n        DynamicValue,\r\n        FermataType,\r\n        Fermata,\r\n        Fingers,\r\n        FontStyle,\r\n        Font,\r\n        GraceType,\r\n        HarmonicType,\r\n        InstrumentArticulation,\r\n        JsonConverter,\r\n        KeySignature,\r\n        KeySignatureType,\r\n        Lyrics,\r\n        MasterBar,\r\n        MusicFontSymbol,\r\n        Note,\r\n        NoteAccidentalMode,\r\n        Ottavia,\r\n        PickStroke,\r\n        PlaybackInformation,\r\n        RenderStylesheet,\r\n        RepeatGroup,\r\n        Score,\r\n        Section,\r\n        SimileMark,\r\n        SlideInType,\r\n        SlideOutType,\r\n        Staff,\r\n        Track,\r\n        TripletFeel,\r\n        Tuning,\r\n        TupletGroup,\r\n        VibratoType,\r\n        Voice,\r\n        WhammyType\r\n    };\r\n    const rendering = {\r\n        ScoreRenderer,\r\n        RenderFinishedEventArgs,\r\n        BarBounds,\r\n        BeatBounds,\r\n        Bounds,\r\n        BoundsLookup,\r\n        MasterBarBounds,\r\n        NoteBounds,\r\n        StaveGroupBounds\r\n    };\r\n    const synth = {\r\n        AlphaSynth,\r\n        PlaybackRange,\r\n        PlayerState,\r\n        PlayerStateChangedEventArgs,\r\n        PositionChangedEventArgs,\r\n        AlphaSynthWebWorkerApi\r\n    };\n\n    exports.AlphaTabApi = AlphaTabApi;\n    exports.AlphaTabError = AlphaTabError;\n    exports.CoreSettings = CoreSettings;\n    exports.DisplaySettings = DisplaySettings;\n    exports.FileLoadError = FileLoadError;\n    exports.FormatError = FormatError;\n    exports.ImporterSettings = ImporterSettings;\n    exports.Logger = Logger;\n    exports.NotationSettings = NotationSettings;\n    exports.PlayerSettings = PlayerSettings;\n    exports.ProgressEventArgs = ProgressEventArgs;\n    exports.RenderingResources = RenderingResources;\n    exports.ResizeEventArgs = ResizeEventArgs;\n    exports.Settings = Settings;\n    exports.VibratoPlaybackSettings = VibratoPlaybackSettings;\n    exports.exporter = exporter;\n    exports.importer = importer;\n    exports.meta = meta;\n    exports.midi = midi;\n    exports.model = model;\n    exports.rendering = rendering;\n    exports.synth = synth;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar aFunction = require('../internals/a-function');\nvar toLength = require('../internals/to-length');\nvar internalSort = require('../internals/array-sort');\nvar FF = require('../internals/engine-ff-version');\nvar IE_OR_EDGE = require('../internals/engine-is-ie-or-edge');\nvar V8 = require('../internals/engine-v8-version');\nvar WEBKIT = require('../internals/engine-webkit-version');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar Uint16Array = global.Uint16Array;\nvar nativeSort = Uint16Array && Uint16Array.prototype.sort;\n\n// WebKit\nvar ACCEPT_INCORRECT_ARGUMENTS = !!nativeSort && !fails(function () {\n  var array = new Uint16Array(2);\n  array.sort(null);\n  array.sort({});\n});\n\nvar STABLE_SORT = !!nativeSort && !fails(function () {\n  // feature detection can be too slow, so check engines versions\n  if (V8) return V8 < 74;\n  if (FF) return FF < 67;\n  if (IE_OR_EDGE) return true;\n  if (WEBKIT) return WEBKIT < 602;\n\n  var array = new Uint16Array(516);\n  var expected = Array(516);\n  var index, mod;\n\n  for (index = 0; index < 516; index++) {\n    mod = index % 4;\n    array[index] = 515 - index;\n    expected[index] = index - 2 * mod + 3;\n  }\n\n  array.sort(function (a, b) {\n    return (a / 4 | 0) - (b / 4 | 0);\n  });\n\n  for (index = 0; index < 516; index++) {\n    if (array[index] !== expected[index]) return true;\n  }\n});\n\nvar getSortCompare = function (comparefn) {\n  return function (x, y) {\n    if (comparefn !== undefined) return +comparefn(x, y) || 0;\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (y !== y) return -1;\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (x !== x) return 1;\n    if (x === 0 && y === 0) return 1 / x > 0 && 1 / y < 0 ? 1 : -1;\n    return x > y;\n  };\n};\n\n// `%TypedArray%.prototype.sort` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.sort\nexportTypedArrayMethod('sort', function sort(comparefn) {\n  var array = this;\n  if (comparefn !== undefined) aFunction(comparefn);\n  if (STABLE_SORT) return nativeSort.call(array, comparefn);\n\n  aTypedArray(array);\n  var arrayLength = toLength(array.length);\n  var items = Array(arrayLength);\n  var index;\n\n  for (index = 0; index < arrayLength; index++) {\n    items[index] = array[index];\n  }\n\n  items = internalSort(array, getSortCompare(comparefn));\n\n  for (index = 0; index < arrayLength; index++) {\n    array[index] = items[index];\n  }\n\n  return array;\n}, !STABLE_SORT || ACCEPT_INCORRECT_ARGUMENTS);\n","var anObject = require('../internals/an-object');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\nvar getIterator = require('../internals/get-iterator');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar iteratorClose = require('../internals/iterator-close');\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nmodule.exports = function (iterable, unboundFunction, options) {\n  var that = options && options.that;\n  var AS_ENTRIES = !!(options && options.AS_ENTRIES);\n  var IS_ITERATOR = !!(options && options.IS_ITERATOR);\n  var INTERRUPTED = !!(options && options.INTERRUPTED);\n  var fn = bind(unboundFunction, that, 1 + AS_ENTRIES + INTERRUPTED);\n  var iterator, iterFn, index, length, result, next, step;\n\n  var stop = function (condition) {\n    if (iterator) iteratorClose(iterator, 'normal', condition);\n    return new Result(true, condition);\n  };\n\n  var callFn = function (value) {\n    if (AS_ENTRIES) {\n      anObject(value);\n      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);\n    } return INTERRUPTED ? fn(value, stop) : fn(value);\n  };\n\n  if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');\n    // optimisation for array iterators\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = toLength(iterable.length); length > index; index++) {\n        result = callFn(iterable[index]);\n        if (result && result instanceof Result) return result;\n      } return new Result(false);\n    }\n    iterator = getIterator(iterable, iterFn);\n  }\n\n  next = iterator.next;\n  while (!(step = next.call(iterator)).done) {\n    try {\n      result = callFn(step.value);\n    } catch (error) {\n      iteratorClose(iterator, 'throw', error);\n    }\n    if (typeof result == 'object' && result && result instanceof Result) return result;\n  } return new Result(false);\n};\n","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","// Styles\nimport './VLabel.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable, { functionalThemeClasses } from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Helpers\nimport { convertToUnit } from '../../util/helpers'\n\n/* @vue/component */\nexport default mixins(Themeable).extend({\n  name: 'v-label',\n\n  functional: true,\n\n  props: {\n    absolute: Boolean,\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    disabled: Boolean,\n    focused: Boolean,\n    for: String,\n    left: {\n      type: [Number, String],\n      default: 0,\n    },\n    right: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    value: Boolean,\n  },\n\n  render (h, ctx): VNode {\n    const { children, listeners, props } = ctx\n    const data = {\n      staticClass: 'v-label',\n      class: {\n        'v-label--active': props.value,\n        'v-label--is-disabled': props.disabled,\n        ...functionalThemeClasses(ctx),\n      },\n      attrs: {\n        for: props.for,\n        'aria-hidden': !props.for,\n      },\n      on: listeners,\n      style: {\n        left: convertToUnit(props.left),\n        right: convertToUnit(props.right),\n        position: props.absolute ? 'absolute' : 'relative',\n      },\n      ref: 'label',\n    }\n\n    return h('label', Colorable.options.methods.setTextColor(props.focused && props.color, data), children)\n  },\n})\n","import VLabel from './VLabel'\n\nexport { VLabel }\nexport default VLabel\n","// Styles\nimport './VMessages.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport mixins from '../../util/mixins'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-messages',\n\n  props: {\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n  },\n\n  methods: {\n    genChildren () {\n      return this.$createElement('transition-group', {\n        staticClass: 'v-messages__wrapper',\n        attrs: {\n          name: 'message-transition',\n          tag: 'div',\n        },\n      }, this.value.map(this.genMessage))\n    },\n    genMessage (message: string, key: number) {\n      return this.$createElement('div', {\n        staticClass: 'v-messages__message',\n        key,\n      }, getSlot(this, 'default', { message, key }) || [message])\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.color, {\n      staticClass: 'v-messages',\n      class: this.themeClasses,\n    }), [this.genChildren()])\n  },\n})\n","import VMessages from './VMessages'\n\nexport { VMessages }\nexport default VMessages\n","// Mixins\nimport Colorable from '../colorable'\nimport Themeable from '../themeable'\nimport { inject as RegistrableInject } from '../registrable'\n\n// Utilities\nimport { deepEqual } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\nimport { InputMessage, InputValidationRules } from 'vuetify/types'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'form', any>('form'),\n  Themeable,\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'validatable',\n\n  props: {\n    disabled: Boolean,\n    error: Boolean,\n    errorCount: {\n      type: [Number, String],\n      default: 1,\n    },\n    errorMessages: {\n      type: [String, Array],\n      default: () => [],\n    } as PropValidator<InputMessage | null>,\n    messages: {\n      type: [String, Array],\n      default: () => [],\n    } as PropValidator<InputMessage | null>,\n    readonly: Boolean,\n    rules: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<InputValidationRules>,\n    success: Boolean,\n    successMessages: {\n      type: [String, Array],\n      default: () => [],\n    } as PropValidator<InputMessage | null>,\n    validateOnBlur: Boolean,\n    value: { required: false },\n  },\n\n  data () {\n    return {\n      errorBucket: [] as string[],\n      hasColor: false,\n      hasFocused: false,\n      hasInput: false,\n      isFocused: false,\n      isResetting: false,\n      lazyValue: this.value,\n      valid: false,\n    }\n  },\n\n  computed: {\n    computedColor (): string | undefined {\n      if (this.isDisabled) return undefined\n      if (this.color) return this.color\n      // It's assumed that if the input is on a\n      // dark background, the user will want to\n      // have a white color. If the entire app\n      // is setup to be dark, then they will\n      // like want to use their primary color\n      if (this.isDark && !this.appIsDark) return 'white'\n      else return 'primary'\n    },\n    hasError (): boolean {\n      return (\n        this.internalErrorMessages.length > 0 ||\n        this.errorBucket.length > 0 ||\n        this.error\n      )\n    },\n    // TODO: Add logic that allows the user to enable based\n    // upon a good validation\n    hasSuccess (): boolean {\n      return (\n        this.internalSuccessMessages.length > 0 ||\n        this.success\n      )\n    },\n    externalError (): boolean {\n      return this.internalErrorMessages.length > 0 || this.error\n    },\n    hasMessages (): boolean {\n      return this.validationTarget.length > 0\n    },\n    hasState (): boolean {\n      if (this.isDisabled) return false\n\n      return (\n        this.hasSuccess ||\n        (this.shouldValidate && this.hasError)\n      )\n    },\n    internalErrorMessages (): InputValidationRules {\n      return this.genInternalMessages(this.errorMessages)\n    },\n    internalMessages (): InputValidationRules {\n      return this.genInternalMessages(this.messages)\n    },\n    internalSuccessMessages (): InputValidationRules {\n      return this.genInternalMessages(this.successMessages)\n    },\n    internalValue: {\n      get (): unknown {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n\n        this.$emit('input', val)\n      },\n    },\n    isDisabled (): boolean {\n      return this.disabled || (\n        !!this.form &&\n        this.form.disabled\n      )\n    },\n    isInteractive (): boolean {\n      return !this.isDisabled && !this.isReadonly\n    },\n    isReadonly (): boolean {\n      return this.readonly || (\n        !!this.form &&\n        this.form.readonly\n      )\n    },\n    shouldValidate (): boolean {\n      if (this.externalError) return true\n      if (this.isResetting) return false\n\n      return this.validateOnBlur\n        ? this.hasFocused && !this.isFocused\n        : (this.hasInput || this.hasFocused)\n    },\n    validations (): InputValidationRules {\n      return this.validationTarget.slice(0, Number(this.errorCount))\n    },\n    validationState (): string | undefined {\n      if (this.isDisabled) return undefined\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor) return this.computedColor\n      return undefined\n    },\n    validationTarget (): InputValidationRules {\n      if (this.internalErrorMessages.length > 0) {\n        return this.internalErrorMessages\n      } else if (this.successMessages && this.successMessages.length > 0) {\n        return this.internalSuccessMessages\n      } else if (this.messages && this.messages.length > 0) {\n        return this.internalMessages\n      } else if (this.shouldValidate) {\n        return this.errorBucket\n      } else return []\n    },\n  },\n\n  watch: {\n    rules: {\n      handler (newVal, oldVal) {\n        if (deepEqual(newVal, oldVal)) return\n        this.validate()\n      },\n      deep: true,\n    },\n    internalValue () {\n      // If it's the first time we're setting input,\n      // mark it with hasInput\n      this.hasInput = true\n      this.validateOnBlur || this.$nextTick(this.validate)\n    },\n    isFocused (val) {\n      // Should not check validation\n      // if disabled\n      if (\n        !val &&\n        !this.isDisabled\n      ) {\n        this.hasFocused = true\n        this.validateOnBlur && this.$nextTick(this.validate)\n      }\n    },\n    isResetting () {\n      setTimeout(() => {\n        this.hasInput = false\n        this.hasFocused = false\n        this.isResetting = false\n        this.validate()\n      }, 0)\n    },\n    hasError (val) {\n      if (this.shouldValidate) {\n        this.$emit('update:error', val)\n      }\n    },\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  beforeMount () {\n    this.validate()\n  },\n\n  created () {\n    this.form && this.form.register(this)\n  },\n\n  beforeDestroy () {\n    this.form && this.form.unregister(this)\n  },\n\n  methods: {\n    genInternalMessages (messages: InputMessage | null): InputValidationRules {\n      if (!messages) return []\n      else if (Array.isArray(messages)) return messages\n      else return [messages]\n    },\n    /** @public */\n    reset () {\n      this.isResetting = true\n      this.internalValue = Array.isArray(this.internalValue)\n        ? []\n        : null\n    },\n    /** @public */\n    resetValidation () {\n      this.isResetting = true\n    },\n    /** @public */\n    validate (force = false, value?: any): boolean {\n      const errorBucket = []\n      value = value || this.internalValue\n\n      if (force) this.hasInput = this.hasFocused = true\n\n      for (let index = 0; index < this.rules.length; index++) {\n        const rule = this.rules[index]\n        const valid = typeof rule === 'function' ? rule(value) : rule\n\n        if (valid === false || typeof valid === 'string') {\n          errorBucket.push(valid || '')\n        } else if (typeof valid !== 'boolean') {\n          consoleError(`Rules should return a string or boolean, received '${typeof valid}' instead`, this)\n        }\n      }\n\n      this.errorBucket = errorBucket\n      this.valid = errorBucket.length === 0\n\n      return this.valid\n    },\n  },\n})\n","// Styles\nimport './VInput.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VLabel from '../VLabel'\nimport VMessages from '../VMessages'\n\n// Mixins\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport Validatable from '../../mixins/validatable'\n\n// Utilities\nimport {\n  convertToUnit,\n  getSlot,\n  kebabCase,\n} from '../../util/helpers'\nimport mergeData from '../../util/mergeData'\n\n// Types\nimport { VNode, VNodeData, PropType } from 'vue'\nimport mixins from '../../util/mixins'\nimport { InputValidationRule } from 'vuetify/types'\n\nconst baseMixins = mixins(\n  BindsAttrs,\n  Validatable,\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  /* eslint-disable-next-line camelcase */\n  $_modelEvent: string\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-input',\n\n  inheritAttrs: false,\n\n  props: {\n    appendIcon: String,\n    backgroundColor: {\n      type: String,\n      default: '',\n    },\n    dense: Boolean,\n    height: [Number, String],\n    hideDetails: [Boolean, String] as PropType<boolean | 'auto'>,\n    hint: String,\n    id: String,\n    label: String,\n    loading: Boolean,\n    persistentHint: Boolean,\n    prependIcon: String,\n    value: null as any as PropType<any>,\n  },\n\n  data () {\n    return {\n      lazyValue: this.value,\n      hasMouseDown: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-input--has-state': this.hasState,\n        'v-input--hide-details': !this.showDetails,\n        'v-input--is-label-active': this.isLabelActive,\n        'v-input--is-dirty': this.isDirty,\n        'v-input--is-disabled': this.isDisabled,\n        'v-input--is-focused': this.isFocused,\n        // <v-switch loading>.loading === '' so we can't just cast to boolean\n        'v-input--is-loading': this.loading !== false && this.loading != null,\n        'v-input--is-readonly': this.isReadonly,\n        'v-input--dense': this.dense,\n        ...this.themeClasses,\n      }\n    },\n    computedId (): string {\n      return this.id || `input-${this._uid}`\n    },\n    hasDetails (): boolean {\n      return this.messagesToDisplay.length > 0\n    },\n    hasHint (): boolean {\n      return !this.hasMessages &&\n        !!this.hint &&\n        (this.persistentHint || this.isFocused)\n    },\n    hasLabel (): boolean {\n      return !!(this.$slots.label || this.label)\n    },\n    // Proxy for `lazyValue`\n    // This allows an input\n    // to function without\n    // a provided model\n    internalValue: {\n      get (): any {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n        this.$emit(this.$_modelEvent, val)\n      },\n    },\n    isDirty (): boolean {\n      return !!this.lazyValue\n    },\n    isLabelActive (): boolean {\n      return this.isDirty\n    },\n    messagesToDisplay (): string[] {\n      if (this.hasHint) return [this.hint]\n\n      if (!this.hasMessages) return []\n\n      return this.validations.map((validation: string | InputValidationRule) => {\n        if (typeof validation === 'string') return validation\n\n        const validationResult = validation(this.internalValue)\n\n        return typeof validationResult === 'string' ? validationResult : ''\n      }).filter(message => message !== '')\n    },\n    showDetails (): boolean {\n      return this.hideDetails === false || (this.hideDetails === 'auto' && this.hasDetails)\n    },\n  },\n\n  watch: {\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  beforeCreate () {\n    // v-radio-group needs to emit a different event\n    // https://github.com/vuetifyjs/vuetify/issues/4752\n    this.$_modelEvent = (this.$options.model && this.$options.model.event) || 'input'\n  },\n\n  methods: {\n    genContent () {\n      return [\n        this.genPrependSlot(),\n        this.genControl(),\n        this.genAppendSlot(),\n      ]\n    },\n    genControl () {\n      return this.$createElement('div', {\n        staticClass: 'v-input__control',\n        attrs: { title: this.attrs$.title },\n      }, [\n        this.genInputSlot(),\n        this.genMessages(),\n      ])\n    },\n    genDefaultSlot () {\n      return [\n        this.genLabel(),\n        this.$slots.default,\n      ]\n    },\n    genIcon (\n      type: string,\n      cb?: (e: Event) => void,\n      extraData: VNodeData = {}\n    ) {\n      const icon = (this as any)[`${type}Icon`]\n      const eventName = `click:${kebabCase(type)}`\n      const hasListener = !!(this.listeners$[eventName] || cb)\n\n      const data = mergeData({\n        attrs: {\n          'aria-label': hasListener ? kebabCase(type).split('-')[0] + ' icon' : undefined,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.isDisabled,\n          light: this.light,\n        },\n        on: !hasListener\n          ? undefined\n          : {\n            click: (e: Event) => {\n              e.preventDefault()\n              e.stopPropagation()\n\n              this.$emit(eventName, e)\n              cb && cb(e)\n            },\n            // Container has g event that will\n            // trigger menu open if enclosed\n            mouseup: (e: Event) => {\n              e.preventDefault()\n              e.stopPropagation()\n            },\n          },\n      }, extraData)\n\n      return this.$createElement('div', {\n        staticClass: `v-input__icon`,\n        class: type ? `v-input__icon--${kebabCase(type)}` : undefined,\n      }, [\n        this.$createElement(\n          VIcon,\n          data,\n          icon\n        ),\n      ])\n    },\n    genInputSlot () {\n      return this.$createElement('div', this.setBackgroundColor(this.backgroundColor, {\n        staticClass: 'v-input__slot',\n        style: { height: convertToUnit(this.height) },\n        on: {\n          click: this.onClick,\n          mousedown: this.onMouseDown,\n          mouseup: this.onMouseUp,\n        },\n        ref: 'input-slot',\n      }), [this.genDefaultSlot()])\n    },\n    genLabel () {\n      if (!this.hasLabel) return null\n\n      return this.$createElement(VLabel, {\n        props: {\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.isDisabled,\n          focused: this.hasState,\n          for: this.computedId,\n          light: this.light,\n        },\n      }, this.$slots.label || this.label)\n    },\n    genMessages () {\n      if (!this.showDetails) return null\n\n      return this.$createElement(VMessages, {\n        props: {\n          color: this.hasHint ? '' : this.validationState,\n          dark: this.dark,\n          light: this.light,\n          value: this.messagesToDisplay,\n        },\n        attrs: {\n          role: this.hasMessages ? 'alert' : null,\n        },\n        scopedSlots: {\n          default: props => getSlot(this, 'message', props),\n        },\n      })\n    },\n    genSlot (\n      type: string,\n      location: string,\n      slot: (VNode | VNode[])[]\n    ) {\n      if (!slot.length) return null\n\n      const ref = `${type}-${location}`\n\n      return this.$createElement('div', {\n        staticClass: `v-input__${ref}`,\n        ref,\n      }, slot)\n    },\n    genPrependSlot () {\n      const slot = []\n\n      if (this.$slots.prepend) {\n        slot.push(this.$slots.prepend)\n      } else if (this.prependIcon) {\n        slot.push(this.genIcon('prepend'))\n      }\n\n      return this.genSlot('prepend', 'outer', slot)\n    },\n    genAppendSlot () {\n      const slot = []\n\n      // Append icon for text field was really\n      // an appended inner icon, v-text-field\n      // will overwrite this method in order to obtain\n      // backwards compat\n      if (this.$slots.append) {\n        slot.push(this.$slots.append)\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'))\n      }\n\n      return this.genSlot('append', 'outer', slot)\n    },\n    onClick (e: Event) {\n      this.$emit('click', e)\n    },\n    onMouseDown (e: Event) {\n      this.hasMouseDown = true\n      this.$emit('mousedown', e)\n    },\n    onMouseUp (e: Event) {\n      this.hasMouseDown = false\n      this.$emit('mouseup', e)\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.validationState, {\n      staticClass: 'v-input',\n      class: this.classes,\n    }), this.genContent())\n  },\n})\n","import VInput from './VInput'\n\nexport { VInput }\nexport default VInput\n","// Styles\nimport './VCounter.sass'\n\n// Mixins\nimport Themeable, { functionalThemeClasses } from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Themeable).extend({\n  name: 'v-counter',\n\n  functional: true,\n\n  props: {\n    value: {\n      type: [Number, String],\n      default: '',\n    },\n    max: [Number, String],\n  },\n\n  render (h, ctx): VNode {\n    const { props } = ctx\n    const max = parseInt(props.max, 10)\n    const value = parseInt(props.value, 10)\n    const content = max ? `${value} / ${max}` : String(props.value)\n    const isGreater = max && (value > max)\n\n    return h('div', {\n      staticClass: 'v-counter',\n      class: {\n        'error--text': isGreater,\n        ...functionalThemeClasses(ctx),\n      },\n    }, content)\n  },\n})\n","import VCounter from './VCounter'\n\nexport { VCounter }\nexport default VCounter\n","// Directives\nimport Intersect from '../../directives/intersect'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\nexport default function intersectable (options: { onVisible: string[] }) {\n  return Vue.extend({\n    name: 'intersectable',\n\n    mounted () {\n      Intersect.inserted(this.$el as HTMLElement, {\n        name: 'intersect',\n        value: this.onObserve,\n      })\n    },\n\n    destroyed () {\n      Intersect.unbind(this.$el as HTMLElement)\n    },\n\n    methods: {\n      onObserve (entries: IntersectionObserverEntry[], observer: IntersectionObserver, isIntersecting: boolean) {\n        if (!isIntersecting) return\n\n        for (let i = 0, length = options.onVisible.length; i < length; i++) {\n          const callback = (this as any)[options.onVisible[i]]\n\n          if (typeof callback === 'function') {\n            callback()\n            continue\n          }\n\n          consoleWarn(options.onVisible[i] + ' method is not available on the instance but referenced in intersectable mixin options')\n        }\n      },\n    },\n  })\n}\n","import Vue, { VNode } from 'vue'\nimport VProgressLinear from '../../components/VProgressLinear'\n\ninterface colorable extends Vue {\n  color?: string\n}\n\n/**\n * Loadable\n *\n * @mixin\n *\n * Used to add linear progress bar to components\n * Can use a default bar with a specific color\n * or designate a custom progress linear bar\n */\n/* @vue/component */\nexport default Vue.extend<colorable>().extend({\n  name: 'loadable',\n\n  props: {\n    loading: {\n      type: [Boolean, String],\n      default: false,\n    },\n    loaderHeight: {\n      type: [Number, String],\n      default: 2,\n    },\n  },\n\n  methods: {\n    genProgress (): VNode | VNode[] | null {\n      if (this.loading === false) return null\n\n      return this.$slots.progress || this.$createElement(VProgressLinear, {\n        props: {\n          absolute: true,\n          color: (this.loading === true || this.loading === '')\n            ? (this.color || 'primary')\n            : this.loading,\n          height: this.loaderHeight,\n          indeterminate: true,\n        },\n      })\n    },\n  },\n})\n","import { VNodeDirective } from 'vue/types/vnode'\n\ninterface ResizeVNodeDirective extends VNodeDirective {\n  value?: () => void\n  options?: boolean | AddEventListenerOptions\n}\n\nfunction inserted (el: HTMLElement, binding: ResizeVNodeDirective) {\n  const callback = binding.value!\n  const options = binding.options || { passive: true }\n\n  window.addEventListener('resize', callback, options)\n  el._onResize = {\n    callback,\n    options,\n  }\n\n  if (!binding.modifiers || !binding.modifiers.quiet) {\n    callback()\n  }\n}\n\nfunction unbind (el: HTMLElement) {\n  if (!el._onResize) return\n\n  const { callback, options } = el._onResize\n  window.removeEventListener('resize', callback, options)\n  delete el._onResize\n}\n\nexport const Resize = {\n  inserted,\n  unbind,\n}\n\nexport default Resize\n","/**\n * Returns:\n *  - 'null' if the node is not attached to the DOM\n *  - the root node (HTMLDocument | ShadowRoot) otherwise\n */\nexport function attachedRoot (node: Node): null | HTMLDocument | ShadowRoot {\n  /* istanbul ignore next */\n  if (typeof node.getRootNode !== 'function') {\n    // Shadow DOM not supported (IE11), lets find the root of this node\n    while (node.parentNode) node = node.parentNode\n\n    // The root parent is the document if the node is attached to the DOM\n    if (node !== document) return null\n\n    return document\n  }\n\n  const root = node.getRootNode()\n\n  // The composed root node is the document if the node is attached to the DOM\n  if (root !== document && root.getRootNode({ composed: true }) !== document) return null\n\n  return root as HTMLDocument | ShadowRoot\n}\n","// Styles\nimport './VTextField.sass'\n\n// Extensions\nimport VInput from '../VInput'\n\n// Components\nimport VCounter from '../VCounter'\nimport VLabel from '../VLabel'\n\n// Mixins\nimport Intersectable from '../../mixins/intersectable'\nimport Loadable from '../../mixins/loadable'\nimport Validatable from '../../mixins/validatable'\n\n// Directives\nimport resize from '../../directives/resize'\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { attachedRoot } from '../../util/dom'\nimport { convertToUnit, keyCodes } from '../../util/helpers'\nimport { breaking, consoleWarn } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType } from 'vue/types'\n\nconst baseMixins = mixins(\n  VInput,\n  Intersectable({\n    onVisible: [\n      'onResize',\n      'tryAutofocus',\n    ],\n  }),\n  Loadable,\n)\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\nconst dirtyTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month']\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-text-field',\n\n  directives: {\n    resize,\n    ripple,\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    appendOuterIcon: String,\n    autofocus: Boolean,\n    clearable: Boolean,\n    clearIcon: {\n      type: String,\n      default: '$clear',\n    },\n    counter: [Boolean, Number, String],\n    counterValue: Function as PropType<(value: any) => number>,\n    filled: Boolean,\n    flat: Boolean,\n    fullWidth: Boolean,\n    label: String,\n    outlined: Boolean,\n    placeholder: String,\n    prefix: String,\n    prependInnerIcon: String,\n    persistentPlaceholder: Boolean,\n    reverse: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    singleLine: Boolean,\n    solo: Boolean,\n    soloInverted: Boolean,\n    suffix: String,\n    type: {\n      type: String,\n      default: 'text',\n    },\n  },\n\n  data: () => ({\n    badInput: false,\n    labelWidth: 0,\n    prefixWidth: 0,\n    prependWidth: 0,\n    initialValue: null,\n    isBooted: false,\n    isClearing: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-text-field': true,\n        'v-text-field--full-width': this.fullWidth,\n        'v-text-field--prefix': this.prefix,\n        'v-text-field--single-line': this.isSingle,\n        'v-text-field--solo': this.isSolo,\n        'v-text-field--solo-inverted': this.soloInverted,\n        'v-text-field--solo-flat': this.flat,\n        'v-text-field--filled': this.filled,\n        'v-text-field--is-booted': this.isBooted,\n        'v-text-field--enclosed': this.isEnclosed,\n        'v-text-field--reverse': this.reverse,\n        'v-text-field--outlined': this.outlined,\n        'v-text-field--placeholder': this.placeholder,\n        'v-text-field--rounded': this.rounded,\n        'v-text-field--shaped': this.shaped,\n      }\n    },\n    computedColor (): string | undefined {\n      const computedColor = Validatable.options.computed.computedColor.call(this)\n\n      if (!this.soloInverted || !this.isFocused) return computedColor\n\n      return this.color || 'primary'\n    },\n    computedCounterValue (): number {\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(this.internalValue)\n      }\n      return [...(this.internalValue || '').toString()].length\n    },\n    hasCounter (): boolean {\n      return this.counter !== false && this.counter != null\n    },\n    hasDetails (): boolean {\n      return VInput.options.computed.hasDetails.call(this) || this.hasCounter\n    },\n    internalValue: {\n      get (): any {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n        this.$emit('input', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.lazyValue?.toString().length > 0 || this.badInput\n    },\n    isEnclosed (): boolean {\n      return (\n        this.filled ||\n        this.isSolo ||\n        this.outlined\n      )\n    },\n    isLabelActive (): boolean {\n      return this.isDirty || dirtyTypes.includes(this.type)\n    },\n    isSingle (): boolean {\n      return (\n        this.isSolo ||\n        this.singleLine ||\n        this.fullWidth ||\n        // https://material.io/components/text-fields/#filled-text-field\n        (this.filled && !this.hasLabel)\n      )\n    },\n    isSolo (): boolean {\n      return this.solo || this.soloInverted\n    },\n    labelPosition (): Record<'left' | 'right', string | number | undefined> {\n      let offset = (this.prefix && !this.labelValue) ? this.prefixWidth : 0\n\n      if (this.labelValue && this.prependWidth) offset -= this.prependWidth\n\n      return (this.$vuetify.rtl === this.reverse) ? {\n        left: offset,\n        right: 'auto',\n      } : {\n        left: 'auto',\n        right: offset,\n      }\n    },\n    showLabel (): boolean {\n      return this.hasLabel && !(this.isSingle && this.labelValue)\n    },\n    labelValue (): boolean {\n      return this.isFocused || this.isLabelActive || this.persistentPlaceholder\n    },\n  },\n\n  watch: {\n    // labelValue: 'setLabelWidth', // moved to mounted, see #11533\n    outlined: 'setLabelWidth',\n    label () {\n      this.$nextTick(this.setLabelWidth)\n    },\n    prefix () {\n      this.$nextTick(this.setPrefixWidth)\n    },\n    isFocused: 'updateValue',\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('box')) {\n      breaking('box', 'filled', this)\n    }\n\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('browser-autocomplete')) {\n      breaking('browser-autocomplete', 'autocomplete', this)\n    }\n\n    /* istanbul ignore if */\n    if (this.shaped && !(this.filled || this.outlined || this.isSolo)) {\n      consoleWarn('shaped should be used with either filled or outlined', this)\n    }\n  },\n\n  mounted () {\n    // #11533\n    this.$watch(() => this.labelValue, this.setLabelWidth)\n\n    this.autofocus && this.tryAutofocus()\n\n    requestAnimationFrame(() => (this.isBooted = true))\n  },\n\n  methods: {\n    /** @public */\n    focus () {\n      this.onFocus()\n    },\n    /** @public */\n    blur (e?: Event) {\n      // https://github.com/vuetifyjs/vuetify/issues/5913\n      // Safari tab order gets broken if called synchronous\n      window.requestAnimationFrame(() => {\n        this.$refs.input && this.$refs.input.blur()\n      })\n    },\n    clearableCallback () {\n      this.$refs.input && this.$refs.input.focus()\n      this.$nextTick(() => this.internalValue = null)\n    },\n    genAppendSlot () {\n      const slot = []\n\n      if (this.$slots['append-outer']) {\n        slot.push(this.$slots['append-outer'] as VNode[])\n      } else if (this.appendOuterIcon) {\n        slot.push(this.genIcon('appendOuter'))\n      }\n\n      return this.genSlot('append', 'outer', slot)\n    },\n    genPrependInnerSlot () {\n      const slot = []\n\n      if (this.$slots['prepend-inner']) {\n        slot.push(this.$slots['prepend-inner'] as VNode[])\n      } else if (this.prependInnerIcon) {\n        slot.push(this.genIcon('prependInner'))\n      }\n\n      return this.genSlot('prepend', 'inner', slot)\n    },\n    genIconSlot () {\n      const slot = []\n\n      if (this.$slots.append) {\n        slot.push(this.$slots.append as VNode[])\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'))\n      }\n\n      return this.genSlot('append', 'inner', slot)\n    },\n    genInputSlot () {\n      const input = VInput.options.methods.genInputSlot.call(this)\n\n      const prepend = this.genPrependInnerSlot()\n\n      if (prepend) {\n        input.children = input.children || []\n        input.children.unshift(prepend)\n      }\n\n      return input\n    },\n    genClearIcon () {\n      if (!this.clearable) return null\n\n      // if the text field has no content then don't display the clear icon.\n      // We add an empty div because other controls depend on a ref to append inner\n      if (!this.isDirty) {\n        return this.genSlot('append', 'inner', [\n          this.$createElement('div'),\n        ])\n      }\n\n      return this.genSlot('append', 'inner', [\n        this.genIcon('clear', this.clearableCallback),\n      ])\n    },\n    genCounter () {\n      if (!this.hasCounter) return null\n\n      const max = this.counter === true ? this.attrs$.maxlength : this.counter\n\n      const props = {\n        dark: this.dark,\n        light: this.light,\n        max,\n        value: this.computedCounterValue,\n      }\n\n      return this.$scopedSlots.counter?.({ props }) ?? this.$createElement(VCounter, { props })\n    },\n    genControl () {\n      return VInput.options.methods.genControl.call(this)\n    },\n    genDefaultSlot () {\n      return [\n        this.genFieldset(),\n        this.genTextFieldSlot(),\n        this.genClearIcon(),\n        this.genIconSlot(),\n        this.genProgress(),\n      ]\n    },\n    genFieldset () {\n      if (!this.outlined) return null\n\n      return this.$createElement('fieldset', {\n        attrs: {\n          'aria-hidden': true,\n        },\n      }, [this.genLegend()])\n    },\n    genLabel () {\n      if (!this.showLabel) return null\n\n      const data = {\n        props: {\n          absolute: true,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.isDisabled,\n          focused: !this.isSingle && (this.isFocused || !!this.validationState),\n          for: this.computedId,\n          left: this.labelPosition.left,\n          light: this.light,\n          right: this.labelPosition.right,\n          value: this.labelValue,\n        },\n      }\n\n      return this.$createElement(VLabel, data, this.$slots.label || this.label)\n    },\n    genLegend () {\n      const width = !this.singleLine && (this.labelValue || this.isDirty) ? this.labelWidth : 0\n      const span = this.$createElement('span', {\n        domProps: { innerHTML: '&#8203;' },\n        staticClass: 'notranslate',\n      })\n\n      return this.$createElement('legend', {\n        style: {\n          width: !this.isSingle ? convertToUnit(width) : undefined,\n        },\n      }, [span])\n    },\n    genInput () {\n      const listeners = Object.assign({}, this.listeners$)\n      delete listeners.change // Change should not be bound externally\n      const { title, ...inputAttrs } = this.attrs$\n\n      return this.$createElement('input', {\n        style: {},\n        domProps: {\n          value: (this.type === 'number' && Object.is(this.lazyValue, -0)) ? '-0' : this.lazyValue,\n        },\n        attrs: {\n          ...inputAttrs,\n          autofocus: this.autofocus,\n          disabled: this.isDisabled,\n          id: this.computedId,\n          placeholder: this.persistentPlaceholder || this.isFocused || !this.hasLabel ? this.placeholder : undefined,\n          readonly: this.isReadonly,\n          type: this.type,\n        },\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: this.onInput,\n          focus: this.onFocus,\n          keydown: this.onKeyDown,\n        }),\n        ref: 'input',\n        directives: [{\n          name: 'resize',\n          modifiers: { quiet: true },\n          value: this.onResize,\n        }],\n      })\n    },\n    genMessages () {\n      if (!this.showDetails) return null\n\n      const messagesNode = VInput.options.methods.genMessages.call(this)\n      const counterNode = this.genCounter()\n\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__details',\n      }, [\n        messagesNode,\n        counterNode,\n      ])\n    },\n    genTextFieldSlot () {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot',\n      }, [\n        this.genLabel(),\n        this.prefix ? this.genAffix('prefix') : null,\n        this.genInput(),\n        this.suffix ? this.genAffix('suffix') : null,\n      ])\n    },\n    genAffix (type: 'prefix' | 'suffix') {\n      return this.$createElement('div', {\n        class: `v-text-field__${type}`,\n        ref: type,\n      }, this[type])\n    },\n    onBlur (e?: Event) {\n      this.isFocused = false\n      e && this.$nextTick(() => this.$emit('blur', e))\n    },\n    onClick () {\n      if (this.isFocused || this.isDisabled || !this.$refs.input) return\n\n      this.$refs.input.focus()\n    },\n    onFocus (e?: Event) {\n      if (!this.$refs.input) return\n\n      const root = attachedRoot(this.$el)\n      if (!root) return\n\n      if (root.activeElement !== this.$refs.input) {\n        return this.$refs.input.focus()\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        e && this.$emit('focus', e)\n      }\n    },\n    onInput (e: Event) {\n      const target = e.target as HTMLInputElement\n      this.internalValue = target.value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (\n        e.keyCode === keyCodes.enter &&\n        this.lazyValue !== this.initialValue\n      ) {\n        this.initialValue = this.lazyValue\n        this.$emit('change', this.initialValue)\n      }\n\n      this.$emit('keydown', e)\n    },\n    onMouseDown (e: Event) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      VInput.options.methods.onMouseDown.call(this, e)\n    },\n    onMouseUp (e: Event) {\n      if (this.hasMouseDown) this.focus()\n\n      VInput.options.methods.onMouseUp.call(this, e)\n    },\n    setLabelWidth () {\n      if (!this.outlined) return\n\n      this.labelWidth = this.$refs.label\n        ? Math.min(this.$refs.label.scrollWidth * 0.75 + 6, (this.$el as HTMLElement).offsetWidth - 24)\n        : 0\n    },\n    setPrefixWidth () {\n      if (!this.$refs.prefix) return\n\n      this.prefixWidth = this.$refs.prefix.offsetWidth\n    },\n    setPrependWidth () {\n      if (!this.outlined || !this.$refs['prepend-inner']) return\n\n      this.prependWidth = this.$refs['prepend-inner'].offsetWidth\n    },\n    tryAutofocus () {\n      if (\n        !this.autofocus ||\n        typeof document === 'undefined' ||\n        !this.$refs.input) return false\n\n      const root = attachedRoot(this.$el)\n      if (!root || root.activeElement === this.$refs.input) return false\n\n      this.$refs.input.focus()\n\n      return true\n    },\n    updateValue (val: boolean) {\n      // Sets validationState from validatable\n      this.hasColor = val\n\n      if (val) {\n        this.initialValue = this.lazyValue\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue)\n      }\n    },\n    onResize () {\n      this.setLabelWidth()\n      this.setPrefixWidth()\n      this.setPrependWidth()\n    },\n  },\n})\n","import VTextField from './VTextField'\n\nexport { VTextField }\nexport default VTextField\n","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        attrs: {\n          'aria-label': this.$vuetify.lang.t(this.closeLabel),\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","// Styles\nimport './VFileInput.sass'\n\n// Extensions\nimport VTextField from '../VTextField'\n\n// Components\nimport { VChip } from '../VChip'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n// Utilities\nimport { deepEqual, humanReadableFileSize, wrapInArray } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\nimport { mergeStyles } from '../../util/mergeData'\n\nexport default VTextField.extend({\n  name: 'v-file-input',\n\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n\n  props: {\n    chips: Boolean,\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize',\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter',\n    },\n    hideInput: Boolean,\n    multiple: Boolean,\n    placeholder: String,\n    prependIcon: {\n      type: String,\n      default: '$file',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    showSize: {\n      type: [Boolean, Number],\n      default: false,\n      validator: (v: boolean | number) => {\n        return (\n          typeof v === 'boolean' ||\n          [1000, 1024].includes(v)\n        )\n      },\n    } as PropValidator<boolean | 1000 | 1024>,\n    smallChips: Boolean,\n    truncateLength: {\n      type: [Number, String],\n      default: 22,\n    },\n    type: {\n      type: String,\n      default: 'file',\n    },\n    value: {\n      default: undefined,\n      validator: val => {\n        return wrapInArray(val).every(v => v != null && typeof v === 'object')\n      },\n    } as PropValidator<File | File[]>,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-file-input': true,\n      }\n    },\n    computedCounterValue (): string {\n      const fileCount = (this.multiple && this.lazyValue)\n        ? this.lazyValue.length\n        : (this.lazyValue instanceof File) ? 1 : 0\n\n      if (!this.showSize) return this.$vuetify.lang.t(this.counterString, fileCount)\n\n      const bytes = this.internalArrayValue.reduce((bytes: number, { size = 0 }: File) => {\n        return bytes + size\n      }, 0)\n\n      return this.$vuetify.lang.t(\n        this.counterSizeString,\n        fileCount,\n        humanReadableFileSize(bytes, this.base === 1024)\n      )\n    },\n    internalArrayValue (): File[] {\n      return wrapInArray(this.internalValue)\n    },\n    internalValue: {\n      get (): File[] {\n        return this.lazyValue\n      },\n      set (val: File | File[]) {\n        this.lazyValue = val\n        this.$emit('change', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.internalArrayValue.length > 0\n    },\n    isLabelActive (): boolean {\n      return this.isDirty\n    },\n    text (): string[] {\n      if (!this.isDirty && (this.isFocused || !this.hasLabel)) return [this.placeholder]\n\n      return this.internalArrayValue.map((file: File) => {\n        const {\n          name = '',\n          size = 0,\n        } = file\n\n        const truncatedText = this.truncateText(name)\n\n        return !this.showSize\n          ? truncatedText\n          : `${truncatedText} (${humanReadableFileSize(size, this.base === 1024)})`\n      })\n    },\n    base (): 1000 | 1024 | undefined {\n      return typeof this.showSize !== 'boolean' ? this.showSize : undefined\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n  },\n\n  watch: {\n    readonly: {\n      handler (v) {\n        if (v === true) consoleError('readonly is not supported on <v-file-input>', this)\n      },\n      immediate: true,\n    },\n    value (v) {\n      const value = this.multiple ? v : v ? [v] : []\n      if (!deepEqual(value, this.$refs.input.files)) {\n        // When the input value is changed programatically, clear the\n        // internal input's value so that the `onInput` handler\n        // can be triggered again if the user re-selects the exact\n        // same file(s). Ideally, `input.files` should be\n        // manipulated directly but that property is readonly.\n        this.$refs.input.value = ''\n      }\n    },\n  },\n\n  methods: {\n    clearableCallback () {\n      this.internalValue = this.multiple ? [] : null\n      this.$refs.input.value = ''\n    },\n    genChips () {\n      if (!this.isDirty) return []\n\n      return this.text.map((text, index) => this.$createElement(VChip, {\n        props: { small: this.smallChips },\n        on: {\n          'click:close': () => {\n            const internalValue = this.internalValue\n            internalValue.splice(index, 1)\n            this.internalValue = internalValue // Trigger the watcher\n          },\n        },\n      }, [text]))\n    },\n    genControl () {\n      const render = VTextField.options.methods.genControl.call(this)\n\n      if (this.hideInput) {\n        render.data!.style = mergeStyles(\n          render.data!.style,\n          { display: 'none' }\n        )\n      }\n\n      return render\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data!.attrs!.multiple = this.multiple\n\n      // We should not be setting value\n      // programmatically on the input\n      // when it is using type=\"file\"\n      delete input.data!.domProps!.value\n\n      // This solves an issue in Safari where\n      // nothing happens when adding a file\n      // do to the input event not firing\n      // https://github.com/vuetifyjs/vuetify/issues/7941\n      delete input.data!.on!.input\n      input.data!.on!.change = this.onInput\n\n      return [this.genSelections(), input]\n    },\n    genPrependSlot () {\n      if (!this.prependIcon) return null\n\n      const icon = this.genIcon('prepend', () => {\n        this.$refs.input.click()\n      })\n\n      return this.genSlot('prepend', 'outer', [icon])\n    },\n    genSelectionText (): string[] {\n      const length = this.text.length\n\n      if (length < 2) return this.text\n      if (this.showSize && !this.counter) return [this.computedCounterValue]\n      return [this.$vuetify.lang.t(this.counterString, length)]\n    },\n    genSelections () {\n      const children = []\n\n      if (this.isDirty && this.$scopedSlots.selection) {\n        this.internalArrayValue.forEach((file: File, index: number) => {\n          if (!this.$scopedSlots.selection) return\n\n          children.push(\n            this.$scopedSlots.selection({\n              text: this.text[index],\n              file,\n              index,\n            })\n          )\n        })\n      } else {\n        children.push(this.hasChips && this.isDirty ? this.genChips() : this.genSelectionText())\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-file-input__text',\n        class: {\n          'v-file-input__text--placeholder': this.placeholder && !this.isDirty,\n          'v-file-input__text--chips': this.hasChips && !this.$scopedSlots.selection,\n        },\n      }, children)\n    },\n    genTextFieldSlot () {\n      const node = VTextField.options.methods.genTextFieldSlot.call(this)\n\n      node.data!.on = {\n        ...(node.data!.on || {}),\n        click: () => this.$refs.input.click(),\n      }\n\n      return node\n    },\n    onInput (e: Event) {\n      const files = [...(e.target as HTMLInputElement).files || []]\n\n      this.internalValue = this.multiple ? files : files[0]\n\n      // Set initialValue here otherwise isFocused\n      // watcher in VTextField will emit a change\n      // event whenever the component is blurred\n      this.initialValue = this.internalValue\n    },\n    onKeyDown (e: KeyboardEvent) {\n      this.$emit('keydown', e)\n    },\n    truncateText (str: string) {\n      if (str.length < Number(this.truncateLength)) return str\n      const charsKeepOneSide = Math.floor((Number(this.truncateLength) - 1) / 2)\n      return `${str.slice(0, charsKeepOneSide)}…${str.slice(str.length - charsKeepOneSide)}`\n    },\n  },\n})\n","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","// Helpers\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport Vue, { PropType } from 'vue'\n\nexport type NumberOrNumberString = PropType<string | number | undefined>\n\nexport default Vue.extend({\n  name: 'measurable',\n\n  props: {\n    height: [Number, String] as NumberOrNumberString,\n    maxHeight: [Number, String] as NumberOrNumberString,\n    maxWidth: [Number, String] as NumberOrNumberString,\n    minHeight: [Number, String] as NumberOrNumberString,\n    minWidth: [Number, String] as NumberOrNumberString,\n    width: [Number, String] as NumberOrNumberString,\n  },\n\n  computed: {\n    measurableStyles (): object {\n      const styles: Record<string, string> = {}\n\n      const height = convertToUnit(this.height)\n      const minHeight = convertToUnit(this.minHeight)\n      const minWidth = convertToUnit(this.minWidth)\n      const maxHeight = convertToUnit(this.maxHeight)\n      const maxWidth = convertToUnit(this.maxWidth)\n      const width = convertToUnit(this.width)\n\n      if (height) styles.height = height\n      if (minHeight) styles.minHeight = minHeight\n      if (minWidth) styles.minWidth = minWidth\n      if (maxHeight) styles.maxHeight = maxHeight\n      if (maxWidth) styles.maxWidth = maxWidth\n      if (width) styles.width = width\n\n      return styles\n    },\n  },\n})\n","'use strict';\nvar $ = require('../internals/export');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\n// `String.prototype.includes` method\n// https://tc39.es/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~toString(requireObjectCoercible(this))\n      .indexOf(toString(notARegExp(searchString)), arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $reduceRight = require('../internals/array-reduce').right;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.reduceRicht` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduceright\nexportTypedArrayMethod('reduceRight', function reduceRight(callbackfn /* , initialValue */) {\n  return $reduceRight(aTypedArray(this), callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n});\n","'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar $toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = $toString(R.source);\n    var rf = R.flags;\n    var f = $toString(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar definePropertyModule = require('../internals/object-define-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (CONSTRUCTOR_NAME) {\n  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);\n  var defineProperty = definePropertyModule.f;\n\n  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {\n    defineProperty(Constructor, SPECIES, {\n      configurable: true,\n      get: function () { return this; }\n    });\n  }\n};\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n        injectStyles.call(\n          this,\n          (options.functional ? this.parent : this).$root.$options.shadowRoot\n        )\n      }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar typedArraySpeciesConstructor = require('../internals/typed-array-species-constructor');\nvar fails = require('../internals/fails');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar $slice = [].slice;\n\nvar FORCED = fails(function () {\n  // eslint-disable-next-line es/no-typed-arrays -- required for testing\n  new Int8Array(1).slice();\n});\n\n// `%TypedArray%.prototype.slice` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.slice\nexportTypedArrayMethod('slice', function slice(start, end) {\n  var list = $slice.call(aTypedArray(this), start, end);\n  var C = typedArraySpeciesConstructor(this);\n  var index = 0;\n  var length = list.length;\n  var result = new C(length);\n  while (length > index) result[index] = list[index++];\n  return result;\n}, FORCED);\n","var anObject = require('../internals/an-object');\n\nmodule.exports = function (iterator, kind, value) {\n  var innerResult, innerError;\n  anObject(iterator);\n  try {\n    innerResult = iterator['return'];\n    if (innerResult === undefined) {\n      if (kind === 'throw') throw value;\n      return value;\n    }\n    innerResult = innerResult.call(iterator);\n  } catch (error) {\n    innerError = true;\n    innerResult = error;\n  }\n  if (kind === 'throw') throw value;\n  if (innerError) throw innerResult;\n  anObject(innerResult);\n  return value;\n};\n","/*!\n * Vue.js v2.6.14\n * (c) 2014-2021 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\nfunction isPromise (val) {\n  return (\n    isDef(val) &&\n    typeof val.then === 'function' &&\n    typeof val.catch === 'function'\n  )\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured',\n  'serverPrefetch'\n];\n\n/*  */\n\n\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\n/**\n * unicode letters used for parsing html tags, component names and property paths.\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n */\nvar unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = new RegExp((\"[^\" + (unicodeRegExp.source) + \".$_\\\\d]\"));\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\nvar isPhantomJS = UA && /phantomjs/.test(UA);\nvar isFF = UA && UA.match(/firefox\\/(\\d+)/);\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/(function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm;\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  if (process.env.NODE_ENV !== 'production' && !config.async) {\n    // subs aren't sorted in scheduler if not running async\n    // we need to sort them now to make sure they fire in correct\n    // order\n    subs.sort(function (a, b) { return a.id - b.id; });\n  }\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (target) {\n  targetStack.push(target);\n  Dep.target = target;\n}\n\nfunction popTarget () {\n  targetStack.pop();\n  Dep.target = targetStack[targetStack.length - 1];\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      protoAugment(value, arrayMethods);\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) { return }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n\n  var keys = hasSymbol\n    ? Reflect.ownKeys(from)\n    : Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    // in case the object is already observed...\n    if (key === '__ob__') { continue }\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  var res = childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal;\n  return res\n    ? dedupeHooks(res)\n    : res\n}\n\nfunction dedupeHooks (hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!new RegExp((\"^[a-zA-Z][\\\\-\\\\.0-9_\" + (unicodeRegExp.source) + \"]*$\")).test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'should conform to valid custom element name in html5 specification.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def$$1 = dirs[key];\n      if (typeof def$$1 === 'function') {\n        dirs[key] = { bind: def$$1, update: def$$1 };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n\n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\n\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false)\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i], vm);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  var haveExpectedTypes = expectedTypes.some(function (t) { return t; });\n  if (!valid && haveExpectedTypes) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol|BigInt)$/;\n\nfunction assertType (value, type, vm) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    try {\n      valid = value instanceof type;\n    } catch (e) {\n      warn('Invalid prop type: \"' + String(type) + '\" is not a constructor', vm);\n      valid = false;\n    }\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\nvar functionTypeCheckRE = /^\\s*function (\\w+)/;\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(functionTypeCheckRE);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n    \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value);\n  // check if we need to specify expected value\n  if (\n    expectedTypes.length === 1 &&\n    isExplicable(expectedType) &&\n    isExplicable(typeof value) &&\n    !isBoolean(expectedType, receivedType)\n  ) {\n    message += \" with value \" + (styleValue(value, expectedType));\n  }\n  message += \", got \" + receivedType + \" \";\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + (styleValue(value, receivedType)) + \".\";\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return (\"\\\"\" + value + \"\\\"\")\n  } else if (type === 'Number') {\n    return (\"\" + (Number(value)))\n  } else {\n    return (\"\" + value)\n  }\n}\n\nvar EXPLICABLE_TYPES = ['string', 'number', 'boolean'];\nfunction isExplicable (value) {\n  return EXPLICABLE_TYPES.some(function (elem) { return value.toLowerCase() === elem; })\n}\n\nfunction isBoolean () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.\n  // See: https://github.com/vuejs/vuex/issues/1505\n  pushTarget();\n  try {\n    if (vm) {\n      var cur = vm;\n      while ((cur = cur.$parent)) {\n        var hooks = cur.$options.errorCaptured;\n        if (hooks) {\n          for (var i = 0; i < hooks.length; i++) {\n            try {\n              var capture = hooks[i].call(cur, err, vm, info) === false;\n              if (capture) { return }\n            } catch (e) {\n              globalHandleError(e, cur, 'errorCaptured hook');\n            }\n          }\n        }\n      }\n    }\n    globalHandleError(err, vm, info);\n  } finally {\n    popTarget();\n  }\n}\n\nfunction invokeWithErrorHandling (\n  handler,\n  context,\n  args,\n  vm,\n  info\n) {\n  var res;\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context);\n    if (res && !res._isVue && isPromise(res) && !res._handled) {\n      res.catch(function (e) { return handleError(e, vm, info + \" (Promise/async)\"); });\n      // issue #9511\n      // avoid catch triggering multiple times when nested calls\n      res._handled = true;\n    }\n  } catch (e) {\n    handleError(e, vm, info);\n  }\n  return res\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      // if the user intentionally throws the original error in the handler,\n      // do not log it twice\n      if (e !== err) {\n        logError(e, null, 'config.errorHandler');\n      }\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n\nvar isUsingMicroTask = false;\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\nvar timerFunc;\n\n// The nextTick behavior leverages the microtask queue, which can be accessed\n// via either native Promise.then or MutationObserver.\n// MutationObserver has wider support, however it is seriously bugged in\n// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n// completely stops working after triggering a few times... so, if native\n// Promise is available, we will use it:\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  timerFunc = function () {\n    p.then(flushCallbacks);\n    // In problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n  isUsingMicroTask = true;\n} else if (!isIE && typeof MutationObserver !== 'undefined' && (\n  isNative(MutationObserver) ||\n  // PhantomJS and iOS 7.x\n  MutationObserver.toString() === '[object MutationObserverConstructor]'\n)) {\n  // Use MutationObserver where native Promise is not available,\n  // e.g. PhantomJS, iOS7, Android 4.4\n  // (#6466 MutationObserver is unreliable in IE11)\n  var counter = 1;\n  var observer = new MutationObserver(flushCallbacks);\n  var textNode = document.createTextNode(String(counter));\n  observer.observe(textNode, {\n    characterData: true\n  });\n  timerFunc = function () {\n    counter = (counter + 1) % 2;\n    textNode.data = String(counter);\n  };\n  isUsingMicroTask = true;\n} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  // Fallback to setImmediate.\n  // Technically it leverages the (macro) task queue,\n  // but it is still a better choice than setTimeout.\n  timerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  // Fallback to setTimeout.\n  timerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    timerFunc();\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var warnReservedPrefix = function (target, key) {\n    warn(\n      \"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" +\n      'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n      'prevent conflicts with Vue internals. ' +\n      'See: https://vuejs.org/v2/api/#data',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) ||\n        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));\n      if (!has && !isAllowed) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      // perf.clearMeasures(name)\n    };\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns, vm) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, \"v-on handler\");\n      }\n    } else {\n      // return handler return value for single handlers\n      return invokeWithErrorHandling(fns, null, arguments, vm, \"v-on handler\")\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  createOnceHandler,\n  vm\n) {\n  var name, def$$1, cur, old, event;\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur, vm);\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject)\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      // #6574 in case the inject object is observed...\n      if (key === '__ob__') { continue }\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  if (!children || !children.length) {\n    return {}\n  }\n  var slots = {};\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction normalizeScopedSlots (\n  slots,\n  normalSlots,\n  prevSlots\n) {\n  var res;\n  var hasNormalSlots = Object.keys(normalSlots).length > 0;\n  var isStable = slots ? !!slots.$stable : !hasNormalSlots;\n  var key = slots && slots.$key;\n  if (!slots) {\n    res = {};\n  } else if (slots._normalized) {\n    // fast path 1: child component re-render only, parent did not change\n    return slots._normalized\n  } else if (\n    isStable &&\n    prevSlots &&\n    prevSlots !== emptyObject &&\n    key === prevSlots.$key &&\n    !hasNormalSlots &&\n    !prevSlots.$hasNormal\n  ) {\n    // fast path 2: stable scoped slots w/ no normal slots to proxy,\n    // only need to normalize once\n    return prevSlots\n  } else {\n    res = {};\n    for (var key$1 in slots) {\n      if (slots[key$1] && key$1[0] !== '$') {\n        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);\n      }\n    }\n  }\n  // expose normal slots on scopedSlots\n  for (var key$2 in normalSlots) {\n    if (!(key$2 in res)) {\n      res[key$2] = proxyNormalSlot(normalSlots, key$2);\n    }\n  }\n  // avoriaz seems to mock a non-extensible $scopedSlots object\n  // and when that is passed down this would cause an error\n  if (slots && Object.isExtensible(slots)) {\n    (slots)._normalized = res;\n  }\n  def(res, '$stable', isStable);\n  def(res, '$key', key);\n  def(res, '$hasNormal', hasNormalSlots);\n  return res\n}\n\nfunction normalizeScopedSlot(normalSlots, key, fn) {\n  var normalized = function () {\n    var res = arguments.length ? fn.apply(null, arguments) : fn({});\n    res = res && typeof res === 'object' && !Array.isArray(res)\n      ? [res] // single vnode\n      : normalizeChildren(res);\n    var vnode = res && res[0];\n    return res && (\n      !vnode ||\n      (res.length === 1 && vnode.isComment && !isAsyncPlaceholder(vnode)) // #9658, #10391\n    ) ? undefined\n      : res\n  };\n  // this is a slot using the new v-slot syntax without scope. although it is\n  // compiled as a scoped slot, render fn users would expect it to be present\n  // on this.$slots because the usage is semantically a normal slot.\n  if (fn.proxy) {\n    Object.defineProperty(normalSlots, key, {\n      get: normalized,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  return normalized\n}\n\nfunction proxyNormalSlot(slots, key) {\n  return function () { return slots[key]; }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    if (hasSymbol && val[Symbol.iterator]) {\n      ret = [];\n      var iterator = val[Symbol.iterator]();\n      var result = iterator.next();\n      while (!result.done) {\n        ret.push(render(result.value, ret.length));\n        result = iterator.next();\n      }\n    } else {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n  }\n  if (!isDef(ret)) {\n    ret = [];\n  }\n  (ret)._isVList = true;\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallbackRender,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) {\n    // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn('slot v-bind without argument expects an Object', this);\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes =\n      scopedSlotFn(props) ||\n      (typeof fallbackRender === 'function' ? fallbackRender() : fallbackRender);\n  } else {\n    nodes =\n      this.$slots[name] ||\n      (typeof fallbackRender === 'function' ? fallbackRender() : fallbackRender);\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n  return eventKeyCode === undefined\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        var camelizedKey = camelize(key);\n        var hyphenatedKey = hyphenate(key);\n        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res,\n  // the following are added in 2.6\n  hasDynamicKeys,\n  contentHashKey\n) {\n  res = res || { $stable: !hasDynamicKeys };\n  for (var i = 0; i < fns.length; i++) {\n    var slot = fns[i];\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, res, hasDynamicKeys);\n    } else if (slot) {\n      // marker for reverse proxying v-slot without scope on this.$slots\n      if (slot.proxy) {\n        slot.fn.proxy = true;\n      }\n      res[slot.key] = slot.fn;\n    }\n  }\n  if (contentHashKey) {\n    (res).$key = contentHashKey;\n  }\n  return res\n}\n\n/*  */\n\nfunction bindDynamicKeys (baseObj, values) {\n  for (var i = 0; i < values.length; i += 2) {\n    var key = values[i];\n    if (typeof key === 'string' && key) {\n      baseObj[values[i]] = values[i + 1];\n    } else if (process.env.NODE_ENV !== 'production' && key !== '' && key !== null) {\n      // null is a special value for explicitly removing a binding\n      warn(\n        (\"Invalid value for dynamic directive argument (expected string or null): \" + key),\n        this\n      );\n    }\n  }\n  return baseObj\n}\n\n// helper to dynamically append modifier runtime markers to event names.\n// ensure only append when value is already string, otherwise it will be cast\n// to string and cause the type check to miss.\nfunction prependModifier (value, symbol) {\n  return typeof value === 'string' ? symbol + value : value\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n  target._d = bindDynamicKeys;\n  target._p = prependModifier;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var this$1 = this;\n\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () {\n    if (!this$1.$slots) {\n      normalizeScopedSlots(\n        data.scopedSlots,\n        this$1.$slots = resolveSlots(children, parent)\n      );\n    }\n    return this$1.$slots\n  };\n\n  Object.defineProperty(this, 'scopedSlots', ({\n    enumerable: true,\n    get: function get () {\n      return normalizeScopedSlots(data.scopedSlots, this.slots())\n    }\n  }));\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (process.env.NODE_ENV !== 'production') {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n  }\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (vnode, hydrating) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  // we know it's MountedComponentVNode but flow doesn't\n  vnode,\n  // activeInstance in lifecycle state\n  parent\n) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1 (f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n  merged._merged = true;\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input'\n  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      if (process.env.NODE_ENV !== 'production' && isDef(data) && isDef(data.nativeOn) && data.tag !== 'component') {\n        warn(\n          (\"The .native modifier for v-on is only valid on components but it was used on <\" + tag + \">.\"),\n          context\n        );\n      }\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nvar currentRenderingInstance = null;\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(\n        _parentVnode.data.scopedSlots,\n        vm.$slots,\n        vm.$scopedSlots\n      );\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      // There's no need to maintain a stack because all render fns are called\n      // separately from one another. Nested component's render fns are called\n      // when parent component is patched.\n      currentRenderingInstance = vm;\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production' && vm.$options.renderError) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n        } catch (e) {\n          handleError(e, vm, \"renderError\");\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    } finally {\n      currentRenderingInstance = null;\n    }\n    // if the returned array contains only a single node, allow it\n    if (Array.isArray(vnode) && vnode.length === 1) {\n      vnode = vnode[0];\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  var owner = currentRenderingInstance;\n  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {\n    // already pending\n    factory.owners.push(owner);\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (owner && !isDef(factory.owners)) {\n    var owners = factory.owners = [owner];\n    var sync = true;\n    var timerLoading = null;\n    var timerTimeout = null\n\n    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = owners.length; i < l; i++) {\n        (owners[i]).$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        owners.length = 0;\n        if (timerLoading !== null) {\n          clearTimeout(timerLoading);\n          timerLoading = null;\n        }\n        if (timerTimeout !== null) {\n          clearTimeout(timerTimeout);\n          timerTimeout = null;\n        }\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true);\n      } else {\n        owners.length = 0;\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (isPromise(res)) {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isPromise(res.component)) {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            timerLoading = setTimeout(function () {\n              timerLoading = null;\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          timerTimeout = setTimeout(function () {\n            timerTimeout = null;\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler (event, fn) {\n  var _target = target;\n  return function onceHandler () {\n    var res = fn.apply(null, arguments);\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  }\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        vm.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      var info = \"event handler for \\\"\" + event + \"\\\"\";\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  }\n}\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    restoreActiveInstance();\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before: function before () {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // \"$stable\" marker.\n  var newScopedSlots = parentVnode.data.scopedSlots;\n  var oldScopedSlots = vm.$scopedSlots;\n  var hasDynamicScopedSlot = !!(\n    (newScopedSlots && !newScopedSlots.$stable) ||\n    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||\n    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key) ||\n    (!newScopedSlots && vm.$scopedSlots.$key)\n  );\n\n  // Any static slot children from the parent may have changed during parent's\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n  var needsForceUpdate = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    hasDynamicScopedSlot\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  var info = hook + \" hook\";\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n// Async edge case #6566 requires saving the timestamp when event listeners are\n// attached. However, calling performance.now() has a perf overhead especially\n// if the page has thousands of event listeners. Instead, we take a timestamp\n// every time the scheduler flushes and use that for all event listeners\n// attached during that flush.\nvar currentFlushTimestamp = 0;\n\n// Async edge case fix requires storing an event listener's attach timestamp.\nvar getNow = Date.now;\n\n// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\n// All IE versions use low-res event timestamps, and have problematic clock\n// implementations (#9632)\nif (inBrowser && !isIE) {\n  var performance = window.performance;\n  if (\n    performance &&\n    typeof performance.now === 'function' &&\n    getNow() > document.createEvent('Event').timeStamp\n  ) {\n    // if the event timestamp, although evaluated AFTER the Date.now(), is\n    // smaller than it, it means the event is using a hi-res timestamp,\n    // and we need to use the hi-res version for event listener timestamps as\n    // well.\n    getNow = function () { return performance.now(); };\n  }\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  currentFlushTimestamp = getNow();\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    if (watcher.before) {\n      watcher.before();\n    }\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n\n      if (process.env.NODE_ENV !== 'production' && !config.async) {\n        flushSchedulerQueue();\n        return\n      }\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\n\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        var info = \"callback for watcher \\\"\" + (this.expression) + \"\\\"\";\n        invokeWithErrorHandling(this.cb, this.vm, [value, oldValue], this.vm, info);\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (!isRoot && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      } else if (vm.$options.methods && key in vm.$options.methods) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a method.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof methods[key] !== 'function') {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has type \\\"\" + (typeof methods[key]) + \"\\\" in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function () {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      var info = \"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\";\n      pushTarget();\n      invokeWithErrorHandling(cb, vm, [watcher.value], vm, info);\n      popTarget();\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = latest[key];\n    }\n  }\n  return modified\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\n\n\n\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var entry = cache[key];\n    if (entry) {\n      var name = entry.name;\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var entry = cache[key];\n  if (entry && (!current || entry.tag !== current.tag)) {\n    entry.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  methods: {\n    cacheVNode: function cacheVNode() {\n      var ref = this;\n      var cache = ref.cache;\n      var keys = ref.keys;\n      var vnodeToCache = ref.vnodeToCache;\n      var keyToCache = ref.keyToCache;\n      if (vnodeToCache) {\n        var tag = vnodeToCache.tag;\n        var componentInstance = vnodeToCache.componentInstance;\n        var componentOptions = vnodeToCache.componentOptions;\n        cache[keyToCache] = {\n          name: getComponentName(componentOptions),\n          tag: tag,\n          componentInstance: componentInstance,\n        };\n        keys.push(keyToCache);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n        this.vnodeToCache = null;\n      }\n    }\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.cacheVNode();\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  updated: function updated () {\n    this.cacheVNode();\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        // delay setting the cache until update\n        this.vnodeToCache = vnode;\n        this.keyToCache = key;\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  // 2.6 explicit observable API\n  Vue.observable = function (obj) {\n    observe(obj);\n    return obj\n  };\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.6.14';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');\n\nvar convertEnumeratedValue = function (key, value) {\n  return isFalsyAttrValue(value) || value === 'false'\n    ? 'false'\n    // allow arbitrary string value for contenteditable\n    : key === 'contenteditable' && isValidContentEditableValue(value)\n      ? value\n      : 'true'\n};\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\nvar nodeOps = /*#__PURE__*/Object.freeze({\n  createElement: createElement$1,\n  createElementNS: createElementNS,\n  createTextNode: createTextNode,\n  createComment: createComment,\n  insertBefore: insertBefore,\n  removeChild: removeChild,\n  appendChild: appendChild,\n  parentNode: parentNode,\n  nextSibling: nextSibling,\n  tagName: tagName,\n  setTextContent: setTextContent,\n  setStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key &&\n    a.asyncFactory === b.asyncFactory && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        insert(parentElm, vnode.elm, refElm);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (nodeOps.parentNode(ref$$1) === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (\n    oldVnode,\n    vnode,\n    insertedVnodeQueue,\n    ownerArray,\n    index,\n    removeOnly\n  ) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // clone reused vnode\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkDuplicateKeys(ch);\n        }\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm)) {\n          removeVnodes([oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      dir.oldArg = oldDir.arg;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur, vnode.data.pre);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value, isInPre) {\n  if (isInPre || el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, convertEnumeratedValue(key, value));\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && value !== '' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler$1 (event, handler, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\n// #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp\n// implementation and does not fire microtasks in between event propagation, so\n// safe to exclude.\nvar useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);\n\nfunction add$1 (\n  name,\n  handler,\n  capture,\n  passive\n) {\n  // async edge case #6566: inner click event triggers patch, event handler\n  // attached to outer element during patch, and triggered again. This\n  // happens because browsers fire microtask ticks between event propagation.\n  // the solution is simple: we save the timestamp when a handler is attached,\n  // and the handler would only fire if the event passed to it was fired\n  // AFTER it was attached.\n  if (useMicrotaskFix) {\n    var attachedTimestamp = currentFlushTimestamp;\n    var original = handler;\n    handler = original._wrapper = function (e) {\n      if (\n        // no bubbling, should always fire.\n        // this is just a safety net in case event.timeStamp is unreliable in\n        // certain weird environments...\n        e.target === e.currentTarget ||\n        // event is fired after handler attachment\n        e.timeStamp >= attachedTimestamp ||\n        // bail for environments that have buggy event.timeStamp implementations\n        // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState\n        // #9681 QtWebEngine event.timeStamp is negative value\n        e.timeStamp <= 0 ||\n        // #9448 bail if event is fired in another document in a multi-page\n        // electron/nw.js app, since event.timeStamp will be using a different\n        // starting reference\n        e.target.ownerDocument !== document\n      ) {\n        return original.apply(this, arguments)\n      }\n    };\n  }\n  target$1.addEventListener(\n    name,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  name,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    name,\n    handler._wrapper || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nvar svgContainer;\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (!(key in props)) {\n      elm[key] = '';\n    }\n  }\n\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value' && elm.tagName !== 'PROGRESS') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {\n      // IE doesn't support innerHTML for SVG elements\n      svgContainer = svgContainer || document.createElement('div');\n      svgContainer.innerHTML = \"<svg>\" + cur + \"</svg>\";\n      var svg = svgContainer.firstChild;\n      while (elm.firstChild) {\n        elm.removeChild(elm.firstChild);\n      }\n      while (svg.firstChild) {\n        elm.appendChild(svg.firstChild);\n      }\n    } else if (\n      // skip the update if old and new VDOM state is the same.\n      // `value` is handled separately because the DOM value may be temporarily\n      // out of sync with VDOM state due to focus, composition and modifiers.\n      // This  #4521 by skipping the unnecessary `checked` update.\n      cur !== oldProps[key]\n    ) {\n      // some property updates can throw\n      // e.g. `value` on <progress> w/ non-finite value\n      try {\n        elm[key] = cur;\n      } catch (e) {}\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\nvar whitespaceRE = /\\s+/;\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  // JSDOM may return undefined for transition properties\n  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');\n  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');\n  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers\n// in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down (i.e. acting\n// as a floor function) causing unexpected behaviors\nfunction toMs (s) {\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    context = transitionNode.context;\n    transitionNode = transitionNode.parent;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show && el.parentNode) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n};\n\n/*  */\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };\n\nvar isVShowDirective = function (d) { return d.name === 'show'; };\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(isNotTextNode);\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(isVShowDirective)) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  beforeMount: function beforeMount () {\n    var this$1 = this;\n\n    var update = this._update;\n    this._update = function (vnode, hydrating) {\n      var restoreActiveInstance = setActiveInstance(this$1);\n      // force removing pass\n      this$1.__patch__(\n        this$1._vnode,\n        this$1.kept,\n        false, // hydrating\n        true // removeOnly (!important, avoids unnecessary moves)\n      );\n      this$1._vnode = this$1.kept;\n      restoreActiveInstance();\n      update.call(this$1, vnode, hydrating);\n    };\n  },\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (e && e.target !== el) {\n            return\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test'\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nexport default Vue;\n","var $ = require('../internals/export');\nvar is = require('../internals/same-value');\n\n// `Object.is` method\n// https://tc39.es/ecma262/#sec-object.is\n$({ target: 'Object', stat: true }, {\n  is: is\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\nvar IS_PURE = require('../internals/is-pure');\n\n// eslint-disable-next-line es/no-string-prototype-startswith -- safe\nvar $startsWith = ''.startsWith;\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('startsWith');\n// https://github.com/zloirock/core-js/pull/702\nvar MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n  var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');\n  return descriptor && !descriptor.writable;\n}();\n\n// `String.prototype.startsWith` method\n// https://tc39.es/ecma262/#sec-string.prototype.startswith\n$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = toString(requireObjectCoercible(this));\n    notARegExp(searchString);\n    var index = toLength(min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = toString(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n","var global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar bind = require('../internals/function-bind-context');\nvar html = require('../internals/html');\nvar createElement = require('../internals/document-create-element');\nvar IS_IOS = require('../internals/engine-is-ios');\nvar IS_NODE = require('../internals/engine-is-node');\n\nvar set = global.setImmediate;\nvar clear = global.clearImmediate;\nvar process = global.process;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar location, defer, channel, port;\n\ntry {\n  // Deno throws a ReferenceError on `location` access without `--location` flag\n  location = global.location;\n} catch (error) { /* empty */ }\n\nvar run = function (id) {\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\n\nvar runner = function (id) {\n  return function () {\n    run(id);\n  };\n};\n\nvar listener = function (event) {\n  run(event.data);\n};\n\nvar post = function (id) {\n  // old engines have not location.origin\n  global.postMessage(String(id), location.protocol + '//' + location.host);\n};\n\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!set || !clear) {\n  set = function setImmediate(fn) {\n    var args = [];\n    var argumentsLength = arguments.length;\n    var i = 1;\n    while (argumentsLength > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func -- spec requirement\n      (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clear = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (IS_NODE) {\n    defer = function (id) {\n      process.nextTick(runner(id));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(runner(id));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  // except iOS - https://github.com/zloirock/core-js/issues/624\n  } else if (MessageChannel && !IS_IOS) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = bind(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (\n    global.addEventListener &&\n    typeof postMessage == 'function' &&\n    !global.importScripts &&\n    location && location.protocol !== 'file:' &&\n    !fails(post)\n  ) {\n    defer = post;\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in createElement('script')) {\n    defer = function (id) {\n      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(runner(id), 0);\n    };\n  }\n}\n\nmodule.exports = {\n  set: set,\n  clear: clear\n};\n","var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  version = match[0] < 4 ? 1 : match[0] + match[1];\n} else if (userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = match[1];\n  }\n}\n\nmodule.exports = version && +version;\n","/*!\n * vuex v3.6.2\n * (c) 2021 Evan You\n * @license MIT\n */\nfunction applyMixin (Vue) {\n  var version = Number(Vue.version.split('.')[0]);\n\n  if (version >= 2) {\n    Vue.mixin({ beforeCreate: vuexInit });\n  } else {\n    // override init and inject vuex init procedure\n    // for 1.x backwards compatibility.\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      if ( options === void 0 ) options = {};\n\n      options.init = options.init\n        ? [vuexInit].concat(options.init)\n        : vuexInit;\n      _init.call(this, options);\n    };\n  }\n\n  /**\n   * Vuex init hook, injected into each instances init hooks list.\n   */\n\n  function vuexInit () {\n    var options = this.$options;\n    // store injection\n    if (options.store) {\n      this.$store = typeof options.store === 'function'\n        ? options.store()\n        : options.store;\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store;\n    }\n  }\n}\n\nvar target = typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n    ? global\n    : {};\nvar devtoolHook = target.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nfunction devtoolPlugin (store) {\n  if (!devtoolHook) { return }\n\n  store._devtoolHook = devtoolHook;\n\n  devtoolHook.emit('vuex:init', store);\n\n  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n    store.replaceState(targetState);\n  });\n\n  store.subscribe(function (mutation, state) {\n    devtoolHook.emit('vuex:mutation', mutation, state);\n  }, { prepend: true });\n\n  store.subscribeAction(function (action, state) {\n    devtoolHook.emit('vuex:action', action, state);\n  }, { prepend: true });\n}\n\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\nfunction find (list, f) {\n  return list.filter(f)[0]\n}\n\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\nfunction deepCopy (obj, cache) {\n  if ( cache === void 0 ) cache = [];\n\n  // just return if obj is immutable value\n  if (obj === null || typeof obj !== 'object') {\n    return obj\n  }\n\n  // if obj is hit, it is in circular structure\n  var hit = find(cache, function (c) { return c.original === obj; });\n  if (hit) {\n    return hit.copy\n  }\n\n  var copy = Array.isArray(obj) ? [] : {};\n  // put the copy into cache at first\n  // because we want to refer it in recursive deepCopy\n  cache.push({\n    original: obj,\n    copy: copy\n  });\n\n  Object.keys(obj).forEach(function (key) {\n    copy[key] = deepCopy(obj[key], cache);\n  });\n\n  return copy\n}\n\n/**\n * forEach for object\n */\nfunction forEachValue (obj, fn) {\n  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });\n}\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nfunction assert (condition, msg) {\n  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n}\n\nfunction partial (fn, arg) {\n  return function () {\n    return fn(arg)\n  }\n}\n\n// Base data struct for store's module, package with some attribute and method\nvar Module = function Module (rawModule, runtime) {\n  this.runtime = runtime;\n  // Store some children item\n  this._children = Object.create(null);\n  // Store the origin module object which passed by programmer\n  this._rawModule = rawModule;\n  var rawState = rawModule.state;\n\n  // Store the origin module's state\n  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};\n};\n\nvar prototypeAccessors = { namespaced: { configurable: true } };\n\nprototypeAccessors.namespaced.get = function () {\n  return !!this._rawModule.namespaced\n};\n\nModule.prototype.addChild = function addChild (key, module) {\n  this._children[key] = module;\n};\n\nModule.prototype.removeChild = function removeChild (key) {\n  delete this._children[key];\n};\n\nModule.prototype.getChild = function getChild (key) {\n  return this._children[key]\n};\n\nModule.prototype.hasChild = function hasChild (key) {\n  return key in this._children\n};\n\nModule.prototype.update = function update (rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced;\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions;\n  }\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations;\n  }\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters;\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild (fn) {\n  forEachValue(this._children, fn);\n};\n\nModule.prototype.forEachGetter = function forEachGetter (fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn);\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction (fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn);\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation (fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn);\n  }\n};\n\nObject.defineProperties( Module.prototype, prototypeAccessors );\n\nvar ModuleCollection = function ModuleCollection (rawRootModule) {\n  // register root module (Vuex.Store options)\n  this.register([], rawRootModule, false);\n};\n\nModuleCollection.prototype.get = function get (path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key)\n  }, this.root)\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace (path) {\n  var module = this.root;\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key);\n    return namespace + (module.namespaced ? key + '/' : '')\n  }, '')\n};\n\nModuleCollection.prototype.update = function update$1 (rawRootModule) {\n  update([], this.root, rawRootModule);\n};\n\nModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n    var this$1 = this;\n    if ( runtime === void 0 ) runtime = true;\n\n  if ((process.env.NODE_ENV !== 'production')) {\n    assertRawModule(path, rawModule);\n  }\n\n  var newModule = new Module(rawModule, runtime);\n  if (path.length === 0) {\n    this.root = newModule;\n  } else {\n    var parent = this.get(path.slice(0, -1));\n    parent.addChild(path[path.length - 1], newModule);\n  }\n\n  // register nested modules\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1.register(path.concat(key), rawChildModule, runtime);\n    });\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n  var child = parent.getChild(key);\n\n  if (!child) {\n    if ((process.env.NODE_ENV !== 'production')) {\n      console.warn(\n        \"[vuex] trying to unregister module '\" + key + \"', which is \" +\n        \"not registered\"\n      );\n    }\n    return\n  }\n\n  if (!child.runtime) {\n    return\n  }\n\n  parent.removeChild(key);\n};\n\nModuleCollection.prototype.isRegistered = function isRegistered (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n\n  if (parent) {\n    return parent.hasChild(key)\n  }\n\n  return false\n};\n\nfunction update (path, targetModule, newModule) {\n  if ((process.env.NODE_ENV !== 'production')) {\n    assertRawModule(path, newModule);\n  }\n\n  // update target module\n  targetModule.update(newModule);\n\n  // update nested modules\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        if ((process.env.NODE_ENV !== 'production')) {\n          console.warn(\n            \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n            'manual reload is needed'\n          );\n        }\n        return\n      }\n      update(\n        path.concat(key),\n        targetModule.getChild(key),\n        newModule.modules[key]\n      );\n    }\n  }\n}\n\nvar functionAssert = {\n  assert: function (value) { return typeof value === 'function'; },\n  expected: 'function'\n};\n\nvar objectAssert = {\n  assert: function (value) { return typeof value === 'function' ||\n    (typeof value === 'object' && typeof value.handler === 'function'); },\n  expected: 'function or object with \"handler\" function'\n};\n\nvar assertTypes = {\n  getters: functionAssert,\n  mutations: functionAssert,\n  actions: objectAssert\n};\n\nfunction assertRawModule (path, rawModule) {\n  Object.keys(assertTypes).forEach(function (key) {\n    if (!rawModule[key]) { return }\n\n    var assertOptions = assertTypes[key];\n\n    forEachValue(rawModule[key], function (value, type) {\n      assert(\n        assertOptions.assert(value),\n        makeAssertionMessage(path, key, type, value, assertOptions.expected)\n      );\n    });\n  });\n}\n\nfunction makeAssertionMessage (path, key, type, value, expected) {\n  var buf = key + \" should be \" + expected + \" but \\\"\" + key + \".\" + type + \"\\\"\";\n  if (path.length > 0) {\n    buf += \" in module \\\"\" + (path.join('.')) + \"\\\"\";\n  }\n  buf += \" is \" + (JSON.stringify(value)) + \".\";\n  return buf\n}\n\nvar Vue; // bind on install\n\nvar Store = function Store (options) {\n  var this$1 = this;\n  if ( options === void 0 ) options = {};\n\n  // Auto install if it is not done yet and `window` has `Vue`.\n  // To allow users to avoid auto-installation in some cases,\n  // this code should be placed here. See #731\n  if (!Vue && typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  if ((process.env.NODE_ENV !== 'production')) {\n    assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\");\n    assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\");\n    assert(this instanceof Store, \"store must be called with the new operator.\");\n  }\n\n  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n  var strict = options.strict; if ( strict === void 0 ) strict = false;\n\n  // store internal state\n  this._committing = false;\n  this._actions = Object.create(null);\n  this._actionSubscribers = [];\n  this._mutations = Object.create(null);\n  this._wrappedGetters = Object.create(null);\n  this._modules = new ModuleCollection(options);\n  this._modulesNamespaceMap = Object.create(null);\n  this._subscribers = [];\n  this._watcherVM = new Vue();\n  this._makeLocalGettersCache = Object.create(null);\n\n  // bind commit and dispatch to self\n  var store = this;\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n  this.dispatch = function boundDispatch (type, payload) {\n    return dispatch.call(store, type, payload)\n  };\n  this.commit = function boundCommit (type, payload, options) {\n    return commit.call(store, type, payload, options)\n  };\n\n  // strict mode\n  this.strict = strict;\n\n  var state = this._modules.root.state;\n\n  // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n  installModule(this, state, [], this._modules.root);\n\n  // initialize the store vm, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n  resetStoreVM(this, state);\n\n  // apply plugins\n  plugins.forEach(function (plugin) { return plugin(this$1); });\n\n  var useDevtools = options.devtools !== undefined ? options.devtools : Vue.config.devtools;\n  if (useDevtools) {\n    devtoolPlugin(this);\n  }\n};\n\nvar prototypeAccessors$1 = { state: { configurable: true } };\n\nprototypeAccessors$1.state.get = function () {\n  return this._vm._data.$$state\n};\n\nprototypeAccessors$1.state.set = function (v) {\n  if ((process.env.NODE_ENV !== 'production')) {\n    assert(false, \"use store.replaceState() to explicit replace store state.\");\n  }\n};\n\nStore.prototype.commit = function commit (_type, _payload, _options) {\n    var this$1 = this;\n\n  // check object-style commit\n  var ref = unifyObjectStyle(_type, _payload, _options);\n    var type = ref.type;\n    var payload = ref.payload;\n    var options = ref.options;\n\n  var mutation = { type: type, payload: payload };\n  var entry = this._mutations[type];\n  if (!entry) {\n    if ((process.env.NODE_ENV !== 'production')) {\n      console.error((\"[vuex] unknown mutation type: \" + type));\n    }\n    return\n  }\n  this._withCommit(function () {\n    entry.forEach(function commitIterator (handler) {\n      handler(payload);\n    });\n  });\n\n  this._subscribers\n    .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe\n    .forEach(function (sub) { return sub(mutation, this$1.state); });\n\n  if (\n    (process.env.NODE_ENV !== 'production') &&\n    options && options.silent\n  ) {\n    console.warn(\n      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n      'Use the filter functionality in the vue-devtools'\n    );\n  }\n};\n\nStore.prototype.dispatch = function dispatch (_type, _payload) {\n    var this$1 = this;\n\n  // check object-style dispatch\n  var ref = unifyObjectStyle(_type, _payload);\n    var type = ref.type;\n    var payload = ref.payload;\n\n  var action = { type: type, payload: payload };\n  var entry = this._actions[type];\n  if (!entry) {\n    if ((process.env.NODE_ENV !== 'production')) {\n      console.error((\"[vuex] unknown action type: \" + type));\n    }\n    return\n  }\n\n  try {\n    this._actionSubscribers\n      .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe\n      .filter(function (sub) { return sub.before; })\n      .forEach(function (sub) { return sub.before(action, this$1.state); });\n  } catch (e) {\n    if ((process.env.NODE_ENV !== 'production')) {\n      console.warn(\"[vuex] error in before action subscribers: \");\n      console.error(e);\n    }\n  }\n\n  var result = entry.length > 1\n    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n    : entry[0](payload);\n\n  return new Promise(function (resolve, reject) {\n    result.then(function (res) {\n      try {\n        this$1._actionSubscribers\n          .filter(function (sub) { return sub.after; })\n          .forEach(function (sub) { return sub.after(action, this$1.state); });\n      } catch (e) {\n        if ((process.env.NODE_ENV !== 'production')) {\n          console.warn(\"[vuex] error in after action subscribers: \");\n          console.error(e);\n        }\n      }\n      resolve(res);\n    }, function (error) {\n      try {\n        this$1._actionSubscribers\n          .filter(function (sub) { return sub.error; })\n          .forEach(function (sub) { return sub.error(action, this$1.state, error); });\n      } catch (e) {\n        if ((process.env.NODE_ENV !== 'production')) {\n          console.warn(\"[vuex] error in error action subscribers: \");\n          console.error(e);\n        }\n      }\n      reject(error);\n    });\n  })\n};\n\nStore.prototype.subscribe = function subscribe (fn, options) {\n  return genericSubscribe(fn, this._subscribers, options)\n};\n\nStore.prototype.subscribeAction = function subscribeAction (fn, options) {\n  var subs = typeof fn === 'function' ? { before: fn } : fn;\n  return genericSubscribe(subs, this._actionSubscribers, options)\n};\n\nStore.prototype.watch = function watch (getter, cb, options) {\n    var this$1 = this;\n\n  if ((process.env.NODE_ENV !== 'production')) {\n    assert(typeof getter === 'function', \"store.watch only accepts a function.\");\n  }\n  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)\n};\n\nStore.prototype.replaceState = function replaceState (state) {\n    var this$1 = this;\n\n  this._withCommit(function () {\n    this$1._vm._data.$$state = state;\n  });\n};\n\nStore.prototype.registerModule = function registerModule (path, rawModule, options) {\n    if ( options === void 0 ) options = {};\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if ((process.env.NODE_ENV !== 'production')) {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n    assert(path.length > 0, 'cannot register the root module by using registerModule.');\n  }\n\n  this._modules.register(path, rawModule);\n  installModule(this, this.state, path, this._modules.get(path), options.preserveState);\n  // reset store to update getters...\n  resetStoreVM(this, this.state);\n};\n\nStore.prototype.unregisterModule = function unregisterModule (path) {\n    var this$1 = this;\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if ((process.env.NODE_ENV !== 'production')) {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  }\n\n  this._modules.unregister(path);\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1.state, path.slice(0, -1));\n    Vue.delete(parentState, path[path.length - 1]);\n  });\n  resetStore(this);\n};\n\nStore.prototype.hasModule = function hasModule (path) {\n  if (typeof path === 'string') { path = [path]; }\n\n  if ((process.env.NODE_ENV !== 'production')) {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  }\n\n  return this._modules.isRegistered(path)\n};\n\nStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n  this._modules.update(newOptions);\n  resetStore(this, true);\n};\n\nStore.prototype._withCommit = function _withCommit (fn) {\n  var committing = this._committing;\n  this._committing = true;\n  fn();\n  this._committing = committing;\n};\n\nObject.defineProperties( Store.prototype, prototypeAccessors$1 );\n\nfunction genericSubscribe (fn, subs, options) {\n  if (subs.indexOf(fn) < 0) {\n    options && options.prepend\n      ? subs.unshift(fn)\n      : subs.push(fn);\n  }\n  return function () {\n    var i = subs.indexOf(fn);\n    if (i > -1) {\n      subs.splice(i, 1);\n    }\n  }\n}\n\nfunction resetStore (store, hot) {\n  store._actions = Object.create(null);\n  store._mutations = Object.create(null);\n  store._wrappedGetters = Object.create(null);\n  store._modulesNamespaceMap = Object.create(null);\n  var state = store.state;\n  // init all modules\n  installModule(store, state, [], store._modules.root, true);\n  // reset vm\n  resetStoreVM(store, state, hot);\n}\n\nfunction resetStoreVM (store, state, hot) {\n  var oldVm = store._vm;\n\n  // bind store public getters\n  store.getters = {};\n  // reset local getters cache\n  store._makeLocalGettersCache = Object.create(null);\n  var wrappedGetters = store._wrappedGetters;\n  var computed = {};\n  forEachValue(wrappedGetters, function (fn, key) {\n    // use computed to leverage its lazy-caching mechanism\n    // direct inline function use will lead to closure preserving oldVm.\n    // using partial to return function with only arguments preserved in closure environment.\n    computed[key] = partial(fn, store);\n    Object.defineProperty(store.getters, key, {\n      get: function () { return store._vm[key]; },\n      enumerable: true // for local getters\n    });\n  });\n\n  // use a Vue instance to store the state tree\n  // suppress warnings just in case the user has added\n  // some funky global mixins\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  store._vm = new Vue({\n    data: {\n      $$state: state\n    },\n    computed: computed\n  });\n  Vue.config.silent = silent;\n\n  // enable strict mode for new vm\n  if (store.strict) {\n    enableStrictMode(store);\n  }\n\n  if (oldVm) {\n    if (hot) {\n      // dispatch changes in all subscribed watchers\n      // to force getter re-evaluation for hot reloading.\n      store._withCommit(function () {\n        oldVm._data.$$state = null;\n      });\n    }\n    Vue.nextTick(function () { return oldVm.$destroy(); });\n  }\n}\n\nfunction installModule (store, rootState, path, module, hot) {\n  var isRoot = !path.length;\n  var namespace = store._modules.getNamespace(path);\n\n  // register in namespace map\n  if (module.namespaced) {\n    if (store._modulesNamespaceMap[namespace] && (process.env.NODE_ENV !== 'production')) {\n      console.error((\"[vuex] duplicate namespace \" + namespace + \" for the namespaced module \" + (path.join('/'))));\n    }\n    store._modulesNamespaceMap[namespace] = module;\n  }\n\n  // set state\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1));\n    var moduleName = path[path.length - 1];\n    store._withCommit(function () {\n      if ((process.env.NODE_ENV !== 'production')) {\n        if (moduleName in parentState) {\n          console.warn(\n            (\"[vuex] state field \\\"\" + moduleName + \"\\\" was overridden by a module with the same name at \\\"\" + (path.join('.')) + \"\\\"\")\n          );\n        }\n      }\n      Vue.set(parentState, moduleName, module.state);\n    });\n  }\n\n  var local = module.context = makeLocalContext(store, namespace, path);\n\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key;\n    registerMutation(store, namespacedType, mutation, local);\n  });\n\n  module.forEachAction(function (action, key) {\n    var type = action.root ? key : namespace + key;\n    var handler = action.handler || action;\n    registerAction(store, type, handler, local);\n  });\n\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key;\n    registerGetter(store, namespacedType, getter, local);\n  });\n\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot);\n  });\n}\n\n/**\n * make localized dispatch, commit, getters and state\n * if there is no namespace, just use root ones\n */\nfunction makeLocalContext (store, namespace, path) {\n  var noNamespace = namespace === '';\n\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if ((process.env.NODE_ENV !== 'production') && !store._actions[type]) {\n          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      return store.dispatch(type, payload)\n    },\n\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if ((process.env.NODE_ENV !== 'production') && !store._mutations[type]) {\n          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      store.commit(type, payload, options);\n    }\n  };\n\n  // getters and state object must be gotten lazily\n  // because they will be changed by vm update\n  Object.defineProperties(local, {\n    getters: {\n      get: noNamespace\n        ? function () { return store.getters; }\n        : function () { return makeLocalGetters(store, namespace); }\n    },\n    state: {\n      get: function () { return getNestedState(store.state, path); }\n    }\n  });\n\n  return local\n}\n\nfunction makeLocalGetters (store, namespace) {\n  if (!store._makeLocalGettersCache[namespace]) {\n    var gettersProxy = {};\n    var splitPos = namespace.length;\n    Object.keys(store.getters).forEach(function (type) {\n      // skip if the target getter is not match this namespace\n      if (type.slice(0, splitPos) !== namespace) { return }\n\n      // extract local getter type\n      var localType = type.slice(splitPos);\n\n      // Add a port to the getters proxy.\n      // Define as getter property because\n      // we do not want to evaluate the getters in this time.\n      Object.defineProperty(gettersProxy, localType, {\n        get: function () { return store.getters[type]; },\n        enumerable: true\n      });\n    });\n    store._makeLocalGettersCache[namespace] = gettersProxy;\n  }\n\n  return store._makeLocalGettersCache[namespace]\n}\n\nfunction registerMutation (store, type, handler, local) {\n  var entry = store._mutations[type] || (store._mutations[type] = []);\n  entry.push(function wrappedMutationHandler (payload) {\n    handler.call(store, local.state, payload);\n  });\n}\n\nfunction registerAction (store, type, handler, local) {\n  var entry = store._actions[type] || (store._actions[type] = []);\n  entry.push(function wrappedActionHandler (payload) {\n    var res = handler.call(store, {\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: local.state,\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload);\n    if (!isPromise(res)) {\n      res = Promise.resolve(res);\n    }\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err);\n        throw err\n      })\n    } else {\n      return res\n    }\n  });\n}\n\nfunction registerGetter (store, type, rawGetter, local) {\n  if (store._wrappedGetters[type]) {\n    if ((process.env.NODE_ENV !== 'production')) {\n      console.error((\"[vuex] duplicate getter key: \" + type));\n    }\n    return\n  }\n  store._wrappedGetters[type] = function wrappedGetter (store) {\n    return rawGetter(\n      local.state, // local state\n      local.getters, // local getters\n      store.state, // root state\n      store.getters // root getters\n    )\n  };\n}\n\nfunction enableStrictMode (store) {\n  store._vm.$watch(function () { return this._data.$$state }, function () {\n    if ((process.env.NODE_ENV !== 'production')) {\n      assert(store._committing, \"do not mutate vuex store state outside mutation handlers.\");\n    }\n  }, { deep: true, sync: true });\n}\n\nfunction getNestedState (state, path) {\n  return path.reduce(function (state, key) { return state[key]; }, state)\n}\n\nfunction unifyObjectStyle (type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload;\n    payload = type;\n    type = type.type;\n  }\n\n  if ((process.env.NODE_ENV !== 'production')) {\n    assert(typeof type === 'string', (\"expects string as the type, but found \" + (typeof type) + \".\"));\n  }\n\n  return { type: type, payload: payload, options: options }\n}\n\nfunction install (_Vue) {\n  if (Vue && _Vue === Vue) {\n    if ((process.env.NODE_ENV !== 'production')) {\n      console.error(\n        '[vuex] already installed. Vue.use(Vuex) should be called only once.'\n      );\n    }\n    return\n  }\n  Vue = _Vue;\n  applyMixin(Vue);\n}\n\n/**\n * Reduce the code which written in Vue.js for getting the state.\n * @param {String} [namespace] - Module's namespace\n * @param {Object|Array} states # Object's item can be a function which accept state and getters for param, you can do something for state and getters in it.\n * @param {Object}\n */\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {};\n  if ((process.env.NODE_ENV !== 'production') && !isValidMap(states)) {\n    console.error('[vuex] mapState: mapper parameter must be either an Array or an Object');\n  }\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState () {\n      var state = this.$store.state;\n      var getters = this.$store.getters;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapState', namespace);\n        if (!module) {\n          return\n        }\n        state = module.context.state;\n        getters = module.context.getters;\n      }\n      return typeof val === 'function'\n        ? val.call(this, state, getters)\n        : state[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\n/**\n * Reduce the code which written in Vue.js for committing the mutation\n * @param {String} [namespace] - Module's namespace\n * @param {Object|Array} mutations # Object's item can be a function which accept `commit` function as the first param, it can accept another params. You can commit mutation and do any other things in this function. specially, You need to pass anthor params from the mapped function.\n * @return {Object}\n */\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {};\n  if ((process.env.NODE_ENV !== 'production') && !isValidMap(mutations)) {\n    console.error('[vuex] mapMutations: mapper parameter must be either an Array or an Object');\n  }\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedMutation () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      // Get the commit method from store\n      var commit = this.$store.commit;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);\n        if (!module) {\n          return\n        }\n        commit = module.context.commit;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [commit].concat(args))\n        : commit.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\n/**\n * Reduce the code which written in Vue.js for getting the getters\n * @param {String} [namespace] - Module's namespace\n * @param {Object|Array} getters\n * @return {Object}\n */\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {};\n  if ((process.env.NODE_ENV !== 'production') && !isValidMap(getters)) {\n    console.error('[vuex] mapGetters: mapper parameter must be either an Array or an Object');\n  }\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    // The namespace has been mutated by normalizeNamespace\n    val = namespace + val;\n    res[key] = function mappedGetter () {\n      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {\n        return\n      }\n      if ((process.env.NODE_ENV !== 'production') && !(val in this.$store.getters)) {\n        console.error((\"[vuex] unknown getter: \" + val));\n        return\n      }\n      return this.$store.getters[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\n/**\n * Reduce the code which written in Vue.js for dispatch the action\n * @param {String} [namespace] - Module's namespace\n * @param {Object|Array} actions # Object's item can be a function which accept `dispatch` function as the first param, it can accept anthor params. You can dispatch action and do any other things in this function. specially, You need to pass anthor params from the mapped function.\n * @return {Object}\n */\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {};\n  if ((process.env.NODE_ENV !== 'production') && !isValidMap(actions)) {\n    console.error('[vuex] mapActions: mapper parameter must be either an Array or an Object');\n  }\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedAction () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      // get dispatch function from store\n      var dispatch = this.$store.dispatch;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);\n        if (!module) {\n          return\n        }\n        dispatch = module.context.dispatch;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [dispatch].concat(args))\n        : dispatch.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\n/**\n * Rebinding namespace param for mapXXX function in special scoped, and return them by simple object\n * @param {String} namespace\n * @return {Object}\n */\nvar createNamespacedHelpers = function (namespace) { return ({\n  mapState: mapState.bind(null, namespace),\n  mapGetters: mapGetters.bind(null, namespace),\n  mapMutations: mapMutations.bind(null, namespace),\n  mapActions: mapActions.bind(null, namespace)\n}); };\n\n/**\n * Normalize the map\n * normalizeMap([1, 2, 3]) => [ { key: 1, val: 1 }, { key: 2, val: 2 }, { key: 3, val: 3 } ]\n * normalizeMap({a: 1, b: 2, c: 3}) => [ { key: 'a', val: 1 }, { key: 'b', val: 2 }, { key: 'c', val: 3 } ]\n * @param {Array|Object} map\n * @return {Object}\n */\nfunction normalizeMap (map) {\n  if (!isValidMap(map)) {\n    return []\n  }\n  return Array.isArray(map)\n    ? map.map(function (key) { return ({ key: key, val: key }); })\n    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n}\n\n/**\n * Validate whether given map is valid or not\n * @param {*} map\n * @return {Boolean}\n */\nfunction isValidMap (map) {\n  return Array.isArray(map) || isObject(map)\n}\n\n/**\n * Return a function expect two param contains namespace and map. it will normalize the namespace and then the param's function will handle the new namespace and the map.\n * @param {Function} fn\n * @return {Function}\n */\nfunction normalizeNamespace (fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace;\n      namespace = '';\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/';\n    }\n    return fn(namespace, map)\n  }\n}\n\n/**\n * Search a special module from store by namespace. if module not exist, print error message.\n * @param {Object} store\n * @param {String} helper\n * @param {String} namespace\n * @return {Object}\n */\nfunction getModuleByNamespace (store, helper, namespace) {\n  var module = store._modulesNamespaceMap[namespace];\n  if ((process.env.NODE_ENV !== 'production') && !module) {\n    console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace));\n  }\n  return module\n}\n\n// Credits: borrowed code from fcomb/redux-logger\n\nfunction createLogger (ref) {\n  if ( ref === void 0 ) ref = {};\n  var collapsed = ref.collapsed; if ( collapsed === void 0 ) collapsed = true;\n  var filter = ref.filter; if ( filter === void 0 ) filter = function (mutation, stateBefore, stateAfter) { return true; };\n  var transformer = ref.transformer; if ( transformer === void 0 ) transformer = function (state) { return state; };\n  var mutationTransformer = ref.mutationTransformer; if ( mutationTransformer === void 0 ) mutationTransformer = function (mut) { return mut; };\n  var actionFilter = ref.actionFilter; if ( actionFilter === void 0 ) actionFilter = function (action, state) { return true; };\n  var actionTransformer = ref.actionTransformer; if ( actionTransformer === void 0 ) actionTransformer = function (act) { return act; };\n  var logMutations = ref.logMutations; if ( logMutations === void 0 ) logMutations = true;\n  var logActions = ref.logActions; if ( logActions === void 0 ) logActions = true;\n  var logger = ref.logger; if ( logger === void 0 ) logger = console;\n\n  return function (store) {\n    var prevState = deepCopy(store.state);\n\n    if (typeof logger === 'undefined') {\n      return\n    }\n\n    if (logMutations) {\n      store.subscribe(function (mutation, state) {\n        var nextState = deepCopy(state);\n\n        if (filter(mutation, prevState, nextState)) {\n          var formattedTime = getFormattedTime();\n          var formattedMutation = mutationTransformer(mutation);\n          var message = \"mutation \" + (mutation.type) + formattedTime;\n\n          startMessage(logger, message, collapsed);\n          logger.log('%c prev state', 'color: #9E9E9E; font-weight: bold', transformer(prevState));\n          logger.log('%c mutation', 'color: #03A9F4; font-weight: bold', formattedMutation);\n          logger.log('%c next state', 'color: #4CAF50; font-weight: bold', transformer(nextState));\n          endMessage(logger);\n        }\n\n        prevState = nextState;\n      });\n    }\n\n    if (logActions) {\n      store.subscribeAction(function (action, state) {\n        if (actionFilter(action, state)) {\n          var formattedTime = getFormattedTime();\n          var formattedAction = actionTransformer(action);\n          var message = \"action \" + (action.type) + formattedTime;\n\n          startMessage(logger, message, collapsed);\n          logger.log('%c action', 'color: #03A9F4; font-weight: bold', formattedAction);\n          endMessage(logger);\n        }\n      });\n    }\n  }\n}\n\nfunction startMessage (logger, message, collapsed) {\n  var startMessage = collapsed\n    ? logger.groupCollapsed\n    : logger.group;\n\n  // render\n  try {\n    startMessage.call(logger, message);\n  } catch (e) {\n    logger.log(message);\n  }\n}\n\nfunction endMessage (logger) {\n  try {\n    logger.groupEnd();\n  } catch (e) {\n    logger.log('—— log end ——');\n  }\n}\n\nfunction getFormattedTime () {\n  var time = new Date();\n  return (\" @ \" + (pad(time.getHours(), 2)) + \":\" + (pad(time.getMinutes(), 2)) + \":\" + (pad(time.getSeconds(), 2)) + \".\" + (pad(time.getMilliseconds(), 3)))\n}\n\nfunction repeat (str, times) {\n  return (new Array(times + 1)).join(str)\n}\n\nfunction pad (num, maxLength) {\n  return repeat('0', maxLength - num.toString().length) + num\n}\n\nvar index = {\n  Store: Store,\n  install: install,\n  version: '3.6.2',\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions,\n  createNamespacedHelpers: createNamespacedHelpers,\n  createLogger: createLogger\n};\n\nexport default index;\nexport { Store, createLogger, createNamespacedHelpers, install, mapActions, mapGetters, mapMutations, mapState };\n","import './_grid.sass'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nexport default createSimpleFunctional('spacer', 'div', 'v-spacer')\n","import Vue from 'vue'\nimport { VueConstructor } from 'vue/types/vue'\nimport { consoleWarn } from '../../util/console'\n\nfunction generateWarning (child: string, parent: string) {\n  return () => consoleWarn(`The ${child} component must be used inside a ${parent}`)\n}\n\nexport type Registrable<T extends string, C extends VueConstructor | null = null> = VueConstructor<Vue & {\n  [K in T]: C extends VueConstructor ? InstanceType<C> : {\n    register (...props: any[]): void\n    unregister (self: any): void\n  }\n}>\n\nexport function inject<\n  T extends string, C extends VueConstructor | null = null\n> (namespace: T, child?: string, parent?: string): Registrable<T, C> {\n  const defaultImpl = child && parent ? {\n    register: generateWarning(child, parent),\n    unregister: generateWarning(child, parent),\n  } : null\n\n  return Vue.extend({\n    name: 'registrable-inject',\n\n    inject: {\n      [namespace]: {\n        default: defaultImpl,\n      },\n    },\n  })\n}\n\nexport function provide (namespace: string, self = false) {\n  return Vue.extend({\n    name: 'registrable-provide',\n\n    provide (): object {\n      return {\n        [namespace]: self ? this : {\n          register: (this as any).register,\n          unregister: (this as any).unregister,\n        },\n      }\n    },\n  })\n}\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $lastIndexOf = require('../internals/array-last-index-of');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.lastIndexOf` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.lastindexof\n// eslint-disable-next-line no-unused-vars -- required for `.length`\nexportTypedArrayMethod('lastIndexOf', function lastIndexOf(searchElement /* , fromIndex */) {\n  return $lastIndexOf.apply(aTypedArray(this), arguments);\n});\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar toObject = require('../internals/to-object');\nvar nativeGetPrototypeOf = require('../internals/object-get-prototype-of');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeGetPrototypeOf(1); });\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !CORRECT_PROTOTYPE_GETTER }, {\n  getPrototypeOf: function getPrototypeOf(it) {\n    return nativeGetPrototypeOf(toObject(it));\n  }\n});\n\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","var classof = require('../internals/classof');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","import VProgressLinear from './VProgressLinear'\n\nexport { VProgressLinear }\nexport default VProgressLinear\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","var $ = require('../internals/export');\nvar repeat = require('../internals/string-repeat');\n\n// `String.prototype.repeat` method\n// https://tc39.es/ecma262/#sec-string.prototype.repeat\n$({ target: 'String', proto: true }, {\n  repeat: repeat\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $findIndex = require('../internals/array-iteration').findIndex;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.findIndex` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.findindex\nexportTypedArrayMethod('findIndex', function findIndex(predicate /* , thisArg */) {\n  return $findIndex(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n});\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it) && it !== null) {\n    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n  } return it;\n};\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar toLength = require('../internals/to-length');\nvar toOffset = require('../internals/to-offset');\nvar toObject = require('../internals/to-object');\nvar fails = require('../internals/fails');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\nvar FORCED = fails(function () {\n  // eslint-disable-next-line es/no-typed-arrays -- required for testing\n  new Int8Array(1).set({});\n});\n\n// `%TypedArray%.prototype.set` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.set\nexportTypedArrayMethod('set', function set(arrayLike /* , offset */) {\n  aTypedArray(this);\n  var offset = toOffset(arguments.length > 1 ? arguments[1] : undefined, 1);\n  var length = this.length;\n  var src = toObject(arrayLike);\n  var len = toLength(src.length);\n  var index = 0;\n  if (len + offset > length) throw RangeError('Wrong length');\n  while (index < len) this[offset + index] = src[index++];\n}, FORCED);\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar toString = require('../internals/to-string');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: toString(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n","var $ = require('../internals/export');\nvar sign = require('../internals/math-sign');\n\nvar abs = Math.abs;\nvar pow = Math.pow;\n\n// `Math.cbrt` method\n// https://tc39.es/ecma262/#sec-math.cbrt\n$({ target: 'Math', stat: true }, {\n  cbrt: function cbrt(x) {\n    return sign(x = +x) * pow(abs(x), 1 / 3);\n  }\n});\n","module.exports = {};\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $map = require('../internals/array-iteration').map;\nvar typedArraySpeciesConstructor = require('../internals/typed-array-species-constructor');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.map` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.map\nexportTypedArrayMethod('map', function map(mapfn /* , thisArg */) {\n  return $map(aTypedArray(this), mapfn, arguments.length > 1 ? arguments[1] : undefined, function (O, length) {\n    return new (typedArraySpeciesConstructor(O))(length);\n  });\n});\n","var valueOf = 1.0.valueOf;\n\n// `thisNumberValue` abstract operation\n// https://tc39.es/ecma262/#sec-thisnumbervalue\nmodule.exports = function (value) {\n  return valueOf.call(value);\n};\n","// Styles\nimport './VToolbar.sass'\n\n// Extensions\nimport VSheet from '../VSheet/VSheet'\n\n// Components\nimport VImg, { srcObject } from '../VImg/VImg'\n\n// Utilities\nimport { convertToUnit, getSlot } from '../../util/helpers'\nimport { breaking } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\n/* @vue/component */\nexport default VSheet.extend({\n  name: 'v-toolbar',\n\n  props: {\n    absolute: Boolean,\n    bottom: Boolean,\n    collapse: Boolean,\n    dense: Boolean,\n    extended: Boolean,\n    extensionHeight: {\n      default: 48,\n      type: [Number, String],\n    },\n    flat: Boolean,\n    floating: Boolean,\n    prominent: Boolean,\n    short: Boolean,\n    src: {\n      type: [String, Object] as PropType<string | srcObject>,\n      default: '',\n    },\n    tag: {\n      type: String,\n      default: 'header',\n    },\n  },\n\n  data: () => ({\n    isExtended: false,\n  }),\n\n  computed: {\n    computedHeight (): number {\n      const height = this.computedContentHeight\n\n      if (!this.isExtended) return height\n\n      const extensionHeight = parseInt(this.extensionHeight)\n\n      return this.isCollapsed\n        ? height\n        : height + (!isNaN(extensionHeight) ? extensionHeight : 0)\n    },\n    computedContentHeight (): number {\n      if (this.height) return parseInt(this.height)\n      if (this.isProminent && this.dense) return 96\n      if (this.isProminent && this.short) return 112\n      if (this.isProminent) return 128\n      if (this.dense) return 48\n      if (this.short || this.$vuetify.breakpoint.smAndDown) return 56\n      return 64\n    },\n    classes (): object {\n      return {\n        ...VSheet.options.computed.classes.call(this),\n        'v-toolbar': true,\n        'v-toolbar--absolute': this.absolute,\n        'v-toolbar--bottom': this.bottom,\n        'v-toolbar--collapse': this.collapse,\n        'v-toolbar--collapsed': this.isCollapsed,\n        'v-toolbar--dense': this.dense,\n        'v-toolbar--extended': this.isExtended,\n        'v-toolbar--flat': this.flat,\n        'v-toolbar--floating': this.floating,\n        'v-toolbar--prominent': this.isProminent,\n      }\n    },\n    isCollapsed (): boolean {\n      return this.collapse\n    },\n    isProminent (): boolean {\n      return this.prominent\n    },\n    styles (): object {\n      return {\n        ...this.measurableStyles,\n        height: convertToUnit(this.computedHeight),\n      }\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['app', '<v-app-bar app>'],\n      ['manual-scroll', '<v-app-bar :value=\"false\">'],\n      ['clipped-left', '<v-app-bar clipped-left>'],\n      ['clipped-right', '<v-app-bar clipped-right>'],\n      ['inverted-scroll', '<v-app-bar inverted-scroll>'],\n      ['scroll-off-screen', '<v-app-bar scroll-off-screen>'],\n      ['scroll-target', '<v-app-bar scroll-target>'],\n      ['scroll-threshold', '<v-app-bar scroll-threshold>'],\n      ['card', '<v-app-bar flat>'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    genBackground () {\n      const props = {\n        height: convertToUnit(this.computedHeight),\n        src: this.src,\n      }\n\n      const image = this.$scopedSlots.img\n        ? this.$scopedSlots.img({ props })\n        : this.$createElement(VImg, { props })\n\n      return this.$createElement('div', {\n        staticClass: 'v-toolbar__image',\n      }, [image])\n    },\n    genContent () {\n      return this.$createElement('div', {\n        staticClass: 'v-toolbar__content',\n        style: {\n          height: convertToUnit(this.computedContentHeight),\n        },\n      }, getSlot(this))\n    },\n    genExtension () {\n      return this.$createElement('div', {\n        staticClass: 'v-toolbar__extension',\n        style: {\n          height: convertToUnit(this.extensionHeight),\n        },\n      }, getSlot(this, 'extension'))\n    },\n  },\n\n  render (h): VNode {\n    this.isExtended = this.extended || !!this.$scopedSlots.extension\n\n    const children = [this.genContent()]\n    const data = this.setBackgroundColor(this.color, {\n      class: this.classes,\n      style: this.styles,\n      on: this.$listeners,\n    })\n\n    if (this.isExtended) children.push(this.genExtension())\n    if (this.src || this.$scopedSlots.img) children.unshift(this.genBackground())\n\n    return h(this.tag, data, children)\n  },\n})\n","import { VNodeDirective } from 'vue/types/vnode'\nimport { DirectiveOptions } from 'vue'\n\ninterface ScrollVNodeDirective extends Omit<VNodeDirective, 'modifiers'> {\n  value: EventListener | {\n    handler: EventListener\n    options?: boolean | AddEventListenerOptions\n  } | EventListenerObject & { options?: boolean | AddEventListenerOptions }\n  modifiers?: {\n    self?: boolean\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: ScrollVNodeDirective) {\n  const { self = false } = binding.modifiers || {}\n  const value = binding.value\n  const options = (typeof value === 'object' && value.options) || { passive: true }\n  const handler = typeof value === 'function' || 'handleEvent' in value ? value : value.handler\n\n  const target = self\n    ? el\n    : binding.arg\n      ? document.querySelector(binding.arg)\n      : window\n\n  if (!target) return\n\n  target.addEventListener('scroll', handler, options)\n\n  el._onScroll = {\n    handler,\n    options,\n    // Don't reference self\n    target: self ? undefined : target,\n  }\n}\n\nfunction unbind (el: HTMLElement) {\n  if (!el._onScroll) return\n\n  const { handler, options, target = el } = el._onScroll\n\n  target.removeEventListener('scroll', handler, options)\n  delete el._onScroll\n}\n\nexport const Scroll = {\n  inserted,\n  unbind,\n} as DirectiveOptions\n\nexport default Scroll\n","import { factory as PositionableFactory } from '../positionable'\nimport { TargetProp } from 'vuetify/types/services/application'\n\n// Util\nimport mixins from '../../util/mixins'\n\nexport default function applicationable (value: TargetProp, events: string[] = []) {\n  /* @vue/component */\n  return mixins(PositionableFactory(['absolute', 'fixed'])).extend({\n    name: 'applicationable',\n\n    props: {\n      app: Boolean,\n    },\n\n    computed: {\n      applicationProperty (): TargetProp {\n        return value\n      },\n    },\n\n    watch: {\n      // If previous value was app\n      // reset the provided prop\n      app (x: boolean, prev: boolean) {\n        prev\n          ? this.removeApplication(true)\n          : this.callUpdate()\n      },\n      applicationProperty (newVal, oldVal) {\n        this.$vuetify.application.unregister(this._uid, oldVal)\n      },\n    },\n\n    activated () {\n      this.callUpdate()\n    },\n\n    created () {\n      for (let i = 0, length = events.length; i < length; i++) {\n        this.$watch(events[i], this.callUpdate)\n      }\n      this.callUpdate()\n    },\n\n    mounted () {\n      this.callUpdate()\n    },\n\n    deactivated () {\n      this.removeApplication()\n    },\n\n    destroyed () {\n      this.removeApplication()\n    },\n\n    methods: {\n      callUpdate () {\n        if (!this.app) return\n\n        this.$vuetify.application.register(\n          this._uid,\n          this.applicationProperty,\n          this.updateApplication()\n        )\n      },\n      removeApplication (force = false) {\n        if (!force && !this.app) return\n\n        this.$vuetify.application.unregister(\n          this._uid,\n          this.applicationProperty\n        )\n      },\n      updateApplication: () => 0,\n    },\n  })\n}\n","// Directives\nimport { Scroll } from '../../directives'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\n/**\n * Scrollable\n *\n * Used for monitoring scrolling and\n * invoking functions based upon\n * scrolling thresholds being\n * met.\n */\n/* @vue/component */\nexport default Vue.extend({\n  name: 'scrollable',\n\n  directives: { Scroll },\n\n  props: {\n    scrollTarget: String,\n    scrollThreshold: [String, Number],\n  },\n\n  data: () => ({\n    currentScroll: 0,\n    currentThreshold: 0,\n    isActive: false,\n    isScrollingUp: false,\n    previousScroll: 0,\n    savedScroll: 0,\n    target: null as Element | null,\n  }),\n\n  computed: {\n    /**\n     * A computed property that returns\n     * whether scrolling features are\n     * enabled or disabled\n     */\n    canScroll (): boolean {\n      return typeof window !== 'undefined'\n    },\n    /**\n     * The threshold that must be met before\n     * thresholdMet function is invoked\n     */\n    computedScrollThreshold (): number {\n      return this.scrollThreshold\n        ? Number(this.scrollThreshold)\n        : 300\n    },\n  },\n\n  watch: {\n    isScrollingUp () {\n      this.savedScroll = this.savedScroll || this.currentScroll\n    },\n    isActive () {\n      this.savedScroll = 0\n    },\n  },\n\n  mounted () {\n    if (this.scrollTarget) {\n      this.target = document.querySelector(this.scrollTarget)\n\n      if (!this.target) {\n        consoleWarn(`Unable to locate element with identifier ${this.scrollTarget}`, this)\n      }\n    }\n  },\n\n  methods: {\n    onScroll () {\n      if (!this.canScroll) return\n\n      this.previousScroll = this.currentScroll\n      this.currentScroll = this.target\n        ? this.target.scrollTop\n        : window.pageYOffset\n\n      this.isScrollingUp = this.currentScroll < this.previousScroll\n      this.currentThreshold = Math.abs(this.currentScroll - this.computedScrollThreshold)\n\n      this.$nextTick(() => {\n        if (\n          Math.abs(this.currentScroll - this.savedScroll) >\n          this.computedScrollThreshold\n        ) this.thresholdMet()\n      })\n    },\n    /**\n     * The method invoked when\n     * scrolling in any direction\n     * has exceeded the threshold\n     */\n    thresholdMet () { /* noop */ },\n  },\n})\n","// Styles\nimport './VAppBar.sass'\n\n// Extensions\nimport VToolbar from '../VToolbar/VToolbar'\n\n// Directives\nimport Scroll from '../../directives/scroll'\n\n// Mixins\nimport Applicationable from '../../mixins/applicationable'\nimport Scrollable from '../../mixins/scrollable'\nimport SSRBootable from '../../mixins/ssr-bootable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  VToolbar,\n  Scrollable,\n  SSRBootable,\n  Toggleable,\n  Applicationable('top', [\n    'clippedLeft',\n    'clippedRight',\n    'computedHeight',\n    'invertedScroll',\n    'isExtended',\n    'isProminent',\n    'value',\n  ])\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-app-bar',\n\n  directives: { Scroll },\n\n  provide (): object {\n    return { VAppBar: this }\n  },\n\n  props: {\n    clippedLeft: Boolean,\n    clippedRight: Boolean,\n    collapseOnScroll: Boolean,\n    elevateOnScroll: Boolean,\n    fadeImgOnScroll: Boolean,\n    hideOnScroll: Boolean,\n    invertedScroll: Boolean,\n    scrollOffScreen: Boolean,\n    shrinkOnScroll: Boolean,\n    value: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data () {\n    return {\n      isActive: this.value,\n    }\n  },\n\n  computed: {\n    applicationProperty (): string {\n      return !this.bottom ? 'top' : 'bottom'\n    },\n    canScroll (): boolean {\n      return (\n        Scrollable.options.computed.canScroll.call(this) &&\n        (\n          this.invertedScroll ||\n          this.elevateOnScroll ||\n          this.hideOnScroll ||\n          this.collapseOnScroll ||\n          this.isBooted ||\n          // If falsy, user has provided an\n          // explicit value which should\n          // overwrite anything we do\n          !this.value\n        )\n      )\n    },\n    classes (): object {\n      return {\n        ...VToolbar.options.computed.classes.call(this),\n        'v-toolbar--collapse': this.collapse || this.collapseOnScroll,\n        'v-app-bar': true,\n        'v-app-bar--clipped': this.clippedLeft || this.clippedRight,\n        'v-app-bar--fade-img-on-scroll': this.fadeImgOnScroll,\n        'v-app-bar--elevate-on-scroll': this.elevateOnScroll,\n        'v-app-bar--fixed': !this.absolute && (this.app || this.fixed),\n        'v-app-bar--hide-shadow': this.hideShadow,\n        'v-app-bar--is-scrolled': this.currentScroll > 0,\n        'v-app-bar--shrink-on-scroll': this.shrinkOnScroll,\n      }\n    },\n    scrollRatio (): number {\n      const threshold = this.computedScrollThreshold\n      return Math.max((threshold - this.currentScroll) / threshold, 0)\n    },\n    computedContentHeight (): number {\n      if (!this.shrinkOnScroll) return VToolbar.options.computed.computedContentHeight.call(this)\n\n      const min = this.dense ? 48 : 56\n      const max = this.computedOriginalHeight\n\n      return min + (max - min) * this.scrollRatio\n    },\n    computedFontSize (): number | undefined {\n      if (!this.isProminent) return undefined\n\n      const min = 1.25\n      const max = 1.5\n\n      return min + (max - min) * this.scrollRatio\n    },\n    computedLeft (): number {\n      if (!this.app || this.clippedLeft) return 0\n\n      return this.$vuetify.application.left\n    },\n    computedMarginTop (): number {\n      if (!this.app) return 0\n\n      return this.$vuetify.application.bar\n    },\n    computedOpacity (): number | undefined {\n      if (!this.fadeImgOnScroll) return undefined\n\n      return this.scrollRatio\n    },\n    computedOriginalHeight (): number {\n      let height = VToolbar.options.computed.computedContentHeight.call(this)\n      if (this.isExtended) height += parseInt(this.extensionHeight)\n      return height\n    },\n    computedRight (): number {\n      if (!this.app || this.clippedRight) return 0\n\n      return this.$vuetify.application.right\n    },\n    computedScrollThreshold (): number {\n      if (this.scrollThreshold) return Number(this.scrollThreshold)\n\n      return this.computedOriginalHeight - (this.dense ? 48 : 56)\n    },\n    computedTransform (): number {\n      if (\n        !this.canScroll ||\n        (this.elevateOnScroll && this.currentScroll === 0 && this.isActive)\n      ) return 0\n\n      if (this.isActive) return 0\n\n      const scrollOffScreen = this.scrollOffScreen\n        ? this.computedHeight\n        : this.computedContentHeight\n\n      return this.bottom ? scrollOffScreen : -scrollOffScreen\n    },\n    hideShadow (): boolean {\n      if (this.elevateOnScroll && this.isExtended) {\n        return this.currentScroll < this.computedScrollThreshold\n      }\n\n      if (this.elevateOnScroll) {\n        return this.currentScroll === 0 ||\n          this.computedTransform < 0\n      }\n\n      return (\n        !this.isExtended ||\n        this.scrollOffScreen\n      ) && this.computedTransform !== 0\n    },\n    isCollapsed (): boolean {\n      if (!this.collapseOnScroll) {\n        return VToolbar.options.computed.isCollapsed.call(this)\n      }\n\n      return this.currentScroll > 0\n    },\n    isProminent (): boolean {\n      return (\n        VToolbar.options.computed.isProminent.call(this) ||\n        this.shrinkOnScroll\n      )\n    },\n    styles (): object {\n      return {\n        ...VToolbar.options.computed.styles.call(this),\n        fontSize: convertToUnit(this.computedFontSize, 'rem'),\n        marginTop: convertToUnit(this.computedMarginTop),\n        transform: `translateY(${convertToUnit(this.computedTransform)})`,\n        left: convertToUnit(this.computedLeft),\n        right: convertToUnit(this.computedRight),\n      }\n    },\n  },\n\n  watch: {\n    canScroll: 'onScroll',\n    computedTransform () {\n      // Normally we do not want the v-app-bar\n      // to update the application top value\n      // to avoid screen jump. However, in\n      // this situation, we must so that\n      // the clipped drawer can update\n      // its top value when scrolled\n      if (\n        !this.canScroll ||\n        (!this.clippedLeft && !this.clippedRight)\n      ) return\n\n      this.callUpdate()\n    },\n    invertedScroll (val: boolean) {\n      this.isActive = !val || this.currentScroll !== 0\n    },\n  },\n\n  created () {\n    if (this.invertedScroll) this.isActive = false\n  },\n\n  methods: {\n    genBackground () {\n      const render = VToolbar.options.methods.genBackground.call(this)\n\n      render.data = this._b(render.data || {}, render.tag!, {\n        style: { opacity: this.computedOpacity },\n      })\n\n      return render\n    },\n    updateApplication (): number {\n      return this.invertedScroll\n        ? 0\n        : this.computedHeight + this.computedTransform\n    },\n    thresholdMet () {\n      if (this.invertedScroll) {\n        this.isActive = this.currentScroll > this.computedScrollThreshold\n        return\n      }\n\n      if (this.hideOnScroll) {\n        this.isActive = this.isScrollingUp ||\n          this.currentScroll < this.computedScrollThreshold\n      }\n\n      if (this.currentThreshold < this.computedScrollThreshold) return\n\n      this.savedScroll = this.currentScroll\n    },\n  },\n\n  render (h): VNode {\n    const render = VToolbar.options.render.call(this, h)\n\n    render.data = render.data || {}\n\n    if (this.canScroll) {\n      render.data.directives = render.data.directives || []\n      render.data.directives.push({\n        arg: this.scrollTarget,\n        name: 'scroll',\n        value: this.onScroll,\n      })\n    }\n\n    return render\n  },\n})\n","var global = require('../internals/global');\n\nmodule.exports = global;\n","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","var global = require('../internals/global');\n\nmodule.exports = function (a, b) {\n  var console = global.console;\n  if (console && console.error) {\n    arguments.length === 1 ? console.error(a) : console.error(a, b);\n  }\n};\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.es/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@match logic\nfixRegExpWellKnownSymbolLogic('match', function (MATCH, nativeMatch, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.es/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = requireObjectCoercible(this);\n      var matcher = regexp == undefined ? undefined : regexp[MATCH];\n      return matcher !== undefined ? matcher.call(regexp, O) : new RegExp(regexp)[MATCH](toString(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@match\n    function (string) {\n      var rx = anObject(this);\n      var S = toString(string);\n      var res = maybeCallNative(nativeMatch, rx, S);\n\n      if (res.done) return res.value;\n\n      if (!rx.global) return regExpExec(rx, S);\n\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = toString(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n","var anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-speciesconstructor\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);\n};\n","var isObject = require('../internals/is-object');\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (pref !== 'string' && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol();\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\n// `String.prototype.trim` method\n// https://tc39.es/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n","var $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar aFunction = require('../internals/a-function');\nvar anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar create = require('../internals/object-create');\nvar bind = require('../internals/function-bind');\nvar fails = require('../internals/fails');\n\nvar nativeConstruct = getBuiltIn('Reflect', 'construct');\n\n// `Reflect.construct` method\n// https://tc39.es/ecma262/#sec-reflect.construct\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(nativeConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  nativeConstruct(function () { /* empty */ });\n});\nvar FORCED = NEW_TARGET_BUG || ARGS_BUG;\n\n$({ target: 'Reflect', stat: true, forced: FORCED, sham: FORCED }, {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.es/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar bind = require('../internals/function-bind-context');\nvar toObject = require('../internals/to-object');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar getIterator = require('../internals/get-iterator');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\n// `Array.from` method implementation\n// https://tc39.es/ecma262/#sec-array.from\nmodule.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n  var O = toObject(arrayLike);\n  var C = typeof this == 'function' ? this : Array;\n  var argumentsLength = arguments.length;\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n  var mapping = mapfn !== undefined;\n  var iteratorMethod = getIteratorMethod(O);\n  var index = 0;\n  var length, result, step, iterator, next, value;\n  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);\n  // if the target is not iterable or it's an array with the default iterator - use a simple case\n  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {\n    iterator = getIterator(O, iteratorMethod);\n    next = iterator.next;\n    result = new C();\n    for (;!(step = next.call(iterator)).done; index++) {\n      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;\n      createProperty(result, index, value);\n    }\n  } else {\n    length = toLength(O.length);\n    result = new C(length);\n    for (;length > index; index++) {\n      value = mapping ? mapfn(O[index], index) : O[index];\n      createProperty(result, index, value);\n    }\n  }\n  result.length = index;\n  return result;\n};\n","// Mixins\nimport { Registrable, inject as RegistrableInject } from '../registrable'\n\n// Utilities\nimport { ExtractVue } from '../../util/mixins'\nimport { VueConstructor } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nexport type Groupable<T extends string, C extends VueConstructor | null = null> = VueConstructor<ExtractVue<Registrable<T, C>> & {\n  activeClass: string\n  isActive: boolean\n  disabled: boolean\n  groupClasses: object\n  toggle (): void\n}>\n\nexport function factory<T extends string, C extends VueConstructor | null = null> (\n  namespace: T,\n  child?: string,\n  parent?: string\n): Groupable<T, C> {\n  return RegistrableInject<T, C>(namespace, child, parent).extend({\n    name: 'groupable',\n\n    props: {\n      activeClass: {\n        type: String,\n        default (): string | undefined {\n          if (!this[namespace]) return undefined\n\n          return this[namespace].activeClass\n        },\n      } as any as PropValidator<string>,\n      disabled: Boolean,\n    },\n\n    data () {\n      return {\n        isActive: false,\n      }\n    },\n\n    computed: {\n      groupClasses (): object {\n        if (!this.activeClass) return {}\n\n        return {\n          [this.activeClass]: this.isActive,\n        }\n      },\n    },\n\n    created () {\n      this[namespace] && (this[namespace] as any).register(this)\n    },\n\n    beforeDestroy () {\n      this[namespace] && (this[namespace] as any).unregister(this)\n    },\n\n    methods: {\n      toggle () {\n        this.$emit('change')\n      },\n    },\n  })\n}\n\n/* eslint-disable-next-line @typescript-eslint/no-redeclare */\nconst Groupable = factory('itemGroup')\n\nexport default Groupable\n","'use strict';\nvar $ = require('../internals/export');\nvar aFunction = require('../internals/a-function');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar internalSort = require('../internals/array-sort');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar FF = require('../internals/engine-ff-version');\nvar IE_OR_EDGE = require('../internals/engine-is-ie-or-edge');\nvar V8 = require('../internals/engine-v8-version');\nvar WEBKIT = require('../internals/engine-webkit-version');\n\nvar test = [];\nvar nativeSort = test.sort;\n\n// IE8-\nvar FAILS_ON_UNDEFINED = fails(function () {\n  test.sort(undefined);\n});\n// V8 bug\nvar FAILS_ON_NULL = fails(function () {\n  test.sort(null);\n});\n// Old WebKit\nvar STRICT_METHOD = arrayMethodIsStrict('sort');\n\nvar STABLE_SORT = !fails(function () {\n  // feature detection can be too slow, so check engines versions\n  if (V8) return V8 < 70;\n  if (FF && FF > 3) return;\n  if (IE_OR_EDGE) return true;\n  if (WEBKIT) return WEBKIT < 603;\n\n  var result = '';\n  var code, chr, value, index;\n\n  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)\n  for (code = 65; code < 76; code++) {\n    chr = String.fromCharCode(code);\n\n    switch (code) {\n      case 66: case 69: case 70: case 72: value = 3; break;\n      case 68: case 71: value = 4; break;\n      default: value = 2;\n    }\n\n    for (index = 0; index < 47; index++) {\n      test.push({ k: chr + index, v: value });\n    }\n  }\n\n  test.sort(function (a, b) { return b.v - a.v; });\n\n  for (index = 0; index < test.length; index++) {\n    chr = test[index].k.charAt(0);\n    if (result.charAt(result.length - 1) !== chr) result += chr;\n  }\n\n  return result !== 'DGBEFHACIJK';\n});\n\nvar FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;\n\nvar getSortCompare = function (comparefn) {\n  return function (x, y) {\n    if (y === undefined) return -1;\n    if (x === undefined) return 1;\n    if (comparefn !== undefined) return +comparefn(x, y) || 0;\n    return toString(x) > toString(y) ? 1 : -1;\n  };\n};\n\n// `Array.prototype.sort` method\n// https://tc39.es/ecma262/#sec-array.prototype.sort\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  sort: function sort(comparefn) {\n    if (comparefn !== undefined) aFunction(comparefn);\n\n    var array = toObject(this);\n\n    if (STABLE_SORT) return comparefn === undefined ? nativeSort.call(array) : nativeSort.call(array, comparefn);\n\n    var items = [];\n    var arrayLength = toLength(array.length);\n    var itemsLength, index;\n\n    for (index = 0; index < arrayLength; index++) {\n      if (index in array) items.push(array[index]);\n    }\n\n    items = internalSort(items, getSortCompare(comparefn));\n    itemsLength = items.length;\n    index = 0;\n\n    while (index < itemsLength) array[index] = items[index++];\n    while (index < arrayLength) delete array[index++];\n\n    return array;\n  }\n});\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Map` constructor\n// https://tc39.es/ecma262/#sec-map-objects\nmodule.exports = collection('Map', function (init) {\n  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var userAgent = require('../internals/engine-user-agent');\n\nvar webkit = userAgent.match(/AppleWebKit\\/(\\d+)\\./);\n\nmodule.exports = !!webkit && +webkit[1];\n","var toObject = require('../internals/to-object');\n\nvar hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty.call(toObject(it), key);\n};\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar fails = require('../internals/fails');\nvar anObject = require('../internals/an-object');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar getSubstitution = require('../internals/get-substitution');\nvar regExpExec = require('../internals/regexp-exec-abstract');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar max = Math.max;\nvar min = Math.min;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', function (_, nativeReplace, maybeCallNative) {\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.es/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(toString(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace\n    function (string, replaceValue) {\n      var rx = anObject(this);\n      var S = toString(string);\n\n      if (\n        typeof replaceValue === 'string' &&\n        replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1 &&\n        replaceValue.indexOf('$<') === -1\n      ) {\n        var res = maybeCallNative(nativeReplace, rx, S, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = toString(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = toString(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = toString(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = toString(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","// Styles\nimport './VRipple.sass'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeDirective } from 'vue'\n\nconst rippleStop = Symbol('rippleStop')\n\ntype VuetifyRippleEvent = (MouseEvent | TouchEvent | KeyboardEvent) & { [rippleStop]?: boolean }\n\nconst DELAY_RIPPLE = 80\n\nfunction transform (el: HTMLElement, value: string) {\n  el.style.transform = value\n  el.style.webkitTransform = value\n}\n\nfunction opacity (el: HTMLElement, value: number) {\n  el.style.opacity = value.toString()\n}\n\nexport interface RippleOptions {\n  class?: string\n  center?: boolean\n  circle?: boolean\n}\n\nfunction isTouchEvent (e: VuetifyRippleEvent): e is TouchEvent {\n  return e.constructor.name === 'TouchEvent'\n}\n\nfunction isKeyboardEvent (e: VuetifyRippleEvent): e is KeyboardEvent {\n  return e.constructor.name === 'KeyboardEvent'\n}\n\nconst calculate = (\n  e: VuetifyRippleEvent,\n  el: HTMLElement,\n  value: RippleOptions = {}\n) => {\n  let localX = 0\n  let localY = 0\n\n  if (!isKeyboardEvent(e)) {\n    const offset = el.getBoundingClientRect()\n    const target = isTouchEvent(e) ? e.touches[e.touches.length - 1] : e\n\n    localX = target.clientX - offset.left\n    localY = target.clientY - offset.top\n  }\n\n  let radius = 0\n  let scale = 0.3\n  if (el._ripple && el._ripple.circle) {\n    scale = 0.15\n    radius = el.clientWidth / 2\n    radius = value.center ? radius : radius + Math.sqrt((localX - radius) ** 2 + (localY - radius) ** 2) / 4\n  } else {\n    radius = Math.sqrt(el.clientWidth ** 2 + el.clientHeight ** 2) / 2\n  }\n\n  const centerX = `${(el.clientWidth - (radius * 2)) / 2}px`\n  const centerY = `${(el.clientHeight - (radius * 2)) / 2}px`\n\n  const x = value.center ? centerX : `${localX - radius}px`\n  const y = value.center ? centerY : `${localY - radius}px`\n\n  return { radius, scale, x, y, centerX, centerY }\n}\n\nconst ripples = {\n  /* eslint-disable max-statements */\n  show (\n    e: VuetifyRippleEvent,\n    el: HTMLElement,\n    value: RippleOptions = {}\n  ) {\n    if (!el._ripple || !el._ripple.enabled) {\n      return\n    }\n\n    const container = document.createElement('span')\n    const animation = document.createElement('span')\n\n    container.appendChild(animation)\n    container.className = 'v-ripple__container'\n\n    if (value.class) {\n      container.className += ` ${value.class}`\n    }\n\n    const { radius, scale, x, y, centerX, centerY } = calculate(e, el, value)\n\n    const size = `${radius * 2}px`\n    animation.className = 'v-ripple__animation'\n    animation.style.width = size\n    animation.style.height = size\n\n    el.appendChild(container)\n\n    const computed = window.getComputedStyle(el)\n    if (computed && computed.position === 'static') {\n      el.style.position = 'relative'\n      el.dataset.previousPosition = 'static'\n    }\n\n    animation.classList.add('v-ripple__animation--enter')\n    animation.classList.add('v-ripple__animation--visible')\n    transform(animation, `translate(${x}, ${y}) scale3d(${scale},${scale},${scale})`)\n    opacity(animation, 0)\n    animation.dataset.activated = String(performance.now())\n\n    setTimeout(() => {\n      animation.classList.remove('v-ripple__animation--enter')\n      animation.classList.add('v-ripple__animation--in')\n      transform(animation, `translate(${centerX}, ${centerY}) scale3d(1,1,1)`)\n      opacity(animation, 0.25)\n    }, 0)\n  },\n\n  hide (el: HTMLElement | null) {\n    if (!el || !el._ripple || !el._ripple.enabled) return\n\n    const ripples = el.getElementsByClassName('v-ripple__animation')\n\n    if (ripples.length === 0) return\n    const animation = ripples[ripples.length - 1]\n\n    if (animation.dataset.isHiding) return\n    else animation.dataset.isHiding = 'true'\n\n    const diff = performance.now() - Number(animation.dataset.activated)\n    const delay = Math.max(250 - diff, 0)\n\n    setTimeout(() => {\n      animation.classList.remove('v-ripple__animation--in')\n      animation.classList.add('v-ripple__animation--out')\n      opacity(animation, 0)\n\n      setTimeout(() => {\n        const ripples = el.getElementsByClassName('v-ripple__animation')\n        if (ripples.length === 1 && el.dataset.previousPosition) {\n          el.style.position = el.dataset.previousPosition\n          delete el.dataset.previousPosition\n        }\n\n        animation.parentNode && el.removeChild(animation.parentNode)\n      }, 300)\n    }, delay)\n  },\n}\n\nfunction isRippleEnabled (value: any): value is true {\n  return typeof value === 'undefined' || !!value\n}\n\nfunction rippleShow (e: VuetifyRippleEvent) {\n  const value: RippleOptions = {}\n  const element = e.currentTarget as HTMLElement\n\n  if (!element || !element._ripple || element._ripple.touched || e[rippleStop]) return\n\n  // Don't allow the event to trigger ripples on any other elements\n  e[rippleStop] = true\n\n  if (isTouchEvent(e)) {\n    element._ripple.touched = true\n    element._ripple.isTouch = true\n  } else {\n    // It's possible for touch events to fire\n    // as mouse events on Android/iOS, this\n    // will skip the event call if it has\n    // already been registered as touch\n    if (element._ripple.isTouch) return\n  }\n  value.center = element._ripple.centered || isKeyboardEvent(e)\n  if (element._ripple.class) {\n    value.class = element._ripple.class\n  }\n\n  if (isTouchEvent(e)) {\n    // already queued that shows or hides the ripple\n    if (element._ripple.showTimerCommit) return\n\n    element._ripple.showTimerCommit = () => {\n      ripples.show(e, element, value)\n    }\n    element._ripple.showTimer = window.setTimeout(() => {\n      if (element && element._ripple && element._ripple.showTimerCommit) {\n        element._ripple.showTimerCommit()\n        element._ripple.showTimerCommit = null\n      }\n    }, DELAY_RIPPLE)\n  } else {\n    ripples.show(e, element, value)\n  }\n}\n\nfunction rippleHide (e: Event) {\n  const element = e.currentTarget as HTMLElement | null\n  if (!element || !element._ripple) return\n\n  window.clearTimeout(element._ripple.showTimer)\n\n  // The touch interaction occurs before the show timer is triggered.\n  // We still want to show ripple effect.\n  if (e.type === 'touchend' && element._ripple.showTimerCommit) {\n    element._ripple.showTimerCommit()\n    element._ripple.showTimerCommit = null\n\n    // re-queue ripple hiding\n    element._ripple.showTimer = setTimeout(() => {\n      rippleHide(e)\n    })\n    return\n  }\n\n  window.setTimeout(() => {\n    if (element._ripple) {\n      element._ripple.touched = false\n    }\n  })\n  ripples.hide(element)\n}\n\nfunction rippleCancelShow (e: MouseEvent | TouchEvent) {\n  const element = e.currentTarget as HTMLElement | undefined\n\n  if (!element || !element._ripple) return\n\n  if (element._ripple.showTimerCommit) {\n    element._ripple.showTimerCommit = null\n  }\n\n  window.clearTimeout(element._ripple.showTimer)\n}\n\nlet keyboardRipple = false\n\nfunction keyboardRippleShow (e: KeyboardEvent) {\n  if (!keyboardRipple && (e.keyCode === keyCodes.enter || e.keyCode === keyCodes.space)) {\n    keyboardRipple = true\n    rippleShow(e)\n  }\n}\n\nfunction keyboardRippleHide (e: KeyboardEvent) {\n  keyboardRipple = false\n  rippleHide(e)\n}\n\nfunction focusRippleHide (e: FocusEvent) {\n  if (keyboardRipple === true) {\n    keyboardRipple = false\n    rippleHide(e)\n  }\n}\n\nfunction updateRipple (el: HTMLElement, binding: VNodeDirective, wasEnabled: boolean) {\n  const enabled = isRippleEnabled(binding.value)\n  if (!enabled) {\n    ripples.hide(el)\n  }\n  el._ripple = el._ripple || {}\n  el._ripple.enabled = enabled\n  const value = binding.value || {}\n  if (value.center) {\n    el._ripple.centered = true\n  }\n  if (value.class) {\n    el._ripple.class = binding.value.class\n  }\n  if (value.circle) {\n    el._ripple.circle = value.circle\n  }\n  if (enabled && !wasEnabled) {\n    el.addEventListener('touchstart', rippleShow, { passive: true })\n    el.addEventListener('touchend', rippleHide, { passive: true })\n    el.addEventListener('touchmove', rippleCancelShow, { passive: true })\n    el.addEventListener('touchcancel', rippleHide)\n\n    el.addEventListener('mousedown', rippleShow)\n    el.addEventListener('mouseup', rippleHide)\n    el.addEventListener('mouseleave', rippleHide)\n\n    el.addEventListener('keydown', keyboardRippleShow)\n    el.addEventListener('keyup', keyboardRippleHide)\n\n    el.addEventListener('blur', focusRippleHide)\n\n    // Anchor tags can be dragged, causes other hides to fail - #1537\n    el.addEventListener('dragstart', rippleHide, { passive: true })\n  } else if (!enabled && wasEnabled) {\n    removeListeners(el)\n  }\n}\n\nfunction removeListeners (el: HTMLElement) {\n  el.removeEventListener('mousedown', rippleShow)\n  el.removeEventListener('touchstart', rippleShow)\n  el.removeEventListener('touchend', rippleHide)\n  el.removeEventListener('touchmove', rippleCancelShow)\n  el.removeEventListener('touchcancel', rippleHide)\n  el.removeEventListener('mouseup', rippleHide)\n  el.removeEventListener('mouseleave', rippleHide)\n  el.removeEventListener('keydown', keyboardRippleShow)\n  el.removeEventListener('keyup', keyboardRippleHide)\n  el.removeEventListener('dragstart', rippleHide)\n  el.removeEventListener('blur', focusRippleHide)\n}\n\nfunction directive (el: HTMLElement, binding: VNodeDirective, node: VNode) {\n  updateRipple(el, binding, false)\n\n  if (process.env.NODE_ENV === 'development') {\n    // warn if an inline element is used, waiting for el to be in the DOM first\n    node.context && node.context.$nextTick(() => {\n      const computed = window.getComputedStyle(el)\n      if (computed && computed.display === 'inline') {\n        const context = (node as any).fnOptions ? [(node as any).fnOptions, node.context] : [node.componentInstance]\n        consoleWarn('v-ripple can only be used on block-level elements', ...context)\n      }\n    })\n  }\n}\n\nfunction unbind (el: HTMLElement) {\n  delete el._ripple\n  removeListeners(el)\n}\n\nfunction update (el: HTMLElement, binding: VNodeDirective) {\n  if (binding.value === binding.oldValue) {\n    return\n  }\n\n  const wasEnabled = isRippleEnabled(binding.oldValue)\n  updateRipple(el, binding, wasEnabled)\n}\n\nexport const Ripple = {\n  bind: directive,\n  unbind,\n  update,\n}\n\nexport default Ripple\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.17.2',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2021 Denis Pushkarev (zloirock.ru)'\n});\n","var getBuiltIn = require('../internals/get-built-in');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","var isSymbol = require('../internals/is-symbol');\n\nmodule.exports = function (argument) {\n  if (isSymbol(argument)) throw TypeError('Cannot convert a Symbol value to a string');\n  return String(argument);\n};\n","// a string of all valid unicode whitespaces\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = toString(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","/* eslint-disable max-len, import/export, no-use-before-define */\nimport Vue, { VueConstructor } from 'vue'\n\nexport default function mixins<T extends VueConstructor[]> (...args: T): ExtractVue<T> extends infer V ? V extends Vue ? VueConstructor<V> : never : never\nexport default function mixins<T extends Vue> (...args: VueConstructor[]): VueConstructor<T>\nexport default function mixins (...args: VueConstructor[]): VueConstructor {\n  return Vue.extend({ mixins: args })\n}\n\n/**\n * Returns the instance type from a VueConstructor\n * Useful for adding types when using mixins().extend()\n */\nexport type ExtractVue<T extends VueConstructor | VueConstructor[]> = T extends (infer U)[]\n  ? UnionToIntersection<\n    U extends VueConstructor<infer V> ? V : never\n  >\n  : T extends VueConstructor<infer V> ? V : never\n\ntype UnionToIntersection<U> =\n  (U extends any ? (k: U) => void : never) extends ((k: infer I) => void) ? I : never\n","var isRegExp = require('../internals/is-regexp');\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Uint8Array` constructor\n// https://tc39.es/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Uint8', function (init) {\n  return function Uint8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","var isObject = require('../internals/is-object');\n\nvar floor = Math.floor;\n\n// `Number.isInteger` method implementation\n// https://tc39.es/ecma262/#sec-number.isinteger\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar $join = [].join;\n\n// `%TypedArray%.prototype.join` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.join\n// eslint-disable-next-line no-unused-vars -- required for `.length`\nexportTypedArrayMethod('join', function join(separator) {\n  return $join.apply(aTypedArray(this), arguments);\n});\n","var classof = require('../internals/classof-raw');\nvar global = require('../internals/global');\n\nmodule.exports = classof(global.process) == 'process';\n","module.exports = typeof window == 'object';\n","'use strict';\nvar global = require('../internals/global');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar ArrayIterators = require('../modules/es.array.iterator');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar Uint8Array = global.Uint8Array;\nvar arrayValues = ArrayIterators.values;\nvar arrayKeys = ArrayIterators.keys;\nvar arrayEntries = ArrayIterators.entries;\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar nativeTypedArrayIterator = Uint8Array && Uint8Array.prototype[ITERATOR];\n\nvar CORRECT_ITER_NAME = !!nativeTypedArrayIterator\n  && (nativeTypedArrayIterator.name == 'values' || nativeTypedArrayIterator.name == undefined);\n\nvar typedArrayValues = function values() {\n  return arrayValues.call(aTypedArray(this));\n};\n\n// `%TypedArray%.prototype.entries` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.entries\nexportTypedArrayMethod('entries', function entries() {\n  return arrayEntries.call(aTypedArray(this));\n});\n// `%TypedArray%.prototype.keys` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.keys\nexportTypedArrayMethod('keys', function keys() {\n  return arrayKeys.call(aTypedArray(this));\n});\n// `%TypedArray%.prototype.values` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.values\nexportTypedArrayMethod('values', typedArrayValues, !CORRECT_ITER_NAME);\n// `%TypedArray%.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype-@@iterator\nexportTypedArrayMethod(ITERATOR, typedArrayValues, !CORRECT_ITER_NAME);\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\n\n// eslint-disable-next-line es/no-object-assign -- safe\nvar $assign = Object.assign;\n// eslint-disable-next-line es/no-object-defineproperty -- required for testing\nvar defineProperty = Object.defineProperty;\n\n// `Object.assign` method\n// https://tc39.es/ecma262/#sec-object.assign\nmodule.exports = !$assign || fails(function () {\n  // should have correct order of operations (Edge bug)\n  if (DESCRIPTORS && $assign({ b: 1 }, $assign(defineProperty({}, 'a', {\n    enumerable: true,\n    get: function () {\n      defineProperty(this, 'b', {\n        value: 3,\n        enumerable: false\n      });\n    }\n  }), { b: 2 })).b !== 1) return true;\n  // should work with symbols and should have deterministic property order (V8 bug)\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line es/no-symbol -- safe\n  var symbol = Symbol();\n  var alphabet = 'abcdefghijklmnopqrst';\n  A[symbol] = 7;\n  alphabet.split('').forEach(function (chr) { B[chr] = chr; });\n  return $assign({}, A)[symbol] != 7 || objectKeys($assign({}, B)).join('') != alphabet;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`\n  var T = toObject(target);\n  var argumentsLength = arguments.length;\n  var index = 1;\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  var propertyIsEnumerable = propertyIsEnumerableModule.f;\n  while (argumentsLength > index) {\n    var S = IndexedObject(arguments[index++]);\n    var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!DESCRIPTORS || propertyIsEnumerable.call(S, key)) T[key] = S[key];\n    }\n  } return T;\n} : $assign;\n","'use strict';\nvar global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_ARRAY_BUFFER = require('../internals/array-buffer-native');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefineAll = require('../internals/redefine-all');\nvar fails = require('../internals/fails');\nvar anInstance = require('../internals/an-instance');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar toIndex = require('../internals/to-index');\nvar IEEE754 = require('../internals/ieee754');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar arrayFill = require('../internals/array-fill');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar setInternalState = InternalStateModule.set;\nvar ARRAY_BUFFER = 'ArrayBuffer';\nvar DATA_VIEW = 'DataView';\nvar PROTOTYPE = 'prototype';\nvar WRONG_LENGTH = 'Wrong length';\nvar WRONG_INDEX = 'Wrong index';\nvar NativeArrayBuffer = global[ARRAY_BUFFER];\nvar $ArrayBuffer = NativeArrayBuffer;\nvar $DataView = global[DATA_VIEW];\nvar $DataViewPrototype = $DataView && $DataView[PROTOTYPE];\nvar ObjectPrototype = Object.prototype;\nvar RangeError = global.RangeError;\n\nvar packIEEE754 = IEEE754.pack;\nvar unpackIEEE754 = IEEE754.unpack;\n\nvar packInt8 = function (number) {\n  return [number & 0xFF];\n};\n\nvar packInt16 = function (number) {\n  return [number & 0xFF, number >> 8 & 0xFF];\n};\n\nvar packInt32 = function (number) {\n  return [number & 0xFF, number >> 8 & 0xFF, number >> 16 & 0xFF, number >> 24 & 0xFF];\n};\n\nvar unpackInt32 = function (buffer) {\n  return buffer[3] << 24 | buffer[2] << 16 | buffer[1] << 8 | buffer[0];\n};\n\nvar packFloat32 = function (number) {\n  return packIEEE754(number, 23, 4);\n};\n\nvar packFloat64 = function (number) {\n  return packIEEE754(number, 52, 8);\n};\n\nvar addGetter = function (Constructor, key) {\n  defineProperty(Constructor[PROTOTYPE], key, { get: function () { return getInternalState(this)[key]; } });\n};\n\nvar get = function (view, count, index, isLittleEndian) {\n  var intIndex = toIndex(index);\n  var store = getInternalState(view);\n  if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);\n  var bytes = getInternalState(store.buffer).bytes;\n  var start = intIndex + store.byteOffset;\n  var pack = bytes.slice(start, start + count);\n  return isLittleEndian ? pack : pack.reverse();\n};\n\nvar set = function (view, count, index, conversion, value, isLittleEndian) {\n  var intIndex = toIndex(index);\n  var store = getInternalState(view);\n  if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);\n  var bytes = getInternalState(store.buffer).bytes;\n  var start = intIndex + store.byteOffset;\n  var pack = conversion(+value);\n  for (var i = 0; i < count; i++) bytes[start + i] = pack[isLittleEndian ? i : count - i - 1];\n};\n\nif (!NATIVE_ARRAY_BUFFER) {\n  $ArrayBuffer = function ArrayBuffer(length) {\n    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n    var byteLength = toIndex(length);\n    setInternalState(this, {\n      bytes: arrayFill.call(new Array(byteLength), 0),\n      byteLength: byteLength\n    });\n    if (!DESCRIPTORS) this.byteLength = byteLength;\n  };\n\n  $DataView = function DataView(buffer, byteOffset, byteLength) {\n    anInstance(this, $DataView, DATA_VIEW);\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n    var bufferLength = getInternalState(buffer).byteLength;\n    var offset = toInteger(byteOffset);\n    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset');\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\n    setInternalState(this, {\n      buffer: buffer,\n      byteLength: byteLength,\n      byteOffset: offset\n    });\n    if (!DESCRIPTORS) {\n      this.buffer = buffer;\n      this.byteLength = byteLength;\n      this.byteOffset = offset;\n    }\n  };\n\n  if (DESCRIPTORS) {\n    addGetter($ArrayBuffer, 'byteLength');\n    addGetter($DataView, 'buffer');\n    addGetter($DataView, 'byteLength');\n    addGetter($DataView, 'byteOffset');\n  }\n\n  redefineAll($DataView[PROTOTYPE], {\n    getInt8: function getInt8(byteOffset) {\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\n    },\n    getUint8: function getUint8(byteOffset) {\n      return get(this, 1, byteOffset)[0];\n    },\n    getInt16: function getInt16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n    },\n    getUint16: function getUint16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);\n      return bytes[1] << 8 | bytes[0];\n    },\n    getInt32: function getInt32(byteOffset /* , littleEndian */) {\n      return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined));\n    },\n    getUint32: function getUint32(byteOffset /* , littleEndian */) {\n      return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined)) >>> 0;\n    },\n    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 23);\n    },\n    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 8, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 52);\n    },\n    setInt8: function setInt8(byteOffset, value) {\n      set(this, 1, byteOffset, packInt8, value);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      set(this, 1, byteOffset, packInt8, value);\n    },\n    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packFloat32, value, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {\n      set(this, 8, byteOffset, packFloat64, value, arguments.length > 2 ? arguments[2] : undefined);\n    }\n  });\n} else {\n  /* eslint-disable no-new -- required for testing */\n  if (!fails(function () {\n    NativeArrayBuffer(1);\n  }) || !fails(function () {\n    new NativeArrayBuffer(-1);\n  }) || fails(function () {\n    new NativeArrayBuffer();\n    new NativeArrayBuffer(1.5);\n    new NativeArrayBuffer(NaN);\n    return NativeArrayBuffer.name != ARRAY_BUFFER;\n  })) {\n  /* eslint-enable no-new -- required for testing */\n    $ArrayBuffer = function ArrayBuffer(length) {\n      anInstance(this, $ArrayBuffer);\n      return new NativeArrayBuffer(toIndex(length));\n    };\n    var ArrayBufferPrototype = $ArrayBuffer[PROTOTYPE] = NativeArrayBuffer[PROTOTYPE];\n    for (var keys = getOwnPropertyNames(NativeArrayBuffer), j = 0, key; keys.length > j;) {\n      if (!((key = keys[j++]) in $ArrayBuffer)) {\n        createNonEnumerableProperty($ArrayBuffer, key, NativeArrayBuffer[key]);\n      }\n    }\n    ArrayBufferPrototype.constructor = $ArrayBuffer;\n  }\n\n  // WebKit bug - the same parent prototype for typed arrays and data view\n  if (setPrototypeOf && getPrototypeOf($DataViewPrototype) !== ObjectPrototype) {\n    setPrototypeOf($DataViewPrototype, ObjectPrototype);\n  }\n\n  // iOS Safari 7.x bug\n  var testView = new $DataView(new $ArrayBuffer(2));\n  var $setInt8 = $DataViewPrototype.setInt8;\n  testView.setInt8(0, 2147483648);\n  testView.setInt8(1, 2147483649);\n  if (testView.getInt8(0) || !testView.getInt8(1)) redefineAll($DataViewPrototype, {\n    setInt8: function setInt8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    }\n  }, { unsafe: true });\n}\n\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\nsetToStringTag($DataView, DATA_VIEW);\n\nmodule.exports = {\n  ArrayBuffer: $ArrayBuffer,\n  DataView: $DataView\n};\n","import './VGrid.sass'\n\nimport Vue, { VNode, PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-col',\n  functional: true,\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false,\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null,\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null,\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: (str: any) => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str),\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n  render (h, { props, data, children, parent }): VNode {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('col-'))\n\n      classList.push({\n        // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.\n        col: !hasColClasses || !props.cols,\n        [`col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(props.tag, mergeData(data, { class: classList }), children)\n  },\n})\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $some = require('../internals/array-iteration').some;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.some` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.some\nexportTypedArrayMethod('some', function some(callbackfn /* , thisArg */) {\n  return $some(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n});\n","// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function installComponents (component, components) {\n  var options = typeof component.exports === 'function'\n    ? component.exports.extendOptions\n    : component.options\n\n  if (typeof component.exports === 'function') {\n    options.components = component.exports.options.components\n  }\n\n  options.components = options.components || {}\n\n  for (var i in components) {\n    options.components[i] = options.components[i] || components[i]\n  }\n}\n","var toInteger = require('../internals/to-integer');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.codePointAt` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = toString(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.es/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","'use strict';\nvar defineProperty = require('../internals/object-define-property').f;\nvar create = require('../internals/object-create');\nvar redefineAll = require('../internals/redefine-all');\nvar bind = require('../internals/function-bind-context');\nvar anInstance = require('../internals/an-instance');\nvar iterate = require('../internals/iterate');\nvar defineIterator = require('../internals/define-iterator');\nvar setSpecies = require('../internals/set-species');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fastKey = require('../internals/internal-metadata').fastKey;\nvar InternalStateModule = require('../internals/internal-state');\n\nvar setInternalState = InternalStateModule.set;\nvar internalStateGetterFor = InternalStateModule.getterFor;\n\nmodule.exports = {\n  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, CONSTRUCTOR_NAME);\n      setInternalState(that, {\n        type: CONSTRUCTOR_NAME,\n        index: create(null),\n        first: undefined,\n        last: undefined,\n        size: 0\n      });\n      if (!DESCRIPTORS) that.size = 0;\n      if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });\n    });\n\n    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);\n\n    var define = function (that, key, value) {\n      var state = getInternalState(that);\n      var entry = getEntry(that, key);\n      var previous, index;\n      // change existing entry\n      if (entry) {\n        entry.value = value;\n      // create new entry\n      } else {\n        state.last = entry = {\n          index: index = fastKey(key, true),\n          key: key,\n          value: value,\n          previous: previous = state.last,\n          next: undefined,\n          removed: false\n        };\n        if (!state.first) state.first = entry;\n        if (previous) previous.next = entry;\n        if (DESCRIPTORS) state.size++;\n        else that.size++;\n        // add to index\n        if (index !== 'F') state.index[index] = entry;\n      } return that;\n    };\n\n    var getEntry = function (that, key) {\n      var state = getInternalState(that);\n      // fast case\n      var index = fastKey(key);\n      var entry;\n      if (index !== 'F') return state.index[index];\n      // frozen object case\n      for (entry = state.first; entry; entry = entry.next) {\n        if (entry.key == key) return entry;\n      }\n    };\n\n    redefineAll(C.prototype, {\n      // `{ Map, Set }.prototype.clear()` methods\n      // https://tc39.es/ecma262/#sec-map.prototype.clear\n      // https://tc39.es/ecma262/#sec-set.prototype.clear\n      clear: function clear() {\n        var that = this;\n        var state = getInternalState(that);\n        var data = state.index;\n        var entry = state.first;\n        while (entry) {\n          entry.removed = true;\n          if (entry.previous) entry.previous = entry.previous.next = undefined;\n          delete data[entry.index];\n          entry = entry.next;\n        }\n        state.first = state.last = undefined;\n        if (DESCRIPTORS) state.size = 0;\n        else that.size = 0;\n      },\n      // `{ Map, Set }.prototype.delete(key)` methods\n      // https://tc39.es/ecma262/#sec-map.prototype.delete\n      // https://tc39.es/ecma262/#sec-set.prototype.delete\n      'delete': function (key) {\n        var that = this;\n        var state = getInternalState(that);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.next;\n          var prev = entry.previous;\n          delete state.index[entry.index];\n          entry.removed = true;\n          if (prev) prev.next = next;\n          if (next) next.previous = prev;\n          if (state.first == entry) state.first = next;\n          if (state.last == entry) state.last = prev;\n          if (DESCRIPTORS) state.size--;\n          else that.size--;\n        } return !!entry;\n      },\n      // `{ Map, Set }.prototype.forEach(callbackfn, thisArg = undefined)` methods\n      // https://tc39.es/ecma262/#sec-map.prototype.foreach\n      // https://tc39.es/ecma262/#sec-set.prototype.foreach\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        var state = getInternalState(this);\n        var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.next : state.first) {\n          boundFunction(entry.value, entry.key, this);\n          // revert to the last existing entry\n          while (entry && entry.removed) entry = entry.previous;\n        }\n      },\n      // `{ Map, Set}.prototype.has(key)` methods\n      // https://tc39.es/ecma262/#sec-map.prototype.has\n      // https://tc39.es/ecma262/#sec-set.prototype.has\n      has: function has(key) {\n        return !!getEntry(this, key);\n      }\n    });\n\n    redefineAll(C.prototype, IS_MAP ? {\n      // `Map.prototype.get(key)` method\n      // https://tc39.es/ecma262/#sec-map.prototype.get\n      get: function get(key) {\n        var entry = getEntry(this, key);\n        return entry && entry.value;\n      },\n      // `Map.prototype.set(key, value)` method\n      // https://tc39.es/ecma262/#sec-map.prototype.set\n      set: function set(key, value) {\n        return define(this, key === 0 ? 0 : key, value);\n      }\n    } : {\n      // `Set.prototype.add(value)` method\n      // https://tc39.es/ecma262/#sec-set.prototype.add\n      add: function add(value) {\n        return define(this, value = value === 0 ? 0 : value, value);\n      }\n    });\n    if (DESCRIPTORS) defineProperty(C.prototype, 'size', {\n      get: function () {\n        return getInternalState(this).size;\n      }\n    });\n    return C;\n  },\n  setStrong: function (C, CONSTRUCTOR_NAME, IS_MAP) {\n    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';\n    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);\n    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);\n    // `{ Map, Set }.prototype.{ keys, values, entries, @@iterator }()` methods\n    // https://tc39.es/ecma262/#sec-map.prototype.entries\n    // https://tc39.es/ecma262/#sec-map.prototype.keys\n    // https://tc39.es/ecma262/#sec-map.prototype.values\n    // https://tc39.es/ecma262/#sec-map.prototype-@@iterator\n    // https://tc39.es/ecma262/#sec-set.prototype.entries\n    // https://tc39.es/ecma262/#sec-set.prototype.keys\n    // https://tc39.es/ecma262/#sec-set.prototype.values\n    // https://tc39.es/ecma262/#sec-set.prototype-@@iterator\n    defineIterator(C, CONSTRUCTOR_NAME, function (iterated, kind) {\n      setInternalState(this, {\n        type: ITERATOR_NAME,\n        target: iterated,\n        state: getInternalCollectionState(iterated),\n        kind: kind,\n        last: undefined\n      });\n    }, function () {\n      var state = getInternalIteratorState(this);\n      var kind = state.kind;\n      var entry = state.last;\n      // revert to the last existing entry\n      while (entry && entry.removed) entry = entry.previous;\n      // get next entry\n      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {\n        // or finish the iteration\n        state.target = undefined;\n        return { value: undefined, done: true };\n      }\n      // return step by kind\n      if (kind == 'keys') return { value: entry.key, done: false };\n      if (kind == 'values') return { value: entry.value, done: false };\n      return { value: [entry.key, entry.value], done: false };\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // `{ Map, Set }.prototype[@@species]` accessors\n    // https://tc39.es/ecma262/#sec-get-map-@@species\n    // https://tc39.es/ecma262/#sec-get-set-@@species\n    setSpecies(CONSTRUCTOR_NAME);\n  }\n};\n","var arraySpeciesConstructor = require('../internals/array-species-constructor');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);\n};\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar objectHas = require('../internals/has');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    if (wmhas.call(store, it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (objectHas(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar InternalMetadataModule = require('../internals/internal-metadata');\nvar iterate = require('../internals/iterate');\nvar anInstance = require('../internals/an-instance');\nvar isObject = require('../internals/is-object');\nvar fails = require('../internals/fails');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar inheritIfRequired = require('../internals/inherit-if-required');\n\nmodule.exports = function (CONSTRUCTOR_NAME, wrapper, common) {\n  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;\n  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var NativeConstructor = global[CONSTRUCTOR_NAME];\n  var NativePrototype = NativeConstructor && NativeConstructor.prototype;\n  var Constructor = NativeConstructor;\n  var exported = {};\n\n  var fixMethod = function (KEY) {\n    var nativeMethod = NativePrototype[KEY];\n    redefine(NativePrototype, KEY,\n      KEY == 'add' ? function add(value) {\n        nativeMethod.call(this, value === 0 ? 0 : value);\n        return this;\n      } : KEY == 'delete' ? function (key) {\n        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : KEY == 'get' ? function get(key) {\n        return IS_WEAK && !isObject(key) ? undefined : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : KEY == 'has' ? function has(key) {\n        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : function set(key, value) {\n        nativeMethod.call(this, key === 0 ? 0 : key, value);\n        return this;\n      }\n    );\n  };\n\n  var REPLACE = isForced(\n    CONSTRUCTOR_NAME,\n    typeof NativeConstructor != 'function' || !(IS_WEAK || NativePrototype.forEach && !fails(function () {\n      new NativeConstructor().entries().next();\n    }))\n  );\n\n  if (REPLACE) {\n    // create collection constructor\n    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);\n    InternalMetadataModule.enable();\n  } else if (isForced(CONSTRUCTOR_NAME, true)) {\n    var instance = new Constructor();\n    // early implementations not supports chaining\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false\n    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });\n    // most early implementations doesn't supports iterables, most modern - not close it correctly\n    // eslint-disable-next-line no-new -- required for testing\n    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });\n    // for early implementations -0 and +0 not the same\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      // V8 ~ Chromium 42- fails only with 5+ elements\n      var $instance = new NativeConstructor();\n      var index = 5;\n      while (index--) $instance[ADDER](index, index);\n      return !$instance.has(-0);\n    });\n\n    if (!ACCEPT_ITERABLES) {\n      Constructor = wrapper(function (dummy, iterable) {\n        anInstance(dummy, Constructor, CONSTRUCTOR_NAME);\n        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);\n        if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });\n        return that;\n      });\n      Constructor.prototype = NativePrototype;\n      NativePrototype.constructor = Constructor;\n    }\n\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n\n    // weak collections should not contains .clear method\n    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;\n  }\n\n  exported[CONSTRUCTOR_NAME] = Constructor;\n  $({ global: true, forced: Constructor != NativeConstructor }, exported);\n\n  setToStringTag(Constructor, CONSTRUCTOR_NAME);\n\n  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);\n\n  return Constructor;\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split('String');\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  var state;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) {\n      createNonEnumerableProperty(value, 'name', key);\n    }\n    state = enforceInternalState(value);\n    if (!state.source) {\n      state.source = TEMPLATE.join(typeof key == 'string' ? key : '');\n    }\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar objectKeys = require('../internals/object-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar propertyIsEnumerable = require('../internals/object-property-is-enumerable').f;\n\n// `Object.{ entries, values }` methods implementation\nvar createMethod = function (TO_ENTRIES) {\n  return function (it) {\n    var O = toIndexedObject(it);\n    var keys = objectKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || propertyIsEnumerable.call(O, key)) {\n        result.push(TO_ENTRIES ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\nmodule.exports = {\n  // `Object.entries` method\n  // https://tc39.es/ecma262/#sec-object.entries\n  entries: createMethod(true),\n  // `Object.values` method\n  // https://tc39.es/ecma262/#sec-object.values\n  values: createMethod(false)\n};\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    typeof (NewTarget = dummy.constructor) == 'function' &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","'use strict';\nvar exportTypedArrayMethod = require('../internals/array-buffer-view-core').exportTypedArrayMethod;\nvar fails = require('../internals/fails');\nvar global = require('../internals/global');\n\nvar Uint8Array = global.Uint8Array;\nvar Uint8ArrayPrototype = Uint8Array && Uint8Array.prototype || {};\nvar arrayToString = [].toString;\nvar arrayJoin = [].join;\n\nif (fails(function () { arrayToString.call({}); })) {\n  arrayToString = function toString() {\n    return arrayJoin.call(this);\n  };\n}\n\nvar IS_NOT_ARRAY_METHOD = Uint8ArrayPrototype.toString != arrayToString;\n\n// `%TypedArray%.prototype.toString` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tostring\nexportTypedArrayMethod('toString', arrayToString, IS_NOT_ARRAY_METHOD);\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $fill = require('../internals/array-fill');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.fill` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.fill\n// eslint-disable-next-line no-unused-vars -- required for `.length`\nexportTypedArrayMethod('fill', function fill(value /* , start, end */) {\n  return $fill.apply(aTypedArray(this), arguments);\n});\n","// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","var path = require('../internals/path');\nvar has = require('../internals/has');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (NAME) {\n  var Symbol = path.Symbol || (path.Symbol = {});\n  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {\n    value: wrappedWellKnownSymbolModule.f(NAME)\n  });\n};\n","// Styles\nimport './VApp.sass'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(\n  Themeable\n).extend({\n  name: 'v-app',\n\n  props: {\n    dark: {\n      type: Boolean,\n      default: undefined,\n    },\n    id: {\n      type: String,\n      default: 'app',\n    },\n    light: {\n      type: Boolean,\n      default: undefined,\n    },\n  },\n\n  computed: {\n    isDark (): boolean {\n      return this.$vuetify.theme.dark\n    },\n  },\n\n  beforeCreate () {\n    if (!this.$vuetify || (this.$vuetify === this.$root as any)) {\n      throw new Error('Vuetify is not properly initialized, see https://vuetifyjs.com/getting-started/quick-start#bootstrapping-the-vuetify-object')\n    }\n  },\n\n  render (h) {\n    const wrapper = h('div', { staticClass: 'v-application--wrap' }, this.$slots.default)\n\n    return h('div', {\n      staticClass: 'v-application',\n      class: {\n        'v-application--is-rtl': this.$vuetify.rtl,\n        'v-application--is-ltr': !this.$vuetify.rtl,\n        ...this.themeClasses,\n      },\n      attrs: { 'data-app': true },\n      domProps: { id: this.id },\n    }, [wrapper])\n  },\n})\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = require('../internals/typed-array-constructors-require-wrappers');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar ArrayBufferModule = require('../internals/array-buffer');\nvar anInstance = require('../internals/an-instance');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar isInteger = require('../internals/is-integer');\nvar toLength = require('../internals/to-length');\nvar toIndex = require('../internals/to-index');\nvar toOffset = require('../internals/to-offset');\nvar toPropertyKey = require('../internals/to-property-key');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar create = require('../internals/object-create');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar typedArrayFrom = require('../internals/typed-array-from');\nvar forEach = require('../internals/array-iteration').forEach;\nvar setSpecies = require('../internals/set-species');\nvar definePropertyModule = require('../internals/object-define-property');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar InternalStateModule = require('../internals/internal-state');\nvar inheritIfRequired = require('../internals/inherit-if-required');\n\nvar getInternalState = InternalStateModule.get;\nvar setInternalState = InternalStateModule.set;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar round = Math.round;\nvar RangeError = global.RangeError;\nvar ArrayBuffer = ArrayBufferModule.ArrayBuffer;\nvar DataView = ArrayBufferModule.DataView;\nvar NATIVE_ARRAY_BUFFER_VIEWS = ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;\nvar TYPED_ARRAY_CONSTRUCTOR = ArrayBufferViewCore.TYPED_ARRAY_CONSTRUCTOR;\nvar TYPED_ARRAY_TAG = ArrayBufferViewCore.TYPED_ARRAY_TAG;\nvar TypedArray = ArrayBufferViewCore.TypedArray;\nvar TypedArrayPrototype = ArrayBufferViewCore.TypedArrayPrototype;\nvar aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;\nvar isTypedArray = ArrayBufferViewCore.isTypedArray;\nvar BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\nvar WRONG_LENGTH = 'Wrong length';\n\nvar fromList = function (C, list) {\n  var index = 0;\n  var length = list.length;\n  var result = new (aTypedArrayConstructor(C))(length);\n  while (length > index) result[index] = list[index++];\n  return result;\n};\n\nvar addGetter = function (it, key) {\n  nativeDefineProperty(it, key, { get: function () {\n    return getInternalState(this)[key];\n  } });\n};\n\nvar isArrayBuffer = function (it) {\n  var klass;\n  return it instanceof ArrayBuffer || (klass = classof(it)) == 'ArrayBuffer' || klass == 'SharedArrayBuffer';\n};\n\nvar isTypedArrayIndex = function (target, key) {\n  return isTypedArray(target)\n    && !isSymbol(key)\n    && key in target\n    && isInteger(+key)\n    && key >= 0;\n};\n\nvar wrappedGetOwnPropertyDescriptor = function getOwnPropertyDescriptor(target, key) {\n  key = toPropertyKey(key);\n  return isTypedArrayIndex(target, key)\n    ? createPropertyDescriptor(2, target[key])\n    : nativeGetOwnPropertyDescriptor(target, key);\n};\n\nvar wrappedDefineProperty = function defineProperty(target, key, descriptor) {\n  key = toPropertyKey(key);\n  if (isTypedArrayIndex(target, key)\n    && isObject(descriptor)\n    && has(descriptor, 'value')\n    && !has(descriptor, 'get')\n    && !has(descriptor, 'set')\n    // TODO: add validation descriptor w/o calling accessors\n    && !descriptor.configurable\n    && (!has(descriptor, 'writable') || descriptor.writable)\n    && (!has(descriptor, 'enumerable') || descriptor.enumerable)\n  ) {\n    target[key] = descriptor.value;\n    return target;\n  } return nativeDefineProperty(target, key, descriptor);\n};\n\nif (DESCRIPTORS) {\n  if (!NATIVE_ARRAY_BUFFER_VIEWS) {\n    getOwnPropertyDescriptorModule.f = wrappedGetOwnPropertyDescriptor;\n    definePropertyModule.f = wrappedDefineProperty;\n    addGetter(TypedArrayPrototype, 'buffer');\n    addGetter(TypedArrayPrototype, 'byteOffset');\n    addGetter(TypedArrayPrototype, 'byteLength');\n    addGetter(TypedArrayPrototype, 'length');\n  }\n\n  $({ target: 'Object', stat: true, forced: !NATIVE_ARRAY_BUFFER_VIEWS }, {\n    getOwnPropertyDescriptor: wrappedGetOwnPropertyDescriptor,\n    defineProperty: wrappedDefineProperty\n  });\n\n  module.exports = function (TYPE, wrapper, CLAMPED) {\n    var BYTES = TYPE.match(/\\d+$/)[0] / 8;\n    var CONSTRUCTOR_NAME = TYPE + (CLAMPED ? 'Clamped' : '') + 'Array';\n    var GETTER = 'get' + TYPE;\n    var SETTER = 'set' + TYPE;\n    var NativeTypedArrayConstructor = global[CONSTRUCTOR_NAME];\n    var TypedArrayConstructor = NativeTypedArrayConstructor;\n    var TypedArrayConstructorPrototype = TypedArrayConstructor && TypedArrayConstructor.prototype;\n    var exported = {};\n\n    var getter = function (that, index) {\n      var data = getInternalState(that);\n      return data.view[GETTER](index * BYTES + data.byteOffset, true);\n    };\n\n    var setter = function (that, index, value) {\n      var data = getInternalState(that);\n      if (CLAMPED) value = (value = round(value)) < 0 ? 0 : value > 0xFF ? 0xFF : value & 0xFF;\n      data.view[SETTER](index * BYTES + data.byteOffset, value, true);\n    };\n\n    var addElement = function (that, index) {\n      nativeDefineProperty(that, index, {\n        get: function () {\n          return getter(this, index);\n        },\n        set: function (value) {\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n\n    if (!NATIVE_ARRAY_BUFFER_VIEWS) {\n      TypedArrayConstructor = wrapper(function (that, data, offset, $length) {\n        anInstance(that, TypedArrayConstructor, CONSTRUCTOR_NAME);\n        var index = 0;\n        var byteOffset = 0;\n        var buffer, byteLength, length;\n        if (!isObject(data)) {\n          length = toIndex(data);\n          byteLength = length * BYTES;\n          buffer = new ArrayBuffer(byteLength);\n        } else if (isArrayBuffer(data)) {\n          buffer = data;\n          byteOffset = toOffset(offset, BYTES);\n          var $len = data.byteLength;\n          if ($length === undefined) {\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n            byteLength = $len - byteOffset;\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if (byteLength + byteOffset > $len) throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if (isTypedArray(data)) {\n          return fromList(TypedArrayConstructor, data);\n        } else {\n          return typedArrayFrom.call(TypedArrayConstructor, data);\n        }\n        setInternalState(that, {\n          buffer: buffer,\n          byteOffset: byteOffset,\n          byteLength: byteLength,\n          length: length,\n          view: new DataView(buffer)\n        });\n        while (index < length) addElement(that, index++);\n      });\n\n      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);\n      TypedArrayConstructorPrototype = TypedArrayConstructor.prototype = create(TypedArrayPrototype);\n    } else if (TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS) {\n      TypedArrayConstructor = wrapper(function (dummy, data, typedArrayOffset, $length) {\n        anInstance(dummy, TypedArrayConstructor, CONSTRUCTOR_NAME);\n        return inheritIfRequired(function () {\n          if (!isObject(data)) return new NativeTypedArrayConstructor(toIndex(data));\n          if (isArrayBuffer(data)) return $length !== undefined\n            ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES), $length)\n            : typedArrayOffset !== undefined\n              ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES))\n              : new NativeTypedArrayConstructor(data);\n          if (isTypedArray(data)) return fromList(TypedArrayConstructor, data);\n          return typedArrayFrom.call(TypedArrayConstructor, data);\n        }(), dummy, TypedArrayConstructor);\n      });\n\n      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);\n      forEach(getOwnPropertyNames(NativeTypedArrayConstructor), function (key) {\n        if (!(key in TypedArrayConstructor)) {\n          createNonEnumerableProperty(TypedArrayConstructor, key, NativeTypedArrayConstructor[key]);\n        }\n      });\n      TypedArrayConstructor.prototype = TypedArrayConstructorPrototype;\n    }\n\n    if (TypedArrayConstructorPrototype.constructor !== TypedArrayConstructor) {\n      createNonEnumerableProperty(TypedArrayConstructorPrototype, 'constructor', TypedArrayConstructor);\n    }\n\n    createNonEnumerableProperty(TypedArrayConstructorPrototype, TYPED_ARRAY_CONSTRUCTOR, TypedArrayConstructor);\n\n    if (TYPED_ARRAY_TAG) {\n      createNonEnumerableProperty(TypedArrayConstructorPrototype, TYPED_ARRAY_TAG, CONSTRUCTOR_NAME);\n    }\n\n    exported[CONSTRUCTOR_NAME] = TypedArrayConstructor;\n\n    $({\n      global: true, forced: TypedArrayConstructor != NativeTypedArrayConstructor, sham: !NATIVE_ARRAY_BUFFER_VIEWS\n    }, exported);\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayConstructor)) {\n      createNonEnumerableProperty(TypedArrayConstructor, BYTES_PER_ELEMENT, BYTES);\n    }\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayConstructorPrototype)) {\n      createNonEnumerableProperty(TypedArrayConstructorPrototype, BYTES_PER_ELEMENT, BYTES);\n    }\n\n    setSpecies(CONSTRUCTOR_NAME);\n  };\n} else module.exports = function () { /* empty */ };\n","import Vue from 'vue'\nimport { PropType, RenderContext } from 'vue/types/options'\n\ninterface options extends Vue {\n  theme: {\n    isDark: boolean\n  }\n}\n\n/* @vue/component */\nconst Themeable = Vue.extend<options>().extend({\n  name: 'themeable',\n\n  provide (): object {\n    return {\n      theme: this.themeableProvide,\n    }\n  },\n\n  inject: {\n    theme: {\n      default: {\n        isDark: false,\n      },\n    },\n  },\n\n  props: {\n    dark: {\n      type: Boolean as PropType<boolean | null>,\n      default: null,\n    },\n    light: {\n      type: Boolean as PropType<boolean | null>,\n      default: null,\n    },\n  },\n\n  data () {\n    return {\n      themeableProvide: {\n        isDark: false,\n      },\n    }\n  },\n\n  computed: {\n    appIsDark (): boolean {\n      return this.$vuetify.theme.dark || false\n    },\n    isDark (): boolean {\n      if (this.dark === true) {\n        // explicitly dark\n        return true\n      } else if (this.light === true) {\n        // explicitly light\n        return false\n      } else {\n        // inherit from parent, or default false if there is none\n        return this.theme.isDark\n      }\n    },\n    themeClasses (): object {\n      return {\n        'theme--dark': this.isDark,\n        'theme--light': !this.isDark,\n      }\n    },\n    /** Used by menus and dialogs, inherits from v-app instead of the parent */\n    rootIsDark (): boolean {\n      if (this.dark === true) {\n        // explicitly dark\n        return true\n      } else if (this.light === true) {\n        // explicitly light\n        return false\n      } else {\n        // inherit from v-app\n        return this.appIsDark\n      }\n    },\n    rootThemeClasses (): Dictionary<boolean> {\n      return {\n        'theme--dark': this.rootIsDark,\n        'theme--light': !this.rootIsDark,\n      }\n    },\n  },\n\n  watch: {\n    isDark: {\n      handler (newVal, oldVal) {\n        if (newVal !== oldVal) {\n          this.themeableProvide.isDark = this.isDark\n        }\n      },\n      immediate: true,\n    },\n  },\n})\n\nexport default Themeable\n\nexport function functionalThemeClasses (context: RenderContext): object {\n  const vm = {\n    ...context.props,\n    ...context.injections,\n  }\n  const isDark = Themeable.options.computed.isDark.call(vm)\n  return Themeable.options.computed.themeClasses.call({ isDark })\n}\n","// IEEE754 conversions based on https://github.com/feross/ieee754\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar floor = Math.floor;\nvar log = Math.log;\nvar LN2 = Math.LN2;\n\nvar pack = function (number, mantissaLength, bytes) {\n  var buffer = new Array(bytes);\n  var exponentLength = bytes * 8 - mantissaLength - 1;\n  var eMax = (1 << exponentLength) - 1;\n  var eBias = eMax >> 1;\n  var rt = mantissaLength === 23 ? pow(2, -24) - pow(2, -77) : 0;\n  var sign = number < 0 || number === 0 && 1 / number < 0 ? 1 : 0;\n  var index = 0;\n  var exponent, mantissa, c;\n  number = abs(number);\n  // eslint-disable-next-line no-self-compare -- NaN check\n  if (number != number || number === Infinity) {\n    // eslint-disable-next-line no-self-compare -- NaN check\n    mantissa = number != number ? 1 : 0;\n    exponent = eMax;\n  } else {\n    exponent = floor(log(number) / LN2);\n    if (number * (c = pow(2, -exponent)) < 1) {\n      exponent--;\n      c *= 2;\n    }\n    if (exponent + eBias >= 1) {\n      number += rt / c;\n    } else {\n      number += rt * pow(2, 1 - eBias);\n    }\n    if (number * c >= 2) {\n      exponent++;\n      c /= 2;\n    }\n    if (exponent + eBias >= eMax) {\n      mantissa = 0;\n      exponent = eMax;\n    } else if (exponent + eBias >= 1) {\n      mantissa = (number * c - 1) * pow(2, mantissaLength);\n      exponent = exponent + eBias;\n    } else {\n      mantissa = number * pow(2, eBias - 1) * pow(2, mantissaLength);\n      exponent = 0;\n    }\n  }\n  for (; mantissaLength >= 8; buffer[index++] = mantissa & 255, mantissa /= 256, mantissaLength -= 8);\n  exponent = exponent << mantissaLength | mantissa;\n  exponentLength += mantissaLength;\n  for (; exponentLength > 0; buffer[index++] = exponent & 255, exponent /= 256, exponentLength -= 8);\n  buffer[--index] |= sign * 128;\n  return buffer;\n};\n\nvar unpack = function (buffer, mantissaLength) {\n  var bytes = buffer.length;\n  var exponentLength = bytes * 8 - mantissaLength - 1;\n  var eMax = (1 << exponentLength) - 1;\n  var eBias = eMax >> 1;\n  var nBits = exponentLength - 7;\n  var index = bytes - 1;\n  var sign = buffer[index--];\n  var exponent = sign & 127;\n  var mantissa;\n  sign >>= 7;\n  for (; nBits > 0; exponent = exponent * 256 + buffer[index], index--, nBits -= 8);\n  mantissa = exponent & (1 << -nBits) - 1;\n  exponent >>= -nBits;\n  nBits += mantissaLength;\n  for (; nBits > 0; mantissa = mantissa * 256 + buffer[index], index--, nBits -= 8);\n  if (exponent === 0) {\n    exponent = 1 - eBias;\n  } else if (exponent === eMax) {\n    return mantissa ? NaN : sign ? -Infinity : Infinity;\n  } else {\n    mantissa = mantissa + pow(2, mantissaLength);\n    exponent = exponent - eBias;\n  } return (sign ? -1 : 1) * mantissa * pow(2, exponent - mantissaLength);\n};\n\nmodule.exports = {\n  pack: pack,\n  unpack: unpack\n};\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","// Utilities\nimport { consoleWarn } from './console'\nimport { chunk, padEnd } from './helpers'\nimport { toXYZ } from './color/transformSRGB'\n\n// Types\nimport { VuetifyThemeVariant } from 'types/services/theme'\n\nexport type ColorInt = number\nexport type XYZ = [number, number, number]\nexport type LAB = [number, number, number]\nexport type HSV = { h: number, s: number, v: number }\nexport type HSVA = HSV & { a: number }\nexport type RGB = { r: number, g: number, b: number }\nexport type RGBA = RGB & { a: number }\nexport type HSL = { h: number, s: number, l: number }\nexport type HSLA = HSL & { a: number }\nexport type Hex = string\nexport type Hexa = string\nexport type Color = string | number | {}\n\nexport function isCssColor (color?: string | false): boolean {\n  return !!color && !!color.match(/^(#|var\\(--|(rgb|hsl)a?\\()/)\n}\n\nexport function colorToInt (color: Color): ColorInt {\n  let rgb\n\n  if (typeof color === 'number') {\n    rgb = color\n  } else if (typeof color === 'string') {\n    let c = color[0] === '#' ? color.substring(1) : color\n    if (c.length === 3) {\n      c = c.split('').map(char => char + char).join('')\n    }\n    if (c.length !== 6) {\n      consoleWarn(`'${color}' is not a valid rgb color`)\n    }\n    rgb = parseInt(c, 16)\n  } else {\n    throw new TypeError(`Colors can only be numbers or strings, recieved ${color == null ? color : color.constructor.name} instead`)\n  }\n\n  if (rgb < 0) {\n    consoleWarn(`Colors cannot be negative: '${color}'`)\n    rgb = 0\n  } else if (rgb > 0xffffff || isNaN(rgb)) {\n    consoleWarn(`'${color}' is not a valid rgb color`)\n    rgb = 0xffffff\n  }\n\n  return rgb\n}\n\nexport function classToHex (\n  color: string,\n  colors: Record<string, Record<string, string>>,\n  currentTheme: Partial<VuetifyThemeVariant>,\n): string {\n  const [colorName, colorModifier] = color\n    .toString().trim().replace('-', '').split(' ', 2) as (string | undefined)[]\n\n  let hexColor = ''\n  if (colorName && colorName in colors) {\n    if (colorModifier && colorModifier in colors[colorName]) {\n      hexColor = colors[colorName][colorModifier]\n    } else if ('base' in colors[colorName]) {\n      hexColor = colors[colorName].base\n    }\n  } else if (colorName && colorName in currentTheme) {\n    hexColor = currentTheme[colorName] as string\n  }\n\n  return hexColor\n}\n\nexport function intToHex (color: ColorInt): string {\n  let hexColor: string = color.toString(16)\n\n  if (hexColor.length < 6) hexColor = '0'.repeat(6 - hexColor.length) + hexColor\n\n  return '#' + hexColor\n}\n\nexport function colorToHex (color: Color): string {\n  return intToHex(colorToInt(color))\n}\n\n/**\n * Converts HSVA to RGBA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV\n *\n * @param color HSVA color as an array [0-360, 0-1, 0-1, 0-1]\n */\nexport function HSVAtoRGBA (hsva: HSVA): RGBA {\n  const { h, s, v, a } = hsva\n  const f = (n: number) => {\n    const k = (n + (h / 60)) % 6\n    return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0)\n  }\n\n  const rgb = [f(5), f(3), f(1)].map(v => Math.round(v * 255))\n\n  return { r: rgb[0], g: rgb[1], b: rgb[2], a }\n}\n\n/**\n * Converts RGBA to HSVA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV\n *\n * @param color RGBA color as an array [0-255, 0-255, 0-255, 0-1]\n */\nexport function RGBAtoHSVA (rgba: RGBA): HSVA {\n  if (!rgba) return { h: 0, s: 1, v: 1, a: 1 }\n\n  const r = rgba.r / 255\n  const g = rgba.g / 255\n  const b = rgba.b / 255\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n\n  let h = 0\n\n  if (max !== min) {\n    if (max === r) {\n      h = 60 * (0 + ((g - b) / (max - min)))\n    } else if (max === g) {\n      h = 60 * (2 + ((b - r) / (max - min)))\n    } else if (max === b) {\n      h = 60 * (4 + ((r - g) / (max - min)))\n    }\n  }\n\n  if (h < 0) h = h + 360\n\n  const s = max === 0 ? 0 : (max - min) / max\n  const hsv = [h, s, max]\n\n  return { h: hsv[0], s: hsv[1], v: hsv[2], a: rgba.a }\n}\n\nexport function HSVAtoHSLA (hsva: HSVA): HSLA {\n  const { h, s, v, a } = hsva\n\n  const l = v - (v * s / 2)\n\n  const sprime = l === 1 || l === 0 ? 0 : (v - l) / Math.min(l, 1 - l)\n\n  return { h, s: sprime, l, a }\n}\n\nexport function HSLAtoHSVA (hsl: HSLA): HSVA {\n  const { h, s, l, a } = hsl\n\n  const v = l + s * Math.min(l, 1 - l)\n\n  const sprime = v === 0 ? 0 : 2 - (2 * l / v)\n\n  return { h, s: sprime, v, a }\n}\n\nexport function RGBAtoCSS (rgba: RGBA): string {\n  return `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`\n}\n\nexport function RGBtoCSS (rgba: RGBA): string {\n  return RGBAtoCSS({ ...rgba, a: 1 })\n}\n\nexport function RGBAtoHex (rgba: RGBA): Hex {\n  const toHex = (v: number) => {\n    const h = Math.round(v).toString(16)\n    return ('00'.substr(0, 2 - h.length) + h).toUpperCase()\n  }\n\n  return `#${[\n    toHex(rgba.r),\n    toHex(rgba.g),\n    toHex(rgba.b),\n    toHex(Math.round(rgba.a * 255)),\n  ].join('')}`\n}\n\nexport function HexToRGBA (hex: Hex): RGBA {\n  const rgba = chunk(hex.slice(1), 2).map((c: string) => parseInt(c, 16))\n\n  return {\n    r: rgba[0],\n    g: rgba[1],\n    b: rgba[2],\n    a: Math.round((rgba[3] / 255) * 100) / 100,\n  }\n}\n\nexport function HexToHSVA (hex: Hex): HSVA {\n  const rgb = HexToRGBA(hex)\n  return RGBAtoHSVA(rgb)\n}\n\nexport function HSVAtoHex (hsva: HSVA): Hex {\n  return RGBAtoHex(HSVAtoRGBA(hsva))\n}\n\nexport function parseHex (hex: string): Hex {\n  if (hex.startsWith('#')) {\n    hex = hex.slice(1)\n  }\n\n  hex = hex.replace(/([^0-9a-f])/gi, 'F')\n\n  if (hex.length === 3 || hex.length === 4) {\n    hex = hex.split('').map(x => x + x).join('')\n  }\n\n  if (hex.length === 6) {\n    hex = padEnd(hex, 8, 'F')\n  } else {\n    hex = padEnd(padEnd(hex, 6), 8, 'F')\n  }\n\n  return `#${hex}`.toUpperCase().substr(0, 9)\n}\n\nexport function parseGradient (\n  gradient: string,\n  colors: Record<string, Record<string, string>>,\n  currentTheme: Partial<VuetifyThemeVariant>,\n) {\n  return gradient.replace(/([a-z]+(\\s[a-z]+-[1-5])?)(?=$|,)/gi, x => {\n    return classToHex(x, colors, currentTheme) || x\n  }).replace(/(rgba\\()#[0-9a-f]+(?=,)/gi, x => {\n    return 'rgba(' + Object.values(HexToRGBA(parseHex(x.replace(/rgba\\(/, '')))).slice(0, 3).join(',')\n  })\n}\n\nexport function RGBtoInt (rgba: RGBA): ColorInt {\n  return (rgba.r << 16) + (rgba.g << 8) + rgba.b\n}\n\n/**\n * Returns the contrast ratio (1-21) between two colors.\n *\n * @param c1 First color\n * @param c2 Second color\n */\nexport function contrastRatio (c1: RGBA, c2: RGBA): number {\n  const [, y1] = toXYZ(RGBtoInt(c1))\n  const [, y2] = toXYZ(RGBtoInt(c2))\n\n  return (Math.max(y1, y2) + 0.05) / (Math.min(y1, y2) + 0.05)\n}\n","/* global ActiveXObject -- old IE, WSH */\nvar anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    activeXDocument = new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = typeof document != 'undefined'\n    ? document.domain && activeXDocument\n      ? NullProtoObjectViaActiveX(activeXDocument) // old IE\n      : NullProtoObjectViaIFrame()\n    : NullProtoObjectViaActiveX(activeXDocument); // WSH\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.es/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","'use strict';\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\n          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF\n  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    INCORRECT_VALUES_NAME = true;\n    defaultIterator = function values() { return nativeIterator.call(this); };\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);\n  }\n  Iterators[NAME] = defaultIterator;\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        redefine(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  return methods;\n};\n","import Vue, { WatchHandler } from 'vue'\n\n/**\n * This mixin provides `attrs$` and `listeners$` to work around\n * vue bug https://github.com/vuejs/vue/issues/10115\n */\n\nfunction makeWatcher (property: string): ThisType<Vue> & WatchHandler<any> {\n  return function (this: Vue, val, oldVal) {\n    for (const attr in oldVal) {\n      if (!Object.prototype.hasOwnProperty.call(val, attr)) {\n        this.$delete(this.$data[property], attr)\n      }\n    }\n    for (const attr in val) {\n      this.$set(this.$data[property], attr, val[attr])\n    }\n  }\n}\n\nexport default Vue.extend({\n  data: () => ({\n    attrs$: {} as Dictionary<string>,\n    listeners$: {} as Dictionary<Function | Function[]>,\n  }),\n\n  created () {\n    // Work around unwanted re-renders: https://github.com/vuejs/vue/issues/10115\n    // Make sure to use `attrs$` instead of `$attrs` (confusing right?)\n    this.$watch('$attrs', makeWatcher('attrs$'), { immediate: true })\n    this.$watch('$listeners', makeWatcher('listeners$'), { immediate: true })\n  },\n})\n","var global = require('../internals/global');\nvar inspectSource = require('../internals/inspect-source');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));\n","import Vue from 'vue'\nimport { VNode, VNodeDirective } from 'vue/types'\nimport { VuetifyIcon } from 'vuetify/types/services/icons'\nimport { DataTableCompareFunction, SelectItemKey, ItemGroup } from 'vuetify/types'\n\nexport function createSimpleFunctional (\n  c: string,\n  el = 'div',\n  name?: string\n) {\n  return Vue.extend({\n    name: name || c.replace(/__/g, '-'),\n\n    functional: true,\n\n    render (h, { data, children }): VNode {\n      data.staticClass = (`${c} ${data.staticClass || ''}`).trim()\n\n      return h(el, data, children)\n    },\n  })\n}\n\nexport type BindingConfig = Pick<VNodeDirective, 'arg' | 'modifiers' | 'value'>\nexport function directiveConfig (binding: BindingConfig, defaults = {}): VNodeDirective {\n  return {\n    ...defaults,\n    ...binding.modifiers,\n    value: binding.arg,\n    ...(binding.value || {}),\n  }\n}\n\nexport function addOnceEventListener (\n  el: EventTarget,\n  eventName: string,\n  cb: (event: Event) => void,\n  options: boolean | AddEventListenerOptions = false\n): void {\n  const once = (event: Event) => {\n    cb(event)\n    el.removeEventListener(eventName, once, options)\n  }\n\n  el.addEventListener(eventName, once, options)\n}\n\nlet passiveSupported = false\ntry {\n  if (typeof window !== 'undefined') {\n    const testListenerOpts = Object.defineProperty({}, 'passive', {\n      get: () => {\n        passiveSupported = true\n      },\n    })\n\n    window.addEventListener('testListener', testListenerOpts, testListenerOpts)\n    window.removeEventListener('testListener', testListenerOpts, testListenerOpts)\n  }\n} catch (e) { console.warn(e) } /* eslint-disable-line no-console */\nexport { passiveSupported }\n\nexport function addPassiveEventListener (\n  el: EventTarget,\n  event: string,\n  cb: EventHandlerNonNull | (() => void),\n  options: {}\n): void {\n  el.addEventListener(event, cb, passiveSupported ? options : false)\n}\n\nexport function getNestedValue (obj: any, path: (string | number)[], fallback?: any): any {\n  const last = path.length - 1\n\n  if (last < 0) return obj === undefined ? fallback : obj\n\n  for (let i = 0; i < last; i++) {\n    if (obj == null) {\n      return fallback\n    }\n    obj = obj[path[i]]\n  }\n\n  if (obj == null) return fallback\n\n  return obj[path[last]] === undefined ? fallback : obj[path[last]]\n}\n\nexport function deepEqual (a: any, b: any): boolean {\n  if (a === b) return true\n\n  if (\n    a instanceof Date &&\n    b instanceof Date &&\n    a.getTime() !== b.getTime()\n  ) {\n    // If the values are Date, compare them as timestamps\n    return false\n  }\n\n  if (a !== Object(a) || b !== Object(b)) {\n    // If the values aren't objects, they were already checked for equality\n    return false\n  }\n\n  const props = Object.keys(a)\n\n  if (props.length !== Object.keys(b).length) {\n    // Different number of props, don't bother to check\n    return false\n  }\n\n  return props.every(p => deepEqual(a[p], b[p]))\n}\n\nexport function getObjectValueByPath (obj: any, path: string, fallback?: any): any {\n  // credit: http://stackoverflow.com/questions/6491463/accessing-nested-javascript-objects-with-string-key#comment55278413_6491621\n  if (obj == null || !path || typeof path !== 'string') return fallback\n  if (obj[path] !== undefined) return obj[path]\n  path = path.replace(/\\[(\\w+)\\]/g, '.$1') // convert indexes to properties\n  path = path.replace(/^\\./, '') // strip a leading dot\n  return getNestedValue(obj, path.split('.'), fallback)\n}\n\nexport function getPropertyFromItem (\n  item: object,\n  property: SelectItemKey,\n  fallback?: any\n): any {\n  if (property == null) return item === undefined ? fallback : item\n\n  if (item !== Object(item)) return fallback === undefined ? item : fallback\n\n  if (typeof property === 'string') return getObjectValueByPath(item, property, fallback)\n\n  if (Array.isArray(property)) return getNestedValue(item, property, fallback)\n\n  if (typeof property !== 'function') return fallback\n\n  const value = property(item, fallback)\n\n  return typeof value === 'undefined' ? fallback : value\n}\n\nexport function createRange (length: number): number[] {\n  return Array.from({ length }, (v, k) => k)\n}\n\nexport function getZIndex (el?: Element | null): number {\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) return 0\n\n  const index = +window.getComputedStyle(el).getPropertyValue('z-index')\n\n  if (!index) return getZIndex(el.parentNode as Element)\n  return index\n}\n\nconst tagsToReplace = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n} as any\n\nexport function escapeHTML (str: string): string {\n  return str.replace(/[&<>]/g, tag => tagsToReplace[tag] || tag)\n}\n\nexport function filterObjectOnKeys<T, K extends keyof T> (obj: T, keys: K[]): { [N in K]: T[N] } {\n  const filtered = {} as { [N in K]: T[N] }\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i]\n    if (typeof obj[key] !== 'undefined') {\n      filtered[key] = obj[key]\n    }\n  }\n\n  return filtered\n}\n\nexport function convertToUnit (str: string | number | null | undefined, unit = 'px'): string | undefined {\n  if (str == null || str === '') {\n    return undefined\n  } else if (isNaN(+str!)) {\n    return String(str)\n  } else {\n    return `${Number(str)}${unit}`\n  }\n}\n\nexport function kebabCase (str: string): string {\n  return (str || '').replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()\n}\n\nexport function isObject (obj: any): obj is object {\n  return obj !== null && typeof obj === 'object'\n}\n\n// KeyboardEvent.keyCode aliases\nexport const keyCodes = Object.freeze({\n  enter: 13,\n  tab: 9,\n  delete: 46,\n  esc: 27,\n  space: 32,\n  up: 38,\n  down: 40,\n  left: 37,\n  right: 39,\n  end: 35,\n  home: 36,\n  del: 46,\n  backspace: 8,\n  insert: 45,\n  pageup: 33,\n  pagedown: 34,\n  shift: 16,\n})\n\n/**\n * This remaps internal names like '$cancel' or '$vuetify.icons.cancel'\n * to the current name or component for that icon.\n */\nexport function remapInternalIcon (vm: Vue, iconName: string): VuetifyIcon {\n  // Look for custom component in the configuration\n  const component = vm.$vuetify.icons.component\n\n  // Look for overrides\n  if (iconName.startsWith('$')) {\n    // Get the target icon name\n    const iconPath = `$vuetify.icons.values.${iconName.split('$').pop()!.split('.').pop()}`\n\n    // Now look up icon indirection name,\n    // e.g. '$vuetify.icons.values.cancel'\n    const override = getObjectValueByPath(vm, iconPath, iconName)\n\n    if (typeof override === 'string') iconName = override\n    else return override\n  }\n\n  if (component == null) {\n    return iconName\n  }\n\n  return {\n    component,\n    props: {\n      icon: iconName,\n    },\n  }\n}\n\nexport function keys<O> (o: O) {\n  return Object.keys(o) as (keyof O)[]\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nconst camelizeRE = /-(\\w)/g\nexport const camelize = (str: string): string => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : '')\n}\n\n/**\n * Returns the set difference of B and A, i.e. the set of elements in B but not in A\n */\nexport function arrayDiff (a: any[], b: any[]): any[] {\n  const diff: any[] = []\n  for (let i = 0; i < b.length; i++) {\n    if (a.indexOf(b[i]) < 0) diff.push(b[i])\n  }\n  return diff\n}\n\n/**\n * Makes the first character of a string uppercase\n */\nexport function upperFirst (str: string): string {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\nexport function groupItems<T extends any = any> (\n  items: T[],\n  groupBy: string[],\n  groupDesc: boolean[]\n): ItemGroup<T>[] {\n  const key = groupBy[0]\n  const groups: ItemGroup<T>[] = []\n  let current\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i]\n    const val = getObjectValueByPath(item, key, null)\n    if (current !== val) {\n      current = val\n      groups.push({\n        name: val ?? '',\n        items: [],\n      })\n    }\n    groups[groups.length - 1].items.push(item)\n  }\n  return groups\n}\n\nexport function wrapInArray<T> (v: T | T[] | null | undefined): T[] { return v != null ? Array.isArray(v) ? v : [v] : [] }\n\nexport function sortItems<T extends any = any> (\n  items: T[],\n  sortBy: string[],\n  sortDesc: boolean[],\n  locale: string,\n  customSorters?: Record<string, DataTableCompareFunction<T>>\n): T[] {\n  if (sortBy === null || !sortBy.length) return items\n  const stringCollator = new Intl.Collator(locale, { sensitivity: 'accent', usage: 'sort' })\n\n  return items.sort((a, b) => {\n    for (let i = 0; i < sortBy.length; i++) {\n      const sortKey = sortBy[i]\n\n      let sortA = getObjectValueByPath(a, sortKey)\n      let sortB = getObjectValueByPath(b, sortKey)\n\n      if (sortDesc[i]) {\n        [sortA, sortB] = [sortB, sortA]\n      }\n\n      if (customSorters && customSorters[sortKey]) {\n        const customResult = customSorters[sortKey](sortA, sortB)\n\n        if (!customResult) continue\n\n        return customResult\n      }\n\n      // Check if both cannot be evaluated\n      if (sortA === null && sortB === null) {\n        continue\n      }\n\n      // Dates should be compared numerically\n      if (sortA instanceof Date && sortB instanceof Date) {\n        return sortA.getTime() - sortB.getTime()\n      }\n\n      [sortA, sortB] = [sortA, sortB].map(s => (s || '').toString().toLocaleLowerCase())\n\n      if (sortA !== sortB) {\n        if (!isNaN(sortA) && !isNaN(sortB)) return Number(sortA) - Number(sortB)\n        return stringCollator.compare(sortA, sortB)\n      }\n    }\n\n    return 0\n  })\n}\n\nexport function defaultFilter (value: any, search: string | null, item: any) {\n  return value != null &&\n    search != null &&\n    typeof value !== 'boolean' &&\n    value.toString().toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) !== -1\n}\n\nexport function searchItems<T extends any = any> (items: T[], search: string): T[] {\n  if (!search) return items\n  search = search.toString().toLowerCase()\n  if (search.trim() === '') return items\n\n  return items.filter((item: any) => Object.keys(item).some(key => defaultFilter(getObjectValueByPath(item, key), search, item)))\n}\n\n/**\n * Returns:\n *  - 'normal' for old style slots - `<template slot=\"default\">`\n *  - 'scoped' for old style scoped slots (`<template slot=\"default\" slot-scope=\"data\">`) or bound v-slot (`#default=\"data\"`)\n *  - 'v-slot' for unbound v-slot (`#default`) - only if the third param is true, otherwise counts as scoped\n */\nexport function getSlotType<T extends boolean = false> (vm: Vue, name: string, split?: T): (T extends true ? 'v-slot' : never) | 'normal' | 'scoped' | void {\n  if (vm.$slots[name] && vm.$scopedSlots[name] && (vm.$scopedSlots[name] as any).name) {\n    return split ? 'v-slot' as any : 'scoped'\n  }\n  if (vm.$slots[name]) return 'normal'\n  if (vm.$scopedSlots[name]) return 'scoped'\n}\n\nexport function debounce (fn: Function, delay: number) {\n  let timeoutId = 0 as any\n  return (...args: any[]) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => fn(...args), delay)\n  }\n}\n\nexport function throttle<T extends (...args: any[]) => any> (fn: T, limit: number) {\n  let throttling = false\n  return (...args: Parameters<T>): void | ReturnType<T> => {\n    if (!throttling) {\n      throttling = true\n      setTimeout(() => throttling = false, limit)\n      return fn(...args)\n    }\n  }\n}\n\nexport function getPrefixedScopedSlots (prefix: string, scopedSlots: any) {\n  return Object.keys(scopedSlots).filter(k => k.startsWith(prefix)).reduce((obj: any, k: string) => {\n    obj[k.replace(prefix, '')] = scopedSlots[k]\n    return obj\n  }, {})\n}\n\nexport function getSlot (vm: Vue, name = 'default', data?: object | (() => object), optional = false) {\n  if (vm.$scopedSlots[name]) {\n    return vm.$scopedSlots[name]!(data instanceof Function ? data() : data)\n  } else if (vm.$slots[name] && (!data || optional)) {\n    return vm.$slots[name]\n  }\n  return undefined\n}\n\nexport function clamp (value: number, min = 0, max = 1) {\n  return Math.max(min, Math.min(max, value))\n}\n\nexport function padEnd (str: string, length: number, char = '0') {\n  return str + char.repeat(Math.max(0, length - str.length))\n}\n\nexport function chunk (str: string, size = 1) {\n  const chunked: string[] = []\n  let index = 0\n  while (index < str.length) {\n    chunked.push(str.substr(index, size))\n    index += size\n  }\n  return chunked\n}\n\nexport function humanReadableFileSize (bytes: number, binary = false): string {\n  const base = binary ? 1024 : 1000\n  if (bytes < base) {\n    return `${bytes} B`\n  }\n\n  const prefix = binary ? ['Ki', 'Mi', 'Gi'] : ['k', 'M', 'G']\n  let unit = -1\n  while (Math.abs(bytes) >= base && unit < prefix.length - 1) {\n    bytes /= base\n    ++unit\n  }\n  return `${bytes.toFixed(1)} ${prefix[unit]}B`\n}\n\nexport function camelizeObjectKeys (obj: Record<string, any> | null | undefined) {\n  if (!obj) return {}\n\n  return Object.keys(obj).reduce((o: any, key: string) => {\n    o[camelize(key)] = obj[key]\n    return o\n  }, {})\n}\n\nexport function mergeDeep (\n  source: Dictionary<any> = {},\n  target: Dictionary<any> = {}\n) {\n  for (const key in target) {\n    const sourceProperty = source[key]\n    const targetProperty = target[key]\n\n    // Only continue deep merging if\n    // both properties are objects\n    if (\n      isObject(sourceProperty) &&\n      isObject(targetProperty)\n    ) {\n      source[key] = mergeDeep(sourceProperty, targetProperty)\n\n      continue\n    }\n\n    source[key] = targetProperty\n  }\n\n  return source\n}\n\nexport function fillArray<T> (length: number, obj: T) {\n  return Array(length).fill(obj)\n}\n","'use strict';\nvar toObject = require('../internals/to-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\n\n// `Array.prototype.fill` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.fill\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var argumentsLength = arguments.length;\n  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);\n  var end = argumentsLength > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $includes = require('../internals/array-includes').includes;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.includes` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.includes\nexportTypedArrayMethod('includes', function includes(searchElement /* , fromIndex */) {\n  return $includes(aTypedArray(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n});\n","// Styles\nimport './VProgressCircular.sass'\n\n// Directives\nimport intersect from '../../directives/intersect'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeChildren } from 'vue'\n\n/* @vue/component */\nexport default Colorable.extend({\n  name: 'v-progress-circular',\n\n  directives: { intersect },\n\n  props: {\n    button: Boolean,\n    indeterminate: Boolean,\n    rotate: {\n      type: [Number, String],\n      default: 0,\n    },\n    size: {\n      type: [Number, String],\n      default: 32,\n    },\n    width: {\n      type: [Number, String],\n      default: 4,\n    },\n    value: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    radius: 20,\n    isVisible: true,\n  }),\n\n  computed: {\n    calculatedSize (): number {\n      return Number(this.size) + (this.button ? 8 : 0)\n    },\n\n    circumference (): number {\n      return 2 * Math.PI * this.radius\n    },\n\n    classes (): object {\n      return {\n        'v-progress-circular--visible': this.isVisible,\n        'v-progress-circular--indeterminate': this.indeterminate,\n        'v-progress-circular--button': this.button,\n      }\n    },\n\n    normalizedValue (): number {\n      if (this.value < 0) {\n        return 0\n      }\n\n      if (this.value > 100) {\n        return 100\n      }\n\n      return parseFloat(this.value)\n    },\n\n    strokeDashArray (): number {\n      return Math.round(this.circumference * 1000) / 1000\n    },\n\n    strokeDashOffset (): string {\n      return ((100 - this.normalizedValue) / 100) * this.circumference + 'px'\n    },\n\n    strokeWidth (): number {\n      return Number(this.width) / +this.size * this.viewBoxSize * 2\n    },\n\n    styles (): object {\n      return {\n        height: convertToUnit(this.calculatedSize),\n        width: convertToUnit(this.calculatedSize),\n      }\n    },\n\n    svgStyles (): object {\n      return {\n        transform: `rotate(${Number(this.rotate)}deg)`,\n      }\n    },\n\n    viewBoxSize (): number {\n      return this.radius / (1 - Number(this.width) / +this.size)\n    },\n  },\n\n  methods: {\n    genCircle (name: string, offset: string | number): VNode {\n      return this.$createElement('circle', {\n        class: `v-progress-circular__${name}`,\n        attrs: {\n          fill: 'transparent',\n          cx: 2 * this.viewBoxSize,\n          cy: 2 * this.viewBoxSize,\n          r: this.radius,\n          'stroke-width': this.strokeWidth,\n          'stroke-dasharray': this.strokeDashArray,\n          'stroke-dashoffset': offset,\n        },\n      })\n    },\n    genSvg (): VNode {\n      const children = [\n        this.indeterminate || this.genCircle('underlay', 0),\n        this.genCircle('overlay', this.strokeDashOffset),\n      ] as VNodeChildren\n\n      return this.$createElement('svg', {\n        style: this.svgStyles,\n        attrs: {\n          xmlns: 'http://www.w3.org/2000/svg',\n          viewBox: `${this.viewBoxSize} ${this.viewBoxSize} ${2 * this.viewBoxSize} ${2 * this.viewBoxSize}`,\n        },\n      }, children)\n    },\n    genInfo (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-progress-circular__info',\n      }, this.$slots.default)\n    },\n    onObserve (entries: IntersectionObserverEntry[], observer: IntersectionObserver, isIntersecting: boolean) {\n      this.isVisible = isIntersecting\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.color, {\n      staticClass: 'v-progress-circular',\n      attrs: {\n        role: 'progressbar',\n        'aria-valuemin': 0,\n        'aria-valuemax': 100,\n        'aria-valuenow': this.indeterminate ? undefined : this.normalizedValue,\n      },\n      class: this.classes,\n      directives: [{\n        name: 'intersect',\n        value: this.onObserve,\n      }],\n      style: this.styles,\n      on: this.$listeners,\n    }), [\n      this.genSvg(),\n      this.genInfo(),\n    ])\n  },\n})\n","import VProgressCircular from './VProgressCircular'\n\nexport { VProgressCircular }\nexport default VProgressCircular\n","// Styles\nimport './VBtn.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Components\nimport VProgressCircular from '../VProgressCircular'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Elevatable from '../../mixins/elevatable'\nimport Positionable from '../../mixins/positionable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { breaking } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator, PropType } from 'vue/types/options'\nimport { RippleOptions } from '../../directives/ripple'\n\nconst baseMixins = mixins(\n  VSheet,\n  Routable,\n  Positionable,\n  Sizeable,\n  GroupableFactory('btnToggle'),\n  ToggleableFactory('inputValue')\n  /* @vue/component */\n)\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-btn',\n\n  props: {\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.btnToggle) return ''\n\n        return this.btnToggle.activeClass\n      },\n    } as any as PropValidator<string>,\n    block: Boolean,\n    depressed: Boolean,\n    fab: Boolean,\n    icon: Boolean,\n    loading: Boolean,\n    outlined: Boolean,\n    plain: Boolean,\n    retainFocusOnClick: Boolean,\n    rounded: Boolean,\n    tag: {\n      type: String,\n      default: 'button',\n    },\n    text: Boolean,\n    tile: Boolean,\n    type: {\n      type: String,\n      default: 'button',\n    },\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-btn--active',\n  }),\n\n  computed: {\n    classes (): any {\n      return {\n        'v-btn': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-btn--absolute': this.absolute,\n        'v-btn--block': this.block,\n        'v-btn--bottom': this.bottom,\n        'v-btn--disabled': this.disabled,\n        'v-btn--is-elevated': this.isElevated,\n        'v-btn--fab': this.fab,\n        'v-btn--fixed': this.fixed,\n        'v-btn--has-bg': this.hasBg,\n        'v-btn--icon': this.icon,\n        'v-btn--left': this.left,\n        'v-btn--loading': this.loading,\n        'v-btn--outlined': this.outlined,\n        'v-btn--plain': this.plain,\n        'v-btn--right': this.right,\n        'v-btn--round': this.isRound,\n        'v-btn--rounded': this.rounded,\n        'v-btn--router': this.to,\n        'v-btn--text': this.text,\n        'v-btn--tile': this.tile,\n        'v-btn--top': this.top,\n        ...this.themeClasses,\n        ...this.groupClasses,\n        ...this.elevationClasses,\n        ...this.sizeableClasses,\n      }\n    },\n    computedElevation (): string | number | undefined {\n      if (this.disabled) return undefined\n\n      return Elevatable.options.computed.computedElevation.call(this)\n    },\n    computedRipple (): RippleOptions | boolean {\n      const defaultRipple = this.icon || this.fab ? { circle: true } : true\n      if (this.disabled) return false\n      else return this.ripple ?? defaultRipple\n    },\n    hasBg (): boolean {\n      return !this.text && !this.plain && !this.outlined && !this.icon\n    },\n    isElevated (): boolean {\n      return Boolean(\n        !this.icon &&\n        !this.text &&\n        !this.outlined &&\n        !this.depressed &&\n        !this.disabled &&\n        !this.plain &&\n        (this.elevation == null || Number(this.elevation) > 0)\n      )\n    },\n    isRound (): boolean {\n      return Boolean(\n        this.icon ||\n        this.fab\n      )\n    },\n    styles (): object {\n      return {\n        ...this.measurableStyles,\n      }\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['flat', 'text'],\n      ['outline', 'outlined'],\n      ['round', 'rounded'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      // TODO: Remove this in v3\n      !this.retainFocusOnClick && !this.fab && e.detail && this.$el.blur()\n      this.$emit('click', e)\n\n      this.btnToggle && this.toggle()\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-btn__content',\n      }, this.$slots.default)\n    },\n    genLoader (): VNode {\n      return this.$createElement('span', {\n        class: 'v-btn__loader',\n      }, this.$slots.loader || [this.$createElement(VProgressCircular, {\n        props: {\n          indeterminate: true,\n          size: 23,\n          width: 2,\n        },\n      })])\n    },\n  },\n\n  render (h): VNode {\n    const children = [\n      this.genContent(),\n      this.loading && this.genLoader(),\n    ]\n    const { tag, data } = this.generateRouteLink()\n    const setColor = this.hasBg\n      ? this.setBackgroundColor\n      : this.setTextColor\n\n    if (tag === 'button') {\n      data.attrs!.type = this.type\n      data.attrs!.disabled = this.disabled\n    }\n    data.attrs!.value = ['string', 'number'].includes(typeof this.value)\n      ? this.value\n      : JSON.stringify(this.value)\n\n    return h(tag, this.disabled ? data : setColor(this.color, data), children)\n  },\n})\n","var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","'use strict';\nvar toPropertyKey = require('../internals/to-property-key');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPropertyKey(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\n\nvar quot = /\"/g;\n\n// `CreateHTML` abstract operation\n// https://tc39.es/ecma262/#sec-createhtml\nmodule.exports = function (string, tag, attribute, value) {\n  var S = toString(requireObjectCoercible(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + toString(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var store = require('../internals/shared-store');\n\nvar functionToString = Function.toString;\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (typeof store.inspectSource != 'function') {\n  store.inspectSource = function (it) {\n    return functionToString.call(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","'use strict';\nvar $ = require('../internals/export');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\nvar IS_PURE = require('../internals/is-pure');\n\n// eslint-disable-next-line es/no-string-prototype-endswith -- safe\nvar $endsWith = ''.endsWith;\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('endsWith');\n// https://github.com/zloirock/core-js/pull/702\nvar MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n  var descriptor = getOwnPropertyDescriptor(String.prototype, 'endsWith');\n  return descriptor && !descriptor.writable;\n}();\n\n// `String.prototype.endsWith` method\n// https://tc39.es/ecma262/#sec-string.prototype.endswith\n$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {\n  endsWith: function endsWith(searchString /* , endPosition = @length */) {\n    var that = toString(requireObjectCoercible(this));\n    notARegExp(searchString);\n    var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n    var len = toLength(that.length);\n    var end = endPosition === undefined ? len : min(toLength(endPosition), len);\n    var search = toString(searchString);\n    return $endsWith\n      ? $endsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.es/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","/* eslint-disable no-new -- required for testing */\nvar global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar NATIVE_ARRAY_BUFFER_VIEWS = require('../internals/array-buffer-view-core').NATIVE_ARRAY_BUFFER_VIEWS;\n\nvar ArrayBuffer = global.ArrayBuffer;\nvar Int8Array = global.Int8Array;\n\nmodule.exports = !NATIVE_ARRAY_BUFFER_VIEWS || !fails(function () {\n  Int8Array(1);\n}) || !fails(function () {\n  new Int8Array(-1);\n}) || !checkCorrectnessOfIteration(function (iterable) {\n  new Int8Array();\n  new Int8Array(null);\n  new Int8Array(1.5);\n  new Int8Array(iterable);\n}, true) || fails(function () {\n  // Safari (11+) bug - a reason why even Safari 13 should load a typed array polyfill\n  return new Int8Array(new ArrayBuffer(2), 1, undefined).length !== 1;\n});\n","/*!\n  * vue-router v3.5.2\n  * (c) 2021 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction extend (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n    .replace(encodeReserveRE, encodeReserveReplacer)\n    .replace(commaRE, ','); };\n\nfunction decode (str) {\n  try {\n    return decodeURIComponent(str)\n  } catch (err) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"Error decoding \\\"\" + str + \"\\\". Leaving it intact.\"));\n    }\n  }\n  return str\n}\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    var value = extraQuery[key];\n    parsedQuery[key] = Array.isArray(value)\n      ? value.map(castQueryParamValue)\n      : castQueryParamValue(value);\n  }\n  return parsedQuery\n}\n\nvar castQueryParamValue = function (value) { return (value == null || typeof value === 'object' ? value : String(value)); };\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0 ? decode(parts.join('=')) : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj\n    ? Object.keys(obj)\n      .map(function (key) {\n        var val = obj[key];\n\n        if (val === undefined) {\n          return ''\n        }\n\n        if (val === null) {\n          return encode(key)\n        }\n\n        if (Array.isArray(val)) {\n          var result = [];\n          val.forEach(function (val2) {\n            if (val2 === undefined) {\n              return\n            }\n            if (val2 === null) {\n              result.push(encode(key));\n            } else {\n              result.push(encode(key) + '=' + encode(val2));\n            }\n          });\n          return result.join('&')\n        }\n\n        return encode(key) + '=' + encode(val)\n      })\n      .filter(function (x) { return x.length > 0; })\n      .join('&')\n    : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b, onlyPath) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') && (onlyPath ||\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query))\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      (onlyPath || (\n        a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params))\n      )\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a).sort();\n  var bKeys = Object.keys(b).sort();\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key, i) {\n    var aVal = a[key];\n    var bKey = bKeys[i];\n    if (bKey !== key) { return false }\n    var bVal = b[key];\n    // query values can be null and undefined\n    if (aVal == null || bVal == null) { return aVal === bVal }\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction handleRouteEntered (route) {\n  for (var i = 0; i < route.matched.length; i++) {\n    var record = route.matched[i];\n    for (var name in record.instances) {\n      var instance = record.instances[name];\n      var cbs = record.enteredCbs[name];\n      if (!instance || !cbs) { continue }\n      delete record.enteredCbs[name];\n      for (var i$1 = 0; i$1 < cbs.length; i$1++) {\n        if (!instance._isBeingDestroyed) { cbs[i$1](instance); }\n      }\n    }\n  }\n}\n\nvar View = {\n  name: 'RouterView',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    // used by devtools to display a router-view badge\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      var vnodeData = parent.$vnode ? parent.$vnode.data : {};\n      if (vnodeData.routerView) {\n        depth++;\n      }\n      if (vnodeData.keepAlive && parent._directInactive && parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      var cachedData = cache[name];\n      var cachedComponent = cachedData && cachedData.component;\n      if (cachedComponent) {\n        // #2301\n        // pass props\n        if (cachedData.configProps) {\n          fillPropsinData(cachedComponent, data, cachedData.route, cachedData.configProps);\n        }\n        return h(cachedComponent, data, children)\n      } else {\n        // render previous empty view\n        return h()\n      }\n    }\n\n    var matched = route.matched[depth];\n    var component = matched && matched.components[name];\n\n    // render empty node if no matched route or no config component\n    if (!matched || !component) {\n      cache[name] = null;\n      return h()\n    }\n\n    // cache component\n    cache[name] = { component: component };\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // register instance in init hook\n    // in case kept-alive component be actived when routes changed\n    data.hook.init = function (vnode) {\n      if (vnode.data.keepAlive &&\n        vnode.componentInstance &&\n        vnode.componentInstance !== matched.instances[name]\n      ) {\n        matched.instances[name] = vnode.componentInstance;\n      }\n\n      // if the route transition has already been confirmed then we weren't\n      // able to call the cbs during confirmation as the component was not\n      // registered yet, so we call it here.\n      handleRouteEntered(route);\n    };\n\n    var configProps = matched.props && matched.props[name];\n    // save route and configProps in cache\n    if (configProps) {\n      extend(cache[name], {\n        route: route,\n        configProps: configProps\n      });\n      fillPropsinData(component, data, route, configProps);\n    }\n\n    return h(component, data, children)\n  }\n};\n\nfunction fillPropsinData (component, data, route, configProps) {\n  // resolve props\n  var propsToPass = data.props = resolveProps(route, configProps);\n  if (propsToPass) {\n    // clone to prevent mutation\n    propsToPass = data.props = extend({}, propsToPass);\n    // pass non-declared props as attrs\n    var attrs = data.attrs = data.attrs || {};\n    for (var key in propsToPass) {\n      if (!component.props || !(key in component.props)) {\n        attrs[key] = propsToPass[key];\n        delete propsToPass[key];\n      }\n    }\n  }\n}\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options), options)\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens, options) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options));\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  params = params || {};\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n\n    // Fix #2505 resolving asterisk routes { name: 'not-found', params: { pathMatch: '/not-found' }}\n    // and fix #3106 so that you can work with location descriptor object having params.pathMatch equal to empty string\n    if (typeof params.pathMatch === 'string') { params[0] = params.pathMatch; }\n\n    return filler(params, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      // Fix #3072 no warn if `pathMatch` is string\n      warn(typeof params.pathMatch === 'string', (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  } finally {\n    // delete the 0 if it was added\n    delete params[0];\n  }\n}\n\n/*  */\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next._normalized) {\n    return next\n  } else if (next.name) {\n    next = extend({}, raw);\n    var params = next.params;\n    if (params && typeof params === 'object') {\n      next.params = extend({}, params);\n    }\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = extend({}, next);\n    next._normalized = true;\n    var params$1 = extend(extend({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params$1;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params$1, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar noop = function () {};\n\nvar warnedCustomSlot;\nvar warnedTagProp;\nvar warnedEventProp;\n\nvar Link = {\n  name: 'RouterLink',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    custom: Boolean,\n    exact: Boolean,\n    exactPath: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    ariaCurrentValue: {\n      type: String,\n      default: 'page'\n    },\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(\n      this.to,\n      current,\n      this.append\n    );\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback =\n      globalActiveClass == null ? 'router-link-active' : globalActiveClass;\n    var exactActiveClassFallback =\n      globalExactActiveClass == null\n        ? 'router-link-exact-active'\n        : globalExactActiveClass;\n    var activeClass =\n      this.activeClass == null ? activeClassFallback : this.activeClass;\n    var exactActiveClass =\n      this.exactActiveClass == null\n        ? exactActiveClassFallback\n        : this.exactActiveClass;\n\n    var compareTarget = route.redirectedFrom\n      ? createRoute(null, normalizeLocation(route.redirectedFrom), null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget, this.exactPath);\n    classes[activeClass] = this.exact || this.exactPath\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var ariaCurrentValue = classes[exactActiveClass] ? this.ariaCurrentValue : null;\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location, noop);\n        } else {\n          router.push(location, noop);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) {\n        on[e] = handler;\n      });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = { class: classes };\n\n    var scopedSlot =\n      !this.$scopedSlots.$hasNormal &&\n      this.$scopedSlots.default &&\n      this.$scopedSlots.default({\n        href: href,\n        route: route,\n        navigate: handler,\n        isActive: classes[activeClass],\n        isExactActive: classes[exactActiveClass]\n      });\n\n    if (scopedSlot) {\n      if (process.env.NODE_ENV !== 'production' && !this.custom) {\n        !warnedCustomSlot && warn(false, 'In Vue Router 4, the v-slot API will by default wrap its content with an <a> element. Use the custom prop to remove this warning:\\n<router-link v-slot=\"{ navigate, href }\" custom></router-link>\\n');\n        warnedCustomSlot = true;\n      }\n      if (scopedSlot.length === 1) {\n        return scopedSlot[0]\n      } else if (scopedSlot.length > 1 || !scopedSlot.length) {\n        if (process.env.NODE_ENV !== 'production') {\n          warn(\n            false,\n            (\"<router-link> with to=\\\"\" + (this.to) + \"\\\" is trying to use a scoped slot but it didn't provide exactly one child. Wrapping the content with a span element.\")\n          );\n        }\n        return scopedSlot.length === 0 ? h() : h('span', {}, scopedSlot)\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if ('tag' in this.$options.propsData && !warnedTagProp) {\n        warn(\n          false,\n          \"<router-link>'s tag prop is deprecated and has been removed in Vue Router 4. Use the v-slot API to remove this warning: https://next.router.vuejs.org/guide/migration/#removal-of-event-and-tag-props-in-router-link.\"\n        );\n        warnedTagProp = true;\n      }\n      if ('event' in this.$options.propsData && !warnedEventProp) {\n        warn(\n          false,\n          \"<router-link>'s event prop is deprecated and has been removed in Vue Router 4. Use the v-slot API to remove this warning: https://next.router.vuejs.org/guide/migration/#removal-of-event-and-tag-props-in-router-link.\"\n        );\n        warnedEventProp = true;\n      }\n    }\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href, 'aria-current': ariaCurrentValue };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var aData = (a.data = extend({}, a.data));\n        aData.on = aData.on || {};\n        // transform existing events in both objects into arrays so we can push later\n        for (var event in aData.on) {\n          var handler$1 = aData.on[event];\n          if (event in on) {\n            aData.on[event] = Array.isArray(handler$1) ? handler$1 : [handler$1];\n          }\n        }\n        // append new listeners for router-link\n        for (var event$1 in on) {\n          if (event$1 in aData.on) {\n            // on[event] is always a function\n            aData.on[event$1].push(on[event$1]);\n          } else {\n            aData.on[event$1] = handler;\n          }\n        }\n\n        var aAttrs = (a.data.attrs = extend({}, a.data.attrs));\n        aAttrs.href = href;\n        aAttrs['aria-current'] = ariaCurrentValue;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('RouterView', View);\n  Vue.component('RouterLink', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap,\n  parentRoute\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route, parentRoute);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    // warn if routes do not include leading slashes\n    var found = pathList\n    // check for missing leading slash\n      .filter(function (path) { return path && path.charAt(0) !== '*' && path.charAt(0) !== '/'; });\n\n    if (found.length > 0) {\n      var pathNames = found.map(function (path) { return (\"- \" + path); }).join('\\n');\n      warn(false, (\"Non-nested routes must include a leading slash character. Fix the following routes: \\n\" + pathNames));\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(\n        path || name\n      )) + \" cannot be a \" + \"string id. Use an actual component instead.\"\n    );\n\n    warn(\n      // eslint-disable-next-line no-control-regex\n      !/[^\\u0000-\\u007F]+/.test(path),\n      \"Route with path \\\"\" + path + \"\\\" contains unencoded characters, make sure \" +\n        \"your path is correctly encoded before passing it to the router. Use \" +\n        \"encodeURI to encode static segments of your path.\"\n    );\n  }\n\n  var pathToRegexpOptions =\n    route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(path, parent, pathToRegexpOptions.strict);\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    alias: route.alias\n      ? typeof route.alias === 'string'\n        ? [route.alias]\n        : route.alias\n      : [],\n    instances: {},\n    enteredCbs: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props:\n      route.props == null\n        ? {}\n        : route.components\n          ? route.props\n          : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (\n        route.name &&\n        !route.redirect &&\n        route.children.some(function (child) { return /^\\/?$/.test(child.path); })\n      ) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n            \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n            \"the default child route will not be rendered. Remove the name from \" +\n            \"this route and use the name of the default child route for named \" +\n            \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias) ? route.alias : [route.alias];\n    for (var i = 0; i < aliases.length; ++i) {\n      var alias = aliases[i];\n      if (process.env.NODE_ENV !== 'production' && alias === path) {\n        warn(\n          false,\n          (\"Found an alias with the same value as the path: \\\"\" + path + \"\\\". You have to remove that alias. It will be ignored in development.\")\n        );\n        // skip in dev to make it work\n        continue\n      }\n\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    }\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n          \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (\n  path,\n  pathToRegexpOptions\n) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(\n        !keys[key.name],\n        (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\")\n      );\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (\n  path,\n  parent,\n  strict\n) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function addRoute (parentOrRoute, route) {\n    var parent = (typeof parentOrRoute !== 'object') ? nameMap[parentOrRoute] : undefined;\n    // $flow-disable-line\n    createRouteMap([route || parentOrRoute], pathList, pathMap, nameMap, parent);\n\n    // add aliases of parent\n    if (parent && parent.alias.length) {\n      createRouteMap(\n        // $flow-disable-line route is defined if parent is\n        parent.alias.map(function (alias) { return ({ path: alias, children: [route] }); }),\n        pathList,\n        pathMap,\n        nameMap,\n        parent\n      );\n    }\n  }\n\n  function getRoutes () {\n    return pathList.map(function (path) { return pathMap[path]; })\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n      return _createRoute(record, location, redirectedFrom)\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n      ? originalRedirect(createRoute(record, location, null, router))\n      : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoute: addRoute,\n    getRoutes: getRoutes,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    if (key) {\n      // Fix #1994: using * with props: true generates a param named 0\n      params[key.name || 'pathMatch'] = typeof m[i] === 'string' ? decode(m[i]) : m[i];\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n// use User Timing api (if present) for more accurate key precision\nvar Time =\n  inBrowser && window.performance && window.performance.now\n    ? window.performance\n    : Date;\n\nfunction genStateKey () {\n  return Time.now().toFixed(3)\n}\n\nvar _key = genStateKey();\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  return (_key = key)\n}\n\n/*  */\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Prevent browser scroll behavior on History popstate\n  if ('scrollRestoration' in window.history) {\n    window.history.scrollRestoration = 'manual';\n  }\n  // Fix for #1585 for Firefox\n  // Fix for #2195 Add optional third attribute to workaround a bug in safari https://bugs.webkit.org/show_bug.cgi?id=182678\n  // Fix for #2774 Support for apps loaded from Windows file shares not mapped to network drives: replaced location.origin with\n  // window.location.protocol + '//' + window.location.host\n  // location.host contains the port and location.hostname doesn't\n  var protocolAndPath = window.location.protocol + '//' + window.location.host;\n  var absolutePath = window.location.href.replace(protocolAndPath, '');\n  // preserve existing history state as it could be overriden by the user\n  var stateCopy = extend({}, window.history.state);\n  stateCopy.key = getStateKey();\n  window.history.replaceState(stateCopy, '', absolutePath);\n  window.addEventListener('popstate', handlePopState);\n  return function () {\n    window.removeEventListener('popstate', handlePopState);\n  }\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior.call(\n      router,\n      to,\n      from,\n      isPop ? position : null\n    );\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll\n        .then(function (shouldScroll) {\n          scrollToPosition((shouldScroll), position);\n        })\n        .catch(function (err) {\n          if (process.env.NODE_ENV !== 'production') {\n            assert(false, err.toString());\n          }\n        });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction handlePopState (e) {\n  saveScrollPosition();\n  if (e.state && e.state.key) {\n    setStateKey(e.state.key);\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nvar hashStartsWithNumberRE = /^#\\d/;\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    // getElementById would still fail if the selector contains a more complicated query like #main[data-attr]\n    // but at the same time, it doesn't make much sense to select an element with an id and an extra selector\n    var el = hashStartsWithNumberRE.test(shouldScroll.selector) // $flow-disable-line\n      ? document.getElementById(shouldScroll.selector.slice(1)) // $flow-disable-line\n      : document.querySelector(shouldScroll.selector);\n\n    if (el) {\n      var offset =\n        shouldScroll.offset && typeof shouldScroll.offset === 'object'\n          ? shouldScroll.offset\n          : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    // $flow-disable-line\n    if ('scrollBehavior' in document.documentElement.style) {\n      window.scrollTo({\n        left: position.x,\n        top: position.y,\n        // $flow-disable-line\n        behavior: shouldScroll.behavior\n      });\n    } else {\n      window.scrollTo(position.x, position.y);\n    }\n  }\n}\n\n/*  */\n\nvar supportsPushState =\n  inBrowser &&\n  (function () {\n    var ua = window.navigator.userAgent;\n\n    if (\n      (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n      ua.indexOf('Mobile Safari') !== -1 &&\n      ua.indexOf('Chrome') === -1 &&\n      ua.indexOf('Windows Phone') === -1\n    ) {\n      return false\n    }\n\n    return window.history && typeof window.history.pushState === 'function'\n  })();\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      // preserve existing history state as it could be overriden by the user\n      var stateCopy = extend({}, history.state);\n      stateCopy.key = getStateKey();\n      history.replaceState(stateCopy, '', url);\n    } else {\n      history.pushState({ key: setStateKey(genStateKey()) }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n// When changing thing, also edit router.d.ts\nvar NavigationFailureType = {\n  redirected: 2,\n  aborted: 4,\n  cancelled: 8,\n  duplicated: 16\n};\n\nfunction createNavigationRedirectedError (from, to) {\n  return createRouterError(\n    from,\n    to,\n    NavigationFailureType.redirected,\n    (\"Redirected when going from \\\"\" + (from.fullPath) + \"\\\" to \\\"\" + (stringifyRoute(\n      to\n    )) + \"\\\" via a navigation guard.\")\n  )\n}\n\nfunction createNavigationDuplicatedError (from, to) {\n  var error = createRouterError(\n    from,\n    to,\n    NavigationFailureType.duplicated,\n    (\"Avoided redundant navigation to current location: \\\"\" + (from.fullPath) + \"\\\".\")\n  );\n  // backwards compatible with the first introduction of Errors\n  error.name = 'NavigationDuplicated';\n  return error\n}\n\nfunction createNavigationCancelledError (from, to) {\n  return createRouterError(\n    from,\n    to,\n    NavigationFailureType.cancelled,\n    (\"Navigation cancelled from \\\"\" + (from.fullPath) + \"\\\" to \\\"\" + (to.fullPath) + \"\\\" with a new navigation.\")\n  )\n}\n\nfunction createNavigationAbortedError (from, to) {\n  return createRouterError(\n    from,\n    to,\n    NavigationFailureType.aborted,\n    (\"Navigation aborted from \\\"\" + (from.fullPath) + \"\\\" to \\\"\" + (to.fullPath) + \"\\\" via a navigation guard.\")\n  )\n}\n\nfunction createRouterError (from, to, type, message) {\n  var error = new Error(message);\n  error._isRouter = true;\n  error.from = from;\n  error.to = to;\n  error.type = type;\n\n  return error\n}\n\nvar propertiesToLog = ['params', 'query', 'hash'];\n\nfunction stringifyRoute (to) {\n  if (typeof to === 'string') { return to }\n  if ('path' in to) { return to.path }\n  var location = {};\n  propertiesToLog.forEach(function (key) {\n    if (key in to) { location[key] = to[key]; }\n  });\n  return JSON.stringify(location, null, 2)\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nfunction isNavigationFailure (err, errorType) {\n  return (\n    isError(err) &&\n    err._isRouter &&\n    (errorType == null || err.type === errorType)\n  )\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n  this.listeners = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (\n  location,\n  onComplete,\n  onAbort\n) {\n    var this$1 = this;\n\n  var route;\n  // catch redirect option https://github.com/vuejs/vue-router/issues/3201\n  try {\n    route = this.router.match(location, this.current);\n  } catch (e) {\n    this.errorCbs.forEach(function (cb) {\n      cb(e);\n    });\n    // Exception should still be thrown\n    throw e\n  }\n  var prev = this.current;\n  this.confirmTransition(\n    route,\n    function () {\n      this$1.updateRoute(route);\n      onComplete && onComplete(route);\n      this$1.ensureURL();\n      this$1.router.afterHooks.forEach(function (hook) {\n        hook && hook(route, prev);\n      });\n\n      // fire ready cbs once\n      if (!this$1.ready) {\n        this$1.ready = true;\n        this$1.readyCbs.forEach(function (cb) {\n          cb(route);\n        });\n      }\n    },\n    function (err) {\n      if (onAbort) {\n        onAbort(err);\n      }\n      if (err && !this$1.ready) {\n        // Initial redirection should not mark the history as ready yet\n        // because it's triggered by the redirection instead\n        // https://github.com/vuejs/vue-router/issues/3225\n        // https://github.com/vuejs/vue-router/issues/3331\n        if (!isNavigationFailure(err, NavigationFailureType.redirected) || prev !== START) {\n          this$1.ready = true;\n          this$1.readyErrorCbs.forEach(function (cb) {\n            cb(err);\n          });\n        }\n      }\n    }\n  );\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  this.pending = route;\n  var abort = function (err) {\n    // changed after adding errors with\n    // https://github.com/vuejs/vue-router/pull/3047 before that change,\n    // redirect and aborted navigation would produce an err == null\n    if (!isNavigationFailure(err) && isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) {\n          cb(err);\n        });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  var lastRouteIndex = route.matched.length - 1;\n  var lastCurrentIndex = current.matched.length - 1;\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    lastRouteIndex === lastCurrentIndex &&\n    route.matched[lastRouteIndex] === current.matched[lastCurrentIndex]\n  ) {\n    this.ensureURL();\n    return abort(createNavigationDuplicatedError(current, route))\n  }\n\n  var ref = resolveQueue(\n    this.current.matched,\n    route.matched\n  );\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort(createNavigationCancelledError(current, route))\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(createNavigationAbortedError(current, route));\n        } else if (isError(to)) {\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' &&\n            (typeof to.path === 'string' || typeof to.name === 'string'))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort(createNavigationRedirectedError(current, route));\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort(createNavigationCancelledError(current, route))\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          handleRouteEntered(route);\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  this.current = route;\n  this.cb && this.cb(route);\n};\n\nHistory.prototype.setupListeners = function setupListeners () {\n  // Default implementation is empty\n};\n\nHistory.prototype.teardown = function teardown () {\n  // clean up event listeners\n  // https://github.com/vuejs/vue-router/issues/2341\n  this.listeners.forEach(function (cleanupListener) {\n    cleanupListener();\n  });\n  this.listeners = [];\n\n  // reset current history route\n  // https://github.com/vuejs/vue-router/issues/3294\n  this.current = START;\n  this.pending = null;\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated\n) {\n  return extractGuards(\n    activated,\n    'beforeRouteEnter',\n    function (guard, _, match, key) {\n      return bindEnterGuard(guard, match, key)\n    }\n  )\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      if (typeof cb === 'function') {\n        if (!match.enteredCbs[key]) {\n          match.enteredCbs[key] = [];\n        }\n        match.enteredCbs[key].push(cb);\n      }\n      next(cb);\n    })\n  }\n}\n\n/*  */\n\nvar HTML5History = /*@__PURE__*/(function (History) {\n  function HTML5History (router, base) {\n    History.call(this, router, base);\n\n    this._startLocation = getLocation(this.base);\n  }\n\n  if ( History ) HTML5History.__proto__ = History;\n  HTML5History.prototype = Object.create( History && History.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    if (this.listeners.length > 0) {\n      return\n    }\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      this.listeners.push(setupScroll());\n    }\n\n    var handleRoutingEvent = function () {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === this$1._startLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (supportsScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    };\n    window.addEventListener('popstate', handleRoutingEvent);\n    this.listeners.push(function () {\n      window.removeEventListener('popstate', handleRoutingEvent);\n    });\n  };\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  var pathLowerCase = path.toLowerCase();\n  var baseLowerCase = base.toLowerCase();\n  // base=\"/a\" shouldn't turn path=\"/app\" into \"/a/pp\"\n  // https://github.com/vuejs/vue-router/issues/3555\n  // so we ensure the trailing slash in the base\n  if (base && ((pathLowerCase === baseLowerCase) ||\n    (pathLowerCase.indexOf(cleanPath(baseLowerCase + '/')) === 0))) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\nvar HashHistory = /*@__PURE__*/(function (History) {\n  function HashHistory (router, base, fallback) {\n    History.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History ) HashHistory.__proto__ = History;\n  HashHistory.prototype = Object.create( History && History.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    if (this.listeners.length > 0) {\n      return\n    }\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      this.listeners.push(setupScroll());\n    }\n\n    var handleRoutingEvent = function () {\n      var current = this$1.current;\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        if (supportsScroll) {\n          handleScroll(this$1.router, route, current, true);\n        }\n        if (!supportsPushState) {\n          replaceHash(route.fullPath);\n        }\n      });\n    };\n    var eventType = supportsPushState ? 'popstate' : 'hashchange';\n    window.addEventListener(\n      eventType,\n      handleRoutingEvent\n    );\n    this.listeners.push(function () {\n      window.removeEventListener(eventType, handleRoutingEvent);\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(\n      location,\n      function (route) {\n        pushHash(route.fullPath);\n        handleScroll(this$1.router, route, fromRoute, false);\n        onComplete && onComplete(route);\n      },\n      onAbort\n    );\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(\n      location,\n      function (route) {\n        replaceHash(route.fullPath);\n        handleScroll(this$1.router, route, fromRoute, false);\n        onComplete && onComplete(route);\n      },\n      onAbort\n    );\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(cleanPath(base + '/#' + location));\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  // empty path\n  if (index < 0) { return '' }\n\n  href = href.slice(index + 1);\n\n  return href\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\nvar AbstractHistory = /*@__PURE__*/(function (History) {\n  function AbstractHistory (router, base) {\n    History.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History ) AbstractHistory.__proto__ = History;\n  AbstractHistory.prototype = Object.create( History && History.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(\n      location,\n      function (route) {\n        this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n        this$1.index++;\n        onComplete && onComplete(route);\n      },\n      onAbort\n    );\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(\n      location,\n      function (route) {\n        this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n        onComplete && onComplete(route);\n      },\n      onAbort\n    );\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(\n      route,\n      function () {\n        var prev = this$1.current;\n        this$1.index = targetIndex;\n        this$1.updateRoute(route);\n        this$1.router.afterHooks.forEach(function (hook) {\n          hook && hook(route, prev);\n        });\n      },\n      function (err) {\n        if (isNavigationFailure(err, NavigationFailureType.duplicated)) {\n          this$1.index = targetIndex;\n        }\n      }\n    );\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback =\n    mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (raw, current, redirectedFrom) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' &&\n    assert(\n      install.installed,\n      \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n        \"before creating root instance.\"\n    );\n\n  this.apps.push(app);\n\n  // set up app destroyed handler\n  // https://github.com/vuejs/vue-router/issues/2639\n  app.$once('hook:destroyed', function () {\n    // clean out app from this.apps array once destroyed\n    var index = this$1.apps.indexOf(app);\n    if (index > -1) { this$1.apps.splice(index, 1); }\n    // ensure we still have a main app or null if no apps\n    // we do not release the router so it can be reused\n    if (this$1.app === app) { this$1.app = this$1.apps[0] || null; }\n\n    if (!this$1.app) { this$1.history.teardown(); }\n  });\n\n  // main app previously initialized\n  // return as we don't need to set up new history listener\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History || history instanceof HashHistory) {\n    var handleInitialScroll = function (routeOrError) {\n      var from = history.current;\n      var expectScroll = this$1.options.scrollBehavior;\n      var supportsScroll = supportsPushState && expectScroll;\n\n      if (supportsScroll && 'fullPath' in routeOrError) {\n        handleScroll(this$1, routeOrError, from, false);\n      }\n    };\n    var setupListeners = function (routeOrError) {\n      history.setupListeners();\n      handleInitialScroll(routeOrError);\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupListeners,\n      setupListeners\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  // $flow-disable-line\n  if (!onComplete && !onAbort && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve, reject) {\n      this$1.history.push(location, resolve, reject);\n    })\n  } else {\n    this.history.push(location, onComplete, onAbort);\n  }\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  // $flow-disable-line\n  if (!onComplete && !onAbort && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve, reject) {\n      this$1.history.replace(location, resolve, reject);\n    })\n  } else {\n    this.history.replace(location, onComplete, onAbort);\n  }\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply(\n    [],\n    route.matched.map(function (m) {\n      return Object.keys(m.components).map(function (key) {\n        return m.components[key]\n      })\n    })\n  )\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  current = current || this.history.current;\n  var location = normalizeLocation(to, current, append, this);\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.getRoutes = function getRoutes () {\n  return this.matcher.getRoutes()\n};\n\nVueRouter.prototype.addRoute = function addRoute (parentOrRoute, route) {\n  this.matcher.addRoute(parentOrRoute, route);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn(false, 'router.addRoutes() is deprecated and has been removed in Vue Router 4. Use router.addRoute() instead.');\n  }\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '3.5.2';\nVueRouter.isNavigationFailure = isNavigationFailure;\nVueRouter.NavigationFailureType = NavigationFailureType;\nVueRouter.START_LOCATION = START;\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n","import { ColorInt, XYZ } from '../colorUtils'\nimport { clamp } from '../../util/helpers'\n\n// For converting XYZ to sRGB\nconst srgbForwardMatrix = [\n  [3.2406, -1.5372, -0.4986],\n  [-0.9689, 1.8758, 0.0415],\n  [0.0557, -0.2040, 1.0570],\n]\n\n// Forward gamma adjust\nconst srgbForwardTransform = (C: number): number => (\n  C <= 0.0031308\n    ? C * 12.92\n    : 1.055 * C ** (1 / 2.4) - 0.055\n)\n\n// For converting sRGB to XYZ\nconst srgbReverseMatrix = [\n  [0.4124, 0.3576, 0.1805],\n  [0.2126, 0.7152, 0.0722],\n  [0.0193, 0.1192, 0.9505],\n]\n\n// Reverse gamma adjust\nconst srgbReverseTransform = (C: number): number => (\n  C <= 0.04045\n    ? C / 12.92\n    : ((C + 0.055) / 1.055) ** 2.4\n)\n\nexport function fromXYZ (xyz: XYZ): ColorInt {\n  const rgb = Array(3)\n  const transform = srgbForwardTransform\n  const matrix = srgbForwardMatrix\n\n  // Matrix transform, then gamma adjustment\n  for (let i = 0; i < 3; ++i) {\n    rgb[i] = Math.round(clamp(transform(\n      matrix[i][0] * xyz[0] +\n      matrix[i][1] * xyz[1] +\n      matrix[i][2] * xyz[2]\n    )) * 255)\n  }\n\n  // Rescale back to [0, 255]\n  return (rgb[0] << 16) + (rgb[1] << 8) + (rgb[2] << 0)\n}\n\nexport function toXYZ (rgb: ColorInt): XYZ {\n  const xyz: XYZ = [0, 0, 0]\n  const transform = srgbReverseTransform\n  const matrix = srgbReverseMatrix\n\n  // Rescale from [0, 255] to [0, 1] then adjust sRGB gamma to linear RGB\n  const r = transform((rgb >> 16 & 0xff) / 255)\n  const g = transform((rgb >> 8 & 0xff) / 255)\n  const b = transform((rgb >> 0 & 0xff) / 255)\n\n  // Matrix color space transform\n  for (let i = 0; i < 3; ++i) {\n    xyz[i] = matrix[i][0] * r + matrix[i][1] * g + matrix[i][2] * b\n  }\n\n  return xyz\n}\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'roundable',\n\n  props: {\n    rounded: [Boolean, String],\n    tile: Boolean,\n  },\n\n  computed: {\n    roundedClasses (): Record<string, boolean> {\n      const composite = []\n      const rounded = typeof this.rounded === 'string'\n        ? String(this.rounded)\n        : this.rounded === true\n\n      if (this.tile) {\n        composite.push('rounded-0')\n      } else if (typeof rounded === 'string') {\n        const values = rounded.split(' ')\n\n        for (const value of values) {\n          composite.push(`rounded-${value}`)\n        }\n      } else if (rounded) {\n        composite.push('rounded')\n      }\n\n      return composite.length > 0 ? {\n        [composite.join(' ')]: true,\n      } : {}\n    },\n  },\n})\n","// Styles\nimport './VSheet.sass'\n\n// Mixins\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport Colorable from '../../mixins/colorable'\nimport Elevatable from '../../mixins/elevatable'\nimport Measurable from '../../mixins/measurable'\nimport Roundable from '../../mixins/roundable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  Colorable,\n  Elevatable,\n  Measurable,\n  Roundable,\n  Themeable\n).extend({\n  name: 'v-sheet',\n\n  props: {\n    outlined: Boolean,\n    shaped: Boolean,\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-sheet': true,\n        'v-sheet--outlined': this.outlined,\n        'v-sheet--shaped': this.shaped,\n        ...this.themeClasses,\n        ...this.elevationClasses,\n        ...this.roundedClasses,\n      }\n    },\n    styles (): object {\n      return this.measurableStyles\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      class: this.classes,\n      style: this.styles,\n      on: this.listeners$,\n    }\n\n    return h(\n      this.tag,\n      this.setBackgroundColor(this.color, data),\n      this.$slots.default\n    )\n  },\n})\n","import Vue, { VueConstructor } from 'vue'\n\nexport type Proxyable<T extends string = 'value'> = VueConstructor<Vue & {\n  internalLazyValue: unknown\n  internalValue: unknown\n} & Record<T, any>>\n\nexport function factory<T extends string = 'value'> (prop?: T, event?: string): Proxyable<T>\nexport function factory (\n  prop = 'value',\n  event = 'change'\n) {\n  return Vue.extend({\n    name: 'proxyable',\n\n    model: {\n      prop,\n      event,\n    },\n\n    props: {\n      [prop]: {\n        required: false,\n      },\n    },\n\n    data () {\n      return {\n        internalLazyValue: this[prop] as unknown,\n      }\n    },\n\n    computed: {\n      internalValue: {\n        get (): unknown {\n          return this.internalLazyValue\n        },\n        set (val: any) {\n          if (val === this.internalLazyValue) return\n\n          this.internalLazyValue = val\n\n          this.$emit(event, val)\n        },\n      },\n    },\n\n    watch: {\n      [prop] (val) {\n        this.internalLazyValue = val\n      },\n    },\n  })\n}\n\n/* eslint-disable-next-line @typescript-eslint/no-redeclare */\nconst Proxyable = factory()\n\nexport default Proxyable\n","import './VProgressLinear.sass'\n\n// Components\nimport {\n  VFadeTransition,\n  VSlideXTransition,\n} from '../transitions'\n\n// Directives\nimport intersect from '../../directives/intersect'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as PositionableFactory } from '../../mixins/positionable'\nimport Proxyable from '../../mixins/proxyable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport { convertToUnit, getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { FunctionalComponentOptions } from 'vue/types'\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  PositionableFactory(['absolute', 'fixed', 'top', 'bottom']),\n  Proxyable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-progress-linear',\n\n  directives: { intersect },\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    backgroundColor: {\n      type: String,\n      default: null,\n    },\n    backgroundOpacity: {\n      type: [Number, String],\n      default: null,\n    },\n    bufferValue: {\n      type: [Number, String],\n      default: 100,\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    height: {\n      type: [Number, String],\n      default: 4,\n    },\n    indeterminate: Boolean,\n    query: Boolean,\n    reverse: Boolean,\n    rounded: Boolean,\n    stream: Boolean,\n    striped: Boolean,\n    value: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data () {\n    return {\n      internalLazyValue: this.value || 0,\n      isVisible: true,\n    }\n  },\n\n  computed: {\n    __cachedBackground (): VNode {\n      return this.$createElement('div', this.setBackgroundColor(this.backgroundColor || this.color, {\n        staticClass: 'v-progress-linear__background',\n        style: this.backgroundStyle,\n      }))\n    },\n    __cachedBar (): VNode {\n      return this.$createElement(this.computedTransition, [this.__cachedBarType])\n    },\n    __cachedBarType (): VNode {\n      return this.indeterminate ? this.__cachedIndeterminate : this.__cachedDeterminate\n    },\n    __cachedBuffer (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-progress-linear__buffer',\n        style: this.styles,\n      })\n    },\n    __cachedDeterminate (): VNode {\n      return this.$createElement('div', this.setBackgroundColor(this.color, {\n        staticClass: `v-progress-linear__determinate`,\n        style: {\n          width: convertToUnit(this.normalizedValue, '%'),\n        },\n      }))\n    },\n    __cachedIndeterminate (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-progress-linear__indeterminate',\n        class: {\n          'v-progress-linear__indeterminate--active': this.active,\n        },\n      }, [\n        this.genProgressBar('long'),\n        this.genProgressBar('short'),\n      ])\n    },\n    __cachedStream (): VNode | null {\n      if (!this.stream) return null\n\n      return this.$createElement('div', this.setTextColor(this.color, {\n        staticClass: 'v-progress-linear__stream',\n        style: {\n          width: convertToUnit(100 - this.normalizedBuffer, '%'),\n        },\n      }))\n    },\n    backgroundStyle (): object {\n      const backgroundOpacity = this.backgroundOpacity == null\n        ? (this.backgroundColor ? 1 : 0.3)\n        : parseFloat(this.backgroundOpacity)\n\n      return {\n        opacity: backgroundOpacity,\n        [this.isReversed ? 'right' : 'left']: convertToUnit(this.normalizedValue, '%'),\n        width: convertToUnit(Math.max(0, this.normalizedBuffer - this.normalizedValue), '%'),\n      }\n    },\n    classes (): object {\n      return {\n        'v-progress-linear--absolute': this.absolute,\n        'v-progress-linear--fixed': this.fixed,\n        'v-progress-linear--query': this.query,\n        'v-progress-linear--reactive': this.reactive,\n        'v-progress-linear--reverse': this.isReversed,\n        'v-progress-linear--rounded': this.rounded,\n        'v-progress-linear--striped': this.striped,\n        'v-progress-linear--visible': this.isVisible,\n        ...this.themeClasses,\n      }\n    },\n    computedTransition (): FunctionalComponentOptions {\n      return this.indeterminate ? VFadeTransition : VSlideXTransition\n    },\n    isReversed (): boolean {\n      return this.$vuetify.rtl !== this.reverse\n    },\n    normalizedBuffer (): number {\n      return this.normalize(this.bufferValue)\n    },\n    normalizedValue (): number {\n      return this.normalize(this.internalLazyValue)\n    },\n    reactive (): boolean {\n      return Boolean(this.$listeners.change)\n    },\n    styles (): object {\n      const styles: Record<string, any> = {}\n\n      if (!this.active) {\n        styles.height = 0\n      }\n\n      if (!this.indeterminate && parseFloat(this.normalizedBuffer) !== 100) {\n        styles.width = convertToUnit(this.normalizedBuffer, '%')\n      }\n\n      return styles\n    },\n  },\n\n  methods: {\n    genContent () {\n      const slot = getSlot(this, 'default', { value: this.internalLazyValue })\n\n      if (!slot) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-progress-linear__content',\n      }, slot)\n    },\n    genListeners () {\n      const listeners = this.$listeners\n\n      if (this.reactive) {\n        listeners.click = this.onClick\n      }\n\n      return listeners\n    },\n    genProgressBar (name: 'long' | 'short') {\n      return this.$createElement('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-progress-linear__indeterminate',\n        class: {\n          [name]: true,\n        },\n      }))\n    },\n    onClick (e: MouseEvent) {\n      if (!this.reactive) return\n\n      const { width } = this.$el.getBoundingClientRect()\n\n      this.internalValue = e.offsetX / width * 100\n    },\n    onObserve (entries: IntersectionObserverEntry[], observer: IntersectionObserver, isIntersecting: boolean) {\n      this.isVisible = isIntersecting\n    },\n    normalize (value: string | number) {\n      if (value < 0) return 0\n      if (value > 100) return 100\n      return parseFloat(value)\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-progress-linear',\n      attrs: {\n        role: 'progressbar',\n        'aria-valuemin': 0,\n        'aria-valuemax': this.normalizedBuffer,\n        'aria-valuenow': this.indeterminate ? undefined : this.normalizedValue,\n      },\n      class: this.classes,\n      directives: [{\n        name: 'intersect',\n        value: this.onObserve,\n      }],\n      style: {\n        bottom: this.bottom ? 0 : undefined,\n        height: this.active ? convertToUnit(this.height) : 0,\n        top: this.top ? 0 : undefined,\n      },\n      on: this.genListeners(),\n    }\n\n    return h('div', data, [\n      this.__cachedStream,\n      this.__cachedBackground,\n      this.__cachedBuffer,\n      this.__cachedBar,\n      this.genContent(),\n    ])\n  },\n})\n","import { VNodeDirective } from 'vue/types/vnode'\n\ntype ObserveHandler = (\n  entries: IntersectionObserverEntry[],\n  observer: IntersectionObserver,\n  isIntersecting: boolean,\n) => void\n\ninterface ObserveVNodeDirective extends Omit<VNodeDirective, 'modifiers'> {\n  value?: ObserveHandler | { handler: ObserveHandler, options?: IntersectionObserverInit }\n  modifiers?: {\n    once?: boolean\n    quiet?: boolean\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: ObserveVNodeDirective) {\n  if (typeof window === 'undefined' || !('IntersectionObserver' in window)) return\n\n  const modifiers = binding.modifiers || {}\n  const value = binding.value\n  const { handler, options } = typeof value === 'object'\n    ? value\n    : { handler: value, options: {} }\n  const observer = new IntersectionObserver((\n    entries: IntersectionObserverEntry[] = [],\n    observer: IntersectionObserver\n  ) => {\n    /* istanbul ignore if */\n    if (!el._observe) return // Just in case, should never fire\n\n    const isIntersecting = entries.some(entry => entry.isIntersecting)\n\n    // If is not quiet or has already been\n    // initted, invoke the user callback\n    if (\n      handler && (\n        !modifiers.quiet ||\n        el._observe.init\n      ) && (\n        !modifiers.once ||\n        isIntersecting ||\n        !el._observe.init\n      )\n    ) {\n      handler(entries, observer, isIntersecting)\n    }\n\n    if (isIntersecting && modifiers.once) unbind(el)\n    else el._observe.init = true\n  }, options)\n\n  el._observe = { init: false, observer }\n\n  observer.observe(el)\n}\n\nfunction unbind (el: HTMLElement) {\n  /* istanbul ignore if */\n  if (!el._observe) return\n\n  el._observe.observer.unobserve(el)\n  delete el._observe\n}\n\nexport const Intersect = {\n  inserted,\n  unbind,\n}\n\nexport default Intersect\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","'use strict';\n/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */\n/* eslint-disable regexp/no-useless-quantifier -- testing */\nvar toString = require('../internals/to-string');\nvar regexpFlags = require('../internals/regexp-flags');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar shared = require('../internals/shared');\nvar create = require('../internals/object-create');\nvar getInternalState = require('../internals/internal-state').get;\nvar UNSUPPORTED_DOT_ALL = require('../internals/regexp-unsupported-dot-all');\nvar UNSUPPORTED_NCG = require('../internals/regexp-unsupported-ncg');\n\nvar nativeExec = RegExp.prototype.exec;\nvar nativeReplace = shared('native-string-replace', String.prototype.replace);\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;\n\nif (PATCH) {\n  // eslint-disable-next-line max-statements -- TODO\n  patchedExec = function exec(string) {\n    var re = this;\n    var state = getInternalState(re);\n    var str = toString(string);\n    var raw = state.raw;\n    var result, reCopy, lastIndex, match, i, object, group;\n\n    if (raw) {\n      raw.lastIndex = re.lastIndex;\n      result = patchedExec.call(raw, str);\n      re.lastIndex = raw.lastIndex;\n      return result;\n    }\n\n    var groups = state.groups;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = regexpFlags.call(re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = flags.replace('y', '');\n      if (flags.indexOf('g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = str.slice(re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str.charAt(re.lastIndex - 1) !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = match.input.slice(charsAdded);\n        match[0] = match[0].slice(charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    if (match && groups) {\n      match.groups = object = create(null);\n      for (i = 0; i < groups.length; i++) {\n        group = groups[i];\n        object[group[0]] = match[group[1]];\n      }\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/string-html-forced');\n\n// `String.prototype.link` method\n// https://tc39.es/ecma262/#sec-string.prototype.link\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('link') }, {\n  link: function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  concat: function concat(arg) {\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","var anObject = require('../internals/an-object');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nmodule.exports = function (it, usingIterator) {\n  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(it) : usingIterator;\n  if (typeof iteratorMethod != 'function') {\n    throw TypeError(String(it) + ' is not iterable');\n  } return anObject(iteratorMethod.call(it));\n};\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $copyWithin = require('../internals/array-copy-within');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.copyWithin` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.copywithin\nexportTypedArrayMethod('copyWithin', function copyWithin(target, start /* , end */) {\n  return $copyWithin.call(aTypedArray(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n});\n","var anObject = require('../internals/an-object');\nvar iteratorClose = require('../internals/iterator-close');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  } catch (error) {\n    iteratorClose(iterator, 'throw', error);\n  }\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","import VIcon from './VIcon'\n\nexport { VIcon }\nexport default VIcon\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","var fails = require('../internals/fails');\nvar global = require('../internals/global');\n\n// babel-minify and Closure Compiler transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\nvar $RegExp = global.RegExp;\n\nexports.UNSUPPORTED_Y = fails(function () {\n  var re = $RegExp('a', 'y');\n  re.lastIndex = 2;\n  return re.exec('abcd') != null;\n});\n\nexports.BROKEN_CARET = fails(function () {\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n  var re = $RegExp('^r', 'gy');\n  re.lastIndex = 2;\n  return re.exec('str') != null;\n});\n","var toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : String(key);\n};\n","var toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar getIterator = require('../internals/get-iterator');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar bind = require('../internals/function-bind-context');\nvar aTypedArrayConstructor = require('../internals/array-buffer-view-core').aTypedArrayConstructor;\n\nmodule.exports = function from(source /* , mapfn, thisArg */) {\n  var O = toObject(source);\n  var argumentsLength = arguments.length;\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n  var mapping = mapfn !== undefined;\n  var iteratorMethod = getIteratorMethod(O);\n  var i, length, result, step, iterator, next;\n  if (iteratorMethod != undefined && !isArrayIteratorMethod(iteratorMethod)) {\n    iterator = getIterator(O, iteratorMethod);\n    next = iterator.next;\n    O = [];\n    while (!(step = next.call(iterator)).done) {\n      O.push(step.value);\n    }\n  }\n  if (mapping && argumentsLength > 2) {\n    mapfn = bind(mapfn, arguments[2], 2);\n  }\n  length = toLength(O.length);\n  result = new (aTypedArrayConstructor(this))(length);\n  for (i = 0; length > i; i++) {\n    result[i] = mapping ? mapfn(O[i], i) : O[i];\n  }\n  return result;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar nativeJoin = [].join;\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar STRICT_METHOD = arrayMethodIsStrict('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.es/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {\n  join: function join(separator) {\n    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","'use strict';\nvar isArray = require('../internals/is-array');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;\n  var element;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nmodule.exports = flattenIntoArray;\n","'use strict';\nvar $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar toObject = require('../internals/to-object');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\n\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n// `Array.prototype.splice` method\n// https://tc39.es/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = toLength(O.length);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n","var userAgent = require('../internals/engine-user-agent');\n\nmodule.exports = /web0s(?!.*chrome)/i.test(userAgent);\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar $toString = require('../internals/to-string');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar nativeObjectCreate = require('../internals/object-create');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternal = require('../internals/object-get-own-property-names-external');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar shared = require('../internals/shared');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar uid = require('../internals/uid');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineWellKnownSymbol = require('../internals/define-well-known-symbol');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar HIDDEN = sharedKey('hidden');\nvar SYMBOL = 'Symbol';\nvar PROTOTYPE = 'prototype';\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SYMBOL);\nvar ObjectPrototype = Object[PROTOTYPE];\nvar $Symbol = global.Symbol;\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\nvar nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\nvar AllSymbols = shared('symbols');\nvar ObjectPrototypeSymbols = shared('op-symbols');\nvar StringToSymbolRegistry = shared('string-to-symbol-registry');\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\nvar WellKnownSymbolsStore = shared('wks');\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDescriptor = DESCRIPTORS && fails(function () {\n  return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (O, P, Attributes) {\n  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n  nativeDefineProperty(O, P, Attributes);\n  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n  }\n} : nativeDefineProperty;\n\nvar wrap = function (tag, description) {\n  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);\n  setInternalState(symbol, {\n    type: SYMBOL,\n    tag: tag,\n    description: description\n  });\n  if (!DESCRIPTORS) symbol.description = description;\n  return symbol;\n};\n\nvar $defineProperty = function defineProperty(O, P, Attributes) {\n  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n  anObject(O);\n  var key = toPropertyKey(P);\n  anObject(Attributes);\n  if (has(AllSymbols, key)) {\n    if (!Attributes.enumerable) {\n      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));\n      O[HIDDEN][key] = true;\n    } else {\n      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });\n    } return setSymbolDescriptor(O, key, Attributes);\n  } return nativeDefineProperty(O, key, Attributes);\n};\n\nvar $defineProperties = function defineProperties(O, Properties) {\n  anObject(O);\n  var properties = toIndexedObject(Properties);\n  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n  $forEach(keys, function (key) {\n    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);\n  });\n  return O;\n};\n\nvar $create = function create(O, Properties) {\n  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n};\n\nvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n  var P = toPropertyKey(V);\n  var enumerable = nativePropertyIsEnumerable.call(this, P);\n  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;\n  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;\n};\n\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n  var it = toIndexedObject(O);\n  var key = toPropertyKey(P);\n  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;\n  var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {\n    descriptor.enumerable = true;\n  }\n  return descriptor;\n};\n\nvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n  var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);\n  });\n  return result;\n};\n\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(O) {\n  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {\n      result.push(AllSymbols[key]);\n    }\n  });\n  return result;\n};\n\n// `Symbol` constructor\n// https://tc39.es/ecma262/#sec-symbol-constructor\nif (!NATIVE_SYMBOL) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');\n    var description = !arguments.length || arguments[0] === undefined ? undefined : $toString(arguments[0]);\n    var tag = uid(description);\n    var setter = function (value) {\n      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n    };\n    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });\n    return wrap(tag, description);\n  };\n\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return getInternalState(this).tag;\n  });\n\n  redefine($Symbol, 'withoutSetter', function (description) {\n    return wrap(uid(description), description);\n  });\n\n  propertyIsEnumerableModule.f = $propertyIsEnumerable;\n  definePropertyModule.f = $defineProperty;\n  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n\n  wrappedWellKnownSymbolModule.f = function (name) {\n    return wrap(wellKnownSymbol(name), name);\n  };\n\n  if (DESCRIPTORS) {\n    // https://github.com/tc39/proposal-Symbol-description\n    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {\n      configurable: true,\n      get: function description() {\n        return getInternalState(this).description;\n      }\n    });\n    if (!IS_PURE) {\n      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });\n    }\n  }\n}\n\n$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {\n  Symbol: $Symbol\n});\n\n$forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n  defineWellKnownSymbol(name);\n});\n\n$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Symbol.for` method\n  // https://tc39.es/ecma262/#sec-symbol.for\n  'for': function (key) {\n    var string = $toString(key);\n    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n    var symbol = $Symbol(string);\n    StringToSymbolRegistry[string] = symbol;\n    SymbolToStringRegistry[symbol] = string;\n    return symbol;\n  },\n  // `Symbol.keyFor` method\n  // https://tc39.es/ecma262/#sec-symbol.keyfor\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');\n    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  },\n  useSetter: function () { USE_SETTER = true; },\n  useSimple: function () { USE_SETTER = false; }\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {\n  // `Object.create` method\n  // https://tc39.es/ecma262/#sec-object.create\n  create: $create,\n  // `Object.defineProperty` method\n  // https://tc39.es/ecma262/#sec-object.defineproperty\n  defineProperty: $defineProperty,\n  // `Object.defineProperties` method\n  // https://tc39.es/ecma262/#sec-object.defineproperties\n  defineProperties: $defineProperties,\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertynames\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // `Object.getOwnPropertySymbols` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertysymbols\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\n$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return getOwnPropertySymbolsModule.f(toObject(it));\n  }\n});\n\n// `JSON.stringify` method behavior with symbols\n// https://tc39.es/ecma262/#sec-json.stringify\nif ($stringify) {\n  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {\n    var symbol = $Symbol();\n    // MS Edge converts symbol values to JSON as {}\n    return $stringify([symbol]) != '[null]'\n      // WebKit converts symbol values to JSON as null\n      || $stringify({ a: symbol }) != '{}'\n      // V8 throws on boxed symbols\n      || $stringify(Object(symbol)) != '{}';\n  });\n\n  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {\n    // eslint-disable-next-line no-unused-vars -- required for `.length`\n    stringify: function stringify(it, replacer, space) {\n      var args = [it];\n      var index = 1;\n      var $replacer;\n      while (arguments.length > index) args.push(arguments[index++]);\n      $replacer = replacer;\n      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n      if (!isArray(replacer)) replacer = function (key, value) {\n        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n        if (!isSymbol(value)) return value;\n      };\n      args[1] = replacer;\n      return $stringify.apply(null, args);\n    }\n  });\n}\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\nif (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {\n  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n}\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag($Symbol, SYMBOL);\n\nhiddenKeys[HIDDEN] = true;\n","// Types\nimport Vue, { VNode } from 'vue'\n\nexport default function VGrid (name: string) {\n  /* @vue/component */\n  return Vue.extend({\n    name: `v-${name}`,\n\n    functional: true,\n\n    props: {\n      id: String,\n      tag: {\n        type: String,\n        default: 'div',\n      },\n    },\n\n    render (h, { props, data, children }): VNode {\n      data.staticClass = (`${name} ${data.staticClass || ''}`).trim()\n\n      const { attrs } = data\n      if (attrs) {\n        // reset attrs to extract utility clases like pa-3\n        data.attrs = {}\n        const classes = Object.keys(attrs).filter(key => {\n          // TODO: Remove once resolved\n          // https://github.com/vuejs/vue/issues/7841\n          if (key === 'slot') return false\n\n          const value = attrs[key]\n\n          // add back data attributes like data-test=\"foo\" but do not\n          // add them as classes\n          if (key.startsWith('data-')) {\n            data.attrs![key] = value\n            return false\n          }\n\n          return value || typeof value === 'string'\n        })\n\n        if (classes.length) data.staticClass += ` ${classes.join(' ')}`\n      }\n\n      if (props.id) {\n        data.domProps = data.domProps || {}\n        data.domProps.id = props.id\n      }\n\n      return h(props.tag, data, children)\n    },\n  })\n}\n","import './_grid.sass'\nimport './VGrid.sass'\n\nimport Grid from './grid'\n\nimport mergeData from '../../util/mergeData'\n\n/* @vue/component */\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    fluid: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  render (h, { props, data, children }) {\n    let classes\n    const { attrs } = data\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {}\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false\n\n        const value = attrs[key]\n\n        // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n        if (key.startsWith('data-')) {\n          data.attrs![key] = value\n          return false\n        }\n\n        return value || typeof value === 'string'\n      })\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {}\n      data.domProps.id = props.id\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'container',\n        class: Array<any>({\n          'container--fluid': props.fluid,\n        }).concat(classes || []),\n      }),\n      children\n    )\n  },\n})\n","var $ = require('../internals/export');\nvar from = require('../internals/array-from');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\n\nvar INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {\n  // eslint-disable-next-line es/no-array-from -- required for testing\n  Array.from(iterable);\n});\n\n// `Array.from` method\n// https://tc39.es/ecma262/#sec-array.from\n$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {\n  from: from\n});\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call,no-throw-literal -- required for testing\n    method.call(null, argument || function () { throw 1; }, 1);\n  });\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.es/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar fails = require('../internals/fails');\nvar getBuiltIn = require('../internals/get-built-in');\nvar speciesConstructor = require('../internals/species-constructor');\nvar promiseResolve = require('../internals/promise-resolve');\nvar redefine = require('../internals/redefine');\n\n// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829\nvar NON_GENERIC = !!NativePromise && fails(function () {\n  NativePromise.prototype['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });\n});\n\n// `Promise.prototype.finally` method\n// https://tc39.es/ecma262/#sec-promise.prototype.finally\n$({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC }, {\n  'finally': function (onFinally) {\n    var C = speciesConstructor(this, getBuiltIn('Promise'));\n    var isFunction = typeof onFinally == 'function';\n    return this.then(\n      isFunction ? function (x) {\n        return promiseResolve(C, onFinally()).then(function () { return x; });\n      } : onFinally,\n      isFunction ? function (e) {\n        return promiseResolve(C, onFinally()).then(function () { throw e; });\n      } : onFinally\n    );\n  }\n});\n\n// makes sure that native promise-based APIs `Promise#finally` properly works with patched `Promise#then`\nif (!IS_PURE && typeof NativePromise == 'function') {\n  var method = getBuiltIn('Promise').prototype['finally'];\n  if (NativePromise.prototype['finally'] !== method) {\n    redefine(NativePromise.prototype, 'finally', method, { unsafe: true });\n  }\n}\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $every = require('../internals/array-iteration').every;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.every` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.every\nexportTypedArrayMethod('every', function every(callbackfn /* , thisArg */) {\n  return $every(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n});\n","// eslint-disable-next-line es/no-typed-arrays -- safe\nmodule.exports = typeof ArrayBuffer !== 'undefined' && typeof DataView !== 'undefined';\n","import Vue from 'vue'\nimport { VNodeData } from 'vue/types/vnode'\nimport { consoleError } from '../../util/console'\nimport { isCssColor } from '../../util/colorUtils'\n\nexport default Vue.extend({\n  name: 'colorable',\n\n  props: {\n    color: String,\n  },\n\n  methods: {\n    setBackgroundColor (color?: string | false, data: VNodeData = {}): VNodeData {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (isCssColor(color)) {\n        data.style = {\n          ...data.style as object,\n          'background-color': `${color}`,\n          'border-color': `${color}`,\n        }\n      } else if (color) {\n        data.class = {\n          ...data.class,\n          [color]: true,\n        }\n      }\n\n      return data\n    },\n\n    setTextColor (color?: string | false, data: VNodeData = {}): VNodeData {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (isCssColor(color)) {\n        data.style = {\n          ...data.style as object,\n          color: `${color}`,\n          'caret-color': `${color}`,\n        }\n      } else if (color) {\n        const [colorName, colorModifier] = color.toString().trim().split(' ', 2) as (string | undefined)[]\n        data.class = {\n          ...data.class,\n          [colorName + '--text']: true,\n        }\n        if (colorModifier) {\n          data.class['text--' + colorModifier] = true\n        }\n      }\n      return data\n    },\n  },\n})\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof-raw');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar isSymbol = require('../internals/is-symbol');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar create = require('../internals/object-create');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\n\n// Opera ~12 has broken Object#toString\nvar BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;\n\n// `ToNumber` abstract operation\n// https://tc39.es/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  if (isSymbol(argument)) throw TypeError('Cannot convert a Symbol value to a number');\n  var it = toPrimitive(argument, 'number');\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = it.charCodeAt(0);\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = it.slice(2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = digits.charCodeAt(index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.es/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var dummy = this;\n    return dummy instanceof NumberWrapper\n      // check on 1..constructor(foo) case\n      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)\n        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,' +\n    // ESNext\n    'fromString,range'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (error1) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (error2) { /* empty */ }\n  } return false;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n// `RegExp.prototype.exec` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.exec\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","import './VResponsive.sass'\n\n// Mixins\nimport Measurable, { NumberOrNumberString } from '../../mixins/measurable'\n\n// Types\nimport { VNode } from 'vue'\n\n// Utils\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Measurable).extend({\n  name: 'v-responsive',\n\n  props: {\n    aspectRatio: [String, Number] as NumberOrNumberString,\n    contentClass: String,\n  },\n\n  computed: {\n    computedAspectRatio (): number {\n      return Number(this.aspectRatio)\n    },\n    aspectStyle (): object | undefined {\n      return this.computedAspectRatio\n        ? { paddingBottom: (1 / this.computedAspectRatio) * 100 + '%' }\n        : undefined\n    },\n    __cachedSizer (): VNode | [] {\n      if (!this.aspectStyle) return []\n\n      return this.$createElement('div', {\n        style: this.aspectStyle,\n        staticClass: 'v-responsive__sizer',\n      })\n    },\n  },\n\n  methods: {\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-responsive__content',\n        class: this.contentClass,\n      }, this.$slots.default)\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-responsive',\n      style: this.measurableStyles,\n      on: this.$listeners,\n    }, [\n      this.__cachedSizer,\n      this.genContent(),\n    ])\n  },\n})\n","import VResponsive from './VResponsive'\n\nexport { VResponsive }\nexport default VResponsive\n","// Styles\nimport './VImg.sass'\n\n// Directives\nimport intersect from '../../directives/intersect'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\n// Components\nimport VResponsive from '../VResponsive'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Utils\nimport mixins from '../../util/mixins'\nimport mergeData from '../../util/mergeData'\nimport { consoleWarn } from '../../util/console'\n\n// not intended for public use, this is passed in by vuetify-loader\nexport interface srcObject {\n  src: string\n  srcset?: string\n  lazySrc: string\n  aspect: number\n}\n\nconst hasIntersect = typeof window !== 'undefined' && 'IntersectionObserver' in window\n\n/* @vue/component */\nexport default mixins(\n  VResponsive,\n  Themeable,\n).extend({\n  name: 'v-img',\n\n  directives: { intersect },\n\n  props: {\n    alt: String,\n    contain: Boolean,\n    eager: Boolean,\n    gradient: String,\n    lazySrc: String,\n    options: {\n      type: Object,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: () => ({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined,\n      }),\n    } as PropValidator<IntersectionObserverInit>,\n    position: {\n      type: String,\n      default: 'center center',\n    },\n    sizes: String,\n    src: {\n      type: [String, Object],\n      default: '',\n    } as PropValidator<string | srcObject>,\n    srcset: String,\n    transition: {\n      type: [Boolean, String],\n      default: 'fade-transition',\n    },\n  },\n\n  data () {\n    return {\n      currentSrc: '', // Set from srcset\n      image: null as HTMLImageElement | null,\n      isLoading: true,\n      calculatedAspectRatio: undefined as number | undefined,\n      naturalWidth: undefined as number | undefined,\n      hasError: false,\n    }\n  },\n\n  computed: {\n    computedAspectRatio (): number {\n      return Number(this.normalisedSrc.aspect || this.calculatedAspectRatio)\n    },\n    normalisedSrc (): srcObject {\n      return this.src && typeof this.src === 'object'\n        ? {\n          src: this.src.src,\n          srcset: this.srcset || this.src.srcset,\n          lazySrc: this.lazySrc || this.src.lazySrc,\n          aspect: Number(this.aspectRatio || this.src.aspect),\n        } : {\n          src: this.src,\n          srcset: this.srcset,\n          lazySrc: this.lazySrc,\n          aspect: Number(this.aspectRatio || 0),\n        }\n    },\n    __cachedImage (): VNode | [] {\n      if (!(this.normalisedSrc.src || this.normalisedSrc.lazySrc || this.gradient)) return []\n\n      const backgroundImage: string[] = []\n      const src = this.isLoading ? this.normalisedSrc.lazySrc : this.currentSrc\n\n      if (this.gradient) backgroundImage.push(`linear-gradient(${this.gradient})`)\n      if (src) backgroundImage.push(`url(\"${src}\")`)\n\n      const image = this.$createElement('div', {\n        staticClass: 'v-image__image',\n        class: {\n          'v-image__image--preload': this.isLoading,\n          'v-image__image--contain': this.contain,\n          'v-image__image--cover': !this.contain,\n        },\n        style: {\n          backgroundImage: backgroundImage.join(', '),\n          backgroundPosition: this.position,\n        },\n        key: +this.isLoading,\n      })\n\n      /* istanbul ignore if */\n      if (!this.transition) return image\n\n      return this.$createElement('transition', {\n        attrs: {\n          name: this.transition,\n          mode: 'in-out',\n        },\n      }, [image])\n    },\n  },\n\n  watch: {\n    src () {\n      // Force re-init when src changes\n      if (!this.isLoading) this.init(undefined, undefined, true)\n      else this.loadImage()\n    },\n    '$vuetify.breakpoint.width': 'getSrc',\n  },\n\n  mounted () {\n    this.init()\n  },\n\n  methods: {\n    init (\n      entries?: IntersectionObserverEntry[],\n      observer?: IntersectionObserver,\n      isIntersecting?: boolean\n    ) {\n      // If the current browser supports the intersection\n      // observer api, the image is not observable, and\n      // the eager prop isn't being used, do not load\n      if (\n        hasIntersect &&\n        !isIntersecting &&\n        !this.eager\n      ) return\n\n      if (this.normalisedSrc.lazySrc) {\n        const lazyImg = new Image()\n        lazyImg.src = this.normalisedSrc.lazySrc\n        this.pollForSize(lazyImg, null)\n      }\n      /* istanbul ignore else */\n      if (this.normalisedSrc.src) this.loadImage()\n    },\n    onLoad () {\n      this.getSrc()\n      this.isLoading = false\n      this.$emit('load', this.src)\n\n      if (\n        this.image &&\n        (this.normalisedSrc.src.endsWith('.svg') || this.normalisedSrc.src.startsWith('data:image/svg+xml'))\n      ) {\n        if (this.image.naturalHeight && this.image.naturalWidth) {\n          this.naturalWidth = this.image.naturalWidth\n          this.calculatedAspectRatio = this.image.naturalWidth / this.image.naturalHeight\n        } else {\n          this.calculatedAspectRatio = 1\n        }\n      }\n    },\n    onError () {\n      this.hasError = true\n      this.$emit('error', this.src)\n    },\n    getSrc () {\n      /* istanbul ignore else */\n      if (this.image) this.currentSrc = this.image.currentSrc || this.image.src\n    },\n    loadImage () {\n      const image = new Image()\n      this.image = image\n\n      image.onload = () => {\n        /* istanbul ignore if */\n        if (image.decode) {\n          image.decode().catch((err: DOMException) => {\n            consoleWarn(\n              `Failed to decode image, trying to render anyway\\n\\n` +\n              `src: ${this.normalisedSrc.src}` +\n              (err.message ? `\\nOriginal error: ${err.message}` : ''),\n              this\n            )\n          }).then(this.onLoad)\n        } else {\n          this.onLoad()\n        }\n      }\n      image.onerror = this.onError\n\n      this.hasError = false\n      this.sizes && (image.sizes = this.sizes)\n      this.normalisedSrc.srcset && (image.srcset = this.normalisedSrc.srcset)\n      image.src = this.normalisedSrc.src\n      this.$emit('loadstart', this.normalisedSrc.src)\n\n      this.aspectRatio || this.pollForSize(image)\n      this.getSrc()\n    },\n    pollForSize (img: HTMLImageElement, timeout: number | null = 100) {\n      const poll = () => {\n        const { naturalHeight, naturalWidth } = img\n\n        if (naturalHeight || naturalWidth) {\n          this.naturalWidth = naturalWidth\n          this.calculatedAspectRatio = naturalWidth / naturalHeight\n        } else if (!img.complete && this.isLoading && !this.hasError && timeout != null) {\n          setTimeout(poll, timeout)\n        }\n      }\n\n      poll()\n    },\n    genContent () {\n      const content: VNode = VResponsive.options.methods.genContent.call(this)\n      if (this.naturalWidth) {\n        this._b(content.data!, 'div', {\n          style: { width: `${this.naturalWidth}px` },\n        })\n      }\n\n      return content\n    },\n    __genPlaceholder (): VNode | void {\n      if (this.$slots.placeholder) {\n        const placeholder = this.isLoading\n          ? [this.$createElement('div', {\n            staticClass: 'v-image__placeholder',\n          }, this.$slots.placeholder)]\n          : []\n\n        if (!this.transition) return placeholder[0]\n\n        return this.$createElement('transition', {\n          props: {\n            appear: true,\n            name: this.transition,\n          },\n        }, placeholder)\n      }\n    },\n  },\n\n  render (h): VNode {\n    const node = VResponsive.options.render.call(this, h)\n\n    const data = mergeData(node.data!, {\n      staticClass: 'v-image',\n      attrs: {\n        'aria-label': this.alt,\n        role: this.alt ? 'img' : undefined,\n      },\n      class: this.themeClasses,\n      // Only load intersect directive if it\n      // will work in the current browser.\n      directives: hasIntersect\n        ? [{\n          name: 'intersect',\n          modifiers: { once: true },\n          value: {\n            handler: this.init,\n            options: this.options,\n          },\n        }]\n        : undefined,\n    })\n\n    node.children = [\n      this.__cachedSizer,\n      this.__cachedImage,\n      this.__genPlaceholder(),\n      this.genContent(),\n    ] as VNode[]\n\n    return h(node.tag, data, node.children)\n  },\n})\n","// TODO: use something more complex like timsort?\nvar floor = Math.floor;\n\nvar mergeSort = function (array, comparefn) {\n  var length = array.length;\n  var middle = floor(length / 2);\n  return length < 8 ? insertionSort(array, comparefn) : merge(\n    mergeSort(array.slice(0, middle), comparefn),\n    mergeSort(array.slice(middle), comparefn),\n    comparefn\n  );\n};\n\nvar insertionSort = function (array, comparefn) {\n  var length = array.length;\n  var i = 1;\n  var element, j;\n\n  while (i < length) {\n    j = i;\n    element = array[i];\n    while (j && comparefn(array[j - 1], element) > 0) {\n      array[j] = array[--j];\n    }\n    if (j !== i++) array[j] = element;\n  } return array;\n};\n\nvar merge = function (left, right, comparefn) {\n  var llength = left.length;\n  var rlength = right.length;\n  var lindex = 0;\n  var rindex = 0;\n  var result = [];\n\n  while (lindex < llength || rindex < rlength) {\n    if (lindex < llength && rindex < rlength) {\n      result.push(comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]);\n    } else {\n      result.push(lindex < llength ? left[lindex++] : right[rindex++]);\n    }\n  } return result;\n};\n\nmodule.exports = mergeSort;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","'use strict';\nvar fails = require('../internals/fails');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\nvar returnThis = function () { return this; };\n\n// `%IteratorPrototype%` object\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\n/* eslint-disable es/no-array-prototype-keys -- safe */\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nvar NEW_ITERATOR_PROTOTYPE = IteratorPrototype == undefined || fails(function () {\n  var test = {};\n  // FF44- legacy iterators case\n  return IteratorPrototype[ITERATOR].call(test) !== test;\n});\n\nif (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};\n\n// `%IteratorPrototype%[@@iterator]()` method\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator\nif ((!IS_PURE || NEW_ITERATOR_PROTOTYPE) && !has(IteratorPrototype, ITERATOR)) {\n  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","var fails = require('../internals/fails');\n\n// check the existence of a method, lowercase\n// of a tag and escaping quotes in arguments\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    var test = ''[METHOD_NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  });\n};\n","import Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'sizeable',\n\n  props: {\n    large: Boolean,\n    small: Boolean,\n    xLarge: Boolean,\n    xSmall: Boolean,\n  },\n\n  computed: {\n    medium (): boolean {\n      return Boolean(\n        !this.xSmall &&\n        !this.small &&\n        !this.large &&\n        !this.xLarge\n      )\n    },\n    sizeableClasses (): object {\n      return {\n        'v-size--x-small': this.xSmall,\n        'v-size--small': this.small,\n        'v-size--default': this.medium,\n        'v-size--large': this.large,\n        'v-size--x-large': this.xLarge,\n      }\n    },\n  },\n})\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classof = require('../internals/classof');\n\n// `Object.prototype.toString` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.tostring\nmodule.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {\n  return '[object ' + classof(this) + ']';\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.es/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n","'use strict';\nvar global = require('../internals/global');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar fails = require('../internals/fails');\n\nvar Int8Array = global.Int8Array;\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar $toLocaleString = [].toLocaleString;\nvar $slice = [].slice;\n\n// iOS Safari 6.x fails here\nvar TO_LOCALE_STRING_BUG = !!Int8Array && fails(function () {\n  $toLocaleString.call(new Int8Array(1));\n});\n\nvar FORCED = fails(function () {\n  return [1, 2].toLocaleString() != new Int8Array([1, 2]).toLocaleString();\n}) || !fails(function () {\n  Int8Array.prototype.toLocaleString.call([1, 2]);\n});\n\n// `%TypedArray%.prototype.toLocaleString` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tolocalestring\nexportTypedArrayMethod('toLocaleString', function toLocaleString() {\n  return $toLocaleString.apply(TO_LOCALE_STRING_BUG ? $slice.call(aTypedArray(this)) : aTypedArray(this), arguments);\n}, FORCED);\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar macrotask = require('../internals/task').set;\nvar IS_IOS = require('../internals/engine-is-ios');\nvar IS_IOS_PEBBLE = require('../internals/engine-is-ios-pebble');\nvar IS_WEBOS_WEBKIT = require('../internals/engine-is-webos-webkit');\nvar IS_NODE = require('../internals/engine-is-node');\n\nvar MutationObserver = global.MutationObserver || global.WebKitMutationObserver;\nvar document = global.document;\nvar process = global.process;\nvar Promise = global.Promise;\n// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`\nvar queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');\nvar queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;\n\nvar flush, head, last, notify, toggle, node, promise, then;\n\n// modern engines have queueMicrotask method\nif (!queueMicrotask) {\n  flush = function () {\n    var parent, fn;\n    if (IS_NODE && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (error) {\n        if (head) notify();\n        else last = undefined;\n        throw error;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339\n  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898\n  if (!IS_IOS && !IS_NODE && !IS_WEBOS_WEBKIT && MutationObserver && document) {\n    toggle = true;\n    node = document.createTextNode('');\n    new MutationObserver(flush).observe(node, { characterData: true });\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (!IS_IOS_PEBBLE && Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    promise = Promise.resolve(undefined);\n    // workaround of WebKit ~ iOS Safari 10.1 bug\n    promise.constructor = Promise;\n    then = promise.then;\n    notify = function () {\n      then.call(promise, flush);\n    };\n  // Node.js without promises\n  } else if (IS_NODE) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n}\n\nmodule.exports = queueMicrotask || function (fn) {\n  var task = { fn: fn, next: undefined };\n  if (last) last.next = task;\n  if (!head) {\n    head = task;\n    notify();\n  } last = task;\n};\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar has = require('../internals/has');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!has(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {\n    if (NATIVE_SYMBOL && has(Symbol, name)) {\n      WellKnownSymbolsStore[name] = Symbol[name];\n    } else {\n      WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n    }\n  } return WellKnownSymbolsStore[name];\n};\n","var $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar nativeKeys = require('../internals/object-keys');\nvar fails = require('../internals/fails');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  keys: function keys(it) {\n    return nativeKeys(toObject(it));\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar toInteger = require('../internals/to-integer');\nvar thisNumberValue = require('../internals/this-number-value');\nvar repeat = require('../internals/string-repeat');\nvar fails = require('../internals/fails');\n\nvar nativeToFixed = 1.0.toFixed;\nvar floor = Math.floor;\n\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\n\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\nvar multiply = function (data, n, c) {\n  var index = -1;\n  var c2 = c;\n  while (++index < 6) {\n    c2 += n * data[index];\n    data[index] = c2 % 1e7;\n    c2 = floor(c2 / 1e7);\n  }\n};\n\nvar divide = function (data, n) {\n  var index = 6;\n  var c = 0;\n  while (--index >= 0) {\n    c += data[index];\n    data[index] = floor(c / n);\n    c = (c % n) * 1e7;\n  }\n};\n\nvar dataToString = function (data) {\n  var index = 6;\n  var s = '';\n  while (--index >= 0) {\n    if (s !== '' || index === 0 || data[index] !== 0) {\n      var t = String(data[index]);\n      s = s === '' ? t : s + repeat.call('0', 7 - t.length) + t;\n    }\n  } return s;\n};\n\nvar FORCED = nativeToFixed && (\n  0.00008.toFixed(3) !== '0.000' ||\n  0.9.toFixed(0) !== '1' ||\n  1.255.toFixed(2) !== '1.25' ||\n  1000000000000000128.0.toFixed(0) !== '1000000000000000128'\n) || !fails(function () {\n  // V8 ~ Android 4.3-\n  nativeToFixed.call({});\n});\n\n// `Number.prototype.toFixed` method\n// https://tc39.es/ecma262/#sec-number.prototype.tofixed\n$({ target: 'Number', proto: true, forced: FORCED }, {\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toInteger(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n\n    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits');\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (number != number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return String(number);\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(data, 0, z);\n        j = fractDigits;\n        while (j >= 7) {\n          multiply(data, 1e7, 0);\n          j -= 7;\n        }\n        multiply(data, pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(data, 1 << 23);\n          j -= 23;\n        }\n        divide(data, 1 << j);\n        multiply(data, 1, 1);\n        divide(data, 2);\n        result = dataToString(data);\n      } else {\n        multiply(data, 0, z);\n        multiply(data, 1 << -e, 0);\n        result = dataToString(data) + repeat.call('0', fractDigits);\n      }\n    }\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits\n        ? '0.' + repeat.call('0', fractDigits - k) + result\n        : result.slice(0, k - fractDigits) + '.' + result.slice(k - fractDigits));\n    } else {\n      result = sign + result;\n    } return result;\n  }\n});\n","var ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar speciesConstructor = require('../internals/species-constructor');\n\nvar TYPED_ARRAY_CONSTRUCTOR = ArrayBufferViewCore.TYPED_ARRAY_CONSTRUCTOR;\nvar aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;\n\n// a part of `TypedArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#typedarray-species-create\nmodule.exports = function (originalArray) {\n  return aTypedArrayConstructor(speciesConstructor(originalArray, originalArray[TYPED_ARRAY_CONSTRUCTOR]));\n};\n","var bind = require('../internals/function-bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = [].push;\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var IS_FILTER_REJECT = TYPE == 7;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push.call(target, value); // filter\n        } else switch (TYPE) {\n          case 4: return false;             // every\n          case 7: push.call(target, value); // filterReject\n        }\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.es/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.es/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.es/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.es/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.es/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.es/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.es/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6),\n  // `Array.prototype.filterReject` method\n  // https://github.com/tc39/proposal-array-filtering\n  filterReject: createMethod(7)\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-isextensible, es/no-object-preventextensions -- required for testing\n  return Object.isExtensible(Object.preventExtensions({}));\n});\n","var isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = input[TO_PRIMITIVE];\n  var result;\n  if (exoticToPrim !== undefined) {\n    if (pref === undefined) pref = 'default';\n    result = exoticToPrim.call(input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $filter = require('../internals/array-iteration').filter;\nvar fromSpeciesAndList = require('../internals/typed-array-from-species-and-list');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.filter` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.filter\nexportTypedArrayMethod('filter', function filter(callbackfn /* , thisArg */) {\n  var list = $filter(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  return fromSpeciesAndList(this, list);\n});\n","module.exports = false;\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/string-html-forced');\n\n// `String.prototype.fixed` method\n// https://tc39.es/ecma262/#sec-string.prototype.fixed\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('fixed') }, {\n  fixed: function fixed() {\n    return createHTML(this, 'tt', '', '');\n  }\n});\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/string-html-forced');\n\n// `String.prototype.small` method\n// https://tc39.es/ecma262/#sec-string.prototype.small\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('small') }, {\n  small: function small() {\n    return createHTML(this, 'small', '', '');\n  }\n});\n","import Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'elevatable',\n\n  props: {\n    elevation: [Number, String],\n  },\n\n  computed: {\n    computedElevation (): string | number | undefined {\n      return this.elevation\n    },\n    elevationClasses (): Record<string, boolean> {\n      const elevation = this.computedElevation\n\n      if (elevation == null) return {}\n      if (isNaN(parseInt(elevation))) return {}\n      return { [`elevation-${this.elevation}`]: true }\n    },\n  },\n})\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $reduce = require('../internals/array-reduce').left;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.reduce` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduce\nexportTypedArrayMethod('reduce', function reduce(callbackfn /* , initialValue */) {\n  return $reduce(aTypedArray(this), callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n","var $ = require('../internals/export');\nvar fill = require('../internals/array-fill');\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.fill` method\n// https://tc39.es/ecma262/#sec-array.prototype.fill\n$({ target: 'Array', proto: true }, {\n  fill: fill\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('fill');\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var $ = require('../internals/export');\nvar assign = require('../internals/object-assign');\n\n// `Object.assign` method\n// https://tc39.es/ecma262/#sec-object.assign\n// eslint-disable-next-line es/no-object-assign -- required for testing\n$({ target: 'Object', stat: true, forced: Object.assign !== assign }, {\n  assign: assign\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar floor = Math.floor;\n\n// `%TypedArray%.prototype.reverse` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reverse\nexportTypedArrayMethod('reverse', function reverse() {\n  var that = this;\n  var length = aTypedArray(that).length;\n  var middle = floor(length / 2);\n  var index = 0;\n  var value;\n  while (index < middle) {\n    value = that[index];\n    that[index++] = that[--length];\n    that[length] = value;\n  } return that;\n});\n","var anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar newPromiseCapability = require('../internals/new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","var global = require('../internals/global');\n\nmodule.exports = function (key, value) {\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","module.exports = {};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];\n};\n","import Vue from 'vue'\n\n/**\n * SSRBootable\n *\n * @mixin\n *\n * Used in layout components (drawer, toolbar, content)\n * to avoid an entry animation when using SSR\n */\nexport default Vue.extend({\n  name: 'ssr-bootable',\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  mounted () {\n    // Use setAttribute instead of dataset\n    // because dataset does not work well\n    // with unit tests\n    window.requestAnimationFrame(() => {\n      this.$el.setAttribute('data-booted', 'true')\n      this.isBooted = true\n    })\n  },\n})\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $find = require('../internals/array-iteration').find;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.find` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.find\nexportTypedArrayMethod('find', function find(predicate /* , thisArg */) {\n  return $find(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n});\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.iterator` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.iterator\ndefineWellKnownSymbol('iterator');\n","/* eslint-disable no-proto -- safe */\nvar anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n// eslint-disable-next-line es/no-object-setprototypeof -- safe\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar redefine = require('../internals/redefine');\nvar toString = require('../internals/object-to-string');\n\n// `Object.prototype.toString` method\n// https://tc39.es/ecma262/#sec-object.prototype.tostring\nif (!TO_STRING_TAG_SUPPORT) {\n  redefine(Object.prototype, 'toString', toString, { unsafe: true });\n}\n","var defineProperty = require('../internals/object-define-property').f;\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC) {\n  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {\n    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });\n  }\n};\n","var userAgent = require('../internals/engine-user-agent');\nvar global = require('../internals/global');\n\nmodule.exports = /ipad|iphone|ipod/i.test(userAgent) && global.Pebble !== undefined;\n","var aFunction = require('../internals/a-function');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\nvar toLength = require('../internals/to-length');\n\n// `Array.prototype.{ reduce, reduceRight }` methods implementation\nvar createMethod = function (IS_RIGHT) {\n  return function (that, callbackfn, argumentsLength, memo) {\n    aFunction(callbackfn);\n    var O = toObject(that);\n    var self = IndexedObject(O);\n    var length = toLength(O.length);\n    var index = IS_RIGHT ? length - 1 : 0;\n    var i = IS_RIGHT ? -1 : 1;\n    if (argumentsLength < 2) while (true) {\n      if (index in self) {\n        memo = self[index];\n        index += i;\n        break;\n      }\n      index += i;\n      if (IS_RIGHT ? index < 0 : length <= index) {\n        throw TypeError('Reduce of empty array with no initial value');\n      }\n    }\n    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {\n      memo = callbackfn(memo, self[index], index, O);\n    }\n    return memo;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.reduce` method\n  // https://tc39.es/ecma262/#sec-array.prototype.reduce\n  left: createMethod(false),\n  // `Array.prototype.reduceRight` method\n  // https://tc39.es/ecma262/#sec-array.prototype.reduceright\n  right: createMethod(true)\n};\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.forEach` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.foreach\nexportTypedArrayMethod('forEach', function forEach(callbackfn /* , thisArg */) {\n  $forEach(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n});\n","'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar redefine = require('../internals/redefine');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (KEY, exec, FORCED, SHAM) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    FORCED\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      var $exec = regexp.exec;\n      if ($exec === regexpExec || $exec === RegExpPrototype.exec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    });\n\n    redefine(String.prototype, KEY, methods[0]);\n    redefine(RegExpPrototype, SYMBOL, methods[1]);\n  }\n\n  if (SHAM) createNonEnumerableProperty(RegExpPrototype[SYMBOL], 'sham', true);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var UA = require('../internals/engine-user-agent');\n\nmodule.exports = /MSIE|Trident/.test(UA);\n","var getBuiltIn = require('../internals/get-built-in');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return typeof $Symbol == 'function' && Object(it) instanceof $Symbol;\n};\n","/* eslint-disable no-console */\nimport Vuetify from '../framework'\n\nfunction createMessage (message: string, vm?: any, parent?: any): string | void {\n  if (Vuetify.config.silent) return\n\n  if (parent) {\n    vm = {\n      _isVue: true,\n      $parent: parent,\n      $options: vm,\n    }\n  }\n\n  if (vm) {\n    // Only show each message once per instance\n    vm.$_alreadyWarned = vm.$_alreadyWarned || []\n    if (vm.$_alreadyWarned.includes(message)) return\n    vm.$_alreadyWarned.push(message)\n  }\n\n  return `[Vuetify] ${message}` + (\n    vm ? generateComponentTrace(vm) : ''\n  )\n}\n\nexport function consoleInfo (message: string, vm?: any, parent?: any): void {\n  const newMessage = createMessage(message, vm, parent)\n  newMessage != null && console.info(newMessage)\n}\n\nexport function consoleWarn (message: string, vm?: any, parent?: any): void {\n  const newMessage = createMessage(message, vm, parent)\n  newMessage != null && console.warn(newMessage)\n}\n\nexport function consoleError (message: string, vm?: any, parent?: any): void {\n  const newMessage = createMessage(message, vm, parent)\n  newMessage != null && console.error(newMessage)\n}\n\nexport function deprecate (original: string, replacement: string, vm?: any, parent?: any) {\n  consoleWarn(`[UPGRADE] '${original}' is deprecated, use '${replacement}' instead.`, vm, parent)\n}\nexport function breaking (original: string, replacement: string, vm?: any, parent?: any) {\n  consoleError(`[BREAKING] '${original}' has been removed, use '${replacement}' instead. For more information, see the upgrade guide https://github.com/vuetifyjs/vuetify/releases/tag/v2.0.0#user-content-upgrade-guide`, vm, parent)\n}\nexport function removed (original: string, vm?: any, parent?: any) {\n  consoleWarn(`[REMOVED] '${original}' has been removed. You can safely omit it.`, vm, parent)\n}\n\n/**\n * Shamelessly stolen from vuejs/vue/blob/dev/src/core/util/debug.js\n */\n\nconst classifyRE = /(?:^|[-_])(\\w)/g\nconst classify = (str: string) => str\n  .replace(classifyRE, c => c.toUpperCase())\n  .replace(/[-_]/g, '')\n\nfunction formatComponentName (vm: any, includeFile?: boolean): string {\n  if (vm.$root === vm) {\n    return '<Root>'\n  }\n  const options = typeof vm === 'function' && vm.cid != null\n    ? vm.options\n    : vm._isVue\n      ? vm.$options || vm.constructor.options\n      : vm || {}\n  let name = options.name || options._componentTag\n  const file = options.__file\n  if (!name && file) {\n    const match = file.match(/([^/\\\\]+)\\.vue$/)\n    name = match && match[1]\n  }\n\n  return (\n    (name ? `<${classify(name)}>` : `<Anonymous>`) +\n    (file && includeFile !== false ? ` at ${file}` : '')\n  )\n}\n\nfunction generateComponentTrace (vm: any): string {\n  if (vm._isVue && vm.$parent) {\n    const tree: any[] = []\n    let currentRecursiveSequence = 0\n    while (vm) {\n      if (tree.length > 0) {\n        const last: any = tree[tree.length - 1]\n        if (last.constructor === vm.constructor) {\n          currentRecursiveSequence++\n          vm = vm.$parent\n          continue\n        } else if (currentRecursiveSequence > 0) {\n          tree[tree.length - 1] = [last, currentRecursiveSequence]\n          currentRecursiveSequence = 0\n        }\n      }\n      tree.push(vm)\n      vm = vm.$parent\n    }\n    return '\\n\\nfound in\\n\\n' + tree\n      .map((vm, i) => `${\n        i === 0 ? '---> ' : ' '.repeat(5 + i * 2)\n      }${\n        Array.isArray(vm)\n          ? `${formatComponentName(vm[0])}... (${vm[1]} recursive calls)`\n          : formatComponentName(vm)\n      }`)\n      .join('\\n')\n  } else {\n    return `\\n\\n(found in ${formatComponentName(vm)})`\n  }\n}\n","/**\n * @copyright 2017 Alex Regan\n * @license MIT\n * @see https://github.com/alexsasharegan/vue-functional-data-merge\n */\n/* eslint-disable max-statements */\nimport { VNodeData } from 'vue'\nimport { camelize, wrapInArray } from './helpers'\n\nconst pattern = {\n  styleList: /;(?![^(]*\\))/g,\n  styleProp: /:(.*)/,\n} as const\n\nfunction parseStyle (style: string) {\n  const styleMap: Dictionary<any> = {}\n\n  for (const s of style.split(pattern.styleList)) {\n    let [key, val] = s.split(pattern.styleProp)\n    key = key.trim()\n    if (!key) {\n      continue\n    }\n    // May be undefined if the `key: value` pair is incomplete.\n    if (typeof val === 'string') {\n      val = val.trim()\n    }\n    styleMap[camelize(key)] = val\n  }\n\n  return styleMap\n}\n\n/**\n * Intelligently merges data for createElement.\n * Merges arguments left to right, preferring the right argument.\n * Returns new VNodeData object.\n */\nexport default function mergeData (...vNodeData: VNodeData[]): VNodeData\nexport default function mergeData (): VNodeData {\n  const mergeTarget: VNodeData & Dictionary<any> = {}\n  let i: number = arguments.length\n  let prop: string\n\n  // Allow for variadic argument length.\n  while (i--) {\n    // Iterate through the data properties and execute merge strategies\n    // Object.keys eliminates need for hasOwnProperty call\n    for (prop of Object.keys(arguments[i])) {\n      switch (prop) {\n        // Array merge strategy (array concatenation)\n        case 'class':\n        case 'directives':\n          if (arguments[i][prop]) {\n            mergeTarget[prop] = mergeClasses(mergeTarget[prop], arguments[i][prop])\n          }\n          break\n        case 'style':\n          if (arguments[i][prop]) {\n            mergeTarget[prop] = mergeStyles(mergeTarget[prop], arguments[i][prop])\n          }\n          break\n        // Space delimited string concatenation strategy\n        case 'staticClass':\n          if (!arguments[i][prop]) {\n            break\n          }\n          if (mergeTarget[prop] === undefined) {\n            mergeTarget[prop] = ''\n          }\n          if (mergeTarget[prop]) {\n            // Not an empty string, so concatenate\n            mergeTarget[prop] += ' '\n          }\n          mergeTarget[prop] += arguments[i][prop].trim()\n          break\n        // Object, the properties of which to merge via array merge strategy (array concatenation).\n        // Callback merge strategy merges callbacks to the beginning of the array,\n        // so that the last defined callback will be invoked first.\n        // This is done since to mimic how Object.assign merging\n        // uses the last given value to assign.\n        case 'on':\n        case 'nativeOn':\n          if (arguments[i][prop]) {\n            mergeTarget[prop] = mergeListeners(mergeTarget[prop], arguments[i][prop])\n          }\n          break\n        // Object merge strategy\n        case 'attrs':\n        case 'props':\n        case 'domProps':\n        case 'scopedSlots':\n        case 'staticStyle':\n        case 'hook':\n        case 'transition':\n          if (!arguments[i][prop]) {\n            break\n          }\n          if (!mergeTarget[prop]) {\n            mergeTarget[prop] = {}\n          }\n          mergeTarget[prop] = { ...arguments[i][prop], ...mergeTarget[prop] }\n          break\n        // Reassignment strategy (no merge)\n        default: // slot, key, ref, tag, show, keepAlive\n          if (!mergeTarget[prop]) {\n            mergeTarget[prop] = arguments[i][prop]\n          }\n      }\n    }\n  }\n\n  return mergeTarget\n}\n\nexport function mergeStyles (\n  target: undefined | string | object[] | object,\n  source: undefined | string | object[] | object\n) {\n  if (!target) return source\n  if (!source) return target\n\n  target = wrapInArray(typeof target === 'string' ? parseStyle(target) : target)\n\n  return (target as object[]).concat(typeof source === 'string' ? parseStyle(source) : source)\n}\n\nexport function mergeClasses (target: any, source: any) {\n  if (!source) return target\n  if (!target) return source\n\n  return target ? wrapInArray(target).concat(source) : source\n}\n\nexport function mergeListeners (...args: [\n  { [key: string]: Function | Function[] } | undefined,\n  { [key: string]: Function | Function[] } | undefined\n]) {\n  if (!args[0]) return args[1]\n  if (!args[1]) return args[0]\n\n  const dest: { [key: string]: Function | Function[] } = {}\n\n  for (let i = 2; i--;) {\n    const arg = args[i]\n    for (const event in arg) {\n      if (!arg[event]) continue\n\n      if (dest[event]) {\n        // Merge current listeners before (because we are iterating backwards).\n        // Note that neither \"target\" or \"source\" must be altered.\n        dest[event] = ([] as Function[]).concat(arg[event], dest[event])\n      } else {\n        // Straight assign.\n        dest[event] = arg[event]\n      }\n    }\n  }\n\n  return dest\n}\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","var $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar ownKeys = require('../internals/own-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar createProperty = require('../internals/create-property');\n\n// `Object.getOwnPropertyDescriptors` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptors\n$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {\n    var O = toIndexedObject(object);\n    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n    var keys = ownKeys(O);\n    var result = {};\n    var index = 0;\n    var key, descriptor;\n    while (keys.length > index) {\n      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);\n      if (descriptor !== undefined) createProperty(result, key, descriptor);\n    }\n    return result;\n  }\n});\n","var $ = require('../internals/export');\nvar FREEZING = require('../internals/freezing');\nvar fails = require('../internals/fails');\nvar isObject = require('../internals/is-object');\nvar onFreeze = require('../internals/internal-metadata').onFreeze;\n\n// eslint-disable-next-line es/no-object-freeze -- safe\nvar $freeze = Object.freeze;\nvar FAILS_ON_PRIMITIVES = fails(function () { $freeze(1); });\n\n// `Object.freeze` method\n// https://tc39.es/ecma262/#sec-object.freeze\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !FREEZING }, {\n  freeze: function freeze(it) {\n    return $freeze && isObject(it) ? $freeze(onFreeze(it)) : it;\n  }\n});\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) {\n      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    }\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n}\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","module.exports = function (Constructor, list) {\n  var index = 0;\n  var length = list.length;\n  var result = new Constructor(length);\n  while (length > index) result[index] = list[index++];\n  return result;\n};\n","// `Symbol.prototype.description` getter\n// https://tc39.es/ecma262/#sec-symbol.prototype.description\n'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar has = require('../internals/has');\nvar isObject = require('../internals/is-object');\nvar defineProperty = require('../internals/object-define-property').f;\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\n\nvar NativeSymbol = global.Symbol;\n\nif (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||\n  // Safari 12 bug\n  NativeSymbol().description !== undefined\n)) {\n  var EmptyStringDescriptionStore = {};\n  // wrap Symbol constructor for correct work with undefined description\n  var SymbolWrapper = function Symbol() {\n    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var result = this instanceof SymbolWrapper\n      ? new NativeSymbol(description)\n      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'\n      : description === undefined ? NativeSymbol() : NativeSymbol(description);\n    if (description === '') EmptyStringDescriptionStore[result] = true;\n    return result;\n  };\n  copyConstructorProperties(SymbolWrapper, NativeSymbol);\n  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;\n  symbolPrototype.constructor = SymbolWrapper;\n\n  var symbolToString = symbolPrototype.toString;\n  var nativeSymbol = String(NativeSymbol('test')) == 'Symbol(test)';\n  var regexp = /^Symbol\\((.*)\\)[^)]+$/;\n  defineProperty(symbolPrototype, 'description', {\n    configurable: true,\n    get: function description() {\n      var symbol = isObject(this) ? this.valueOf() : this;\n      var string = symbolToString.call(symbol);\n      if (has(EmptyStringDescriptionStore, symbol)) return '';\n      var desc = nativeSymbol ? string.slice(7, -1) : string.replace(regexp, '$1');\n      return desc === '' ? undefined : desc;\n    }\n  });\n\n  $({ global: true, forced: true }, {\n    Symbol: SymbolWrapper\n  });\n}\n","var has = require('../internals/has');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\n// eslint-disable-next-line es/no-object-getprototypeof -- safe\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectPrototype : null;\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.es/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.es/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.es/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.es/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return { value: undefined, done: true };\n  }\n  if (kind == 'keys') return { value: index, done: false };\n  if (kind == 'values') return { value: target[index], done: false };\n  return { value: [index, target[index]], done: false };\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.es/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.es/ecma262/#sec-createmappedargumentsobject\nIterators.Arguments = Iterators.Array;\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var redefine = require('../internals/redefine');\n\nmodule.exports = function (target, src, options) {\n  for (var key in src) redefine(target, key, src[key], options);\n  return target;\n};\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeGetOwnPropertyDescriptor(1); });\nvar FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\n$({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {\n    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);\n  }\n});\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nexports.f = wellKnownSymbol;\n","'use strict';\n/* eslint-disable es/no-array-prototype-lastindexof -- safe */\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar min = Math.min;\nvar $lastIndexOf = [].lastIndexOf;\nvar NEGATIVE_ZERO = !!$lastIndexOf && 1 / [1].lastIndexOf(1, -0) < 0;\nvar STRICT_METHOD = arrayMethodIsStrict('lastIndexOf');\nvar FORCED = NEGATIVE_ZERO || !STRICT_METHOD;\n\n// `Array.prototype.lastIndexOf` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.lastindexof\nmodule.exports = FORCED ? function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {\n  // convert -0 to +0\n  if (NEGATIVE_ZERO) return $lastIndexOf.apply(this, arguments) || 0;\n  var O = toIndexedObject(this);\n  var length = toLength(O.length);\n  var index = length - 1;\n  if (arguments.length > 1) index = min(index, toInteger(arguments[1]));\n  if (index < 0) index = length + index;\n  for (;index >= 0; index--) if (index in O && O[index] === searchElement) return index || 0;\n  return -1;\n} : $lastIndexOf;\n","module.exports = function (exec) {\n  try {\n    return { error: false, value: exec() };\n  } catch (error) {\n    return { error: true, value: error };\n  }\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar redefine = require('../internals/redefine');\nvar redefineAll = require('../internals/redefine-all');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar setSpecies = require('../internals/set-species');\nvar isObject = require('../internals/is-object');\nvar aFunction = require('../internals/a-function');\nvar anInstance = require('../internals/an-instance');\nvar inspectSource = require('../internals/inspect-source');\nvar iterate = require('../internals/iterate');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar speciesConstructor = require('../internals/species-constructor');\nvar task = require('../internals/task').set;\nvar microtask = require('../internals/microtask');\nvar promiseResolve = require('../internals/promise-resolve');\nvar hostReportErrors = require('../internals/host-report-errors');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar InternalStateModule = require('../internals/internal-state');\nvar isForced = require('../internals/is-forced');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_BROWSER = require('../internals/engine-is-browser');\nvar IS_NODE = require('../internals/engine-is-node');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\nvar PROMISE = 'Promise';\nvar getInternalState = InternalStateModule.get;\nvar setInternalState = InternalStateModule.set;\nvar getInternalPromiseState = InternalStateModule.getterFor(PROMISE);\nvar NativePromisePrototype = NativePromise && NativePromise.prototype;\nvar PromiseConstructor = NativePromise;\nvar PromiseConstructorPrototype = NativePromisePrototype;\nvar TypeError = global.TypeError;\nvar document = global.document;\nvar process = global.process;\nvar newPromiseCapability = newPromiseCapabilityModule.f;\nvar newGenericPromiseCapability = newPromiseCapability;\nvar DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);\nvar NATIVE_REJECTION_EVENT = typeof PromiseRejectionEvent == 'function';\nvar UNHANDLED_REJECTION = 'unhandledrejection';\nvar REJECTION_HANDLED = 'rejectionhandled';\nvar PENDING = 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\nvar HANDLED = 1;\nvar UNHANDLED = 2;\nvar SUBCLASSING = false;\nvar Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;\n\nvar FORCED = isForced(PROMISE, function () {\n  var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(PromiseConstructor);\n  var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(PromiseConstructor);\n  // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n  // We can't detect it synchronously, so just check versions\n  if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66) return true;\n  // We need Promise#finally in the pure version for preventing prototype pollution\n  if (IS_PURE && !PromiseConstructorPrototype['finally']) return true;\n  // We can't use @@species feature detection in V8 since it causes\n  // deoptimization and performance degradation\n  // https://github.com/zloirock/core-js/issues/679\n  if (V8_VERSION >= 51 && /native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) return false;\n  // Detect correctness of subclassing with @@species support\n  var promise = new PromiseConstructor(function (resolve) { resolve(1); });\n  var FakePromise = function (exec) {\n    exec(function () { /* empty */ }, function () { /* empty */ });\n  };\n  var constructor = promise.constructor = {};\n  constructor[SPECIES] = FakePromise;\n  SUBCLASSING = promise.then(function () { /* empty */ }) instanceof FakePromise;\n  if (!SUBCLASSING) return true;\n  // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n  return !GLOBAL_CORE_JS_PROMISE && IS_BROWSER && !NATIVE_REJECTION_EVENT;\n});\n\nvar INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {\n  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });\n});\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\n\nvar notify = function (state, isReject) {\n  if (state.notified) return;\n  state.notified = true;\n  var chain = state.reactions;\n  microtask(function () {\n    var value = state.value;\n    var ok = state.state == FULFILLED;\n    var index = 0;\n    // variable length - can't use forEach\n    while (chain.length > index) {\n      var reaction = chain[index++];\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (state.rejection === UNHANDLED) onHandleUnhandled(state);\n            state.rejection = HANDLED;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // can throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (error) {\n        if (domain && !exited) domain.exit();\n        reject(error);\n      }\n    }\n    state.reactions = [];\n    state.notified = false;\n    if (isReject && !state.rejection) onUnhandled(state);\n  });\n};\n\nvar dispatchEvent = function (name, promise, reason) {\n  var event, handler;\n  if (DISPATCH_EVENT) {\n    event = document.createEvent('Event');\n    event.promise = promise;\n    event.reason = reason;\n    event.initEvent(name, false, true);\n    global.dispatchEvent(event);\n  } else event = { promise: promise, reason: reason };\n  if (!NATIVE_REJECTION_EVENT && (handler = global['on' + name])) handler(event);\n  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);\n};\n\nvar onUnhandled = function (state) {\n  task.call(global, function () {\n    var promise = state.facade;\n    var value = state.value;\n    var IS_UNHANDLED = isUnhandled(state);\n    var result;\n    if (IS_UNHANDLED) {\n      result = perform(function () {\n        if (IS_NODE) {\n          process.emit('unhandledRejection', value, promise);\n        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;\n      if (result.error) throw result.value;\n    }\n  });\n};\n\nvar isUnhandled = function (state) {\n  return state.rejection !== HANDLED && !state.parent;\n};\n\nvar onHandleUnhandled = function (state) {\n  task.call(global, function () {\n    var promise = state.facade;\n    if (IS_NODE) {\n      process.emit('rejectionHandled', promise);\n    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);\n  });\n};\n\nvar bind = function (fn, state, unwrap) {\n  return function (value) {\n    fn(state, value, unwrap);\n  };\n};\n\nvar internalReject = function (state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  state.value = value;\n  state.state = REJECTED;\n  notify(state, true);\n};\n\nvar internalResolve = function (state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  try {\n    if (state.facade === value) throw TypeError(\"Promise can't be resolved itself\");\n    var then = isThenable(value);\n    if (then) {\n      microtask(function () {\n        var wrapper = { done: false };\n        try {\n          then.call(value,\n            bind(internalResolve, wrapper, state),\n            bind(internalReject, wrapper, state)\n          );\n        } catch (error) {\n          internalReject(wrapper, error, state);\n        }\n      });\n    } else {\n      state.value = value;\n      state.state = FULFILLED;\n      notify(state, false);\n    }\n  } catch (error) {\n    internalReject({ done: false }, error, state);\n  }\n};\n\n// constructor polyfill\nif (FORCED) {\n  // 25.4.3.1 Promise(executor)\n  PromiseConstructor = function Promise(executor) {\n    anInstance(this, PromiseConstructor, PROMISE);\n    aFunction(executor);\n    Internal.call(this);\n    var state = getInternalState(this);\n    try {\n      executor(bind(internalResolve, state), bind(internalReject, state));\n    } catch (error) {\n      internalReject(state, error);\n    }\n  };\n  PromiseConstructorPrototype = PromiseConstructor.prototype;\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  Internal = function Promise(executor) {\n    setInternalState(this, {\n      type: PROMISE,\n      done: false,\n      notified: false,\n      parent: false,\n      reactions: [],\n      rejection: false,\n      state: PENDING,\n      value: undefined\n    });\n  };\n  Internal.prototype = redefineAll(PromiseConstructorPrototype, {\n    // `Promise.prototype.then` method\n    // https://tc39.es/ecma262/#sec-promise.prototype.then\n    then: function then(onFulfilled, onRejected) {\n      var state = getInternalPromiseState(this);\n      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = IS_NODE ? process.domain : undefined;\n      state.parent = true;\n      state.reactions.push(reaction);\n      if (state.state != PENDING) notify(state, false);\n      return reaction.promise;\n    },\n    // `Promise.prototype.catch` method\n    // https://tc39.es/ecma262/#sec-promise.prototype.catch\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    var state = getInternalState(promise);\n    this.promise = promise;\n    this.resolve = bind(internalResolve, state);\n    this.reject = bind(internalReject, state);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === PromiseConstructor || C === PromiseWrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n\n  if (!IS_PURE && typeof NativePromise == 'function' && NativePromisePrototype !== Object.prototype) {\n    nativeThen = NativePromisePrototype.then;\n\n    if (!SUBCLASSING) {\n      // make `Promise#then` return a polyfilled `Promise` for native promise-based APIs\n      redefine(NativePromisePrototype, 'then', function then(onFulfilled, onRejected) {\n        var that = this;\n        return new PromiseConstructor(function (resolve, reject) {\n          nativeThen.call(that, resolve, reject);\n        }).then(onFulfilled, onRejected);\n      // https://github.com/zloirock/core-js/issues/640\n      }, { unsafe: true });\n\n      // makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`\n      redefine(NativePromisePrototype, 'catch', PromiseConstructorPrototype['catch'], { unsafe: true });\n    }\n\n    // make `.constructor === Promise` work for native promise-based APIs\n    try {\n      delete NativePromisePrototype.constructor;\n    } catch (error) { /* empty */ }\n\n    // make `instanceof Promise` work for native promise-based APIs\n    if (setPrototypeOf) {\n      setPrototypeOf(NativePromisePrototype, PromiseConstructorPrototype);\n    }\n  }\n}\n\n$({ global: true, wrap: true, forced: FORCED }, {\n  Promise: PromiseConstructor\n});\n\nsetToStringTag(PromiseConstructor, PROMISE, false, true);\nsetSpecies(PROMISE);\n\nPromiseWrapper = getBuiltIn(PROMISE);\n\n// statics\n$({ target: PROMISE, stat: true, forced: FORCED }, {\n  // `Promise.reject` method\n  // https://tc39.es/ecma262/#sec-promise.reject\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    capability.reject.call(undefined, r);\n    return capability.promise;\n  }\n});\n\n$({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {\n  // `Promise.resolve` method\n  // https://tc39.es/ecma262/#sec-promise.resolve\n  resolve: function resolve(x) {\n    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);\n  }\n});\n\n$({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {\n  // `Promise.all` method\n  // https://tc39.es/ecma262/#sec-promise.all\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aFunction(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        $promiseResolve.call(C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  },\n  // `Promise.race` method\n  // https://tc39.es/ecma262/#sec-promise.race\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aFunction(C.resolve);\n      iterate(iterable, function (promise) {\n        $promiseResolve.call(C, promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $indexOf = require('../internals/array-includes').indexOf;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.indexOf` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.indexof\nexportTypedArrayMethod('indexOf', function indexOf(searchElement /* , fromIndex */) {\n  return $indexOf(aTypedArray(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n});\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n","'use strict';\nvar NATIVE_ARRAY_BUFFER = require('../internals/array-buffer-native');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar uid = require('../internals/uid');\n\nvar Int8Array = global.Int8Array;\nvar Int8ArrayPrototype = Int8Array && Int8Array.prototype;\nvar Uint8ClampedArray = global.Uint8ClampedArray;\nvar Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;\nvar TypedArray = Int8Array && getPrototypeOf(Int8Array);\nvar TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);\nvar ObjectPrototype = Object.prototype;\nvar isPrototypeOf = ObjectPrototype.isPrototypeOf;\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');\nvar TYPED_ARRAY_CONSTRUCTOR = uid('TYPED_ARRAY_CONSTRUCTOR');\n// Fixing native typed arrays in Opera Presto crashes the browser, see #595\nvar NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf && classof(global.opera) !== 'Opera';\nvar TYPED_ARRAY_TAG_REQIRED = false;\nvar NAME, Constructor, Prototype;\n\nvar TypedArrayConstructorsList = {\n  Int8Array: 1,\n  Uint8Array: 1,\n  Uint8ClampedArray: 1,\n  Int16Array: 2,\n  Uint16Array: 2,\n  Int32Array: 4,\n  Uint32Array: 4,\n  Float32Array: 4,\n  Float64Array: 8\n};\n\nvar BigIntArrayConstructorsList = {\n  BigInt64Array: 8,\n  BigUint64Array: 8\n};\n\nvar isView = function isView(it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return klass === 'DataView'\n    || has(TypedArrayConstructorsList, klass)\n    || has(BigIntArrayConstructorsList, klass);\n};\n\nvar isTypedArray = function (it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return has(TypedArrayConstructorsList, klass)\n    || has(BigIntArrayConstructorsList, klass);\n};\n\nvar aTypedArray = function (it) {\n  if (isTypedArray(it)) return it;\n  throw TypeError('Target is not a typed array');\n};\n\nvar aTypedArrayConstructor = function (C) {\n  if (setPrototypeOf && !isPrototypeOf.call(TypedArray, C)) {\n    throw TypeError('Target is not a typed array constructor');\n  } return C;\n};\n\nvar exportTypedArrayMethod = function (KEY, property, forced) {\n  if (!DESCRIPTORS) return;\n  if (forced) for (var ARRAY in TypedArrayConstructorsList) {\n    var TypedArrayConstructor = global[ARRAY];\n    if (TypedArrayConstructor && has(TypedArrayConstructor.prototype, KEY)) try {\n      delete TypedArrayConstructor.prototype[KEY];\n    } catch (error) { /* empty */ }\n  }\n  if (!TypedArrayPrototype[KEY] || forced) {\n    redefine(TypedArrayPrototype, KEY, forced ? property\n      : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property);\n  }\n};\n\nvar exportTypedArrayStaticMethod = function (KEY, property, forced) {\n  var ARRAY, TypedArrayConstructor;\n  if (!DESCRIPTORS) return;\n  if (setPrototypeOf) {\n    if (forced) for (ARRAY in TypedArrayConstructorsList) {\n      TypedArrayConstructor = global[ARRAY];\n      if (TypedArrayConstructor && has(TypedArrayConstructor, KEY)) try {\n        delete TypedArrayConstructor[KEY];\n      } catch (error) { /* empty */ }\n    }\n    if (!TypedArray[KEY] || forced) {\n      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable\n      try {\n        return redefine(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && TypedArray[KEY] || property);\n      } catch (error) { /* empty */ }\n    } else return;\n  }\n  for (ARRAY in TypedArrayConstructorsList) {\n    TypedArrayConstructor = global[ARRAY];\n    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {\n      redefine(TypedArrayConstructor, KEY, property);\n    }\n  }\n};\n\nfor (NAME in TypedArrayConstructorsList) {\n  Constructor = global[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) createNonEnumerableProperty(Prototype, TYPED_ARRAY_CONSTRUCTOR, Constructor);\n  else NATIVE_ARRAY_BUFFER_VIEWS = false;\n}\n\nfor (NAME in BigIntArrayConstructorsList) {\n  Constructor = global[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) createNonEnumerableProperty(Prototype, TYPED_ARRAY_CONSTRUCTOR, Constructor);\n}\n\n// WebKit bug - typed arrays constructors prototype is Object.prototype\nif (!NATIVE_ARRAY_BUFFER_VIEWS || typeof TypedArray != 'function' || TypedArray === Function.prototype) {\n  // eslint-disable-next-line no-shadow -- safe\n  TypedArray = function TypedArray() {\n    throw TypeError('Incorrect invocation');\n  };\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (global[NAME]) setPrototypeOf(global[NAME], TypedArray);\n  }\n}\n\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {\n  TypedArrayPrototype = TypedArray.prototype;\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (global[NAME]) setPrototypeOf(global[NAME].prototype, TypedArrayPrototype);\n  }\n}\n\n// WebKit bug - one more object in Uint8ClampedArray prototype chain\nif (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {\n  setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);\n}\n\nif (DESCRIPTORS && !has(TypedArrayPrototype, TO_STRING_TAG)) {\n  TYPED_ARRAY_TAG_REQIRED = true;\n  defineProperty(TypedArrayPrototype, TO_STRING_TAG, { get: function () {\n    return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;\n  } });\n  for (NAME in TypedArrayConstructorsList) if (global[NAME]) {\n    createNonEnumerableProperty(global[NAME], TYPED_ARRAY_TAG, NAME);\n  }\n}\n\nmodule.exports = {\n  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,\n  TYPED_ARRAY_CONSTRUCTOR: TYPED_ARRAY_CONSTRUCTOR,\n  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQIRED && TYPED_ARRAY_TAG,\n  aTypedArray: aTypedArray,\n  aTypedArrayConstructor: aTypedArrayConstructor,\n  exportTypedArrayMethod: exportTypedArrayMethod,\n  exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,\n  isView: isView,\n  isTypedArray: isTypedArray,\n  TypedArray: TypedArray,\n  TypedArrayPrototype: TypedArrayPrototype\n};\n","'use strict';\nvar aFunction = require('../internals/a-function');\n\nvar PromiseCapability = function (C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n};\n\n// `NewPromiseCapability` abstract operation\n// https://tc39.es/ecma262/#sec-newpromisecapability\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var $ = require('../internals/export');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar isObject = require('../internals/is-object');\nvar has = require('../internals/has');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternalModule = require('../internals/object-get-own-property-names-external');\nvar uid = require('../internals/uid');\nvar FREEZING = require('../internals/freezing');\n\nvar REQUIRED = false;\nvar METADATA = uid('meta');\nvar id = 0;\n\n// eslint-disable-next-line es/no-object-isextensible -- safe\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\n\nvar setMetadata = function (it) {\n  defineProperty(it, METADATA, { value: {\n    objectID: 'O' + id++, // object ID\n    weakData: {}          // weak collections IDs\n  } });\n};\n\nvar fastKey = function (it, create) {\n  // return a primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMetadata(it);\n  // return object ID\n  } return it[METADATA].objectID;\n};\n\nvar getWeakData = function (it, create) {\n  if (!has(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMetadata(it);\n  // return the store of weak collections IDs\n  } return it[METADATA].weakData;\n};\n\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZING && REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);\n  return it;\n};\n\nvar enable = function () {\n  meta.enable = function () { /* empty */ };\n  REQUIRED = true;\n  var getOwnPropertyNames = getOwnPropertyNamesModule.f;\n  var splice = [].splice;\n  var test = {};\n  test[METADATA] = 1;\n\n  // prevent exposing of metadata key\n  if (getOwnPropertyNames(test).length) {\n    getOwnPropertyNamesModule.f = function (it) {\n      var result = getOwnPropertyNames(it);\n      for (var i = 0, length = result.length; i < length; i++) {\n        if (result[i] === METADATA) {\n          splice.call(result, i, 1);\n          break;\n        }\n      } return result;\n    };\n\n    $({ target: 'Object', stat: true, forced: true }, {\n      getOwnPropertyNames: getOwnPropertyNamesExternalModule.f\n    });\n  }\n};\n\nvar meta = module.exports = {\n  enable: enable,\n  fastKey: fastKey,\n  getWeakData: getWeakData,\n  onFreeze: onFreeze\n};\n\nhiddenKeys[METADATA] = true;\n","import Vue, { VueConstructor } from 'vue'\n\nexport type Toggleable<T extends string = 'value'> = VueConstructor<Vue & { isActive: boolean } & Record<T, any>>\n\nexport function factory<T extends string = 'value'> (prop?: T, event?: string): Toggleable<T>\nexport function factory (prop = 'value', event = 'input') {\n  return Vue.extend({\n    name: 'toggleable',\n\n    model: { prop, event },\n\n    props: {\n      [prop]: { required: false },\n    },\n\n    data () {\n      return {\n        isActive: !!this[prop],\n      }\n    },\n\n    watch: {\n      [prop] (val) {\n        this.isActive = !!val\n      },\n      isActive (val) {\n        !!val !== this[prop] && this.$emit(event, val)\n      },\n    },\n  })\n}\n\n/* eslint-disable-next-line @typescript-eslint/no-redeclare */\nconst Toggleable = factory()\n\nexport default Toggleable\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import OurVue, { VueConstructor } from 'vue'\nimport { VuetifyUseOptions } from 'vuetify/types'\nimport { consoleError } from './util/console'\n\nexport function install (Vue: VueConstructor, args: VuetifyUseOptions = {}) {\n  if ((install as any).installed) return\n  (install as any).installed = true\n\n  if (OurVue !== Vue) {\n    consoleError(`Multiple instances of Vue detected\nSee https://github.com/vuetifyjs/vuetify/issues/4068\n\nIf you're seeing \"$attrs is readonly\", it's caused by this`)\n  }\n\n  const components = args.components || {}\n  const directives = args.directives || {}\n\n  for (const name in directives) {\n    const directive = directives[name]\n\n    Vue.directive(name, directive)\n  }\n\n  (function registerComponents (components: any) {\n    if (components) {\n      for (const key in components) {\n        const component = components[key]\n        if (component && !registerComponents(component.$_vuetify_subcomponents)) {\n          Vue.component(key, component as typeof Vue)\n        }\n      }\n      return true\n    }\n    return false\n  })(components)\n\n  // Used to avoid multiple mixins being setup\n  // when in dev mode and hot module reload\n  // https://github.com/vuejs/vue/issues/5089#issuecomment-284260111\n  if (Vue.$_vuetify_installed) return\n  Vue.$_vuetify_installed = true\n\n  Vue.mixin({\n    beforeCreate () {\n      const options = this.$options as any\n\n      if (options.vuetify) {\n        options.vuetify.init(this, this.$ssrContext)\n        this.$vuetify = Vue.observable(options.vuetify.framework)\n      } else {\n        this.$vuetify = (options.parent && options.parent.$vuetify) || this\n      }\n    },\n    beforeMount () {\n      // @ts-ignore\n      if (this.$options.vuetify && this.$el && this.$el.hasAttribute('data-server-rendered')) {\n        // @ts-ignore\n        this.$vuetify.isHydrating = true\n        // @ts-ignore\n        this.$vuetify.breakpoint.update(true)\n      }\n    },\n    mounted () {\n      // @ts-ignore\n      if (this.$options.vuetify && this.$vuetify.isHydrating) {\n        // @ts-ignore\n        this.$vuetify.isHydrating = false\n        // @ts-ignore\n        this.$vuetify.breakpoint.update()\n      }\n    },\n  })\n}\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default {\n  badge: 'Badge',\n  close: 'Close',\n  dataIterator: {\n    noResultsText: 'No matching records found',\n    loadingText: 'Loading items...',\n  },\n  dataTable: {\n    itemsPerPageText: 'Rows per page:',\n    ariaLabel: {\n      sortDescending: 'Sorted descending.',\n      sortAscending: 'Sorted ascending.',\n      sortNone: 'Not sorted.',\n      activateNone: 'Activate to remove sorting.',\n      activateDescending: 'Activate to sort descending.',\n      activateAscending: 'Activate to sort ascending.',\n    },\n    sortBy: 'Sort by',\n  },\n  dataFooter: {\n    itemsPerPageText: 'Items per page:',\n    itemsPerPageAll: 'All',\n    nextPage: 'Next page',\n    prevPage: 'Previous page',\n    firstPage: 'First page',\n    lastPage: 'Last page',\n    pageText: '{0}-{1} of {2}',\n  },\n  datePicker: {\n    itemsSelected: '{0} selected',\n    nextMonthAriaLabel: 'Next month',\n    nextYearAriaLabel: 'Next year',\n    prevMonthAriaLabel: 'Previous month',\n    prevYearAriaLabel: 'Previous year',\n  },\n  noDataText: 'No data available',\n  carousel: {\n    prev: 'Previous visual',\n    next: 'Next visual',\n    ariaLabel: {\n      delimiter: 'Carousel slide {0} of {1}',\n    },\n  },\n  calendar: {\n    moreEvents: '{0} more',\n  },\n  fileInput: {\n    counter: '{0} files',\n    counterSize: '{0} files ({1} in total)',\n  },\n  timePicker: {\n    am: 'AM',\n    pm: 'PM',\n  },\n  pagination: {\n    ariaLabel: {\n      wrapper: 'Pagination Navigation',\n      next: 'Next page',\n      previous: 'Previous page',\n      page: 'Goto Page {0}',\n      currentPage: 'Current Page, Page {0}',\n    },\n  },\n  rating: {\n    ariaLabel: {\n      icon: 'Rating {0} of {1}',\n    },\n  },\n}\n","// Styles\nimport '../../styles/main.sass'\n\n// Locale\nimport { en } from '../../locale'\n\n// Icons\n// TODO: Enable for v3\n// import mdi from '../../services/icons/presets/mdi'\n\n// Types\nimport { VuetifyPreset } from 'vuetify/types/services/presets'\n\nexport const preset: VuetifyPreset = {\n  breakpoint: {\n    // TODO: update to MD2 spec in v3 - 1280\n    mobileBreakpoint: 1264,\n    scrollBarWidth: 16,\n    thresholds: {\n      xs: 600,\n      sm: 960,\n      md: 1280,\n      lg: 1920,\n    },\n  },\n  icons: {\n    // TODO: remove v3\n    iconfont: 'mdi',\n    values: {},\n  },\n  lang: {\n    current: 'en',\n    locales: { en },\n    // Default translator exists in lang service\n    t: undefined as any,\n  },\n  rtl: false,\n  theme: {\n    dark: false,\n    default: 'light',\n    disable: false,\n    options: {\n      cspNonce: undefined,\n      customProperties: undefined,\n      minifyTheme: undefined,\n      themeCache: undefined,\n      variations: true,\n    },\n    themes: {\n      light: {\n        primary: '#1976D2',\n        secondary: '#424242',\n        accent: '#82B1FF',\n        error: '#FF5252',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00',\n      },\n      dark: {\n        primary: '#2196F3',\n        secondary: '#424242',\n        accent: '#FF4081',\n        error: '#FF5252',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00',\n      },\n    },\n  },\n}\n","// Contracts\nimport { VuetifyServiceContract } from 'vuetify/types/services/index'\n\n// Types\nimport Vue from 'vue'\n\nexport class Service implements VuetifyServiceContract {\n  framework = {}\n\n  init (root: Vue, ssrContext?: object) {}\n}\n","// Preset\nimport { preset as Preset } from '../../presets/default'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\nimport { mergeDeep } from '../../util/helpers'\n\n// Types\nimport Vuetify from 'vuetify/types'\nimport { Service } from '../service'\nimport {\n  UserVuetifyPreset,\n  VuetifyPreset,\n} from 'vuetify/types/services/presets'\n\nexport class Presets extends Service {\n  static property: 'presets' = 'presets'\n\n  constructor (\n    parentPreset: Partial<UserVuetifyPreset>,\n    parent: Vuetify,\n  ) {\n    super()\n\n    // The default preset\n    const defaultPreset = mergeDeep({}, Preset)\n    // The user provided preset\n    const { userPreset } = parent\n    // The user provided global preset\n    const {\n      preset: globalPreset = {},\n      ...preset\n    } = userPreset\n\n    if (globalPreset.preset != null) {\n      consoleWarn('Global presets do not support the **preset** option, it can be safely omitted')\n    }\n\n    parent.preset = mergeDeep(\n      mergeDeep(defaultPreset, globalPreset),\n      preset\n    ) as VuetifyPreset\n  }\n}\n","// Extensions\nimport { Service } from '../service'\n\n// Types\nimport { TargetPropValues, TargetProp, Application as IApplication } from 'vuetify/types/services/application'\n\nexport class Application extends Service implements IApplication {\n  static property: 'application' = 'application'\n\n  bar = 0\n\n  top = 0\n\n  left = 0\n\n  insetFooter = 0\n\n  right = 0\n\n  bottom = 0\n\n  footer = 0\n\n  application: Dictionary<TargetPropValues> = {\n    bar: {},\n    top: {},\n    left: {},\n    insetFooter: {},\n    right: {},\n    bottom: {},\n    footer: {},\n  }\n\n  register (\n    uid: number,\n    location: TargetProp,\n    size: number\n  ) {\n    this.application[location] = { [uid]: size }\n\n    this.update(location)\n  }\n\n  unregister (uid: number, location: TargetProp) {\n    if (this.application[location][uid] == null) return\n\n    delete this.application[location][uid]\n    this.update(location)\n  }\n\n  update (location: TargetProp) {\n    this[location] = Object.values(this.application[location])\n      .reduce((acc: number, cur: number): number => (acc + cur), 0)\n  }\n}\n","// Extensions\nimport { Service } from '../service'\n\n// Types\nimport { VuetifyPreset } from 'vuetify/types/services/presets'\nimport { Breakpoint as IBreakpoint } from 'vuetify/types/services/breakpoint'\n\nexport class Breakpoint extends Service implements IBreakpoint {\n  public static property: 'breakpoint' = 'breakpoint'\n\n  // Public\n  public xs = false\n\n  public sm = false\n\n  public md = false\n\n  public lg = false\n\n  public xl = false\n\n  public xsOnly = false\n\n  public smOnly = false\n\n  public smAndDown = false\n\n  public smAndUp = false\n\n  public mdOnly = false\n\n  public mdAndDown = false\n\n  public mdAndUp = false\n\n  public lgOnly = false\n\n  public lgAndDown = false\n\n  public lgAndUp = false\n\n  public xlOnly = false\n\n  // Value is xs to match v2.x functionality\n  public name: IBreakpoint['name'] = 'xs'\n\n  public height = 0\n\n  public width = 0\n\n  // TODO: Add functionality to detect this dynamically in v3\n  // Value is true to match v2.x functionality\n  public mobile = true\n\n  public mobileBreakpoint: IBreakpoint['mobileBreakpoint']\n\n  public thresholds: IBreakpoint['thresholds']\n\n  public scrollBarWidth: IBreakpoint['scrollBarWidth']\n\n  private resizeTimeout = 0\n\n  constructor (preset: VuetifyPreset) {\n    super()\n\n    const {\n      mobileBreakpoint,\n      scrollBarWidth,\n      thresholds,\n    } = preset[Breakpoint.property]\n\n    this.mobileBreakpoint = mobileBreakpoint\n    this.scrollBarWidth = scrollBarWidth\n    this.thresholds = thresholds\n  }\n\n  public init () {\n    this.update()\n\n    /* istanbul ignore if */\n    if (typeof window === 'undefined') return\n\n    window.addEventListener(\n      'resize',\n      this.onResize.bind(this),\n      { passive: true }\n    )\n  }\n\n  /* eslint-disable-next-line max-statements */\n  public update (ssr = false) {\n    const height = ssr ? 0 : this.getClientHeight()\n    const width = ssr ? 0 : this.getClientWidth()\n\n    const xs = width < this.thresholds.xs\n    const sm = width < this.thresholds.sm && !xs\n    const md = width < (this.thresholds.md - this.scrollBarWidth) && !(sm || xs)\n    const lg = width < (this.thresholds.lg - this.scrollBarWidth) && !(md || sm || xs)\n    const xl = width >= (this.thresholds.lg - this.scrollBarWidth)\n\n    this.height = height\n    this.width = width\n\n    this.xs = xs\n    this.sm = sm\n    this.md = md\n    this.lg = lg\n    this.xl = xl\n\n    this.xsOnly = xs\n    this.smOnly = sm\n    this.smAndDown = (xs || sm) && !(md || lg || xl)\n    this.smAndUp = !xs && (sm || md || lg || xl)\n    this.mdOnly = md\n    this.mdAndDown = (xs || sm || md) && !(lg || xl)\n    this.mdAndUp = !(xs || sm) && (md || lg || xl)\n    this.lgOnly = lg\n    this.lgAndDown = (xs || sm || md || lg) && !xl\n    this.lgAndUp = !(xs || sm || md) && (lg || xl)\n    this.xlOnly = xl\n\n    switch (true) {\n      case (xs):\n        this.name = 'xs'\n        break\n      case (sm):\n        this.name = 'sm'\n        break\n      case (md):\n        this.name = 'md'\n        break\n      case (lg):\n        this.name = 'lg'\n        break\n      default:\n        this.name = 'xl'\n        break\n    }\n\n    if (typeof this.mobileBreakpoint === 'number') {\n      this.mobile = width < parseInt(this.mobileBreakpoint, 10)\n\n      return\n    }\n\n    const breakpoints = {\n      xs: 0,\n      sm: 1,\n      md: 2,\n      lg: 3,\n      xl: 4,\n    } as const\n\n    const current = breakpoints[this.name]\n    const max = breakpoints[this.mobileBreakpoint]\n\n    this.mobile = current <= max\n  }\n\n  private onResize () {\n    clearTimeout(this.resizeTimeout)\n\n    // Added debounce to match what\n    // v-resize used to do but was\n    // removed due to a memory leak\n    // https://github.com/vuetifyjs/vuetify/pull/2997\n    this.resizeTimeout = window.setTimeout(this.update.bind(this), 200)\n  }\n\n  // Cross-browser support as described in:\n  // https://stackoverflow.com/questions/1248081\n  private getClientWidth () {\n    /* istanbul ignore if */\n    if (typeof document === 'undefined') return 0 // SSR\n    return Math.max(\n      document.documentElement!.clientWidth,\n      window.innerWidth || 0\n    )\n  }\n\n  private getClientHeight () {\n    /* istanbul ignore if */\n    if (typeof document === 'undefined') return 0 // SSR\n    return Math.max(\n      document.documentElement!.clientHeight,\n      window.innerHeight || 0\n    )\n  }\n}\n","export type EasingFunction = (t: number) => number\n\n// linear\nexport const linear = (t: number) => t\n// accelerating from zero velocity\nexport const easeInQuad = (t: number) => t ** 2\n// decelerating to zero velocity\nexport const easeOutQuad = (t: number) => t * (2 - t)\n// acceleration until halfway, then deceleration\nexport const easeInOutQuad = (t: number) => (t < 0.5 ? 2 * t ** 2 : -1 + (4 - 2 * t) * t)\n// accelerating from zero velocity\nexport const easeInCubic = (t: number) => t ** 3\n// decelerating to zero velocity\nexport const easeOutCubic = (t: number) => --t ** 3 + 1\n// acceleration until halfway, then deceleration\nexport const easeInOutCubic = (t: number) => t < 0.5 ? 4 * t ** 3 : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\n// accelerating from zero velocity\nexport const easeInQuart = (t: number) => t ** 4\n// decelerating to zero velocity\nexport const easeOutQuart = (t: number) => 1 - --t ** 4\n// acceleration until halfway, then deceleration\nexport const easeInOutQuart = (t: number) => (t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t)\n// accelerating from zero velocity\nexport const easeInQuint = (t: number) => t ** 5\n// decelerating to zero velocity\nexport const easeOutQuint = (t: number) => 1 + --t ** 5\n// acceleration until halfway, then deceleration\nexport const easeInOutQuint = (t: number) => t < 0.5 ? 16 * t ** 5 : 1 + 16 * --t ** 5\n","import Vue from 'vue'\n\n// Return target's cumulative offset from the top\nexport function getOffset (target: any): number {\n  if (typeof target === 'number') {\n    return target\n  }\n\n  let el = $(target)\n  if (!el) {\n    throw typeof target === 'string'\n      ? new Error(`Target element \"${target}\" not found.`)\n      : new TypeError(`Target must be a Number/Selector/HTMLElement/VueComponent, received ${type(target)} instead.`)\n  }\n\n  let totalOffset = 0\n  while (el) {\n    totalOffset += el.offsetTop\n    el = el.offsetParent as HTMLElement\n  }\n\n  return totalOffset\n}\n\nexport function getContainer (container: any): HTMLElement {\n  const el = $(container)\n\n  if (el) return el\n\n  throw typeof container === 'string'\n    ? new Error(`Container element \"${container}\" not found.`)\n    : new TypeError(`Container must be a Selector/HTMLElement/VueComponent, received ${type(container)} instead.`)\n}\n\nfunction type (el: any) {\n  return el == null ? el : el.constructor.name\n}\n\nfunction $ (el: any): HTMLElement | null {\n  if (typeof el === 'string') {\n    return document.querySelector<HTMLElement>(el)\n  } else if (el && el._isVue) {\n    return (el as Vue).$el as HTMLElement\n  } else if (el instanceof HTMLElement) {\n    return el\n  } else {\n    return null\n  }\n}\n","// Extensions\nimport { Service } from '../service'\n\n// Utilities\nimport * as easingPatterns from './easing-patterns'\nimport {\n  getContainer,\n  getOffset,\n} from './util'\n\n// Types\nimport { GoToOptions, VuetifyGoToTarget } from 'vuetify/types/services/goto'\n\nimport { VuetifyServiceContract } from 'vuetify/types/services'\n\nexport default function goTo (\n  _target: VuetifyGoToTarget,\n  _settings: GoToOptions = {}\n): Promise<number> {\n  const settings: GoToOptions = {\n    container: (document.scrollingElement as HTMLElement | null) || document.body || document.documentElement,\n    duration: 500,\n    offset: 0,\n    easing: 'easeInOutCubic',\n    appOffset: true,\n    ..._settings,\n  }\n  const container = getContainer(settings.container)\n\n  /* istanbul ignore else */\n  if (settings.appOffset && goTo.framework.application) {\n    const isDrawer = container.classList.contains('v-navigation-drawer')\n    const isClipped = container.classList.contains('v-navigation-drawer--clipped')\n    const { bar, top } = goTo.framework.application as any\n\n    settings.offset += bar\n    /* istanbul ignore else */\n    if (!isDrawer || isClipped) settings.offset += top\n  }\n\n  const startTime = performance.now()\n\n  let targetLocation: number\n  if (typeof _target === 'number') {\n    targetLocation = getOffset(_target) - settings.offset!\n  } else {\n    targetLocation = getOffset(_target) - getOffset(container) - settings.offset!\n  }\n\n  const startLocation = container.scrollTop\n  if (targetLocation === startLocation) return Promise.resolve(targetLocation)\n\n  const ease = typeof settings.easing === 'function'\n    ? settings.easing\n    : easingPatterns[settings.easing!]\n  /* istanbul ignore else */\n  if (!ease) throw new TypeError(`Easing function \"${settings.easing}\" not found.`)\n\n  // Cannot be tested properly in jsdom\n  /* istanbul ignore next */\n  return new Promise(resolve => requestAnimationFrame(function step (currentTime: number) {\n    const timeElapsed = currentTime - startTime\n    const progress = Math.abs(settings.duration ? Math.min(timeElapsed / settings.duration, 1) : 1)\n\n    container.scrollTop = Math.floor(startLocation + (targetLocation - startLocation) * ease(progress))\n\n    const clientHeight = container === document.body ? document.documentElement.clientHeight : container.clientHeight\n    if (progress === 1 || clientHeight + container.scrollTop === container.scrollHeight) {\n      return resolve(targetLocation)\n    }\n\n    requestAnimationFrame(step)\n  }))\n}\n\ngoTo.framework = {} as Record<string, VuetifyServiceContract>\ngoTo.init = () => {}\n\nexport class Goto extends Service {\n  public static property: 'goTo' = 'goTo'\n\n  constructor () {\n    super()\n\n    return goTo\n  }\n}\n","import { VuetifyIcons } from 'vuetify/types/services/icons'\n\nconst icons: VuetifyIcons = {\n  complete: 'M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z',\n  cancel: 'M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z',\n  close: 'M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z',\n  delete: 'M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z', // delete (e.g. v-chip close)\n  clear: 'M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z',\n  success: 'M12,2C17.52,2 22,6.48 22,12C22,17.52 17.52,22 12,22C6.48,22 2,17.52 2,12C2,6.48 6.48,2 12,2M11,16.5L18,9.5L16.59,8.09L11,13.67L7.91,10.59L6.5,12L11,16.5Z',\n  info: 'M13,9H11V7H13M13,17H11V11H13M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2Z',\n  warning: 'M11,4.5H13V15.5H11V4.5M13,17.5V19.5H11V17.5H13Z',\n  error: 'M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z',\n  prev: 'M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z',\n  next: 'M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z',\n  checkboxOn: 'M10,17L5,12L6.41,10.58L10,14.17L17.59,6.58L19,8M19,3H5C3.89,3 3,3.89 3,5V19C3,20.1 3.9,21 5,21H19C20.1,21 21,20.1 21,19V5C21,3.89 20.1,3 19,3Z',\n  checkboxOff: 'M19,3H5C3.89,3 3,3.89 3,5V19C3,20.1 3.9,21 5,21H19C20.1,21 21,20.1 21,19V5C21,3.89 20.1,3 19,3M19,5V19H5V5H19Z',\n  checkboxIndeterminate: 'M17,13H7V11H17M19,3H5C3.89,3 3,3.89 3,5V19C3,20.1 3.9,21 5,21H19C20.1,21 21,20.1 21,19V5C21,3.89 20.1,3 19,3Z',\n  delimiter: 'M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2Z', // for carousel\n  sort: 'M13,20H11V8L5.5,13.5L4.08,12.08L12,4.16L19.92,12.08L18.5,13.5L13,8V20Z',\n  expand: 'M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z',\n  menu: 'M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z',\n  subgroup: 'M7,10L12,15L17,10H7Z',\n  dropdown: 'M7,10L12,15L17,10H7Z',\n  radioOn: 'M12,20C7.58,20 4,16.42 4,12C4,7.58 7.58,4 12,4C16.42,4 20,7.58 20,12C20,16.42 16.42,20 12,20M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2M12,7C9.24,7 7,9.24 7,12C7,14.76 9.24,17 12,17C14.76,17 17,14.76 17,12C17,9.24 14.76,7 12,7Z',\n  radioOff: 'M12,20C7.58,20 4,16.42 4,12C4,7.58 7.58,4 12,4C16.42,4 20,7.58 20,12C20,16.42 16.42,20 12,20M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2Z',\n  edit: 'M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z',\n  ratingEmpty: 'M12,15.39L8.24,17.66L9.23,13.38L5.91,10.5L10.29,10.13L12,6.09L13.71,10.13L18.09,10.5L14.77,13.38L15.76,17.66M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z',\n  ratingFull: 'M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z',\n  ratingHalf: 'M12,15.4V6.1L13.71,10.13L18.09,10.5L14.77,13.39L15.76,17.67M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z',\n  loading: 'M19,8L15,12H18C18,15.31 15.31,18 12,18C11,18 10.03,17.75 9.2,17.3L7.74,18.76C8.97,19.54 10.43,20 12,20C16.42,20 20,16.42 20,12H23M6,12C6,8.69 8.69,6 12,6C13,6 13.97,6.25 14.8,6.7L16.26,5.24C15.03,4.46 13.57,4 12,4C7.58,4 4,7.58 4,12H1L5,16L9,12',\n  first: 'M18.41,16.59L13.82,12L18.41,7.41L17,6L11,12L17,18L18.41,16.59M6,6H8V18H6V6Z',\n  last: 'M5.59,7.41L10.18,12L5.59,16.59L7,18L13,12L7,6L5.59,7.41M16,6H18V18H16V6Z',\n  unfold: 'M12,18.17L8.83,15L7.42,16.41L12,21L16.59,16.41L15.17,15M12,5.83L15.17,9L16.58,7.59L12,3L7.41,7.59L8.83,9L12,5.83Z',\n  file: 'M16.5,6V17.5C16.5,19.71 14.71,21.5 12.5,21.5C10.29,21.5 8.5,19.71 8.5,17.5V5C8.5,3.62 9.62,2.5 11,2.5C12.38,2.5 13.5,3.62 13.5,5V15.5C13.5,16.05 13.05,16.5 12.5,16.5C11.95,16.5 11.5,16.05 11.5,15.5V6H10V15.5C10,16.88 11.12,18 12.5,18C13.88,18 15,16.88 15,15.5V5C15,2.79 13.21,1 11,1C8.79,1 7,2.79 7,5V17.5C7,20.54 9.46,23 12.5,23C15.54,23 18,20.54 18,17.5V6H16.5Z',\n  plus: 'M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z',\n  minus: 'M19,13H5V11H19V13Z',\n}\n\nexport default icons\n","import { VuetifyIcons } from 'vuetify/types/services/icons'\n\nconst icons: VuetifyIcons = {\n  complete: 'check',\n  cancel: 'cancel',\n  close: 'close',\n  delete: 'cancel', // delete (e.g. v-chip close)\n  clear: 'clear',\n  success: 'check_circle',\n  info: 'info',\n  warning: 'priority_high',\n  error: 'warning',\n  prev: 'chevron_left',\n  next: 'chevron_right',\n  checkboxOn: 'check_box',\n  checkboxOff: 'check_box_outline_blank',\n  checkboxIndeterminate: 'indeterminate_check_box',\n  delimiter: 'fiber_manual_record', // for carousel\n  sort: 'arrow_upward',\n  expand: 'keyboard_arrow_down',\n  menu: 'menu',\n  subgroup: 'arrow_drop_down',\n  dropdown: 'arrow_drop_down',\n  radioOn: 'radio_button_checked',\n  radioOff: 'radio_button_unchecked',\n  edit: 'edit',\n  ratingEmpty: 'star_border',\n  ratingFull: 'star',\n  ratingHalf: 'star_half',\n  loading: 'cached',\n  first: 'first_page',\n  last: 'last_page',\n  unfold: 'unfold_more',\n  file: 'attach_file',\n  plus: 'add',\n  minus: 'remove',\n}\n\nexport default icons\n","import { VuetifyIcons } from 'vuetify/types/services/icons'\n\nconst icons: VuetifyIcons = {\n  complete: 'mdi-check',\n  cancel: 'mdi-close-circle',\n  close: 'mdi-close',\n  delete: 'mdi-close-circle', // delete (e.g. v-chip close)\n  clear: 'mdi-close',\n  success: 'mdi-check-circle',\n  info: 'mdi-information',\n  warning: 'mdi-exclamation',\n  error: 'mdi-alert',\n  prev: 'mdi-chevron-left',\n  next: 'mdi-chevron-right',\n  checkboxOn: 'mdi-checkbox-marked',\n  checkboxOff: 'mdi-checkbox-blank-outline',\n  checkboxIndeterminate: 'mdi-minus-box',\n  delimiter: 'mdi-circle', // for carousel\n  sort: 'mdi-arrow-up',\n  expand: 'mdi-chevron-down',\n  menu: 'mdi-menu',\n  subgroup: 'mdi-menu-down',\n  dropdown: 'mdi-menu-down',\n  radioOn: 'mdi-radiobox-marked',\n  radioOff: 'mdi-radiobox-blank',\n  edit: 'mdi-pencil',\n  ratingEmpty: 'mdi-star-outline',\n  ratingFull: 'mdi-star',\n  ratingHalf: 'mdi-star-half-full',\n  loading: 'mdi-cached',\n  first: 'mdi-page-first',\n  last: 'mdi-page-last',\n  unfold: 'mdi-unfold-more-horizontal',\n  file: 'mdi-paperclip',\n  plus: 'mdi-plus',\n  minus: 'mdi-minus',\n}\n\nexport default icons\n","import { VuetifyIcons } from 'vuetify/types/services/icons'\n\nconst icons: VuetifyIcons = {\n  complete: 'fas fa-check',\n  cancel: 'fas fa-times-circle',\n  close: 'fas fa-times',\n  delete: 'fas fa-times-circle', // delete (e.g. v-chip close)\n  clear: 'fas fa-times-circle', // delete (e.g. v-chip close)\n  success: 'fas fa-check-circle',\n  info: 'fas fa-info-circle',\n  warning: 'fas fa-exclamation',\n  error: 'fas fa-exclamation-triangle',\n  prev: 'fas fa-chevron-left',\n  next: 'fas fa-chevron-right',\n  checkboxOn: 'fas fa-check-square',\n  checkboxOff: 'far fa-square', // note 'far'\n  checkboxIndeterminate: 'fas fa-minus-square',\n  delimiter: 'fas fa-circle', // for carousel\n  sort: 'fas fa-sort-up',\n  expand: 'fas fa-chevron-down',\n  menu: 'fas fa-bars',\n  subgroup: 'fas fa-caret-down',\n  dropdown: 'fas fa-caret-down',\n  radioOn: 'far fa-dot-circle',\n  radioOff: 'far fa-circle',\n  edit: 'fas fa-edit',\n  ratingEmpty: 'far fa-star',\n  ratingFull: 'fas fa-star',\n  ratingHalf: 'fas fa-star-half',\n  loading: 'fas fa-sync',\n  first: 'fas fa-step-backward',\n  last: 'fas fa-step-forward',\n  unfold: 'fas fa-arrows-alt-v',\n  file: 'fas fa-paperclip',\n  plus: 'fas fa-plus',\n  minus: 'fas fa-minus',\n}\n\nexport default icons\n","import { VuetifyIcons } from 'vuetify/types/services/icons'\n\nconst icons: VuetifyIcons = {\n  complete: 'fa fa-check',\n  cancel: 'fa fa-times-circle',\n  close: 'fa fa-times',\n  delete: 'fa fa-times-circle', // delete (e.g. v-chip close)\n  clear: 'fa fa-times-circle', // delete (e.g. v-chip close)\n  success: 'fa fa-check-circle',\n  info: 'fa fa-info-circle',\n  warning: 'fa fa-exclamation',\n  error: 'fa fa-exclamation-triangle',\n  prev: 'fa fa-chevron-left',\n  next: 'fa fa-chevron-right',\n  checkboxOn: 'fa fa-check-square',\n  checkboxOff: 'fa fa-square-o',\n  checkboxIndeterminate: 'fa fa-minus-square',\n  delimiter: 'fa fa-circle', // for carousel\n  sort: 'fa fa-sort-up',\n  expand: 'fa fa-chevron-down',\n  menu: 'fa fa-bars',\n  subgroup: 'fa fa-caret-down',\n  dropdown: 'fa fa-caret-down',\n  radioOn: 'fa fa-dot-circle-o',\n  radioOff: 'fa fa-circle-o',\n  edit: 'fa fa-pencil',\n  ratingEmpty: 'fa fa-star-o',\n  ratingFull: 'fa fa-star',\n  ratingHalf: 'fa fa-star-half-o',\n  loading: 'fa fa-refresh',\n  first: 'fa fa-step-backward',\n  last: 'fa fa-step-forward',\n  unfold: 'fa fa-angle-double-down',\n  file: 'fa fa-paperclip',\n  plus: 'fa fa-plus',\n  minus: 'fa fa-minus',\n}\n\nexport default icons\n","import { VuetifyIcons } from 'vuetify/types/services/icons'\nimport { Component } from 'vue'\nimport icons from './fa'\n\nexport function convertToComponentDeclarations (\n  component: Component | string,\n  iconSet: VuetifyIcons,\n) {\n  const result: Partial<VuetifyIcons> = {}\n\n  for (const key in iconSet) {\n    result[key] = {\n      component,\n      props: {\n        icon: (iconSet[key] as string).split(' fa-'),\n      },\n    }\n  }\n\n  return result as VuetifyIcons\n}\n\nexport default convertToComponentDeclarations('font-awesome-icon', icons)\n","import mdiSvg from './mdi-svg'\nimport md from './md'\nimport mdi from './mdi'\nimport fa from './fa'\nimport fa4 from './fa4'\nimport faSvg from './fa-svg'\n\nexport default Object.freeze({\n  mdiSvg,\n  md,\n  mdi,\n  fa,\n  fa4,\n  faSvg,\n})\n","// Extensions\nimport { Service } from '../service'\n\n// Utilities\nimport { mergeDeep } from '../../util/helpers'\n\n// Types\nimport { VuetifyPreset } from 'vuetify/types/services/presets'\nimport { Icons as IIcons } from 'vuetify/types/services/icons'\n\n// Presets\nimport presets from './presets'\n\nexport class Icons extends Service implements IIcons {\n  static property: 'icons' = 'icons'\n\n  public iconfont: IIcons['iconfont']\n\n  public values: IIcons['values']\n\n  public component: IIcons['component']\n\n  constructor (preset: VuetifyPreset) {\n    super()\n\n    const {\n      iconfont,\n      values,\n      component,\n    } = preset[Icons.property]\n\n    this.component = component\n    this.iconfont = iconfont\n    this.values = mergeDeep(\n      presets[iconfont],\n      values\n    ) as IIcons['values']\n  }\n}\n","// Extensions\nimport { Service } from '../service'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport { consoleError, consoleWarn } from '../../util/console'\n\n// Types\nimport { VuetifyPreset } from 'vuetify/types/services/presets'\nimport {\n  VuetifyLocale,\n  Lang as ILang,\n} from 'vuetify/types/services/lang'\n\nconst LANG_PREFIX = '$vuetify.'\nconst fallback = Symbol('Lang fallback')\n\nfunction getTranslation (\n  locale: VuetifyLocale,\n  key: string,\n  usingDefault = false,\n  defaultLocale: VuetifyLocale\n): string {\n  const shortKey = key.replace(LANG_PREFIX, '')\n  let translation = getObjectValueByPath(locale, shortKey, fallback) as string | typeof fallback\n\n  if (translation === fallback) {\n    if (usingDefault) {\n      consoleError(`Translation key \"${shortKey}\" not found in fallback`)\n      translation = key\n    } else {\n      consoleWarn(`Translation key \"${shortKey}\" not found, falling back to default`)\n      translation = getTranslation(defaultLocale, key, true, defaultLocale)\n    }\n  }\n\n  return translation\n}\n\nexport class Lang extends Service implements ILang {\n  static property: 'lang' = 'lang'\n\n  public current: ILang['current']\n\n  public defaultLocale = 'en'\n\n  public locales: ILang['locales']\n\n  private translator: ILang['t']\n\n  constructor (preset: VuetifyPreset) {\n    super()\n\n    const {\n      current,\n      locales,\n      t,\n    } = preset[Lang.property]\n\n    this.current = current\n    this.locales = locales\n    this.translator = t || this.defaultTranslator\n  }\n\n  public currentLocale (key: string) {\n    const translation = this.locales[this.current]\n    const defaultLocale = this.locales[this.defaultLocale]\n\n    return getTranslation(translation, key, false, defaultLocale)\n  }\n\n  public t (key: string, ...params: any[]) {\n    if (!key.startsWith(LANG_PREFIX)) return this.replace(key, params)\n\n    return this.translator(key, ...params)\n  }\n\n  private defaultTranslator (key: string, ...params: any[]) {\n    return this.replace(this.currentLocale(key), params)\n  }\n\n  private replace (str: string, params: any[]) {\n    return str.replace(/\\{(\\d+)\\}/g, (match: string, index: string) => {\n      /* istanbul ignore next */\n      return String(params[+index])\n    })\n  }\n}\n","import { XYZ, LAB } from '../colorUtils'\n\nconst delta = 0.20689655172413793 // 6÷29\n\nconst cielabForwardTransform = (t: number): number => (\n  t > delta ** 3\n    ? Math.cbrt(t)\n    : (t / (3 * delta ** 2)) + 4 / 29\n)\n\nconst cielabReverseTransform = (t: number): number => (\n  t > delta\n    ? t ** 3\n    : (3 * delta ** 2) * (t - 4 / 29)\n)\n\nexport function fromXYZ (xyz: XYZ): LAB {\n  const transform = cielabForwardTransform\n  const transformedY = transform(xyz[1])\n\n  return [\n    116 * transformedY - 16,\n    500 * (transform(xyz[0] / 0.95047) - transformedY),\n    200 * (transformedY - transform(xyz[2] / 1.08883)),\n  ]\n}\n\nexport function toXYZ (lab: LAB): XYZ {\n  const transform = cielabReverseTransform\n  const Ln = (lab[0] + 16) / 116\n  return [\n    transform(Ln + lab[1] / 500) * 0.95047,\n    transform(Ln),\n    transform(Ln - lab[2] / 200) * 1.08883,\n  ]\n}\n","import { keys } from '../../util/helpers'\nimport { colorToInt, intToHex, colorToHex, ColorInt } from '../../util/colorUtils'\nimport * as sRGB from '../../util/color/transformSRGB'\nimport * as LAB from '../../util/color/transformCIELAB'\nimport {\n  VuetifyParsedTheme,\n  VuetifyThemeItem,\n} from 'vuetify/types/services/theme'\n\nexport function parse (\n  theme: Record<string, VuetifyThemeItem>,\n  isItem = false,\n  variations = true,\n): VuetifyParsedTheme {\n  const { anchor, ...variant } = theme\n  const colors = Object.keys(variant)\n  const parsedTheme: any = {}\n\n  for (let i = 0; i < colors.length; ++i) {\n    const name = colors[i]\n    const value = theme[name]\n\n    if (value == null) continue\n\n    if (!variations) {\n      parsedTheme[name] = { base: intToHex(colorToInt(value)) }\n    } else if (isItem) {\n      /* istanbul ignore else */\n      if (name === 'base' || name.startsWith('lighten') || name.startsWith('darken')) {\n        parsedTheme[name] = colorToHex(value)\n      }\n    } else if (typeof value === 'object') {\n      parsedTheme[name] = parse(value, true, variations)\n    } else {\n      parsedTheme[name] = genVariations(name, colorToInt(value))\n    }\n  }\n\n  if (!isItem) {\n    parsedTheme.anchor = anchor || parsedTheme.base || parsedTheme.primary.base\n  }\n\n  return parsedTheme\n}\n\n/**\n * Generate the CSS for a base color (.primary)\n */\nconst genBaseColor = (name: string, value: string): string => {\n  return `\n.v-application .${name} {\n  background-color: ${value} !important;\n  border-color: ${value} !important;\n}\n.v-application .${name}--text {\n  color: ${value} !important;\n  caret-color: ${value} !important;\n}`\n}\n\n/**\n * Generate the CSS for a variant color (.primary.darken-2)\n */\nconst genVariantColor = (name: string, variant: string, value: string): string => {\n  const [type, n] = variant.split(/(\\d)/, 2)\n  return `\n.v-application .${name}.${type}-${n} {\n  background-color: ${value} !important;\n  border-color: ${value} !important;\n}\n.v-application .${name}--text.text--${type}-${n} {\n  color: ${value} !important;\n  caret-color: ${value} !important;\n}`\n}\n\nconst genColorVariableName = (name: string, variant = 'base'): string => `--v-${name}-${variant}`\n\nconst genColorVariable = (name: string, variant = 'base'): string => `var(${genColorVariableName(name, variant)})`\n\nexport function genStyles (theme: VuetifyParsedTheme, cssVar = false): string {\n  const { anchor, ...variant } = theme\n  const colors = Object.keys(variant)\n\n  if (!colors.length) return ''\n\n  let variablesCss = ''\n  let css = ''\n\n  const aColor = cssVar ? genColorVariable('anchor') : anchor\n  css += `.v-application a { color: ${aColor}; }`\n  cssVar && (variablesCss += `  ${genColorVariableName('anchor')}: ${anchor};\\n`)\n\n  for (let i = 0; i < colors.length; ++i) {\n    const name = colors[i]\n    const value = theme[name]\n\n    css += genBaseColor(name, cssVar ? genColorVariable(name) : value.base)\n    cssVar && (variablesCss += `  ${genColorVariableName(name)}: ${value.base};\\n`)\n\n    const variants = keys(value)\n    for (let i = 0; i < variants.length; ++i) {\n      const variant = variants[i]\n      const variantValue = value[variant]\n      if (variant === 'base') continue\n\n      css += genVariantColor(name, variant, cssVar ? genColorVariable(name, variant) : variantValue)\n      cssVar && (variablesCss += `  ${genColorVariableName(name, variant)}: ${variantValue};\\n`)\n    }\n  }\n\n  if (cssVar) {\n    variablesCss = `:root {\\n${variablesCss}}\\n\\n`\n  }\n\n  return variablesCss + css\n}\n\nexport function genVariations (name: string, value: ColorInt): Record<string, string> {\n  const values: Record<string, string> = {\n    base: intToHex(value),\n  }\n\n  for (let i = 5; i > 0; --i) {\n    values[`lighten${i}`] = intToHex(lighten(value, i))\n  }\n\n  for (let i = 1; i <= 4; ++i) {\n    values[`darken${i}`] = intToHex(darken(value, i))\n  }\n\n  return values\n}\n\nexport function lighten (value: ColorInt, amount: number): ColorInt {\n  const lab = LAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] + amount * 10\n  return sRGB.fromXYZ(LAB.toXYZ(lab))\n}\n\nexport function darken (value: ColorInt, amount: number): ColorInt {\n  const lab = LAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] - amount * 10\n  return sRGB.fromXYZ(LAB.toXYZ(lab))\n}\n","/* eslint-disable no-multi-spaces */\n// Extensions\nimport { Service } from '../service'\n\n// Utilities\nimport * as ThemeUtils from './utils'\nimport { getNestedValue } from '../../util/helpers'\n\n// Types\nimport Vue from 'vue'\nimport { VuetifyPreset } from 'vuetify/types/services/presets'\nimport {\n  VuetifyParsedTheme,\n  VuetifyThemes,\n  VuetifyThemeVariant,\n  Theme as ITheme,\n} from 'vuetify/types/services/theme'\n\nexport class Theme extends Service {\n  static property: 'theme' = 'theme'\n\n  public disabled = false\n\n  public options: ITheme['options']\n\n  public styleEl?: HTMLStyleElement\n\n  public themes: VuetifyThemes\n\n  public defaults: VuetifyThemes\n\n  private isDark = null as boolean | null\n\n  private unwatch = null as (() => void) | null\n\n  private vueMeta = null as any | null\n\n  constructor (preset: VuetifyPreset) {\n    super()\n\n    const {\n      dark,\n      disable,\n      options,\n      themes,\n    } = preset[Theme.property]\n\n    this.dark = Boolean(dark)\n    this.defaults = this.themes = themes\n    this.options = options\n\n    if (disable) {\n      this.disabled = true\n\n      return\n    }\n\n    this.themes = {\n      dark: this.fillVariant(themes.dark, true),\n      light: this.fillVariant(themes.light, false),\n    }\n  }\n\n  // When setting css, check for element and apply new values\n  /* eslint-disable-next-line accessor-pairs */\n  set css (val: string) {\n    if (this.vueMeta) {\n      if (this.isVueMeta23) {\n        this.applyVueMeta23()\n      }\n      return\n    }\n    this.checkOrCreateStyleElement() && (this.styleEl!.innerHTML = val)\n  }\n\n  set dark (val: boolean) {\n    const oldDark = this.isDark\n\n    this.isDark = val\n    // Only apply theme after dark\n    // has already been set before\n    oldDark != null && this.applyTheme()\n  }\n\n  get dark () {\n    return Boolean(this.isDark)\n  }\n\n  // Apply current theme default\n  // only called on client side\n  public applyTheme (): void {\n    if (this.disabled) return this.clearCss()\n\n    this.css = this.generatedStyles\n  }\n\n  public clearCss (): void {\n    this.css = ''\n  }\n\n  // Initialize theme for SSR and SPA\n  // Attach to ssrContext head or\n  // apply new theme to document\n  public init (root: Vue, ssrContext?: any): void {\n    if (this.disabled) return\n\n    /* istanbul ignore else */\n    if ((root as any).$meta) {\n      this.initVueMeta(root)\n    } else if (ssrContext) {\n      this.initSSR(ssrContext)\n    }\n\n    this.initTheme(root)\n  }\n\n  // Allows for you to set target theme\n  public setTheme (theme: 'light' | 'dark', value: object) {\n    this.themes[theme] = Object.assign(this.themes[theme], value)\n    this.applyTheme()\n  }\n\n  // Reset theme defaults\n  public resetThemes () {\n    this.themes.light = Object.assign({}, this.defaults.light)\n    this.themes.dark = Object.assign({}, this.defaults.dark)\n    this.applyTheme()\n  }\n\n  // Check for existence of style element\n  private checkOrCreateStyleElement (): boolean {\n    this.styleEl = document.getElementById('vuetify-theme-stylesheet') as HTMLStyleElement\n\n    /* istanbul ignore next */\n    if (this.styleEl) return true\n\n    this.genStyleElement() // If doesn't have it, create it\n\n    return Boolean(this.styleEl)\n  }\n\n  private fillVariant (\n    theme: Partial<VuetifyThemeVariant> = {},\n    dark: boolean\n  ): VuetifyThemeVariant {\n    const defaultTheme = this.themes[dark ? 'dark' : 'light']\n\n    return Object.assign({},\n      defaultTheme,\n      theme\n    )\n  }\n\n  // Generate the style element\n  // if applicable\n  private genStyleElement (): void {\n    /* istanbul ignore if */\n    if (typeof document === 'undefined') return\n\n    /* istanbul ignore next */\n    this.styleEl = document.createElement('style')\n    this.styleEl.type = 'text/css'\n    this.styleEl.id = 'vuetify-theme-stylesheet'\n\n    if (this.options.cspNonce) {\n      this.styleEl.setAttribute('nonce', this.options.cspNonce)\n    }\n\n    document.head.appendChild(this.styleEl)\n  }\n\n  private initVueMeta (root: any) {\n    this.vueMeta = root.$meta()\n    if (this.isVueMeta23) {\n      // vue-meta needs to apply after mounted()\n      root.$nextTick(() => {\n        this.applyVueMeta23()\n      })\n      return\n    }\n\n    const metaKeyName = typeof this.vueMeta.getOptions === 'function' ? this.vueMeta.getOptions().keyName : 'metaInfo'\n    const metaInfo = root.$options[metaKeyName] || {}\n\n    root.$options[metaKeyName] = () => {\n      metaInfo.style = metaInfo.style || []\n\n      const vuetifyStylesheet = metaInfo.style.find((s: any) => s.id === 'vuetify-theme-stylesheet')\n\n      if (!vuetifyStylesheet) {\n        metaInfo.style.push({\n          cssText: this.generatedStyles,\n          type: 'text/css',\n          id: 'vuetify-theme-stylesheet',\n          nonce: (this.options || {}).cspNonce,\n        })\n      } else {\n        vuetifyStylesheet.cssText = this.generatedStyles\n      }\n\n      return metaInfo\n    }\n  }\n\n  private applyVueMeta23 () {\n    const { set } = this.vueMeta.addApp('vuetify')\n\n    set({\n      style: [{\n        cssText: this.generatedStyles,\n        type: 'text/css',\n        id: 'vuetify-theme-stylesheet',\n        nonce: this.options.cspNonce,\n      }],\n    })\n  }\n\n  private initSSR (ssrContext?: any) {\n    // SSR\n    const nonce = this.options.cspNonce ? ` nonce=\"${this.options.cspNonce}\"` : ''\n    ssrContext.head = ssrContext.head || ''\n    ssrContext.head += `<style type=\"text/css\" id=\"vuetify-theme-stylesheet\"${nonce}>${this.generatedStyles}</style>`\n  }\n\n  private initTheme (root: Vue) {\n    // Only watch for reactivity on client side\n    if (typeof document === 'undefined') return\n\n    // If we get here somehow, ensure\n    // existing instance is removed\n    if (this.unwatch) {\n      this.unwatch()\n      this.unwatch = null\n    }\n\n    // TODO: Update to use RFC if merged\n    // https://github.com/vuejs/rfcs/blob/advanced-reactivity-api/active-rfcs/0000-advanced-reactivity-api.md\n    root.$once('hook:created', () => {\n      const obs = Vue.observable({ themes: this.themes })\n      this.unwatch = root.$watch(() => obs.themes, () => this.applyTheme(), { deep: true })\n    })\n    this.applyTheme()\n  }\n\n  get currentTheme () {\n    const target = this.dark ? 'dark' : 'light'\n\n    return this.themes[target]\n  }\n\n  get generatedStyles (): string {\n    const theme = this.parsedTheme\n    /* istanbul ignore next */\n    const options = this.options || {}\n    let css\n\n    if (options.themeCache != null) {\n      css = options.themeCache.get(theme)\n      /* istanbul ignore if */\n      if (css != null) return css\n    }\n\n    css = ThemeUtils.genStyles(theme, options.customProperties)\n\n    if (options.minifyTheme != null) {\n      css = options.minifyTheme(css)\n    }\n\n    if (options.themeCache != null) {\n      options.themeCache.set(theme, css)\n    }\n\n    return css\n  }\n\n  get parsedTheme (): VuetifyParsedTheme {\n    return ThemeUtils.parse(\n      this.currentTheme || {},\n      undefined,\n      getNestedValue(this.options, ['variations'], true)\n    )\n  }\n\n  // Is using v2.3 of vue-meta\n  // https://github.com/nuxt/vue-meta/releases/tag/v2.3.0\n  private get isVueMeta23 (): boolean {\n    return typeof this.vueMeta.addApp === 'function'\n  }\n}\n","import { install } from './install'\n\n// Types\nimport Vue from 'vue'\nimport {\n  UserVuetifyPreset,\n  VuetifyPreset,\n} from 'vuetify/types/services/presets'\nimport {\n  VuetifyService,\n  VuetifyServiceContract,\n} from 'vuetify/types/services'\n\n// Services\nimport * as services from './services'\n\nexport default class Vuetify {\n  static install = install\n\n  static installed = false\n\n  static version = __VUETIFY_VERSION__\n\n  static config = {\n    silent: false,\n  }\n\n  public framework: Dictionary<VuetifyServiceContract> = {\n    isHydrating: false,\n  } as any\n\n  public installed: string[] = []\n\n  public preset = {} as VuetifyPreset\n\n  public userPreset: UserVuetifyPreset = {}\n\n  constructor (userPreset: UserVuetifyPreset = {}) {\n    this.userPreset = userPreset\n\n    this.use(services.Presets)\n    this.use(services.Application)\n    this.use(services.Breakpoint)\n    this.use(services.Goto)\n    this.use(services.Icons)\n    this.use(services.Lang)\n    this.use(services.Theme)\n  }\n\n  // Called on the new vuetify instance\n  // bootstrap in install beforeCreate\n  // Exposes ssrContext if available\n  init (root: Vue, ssrContext?: object) {\n    this.installed.forEach(property => {\n      const service = this.framework[property]\n\n      service.framework = this.framework\n\n      service.init(root, ssrContext)\n    })\n\n    // rtl is not installed and\n    // will never be called by\n    // the init process\n    this.framework.rtl = Boolean(this.preset.rtl) as any\n  }\n\n  // Instantiate a VuetifyService\n  use (Service: VuetifyService) {\n    const property = Service.property\n\n    if (this.installed.includes(property)) return\n\n    // TODO maybe a specific type for arg 2?\n    this.framework[property] = new Service(this.preset, this as any)\n    this.installed.push(property)\n  }\n}\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n};\n","// Styles\nimport './VMain.sass'\n\n// Mixins\nimport SSRBootable from '../../mixins/ssr-bootable'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default SSRBootable.extend({\n  name: 'v-main',\n\n  props: {\n    tag: {\n      type: String,\n      default: 'main',\n    },\n  },\n\n  computed: {\n    styles (): object {\n      const {\n        bar, top, right, footer, insetFooter, bottom, left,\n      } = this.$vuetify.application\n\n      return {\n        paddingTop: `${top + bar}px`,\n        paddingRight: `${right}px`,\n        paddingBottom: `${footer + insetFooter + bottom}px`,\n        paddingLeft: `${left}px`,\n      }\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-main',\n      style: this.styles,\n      ref: 'main',\n    }\n\n    return h(this.tag, data, [\n      h(\n        'div',\n        { staticClass: 'v-main__wrap' },\n        this.$slots.default\n      ),\n    ])\n  },\n})\n","// `Math.sign` method implementation\n// https://tc39.es/ecma262/#sec-math.sign\n// eslint-disable-next-line es/no-math-sign -- safe\nmodule.exports = Math.sign || function sign(x) {\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","var toInteger = require('../internals/to-integer');\n\nmodule.exports = function (it) {\n  var result = toInteger(it);\n  if (result < 0) throw RangeError(\"The argument can't be less than 0\");\n  return result;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\n\nvar SPECIES = wellKnownSymbol('species');\nvar nativeSlice = [].slice;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.es/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = toLength(O.length);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === Array || Constructor === undefined) {\n        return nativeSlice.call(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","var fails = require('./fails');\nvar global = require('../internals/global');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError\nvar $RegExp = global.RegExp;\n\nmodule.exports = fails(function () {\n  var re = $RegExp('.', 's');\n  return !(re.dotAll && re.exec('\\n') && re.flags === 's');\n});\n","// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n","/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","import Vue from 'vue'\nimport { filterObjectOnKeys } from '../../util/helpers'\nimport { OptionsVue, VueConstructor } from 'vue/types/vue'\n\nconst availableProps = {\n  absolute: Boolean,\n  bottom: Boolean,\n  fixed: Boolean,\n  left: Boolean,\n  right: Boolean,\n  top: Boolean,\n}\ntype props = Record<keyof typeof availableProps, boolean>\n\nexport type Positionable<S extends keyof props> = VueConstructor<Vue & { [P in S]: boolean }, { [P in S]: BooleanConstructor }>\n\nexport function factory <S extends keyof props> (selected?: S[]): Positionable<S>\nexport function factory (selected: undefined): OptionsVue<Vue, {}, {}, {}, props, typeof availableProps>\nexport function factory (selected: any[] = []): any {\n  return Vue.extend({\n    name: 'positionable',\n    props: selected.length ? filterObjectOnKeys(availableProps, selected) : availableProps,\n  })\n}\n\nexport default factory()\n\n// Add a `*` before the second `/`\n/* Tests /\nlet single = factory(['top']).extend({\n  created () {\n    this.top\n    this.bottom\n    this.absolute\n  }\n})\n\nlet some = factory(['top', 'bottom']).extend({\n  created () {\n    this.top\n    this.bottom\n    this.absolute\n  }\n})\n\nlet all = factory().extend({\n  created () {\n    this.top\n    this.bottom\n    this.absolute\n    this.foobar\n  }\n})\n/**/\n","var global = require('../internals/global');\n\nmodule.exports = global.Promise;\n"],"sourceRoot":""}